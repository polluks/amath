<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="classFunctionList">
<title>FunctionList class Reference</title>
<para>
    <programlisting>#include <link linkend="functions_8h">&lt;functions.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for FunctionList</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classFunctionList__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for FunctionList</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classFunctionList__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>CharBuffer * buf</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>UserFunction * first</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classFunctionList_1a602bd0647dbe5ef4911100c52d1c9388">FunctionList</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classFunctionList_1a0aa9fcb67c0c042e371c3efb32a1e1e4">~FunctionList</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classFunctionList_1afe4ccb5f29da8542a3df84f3fe64f4bb">Clear</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="platform_8h_1a1062901a7428fdd9c7f180f5e01ea056">bool</link> <link linkend="classFunctionList_1ae0e646a32dd118de74ab8d06f3bb775a">Delete</link> (
const char * name, const char * argument)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="platform_8h_1a1062901a7428fdd9c7f180f5e01ea056">bool</link> <link linkend="classFunctionList_1a7c5872fe4a522983041ac12c2cb37ea3">IsSystemFunction</link> (
const char * name)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="classUserFunction">UserFunction</link> * <link linkend="classFunctionList_1af7c68faadee0f219109e02f486b0f239">GetFirstFunction</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="classUserFunction">UserFunction</link> * <link linkend="classFunctionList_1acf0716fd18c32a6d52a947052060a2a1">GetFunctionDef</link> (
const char * name)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="classUserFunction">UserFunction</link> * <link linkend="classFunctionList_1a867e5afb83ce8d6ee658290a76f54614">GetFunctionDef</link> (
const char * name, const char * argument)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="classFunctionNode">FunctionNode</link> * <link linkend="classFunctionList_1ae8dc9d2913429faefdfed463ae3272c1">GetFunctionCall</link> (
const char * function, <link linkend="classExpressionNode">ExpressionNode</link> * value)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char * <link linkend="classFunctionList_1a667bf5683f0b7332b5607781df53c728">List</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char * <link linkend="classFunctionList_1af69593a40790f4d696a74e46c3c9e552">ListDefinitions</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char * <link linkend="classFunctionList_1ac87c5ecfbdfd7aa7c9c8c611b70c3a63">ListContent</link> (
<link linkend="platform_8h_1a1062901a7428fdd9c7f180f5e01ea056">bool</link> cmdFormat)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="structfunctiondef">functiondef</link> * <link linkend="classFunctionList_1aabcebb1bdf56aee163f96483dcdc603c">GetSystemFunction</link> (
const char * ident)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>A list of user defined functions. </para>
    </simplesect>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="classFunctionList_1a602bd0647dbe5ef4911100c52d1c9388">
                <title>FunctionList::FunctionList ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classFunctionList_1a0aa9fcb67c0c042e371c3efb32a1e1e4">
                <title>FunctionList::~FunctionList ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classFunctionList_1afe4ccb5f29da8542a3df84f3fe64f4bb">
                <title>void FunctionList::Clear ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classFunctionList_1ae0e646a32dd118de74ab8d06f3bb775a">
                <title>bool FunctionList::Delete (const char *name, const char *argument)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classFunctionList_1a7c5872fe4a522983041ac12c2cb37ea3">
                <title>bool FunctionList::IsSystemFunction (const char *name)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classFunctionList_1af7c68faadee0f219109e02f486b0f239">
                <title>UserFunction * FunctionList::GetFirstFunction ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classFunctionList_1acf0716fd18c32a6d52a947052060a2a1">
                <title>UserFunction * FunctionList::GetFunctionDef (const char *name)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classFunctionList_1a867e5afb83ce8d6ee658290a76f54614">
                <title>UserFunction * FunctionList::GetFunctionDef (const char *name, const char *argument)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classFunctionList_1ae8dc9d2913429faefdfed463ae3272c1">
                <title>FunctionNode * FunctionList::GetFunctionCall (const char *function, ExpressionNode *value)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classFunctionList_1a667bf5683f0b7332b5607781df53c728">
                <title>char * FunctionList::List ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classFunctionList_1af69593a40790f4d696a74e46c3c9e552">
                <title>char * FunctionList::ListDefinitions ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classFunctionList_1ac87c5ecfbdfd7aa7c9c8c611b70c3a63">
                <title>char * FunctionList::ListContent (bool cmdFormat)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classFunctionList_1aabcebb1bdf56aee163f96483dcdc603c">
                <title>functiondef * FunctionList::GetSystemFunction (const char *ident)</title> <emphasis></emphasis>
                
            </section>
</section>
