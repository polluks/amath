<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="classStatementBlockNode">
<title>StatementBlockNode class Reference</title>
<para>
    <programlisting>#include <link linkend="nodes_8h">&lt;nodes.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for StatementBlockNode</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classStatementBlockNode__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for StatementBlockNode</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classStatementBlockNode__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>StatementBlockElement * first</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classStatementBlockNode_1ab7b27f5f9fa24acc63fd588477232c0b">StatementBlockNode</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classStatementBlockNode_1ae286ab48a4d9c273689c61a8ea80e06d">~StatementBlockNode</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="nodes_8h_1acac9cbaeea226ed297804c012dc12b16">NodeType</link> <link linkend="classStatementBlockNode_1ac7222752fa573a816eb2786c3f427a78">GetNodeType</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="classSyntaxNode">SyntaxNode</link> * <link linkend="classStatementBlockNode_1a9bf1b52dd2f683539d0fa1824be52b51">GetNext</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classStatementBlockNode_1a7cdae86c013121c1fdab0ee885c2b559">Add</link> (
<link linkend="classSyntaxNode">SyntaxNode</link> * node)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char * <link linkend="classStatementBlockNode_1a1b0102189a2ce420661be514b227ea78">GetTextCode</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char * <link linkend="classStatementBlockNode_1a820aeba99ce1f44084a3f07c734ea4a3">Execute</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classStatementBlockNode_1ac84d5c0d9afe4dd8c06dccd345f12310">Attach</link> (
<link linkend="classSyntaxNode">SyntaxNode</link> * node)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classStatementBlockNode_1a719b8e541136408805916adbb46829ad">Detach</link> (
<link linkend="classSyntaxNode">SyntaxNode</link> * node)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classStatementBlockNode_1ac896dd0efd4a59fca0a5d834d0e89022">Replace</link> (
<link linkend="classSyntaxNode">SyntaxNode</link> * n, <link linkend="classSyntaxNode">SyntaxNode</link> * x)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>A sequence of statements in a syntax tree. </para>
    </simplesect>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="classStatementBlockNode_1ab7b27f5f9fa24acc63fd588477232c0b">
                <title>StatementBlockNode::StatementBlockNode ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classStatementBlockNode_1ae286ab48a4d9c273689c61a8ea80e06d">
                <title>StatementBlockNode::~StatementBlockNode ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classStatementBlockNode_1ac7222752fa573a816eb2786c3f427a78">
                <title>NodeType StatementBlockNode::GetNodeType ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classStatementBlockNode_1a9bf1b52dd2f683539d0fa1824be52b51">
                <title>SyntaxNode * StatementBlockNode::GetNext ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classStatementBlockNode_1a7cdae86c013121c1fdab0ee885c2b559">
                <title>void StatementBlockNode::Add (SyntaxNode *node)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classStatementBlockNode_1a1b0102189a2ce420661be514b227ea78">
                <title>char * StatementBlockNode::GetTextCode ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classStatementBlockNode_1a820aeba99ce1f44084a3f07c734ea4a3">
                <title>char * StatementBlockNode::Execute ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classStatementBlockNode_1ac84d5c0d9afe4dd8c06dccd345f12310">
                <title>void StatementBlockNode::Attach (SyntaxNode *node)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classStatementBlockNode_1a719b8e541136408805916adbb46829ad">
                <title>void StatementBlockNode::Detach (SyntaxNode *node)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classStatementBlockNode_1ac896dd0efd4a59fca0a5d834d0e89022">
                <title>void StatementBlockNode::Replace (SyntaxNode *n, SyntaxNode *x)</title> <emphasis></emphasis>
                
            </section>
</section>
