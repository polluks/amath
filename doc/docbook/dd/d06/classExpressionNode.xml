<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="dd/d06/classExpressionNode">
<title>ExpressionNode class Reference</title>
<para>
    <programlisting>#include <link linkend="d1/d7f/nodes_8h">&lt;nodes.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for ExpressionNode</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="../../d4/d1c/classExpressionNode__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for ExpressionNode</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="../../d9/dde/classExpressionNode__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Protected Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Number * result</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="dd/d06/classExpressionNode_1adc8888de5329d356224c8a93f3ce2b75">ExpressionNode</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="dd/d06/classExpressionNode_1a5d67579dd6c9777a18455a1360f29841">ExpressionNode</link> (
<link linkend="da/de2/structNumber">Number</link> * value)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="dd/d06/classExpressionNode_1aa834d6d0e96a958d22609dad612b54b0">~ExpressionNode</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="d1/d7f/nodes_8h_1acac9cbaeea226ed297804c012dc12b16">NodeType</link> <link linkend="dd/d06/classExpressionNode_1aaa0ecd3971c182bbc605623b83afc519">GetNodeType</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="de/d03/platform_8h_1a1062901a7428fdd9c7f180f5e01ea056">bool</link> <link linkend="dd/d06/classExpressionNode_1adc58a4c102b7fa18e9c3a0be361b0663">IsSilent</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual char * <link linkend="dd/d06/classExpressionNode_1a0bbf243108a14eaf963a8161ffd8eb92">GetText</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="da/de2/structNumber">Number</link> * <link linkend="dd/d06/classExpressionNode_1a64975d4dc37742228bd522f6204537f7">Evaluate</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual int <link linkend="dd/d06/classExpressionNode_1a161b9ea0b79bbfc101d6f687c8481ddd">GetPrecedence</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char * <link linkend="dd/d06/classExpressionNode_1abb495de256b8c9a1c7bb61910fab25ab">GetTextCode</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char * <link linkend="dd/d06/classExpressionNode_1a923ac9b73f5568dd6bc65620d549c4ce">Execute</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual char * <link linkend="dd/d06/classExpressionNode_1a42a5e9562b0f645a19dcc83f698069b5">GetNodeText</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>Base class for all nodes related to mathematical expressions. </para>
    </simplesect>
        <simplesect>
            <title>Detailed Description</title>

<para>Nodes of this type is used to build trees representing an mathematical expressions. Each node in the tree consist of a number, an operator or any other element in an expression. </para>
                <para>Definition at line 88 of file nodes.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>nodes.h</para></listitem></itemizedlist></para>
        </simplesect>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="dd/d06/classExpressionNode_1adc8888de5329d356224c8a93f3ce2b75">
                <title>ExpressionNode::ExpressionNode ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dd/d06/classExpressionNode_1a5d67579dd6c9777a18455a1360f29841">
                <title>ExpressionNode::ExpressionNode (Number *value)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dd/d06/classExpressionNode_1aa834d6d0e96a958d22609dad612b54b0">
                <title>ExpressionNode::~ExpressionNode ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dd/d06/classExpressionNode_1aaa0ecd3971c182bbc605623b83afc519">
                <title>NodeType ExpressionNode::GetNodeType ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dd/d06/classExpressionNode_1adc58a4c102b7fa18e9c3a0be361b0663">
                <title>bool ExpressionNode::IsSilent ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dd/d06/classExpressionNode_1a0bbf243108a14eaf963a8161ffd8eb92">
                <title>virtual char* ExpressionNode::GetText ()=0</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dd/d06/classExpressionNode_1a64975d4dc37742228bd522f6204537f7">
                <title>virtual Number* ExpressionNode::Evaluate ()=0</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dd/d06/classExpressionNode_1a161b9ea0b79bbfc101d6f687c8481ddd">
                <title>virtual int ExpressionNode::GetPrecedence ()=0</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dd/d06/classExpressionNode_1abb495de256b8c9a1c7bb61910fab25ab">
                <title>char * ExpressionNode::GetTextCode ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dd/d06/classExpressionNode_1a923ac9b73f5568dd6bc65620d549c4ce">
                <title>char * ExpressionNode::Execute ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dd/d06/classExpressionNode_1a42a5e9562b0f645a19dcc83f698069b5">
                <title>virtual char* ExpressionNode::GetNodeText ()=0</title> <emphasis></emphasis>
                
            </section>
</section>
