<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="classUnaryNode">
<title>UnaryNode class Reference</title>
<para>
    <programlisting>#include <link linkend="operators_8h">&lt;operators.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for UnaryNode</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classUnaryNode__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for UnaryNode</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classUnaryNode__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ExpressionNode * expression</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classUnaryNode_1a6d08d4e122b413b28e5163900800ff66">UnaryNode</link> (
<link linkend="classExpressionNode">ExpressionNode</link> * expression)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classUnaryNode_1ab598f874161ee54d0f4524bcef88126d">~UnaryNode</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="nodes_8h_1ab321a69ad5704b704b8dd9e1b3984a29">ReductionType</link> <link linkend="classUnaryNode_1af0a3f842557e89f22bb14d1124a57a80">GetReductionType</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="classUnaryNode_1a6717d15d53d59718c772dab8f8393f13">GetPrecedence</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="classSyntaxNode">SyntaxNode</link> * <link linkend="classUnaryNode_1aea757690dc96439db3d88a69321c605a">GetNext</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char * <link linkend="classUnaryNode_1ad753fe89681dca1cf2d9ee840aedf86b">GetText</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="structNumber">Number</link> * <link linkend="classUnaryNode_1af78161ffb449b18c406c46defe6fa9b3">Evaluate</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classUnaryNode_1ab3290a52eba94622c917f0f701883aad">Attach</link> (
<link linkend="classSyntaxNode">SyntaxNode</link> * node)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classUnaryNode_1ad5ed9848bc7cdb4911a79f86ec3e8a43">Detach</link> (
<link linkend="classSyntaxNode">SyntaxNode</link> * node)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classUnaryNode_1a82d9151314ef46f671da1127b98b7789">Replace</link> (
<link linkend="classSyntaxNode">SyntaxNode</link> * n, <link linkend="classSyntaxNode">SyntaxNode</link> * x)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char * <link linkend="classUnaryNode_1ac3a91d51907bdc5a1cc781d8b0d0c0c2">GetNodeText</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="classUnaryNode_1a6d08d4e122b413b28e5163900800ff66">
                <title>UnaryNode::UnaryNode (ExpressionNode *expression)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classUnaryNode_1ab598f874161ee54d0f4524bcef88126d">
                <title>UnaryNode::~UnaryNode ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classUnaryNode_1af0a3f842557e89f22bb14d1124a57a80">
                <title>ReductionType UnaryNode::GetReductionType ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classUnaryNode_1a6717d15d53d59718c772dab8f8393f13">
                <title>int UnaryNode::GetPrecedence ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classUnaryNode_1aea757690dc96439db3d88a69321c605a">
                <title>SyntaxNode * UnaryNode::GetNext ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classUnaryNode_1ad753fe89681dca1cf2d9ee840aedf86b">
                <title>char * UnaryNode::GetText ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classUnaryNode_1af78161ffb449b18c406c46defe6fa9b3">
                <title>Number * UnaryNode::Evaluate ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classUnaryNode_1ab3290a52eba94622c917f0f701883aad">
                <title>void UnaryNode::Attach (SyntaxNode *node)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classUnaryNode_1ad5ed9848bc7cdb4911a79f86ec3e8a43">
                <title>void UnaryNode::Detach (SyntaxNode *node)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classUnaryNode_1a82d9151314ef46f671da1127b98b7789">
                <title>void UnaryNode::Replace (SyntaxNode *n, SyntaxNode *x)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classUnaryNode_1ac3a91d51907bdc5a1cc781d8b0d0c0c2">
                <title>char * UnaryNode::GetNodeText ()</title> <emphasis></emphasis>
                
            </section>
</section>
