<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="classLexer">
<title>Lexer class Reference</title>
<para>
    <programlisting>#include <link linkend="lexer_8h">&lt;lexer.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for Lexer</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classLexer__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for Lexer</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classLexer__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char * input</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char * str</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned int pos</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Token * first</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Token * current</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classLexer_1a8e12946738ee015bac381da30e2b03b0">Lexer</link> (
const char * input)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classLexer_1ad26a84af23d8d303723e36e83fc4e556">~Lexer</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classLexer_1a02696cb1f974ae74116c2b746dcba365">Tokenize</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="structToken">Token</link> * <link linkend="classLexer_1afbb12eaae7cff3bd2960f444cfe98f69">GetFirstToken</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char * <link linkend="classLexer_1a3032cbeb851294bccd61b722d9a86265">GetInput</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static char * <link linkend="classLexer_1affd4bac61db830383302be71198a372a">FindKeyword</link> (
<link linkend="lex_8h_1a7feef761cd73fac6e25b8bb80d2c4e54">Symbol</link> symbol)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classLexer_1a0f32556fc91f85a9ad55ed52321d2ae0">GetNextToken</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="platform_8h_1a1062901a7428fdd9c7f180f5e01ea056">bool</link> <link linkend="classLexer_1a6d8ab3a715307bf89fdfa8f83879c3cf">GetOperator</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="platform_8h_1a1062901a7428fdd9c7f180f5e01ea056">bool</link> <link linkend="classLexer_1a3444c8c0450b3cd82bb395627095769b">GetQuotedIdent</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="platform_8h_1a1062901a7428fdd9c7f180f5e01ea056">bool</link> <link linkend="classLexer_1a1a2555bec4f29b19fc0edd3989237110">GetLitteral</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="platform_8h_1a1062901a7428fdd9c7f180f5e01ea056">bool</link> <link linkend="classLexer_1a9cb42b9797270ecbd944d5c5f3043c3a">GetDigitValue</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="platform_8h_1a1062901a7428fdd9c7f180f5e01ea056">bool</link> <link linkend="classLexer_1a864c73023ef6b437a8d58c8158fbc6be">ShouldSkip</link> (
char character)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="lex_8h_1a7feef761cd73fac6e25b8bb80d2c4e54">Symbol</link> <link linkend="classLexer_1ab2f2c675530801d7cc1052b3ca4d1d68">FindKeyword</link> (
const char * ident)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>Encapsulates an lexical analyzer. Provides token for the parser. </para>
    </simplesect>
        <simplesect>
            <title>Detailed Description</title>

<para>More info on lexical analysis is available at Wikipedia: <link xlink:href="http://en.wikipedia.org/wiki/Lexical_analysis">http://en.wikipedia.org/wiki/Lexical_analysis</link> </para>
                <para>Definition at line 45 of file lexer.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>lexer.h</para></listitem></itemizedlist></para>
        </simplesect>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="classLexer_1a8e12946738ee015bac381da30e2b03b0">
                <title>Lexer::Lexer (const char *input)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classLexer_1ad26a84af23d8d303723e36e83fc4e556">
                <title>Lexer::~Lexer ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classLexer_1a02696cb1f974ae74116c2b746dcba365">
                <title>void Lexer::Tokenize ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classLexer_1afbb12eaae7cff3bd2960f444cfe98f69">
                <title>Token * Lexer::GetFirstToken ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classLexer_1a3032cbeb851294bccd61b722d9a86265">
                <title>char * Lexer::GetInput ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classLexer_1affd4bac61db830383302be71198a372a">
                <title>char * Lexer::FindKeyword (Symbol symbol)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classLexer_1a0f32556fc91f85a9ad55ed52321d2ae0">
                <title>void Lexer::GetNextToken ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classLexer_1a6d8ab3a715307bf89fdfa8f83879c3cf">
                <title>bool Lexer::GetOperator ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classLexer_1a3444c8c0450b3cd82bb395627095769b">
                <title>bool Lexer::GetQuotedIdent ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classLexer_1a1a2555bec4f29b19fc0edd3989237110">
                <title>bool Lexer::GetLitteral ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classLexer_1a9cb42b9797270ecbd944d5c5f3043c3a">
                <title>bool Lexer::GetDigitValue ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classLexer_1a864c73023ef6b437a8d58c8158fbc6be">
                <title>bool Lexer::ShouldSkip (char character)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classLexer_1ab2f2c675530801d7cc1052b3ca4d1d68">
                <title>Symbol Lexer::FindKeyword (const char *ident)</title> <emphasis></emphasis>
                
            </section>
</section>
