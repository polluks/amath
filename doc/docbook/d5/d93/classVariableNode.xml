<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="d5/d93/classVariableNode">
<title>VariableNode class Reference</title>
<para>
    <programlisting>#include <link linkend="d2/d9a/values_8h">&lt;values.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for VariableNode</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="../../d2/df9/classVariableNode__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for VariableNode</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="../../db/d09/classVariableNode__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Variable * variable</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="d5/d93/classVariableNode_1a0d3189fa49fab4ac738f114b6a696fd7">VariableNode</link> (
<link linkend="d6/d1c/classVariable">Variable</link> * variable)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char * <link linkend="d5/d93/classVariableNode_1ae1ebd067d7cb5f996fe629d06db5ec77">GetText</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="da/de2/structNumber">Number</link> * <link linkend="d5/d93/classVariableNode_1a7ebbe9072eb78b5790befed3a42b2dc2">Evaluate</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d5/d93/classVariableNode_1a8134cc1627925a0327e6c62eef810cdc">AssignValue</link> (
<link linkend="da/de2/structNumber">Number</link> * value)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="d5/d93/classVariableNode_1ad86b7e8ec992434c80ebc1804f483517">GetPrecedence</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="d8/d5d/classSyntaxNode">SyntaxNode</link> * <link linkend="d5/d93/classVariableNode_1a3559e2232ef0e0778fde92883ff8957f">GetNext</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d5/d93/classVariableNode_1a9ef2e7ff5c7636e789ef9385190a0660">Attach</link> (
<link linkend="d8/d5d/classSyntaxNode">SyntaxNode</link> * node)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d5/d93/classVariableNode_1a7d241e4c22a3443a7aca3b73d4882b89">Detach</link> (
<link linkend="d8/d5d/classSyntaxNode">SyntaxNode</link> * node)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d5/d93/classVariableNode_1aaea4810a27f9b07552df4bcdf6d59d86">Replace</link> (
<link linkend="d8/d5d/classSyntaxNode">SyntaxNode</link> * n, <link linkend="d8/d5d/classSyntaxNode">SyntaxNode</link> * x)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char * <link linkend="d5/d93/classVariableNode_1ab76eda982f1625774b982fd148462102">GetNodeText</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>Use of a variable in a syntax tree. </para>
    </simplesect>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="d5/d93/classVariableNode_1a0d3189fa49fab4ac738f114b6a696fd7">
                <title>VariableNode::VariableNode (Variable *variable)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d5/d93/classVariableNode_1ae1ebd067d7cb5f996fe629d06db5ec77">
                <title>char * VariableNode::GetText ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d5/d93/classVariableNode_1a7ebbe9072eb78b5790befed3a42b2dc2">
                <title>Number * VariableNode::Evaluate ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d5/d93/classVariableNode_1a8134cc1627925a0327e6c62eef810cdc">
                <title>void VariableNode::AssignValue (Number *value)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d5/d93/classVariableNode_1ad86b7e8ec992434c80ebc1804f483517">
                <title>int VariableNode::GetPrecedence ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d5/d93/classVariableNode_1a3559e2232ef0e0778fde92883ff8957f">
                <title>SyntaxNode * VariableNode::GetNext ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d5/d93/classVariableNode_1a9ef2e7ff5c7636e789ef9385190a0660">
                <title>void VariableNode::Attach (SyntaxNode *node)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d5/d93/classVariableNode_1a7d241e4c22a3443a7aca3b73d4882b89">
                <title>void VariableNode::Detach (SyntaxNode *node)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d5/d93/classVariableNode_1aaea4810a27f9b07552df4bcdf6d59d86">
                <title>void VariableNode::Replace (SyntaxNode *n, SyntaxNode *x)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d5/d93/classVariableNode_1ab76eda982f1625774b982fd148462102">
                <title>char * VariableNode::GetNodeText ()</title> <emphasis></emphasis>
                
            </section>
</section>
