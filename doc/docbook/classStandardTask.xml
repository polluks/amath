<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="classStandardTask">
<title>StandardTask class Reference</title>
<para>
    <programlisting>#include <link linkend="task__stdc_8h">&lt;task_stdc.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for StandardTask</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classStandardTask__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for StandardTask</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classStandardTask__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classStandardTask_1ad4afb5b0dff5e65fd25a0f01e4152281">StandardTask</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classStandardTask_1a21d94f9838aba597e3b03dfbdf7b4cf5">~StandardTask</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classStandardTask_1ab454fb19347e79aaaa85151255b630a4">Start</link> (
<link linkend="classThreadBase">ThreadBase</link> * thread)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classStandardTask_1a34a72e3871d0322b3078af9a1340b1cf">WaitExit</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>Encapsulates calls to POSIX task. </para>
    </simplesect>
        <simplesect>
            <title>Detailed Description</title>

<para>Based on fork and wait. </para>
                <para>Definition at line 48 of file task_stdc.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>task_stdc.h</para></listitem></itemizedlist></para>
        </simplesect>
            <section xml:id="classStandardTask_1ad4afb5b0dff5e65fd25a0f01e4152281">
                <title>StandardTask::StandardTask ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classStandardTask_1a21d94f9838aba597e3b03dfbdf7b4cf5">
                <title>StandardTask::~StandardTask ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classStandardTask_1ab454fb19347e79aaaa85151255b630a4">
                <title>void StandardTask::Start (ThreadBase *thread)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classStandardTask_1a34a72e3871d0322b3078af9a1340b1cf">
                <title>void StandardTask::WaitExit ()</title> <emphasis></emphasis>
                
            </section>
</section>
