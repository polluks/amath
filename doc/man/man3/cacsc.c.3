.TH "lib/cplex/cacsc.c" 3 "Tue Jan 24 2017" "Version 1.6.2" "amath" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/cplex/cacsc.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'prim\&.h'\fP
.br
\fC#include 'math\&.h'\fP
.br
\fC#include 'complex\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBcomplex\fP \fBcacsc\fP (\fBcomplex\fP z)"
.br
.RI "\fIInverse cosecant of complex number\&. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBcomplex\fP cacsc (\fBcomplex\fP z)"

.PP
Inverse cosecant of complex number\&. 
.PP
\fBVersion:\fP
.RS 4
1\&.1 
.RE
.PP
\fBDate:\fP
.RS 4
14/10/01
.RE
.PP
Inverse cosecant expressed using complex logarithms: 
.PP
.nf

arccsc z = -i * log(sqr(1 - 1/(z*z)) + i/z)
.fi
.PP
 More info is available at Wikipedia: 
.br
 http://en.wikipedia.org/wiki/Inverse_trigonometric_functions#Logarithmic_forms 
.PP
Definition at line 43 of file cacsc\&.c\&.
.PP
References cadd(), cdiv(), clog(), cmul(), cpack(), csqrt(), and csub()\&.
.PP
Referenced by ComplexNumber::ArcCosecant()\&.
.PP
.nf
44 {
45     complex one = cpack(1\&.0, 0\&.0);
46     complex i = cpack(0\&.0, 1\&.0);
47     complex j = cpack(0\&.0, -1\&.0);
48     complex iz = cdiv(i, z);
49     complex z2 = cmul(z, z);
50     complex p = cdiv(one, z2);
51     complex q = csqrt(csub(one, p));
52     complex w = cmul(j, clog(cadd(q, iz)));
53     return w;
54 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for amath from the source code\&.
