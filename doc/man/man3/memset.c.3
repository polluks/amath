.TH "lib/clib/memset.c" 3 "Fri Jan 20 2017" "Version 1.6.0" "amath" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/clib/memset.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'clib\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBMemSet\fP (void *dst0, int c0, unsigned int length)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void MemSet (void * dst0, int c0, unsigned int length)"

.PP
Definition at line 42 of file memset\&.c\&.
.PP
.nf
43 {
44     unsigned char *dst = (unsigned char*) dst0;
45     unsigned int  t;
46     unsigned int  c;
47 
48     /*
49      * If not enough words, just fill bytes\&.  A length >= 2 words
50      * guarantees that at least one of them is `complete' after
51      * any necessary alignment\&.  For instance:
52      *
53      *  |-----------|-----------|-----------|
54      *  |00|01|02|03|04|05|06|07|08|09|0A|00|
55      *            ^---------------------^
56      *       dst         dst+length-1
57      *
58      * but we use a minimum of 3 here since the overhead of the code
59      * to do word writes is substantial\&.
60      */
61     if (length < 3 * wsize) {
62         while (length != 0) {
63             *dst++ = c0;
64             --length;
65         }
66     }
67 
68     if ((c = (unsigned char)c0) != 0) { /* Fill the word\&. */
69         c = (c << 8) | c;   /* u_int is 16 bits\&. */
70 #if UINT_MAX > 0xffff
71         c = (c << 16) | c;  /* u_int is 32 bits\&. */
72 #endif
73 #if UINT_MAX > 0xffffffff
74         c = (c << 32) | c;  /* u_int is 64 bits\&. */
75 #endif
76     }
77 
78     /* Align destination by filling in bytes\&. */
79     if ((t = (long)dst & wmask) != 0) {
80         t = wsize - t;
81         length -= t;
82         do {
83             *dst++ = c0;
84         } while (--t != 0);
85     }
86 
87     /* Fill words\&.  Length was >= 2*words so we know t >= 1 here\&. */
88     t = length / wsize;
89     do {
90         *(unsigned int*)dst = c;
91         dst += wsize;
92     } while (--t != 0);
93 
94     /* Mop up trailing bytes, if any\&. */
95     t = length & wmask;
96     if (t != 0)
97         do {
98             *dst++ = c0;
99         } while (--t != 0);
100 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for amath from the source code\&.
