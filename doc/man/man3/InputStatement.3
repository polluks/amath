.TH "InputStatement" 3 "Sat Jan 21 2017" "Version 1.6.1" "amath" \" -*- nroff -*-
.ad l
.nh
.SH NAME
InputStatement \- Change numeral input system\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <statements\&.h>\fP
.PP
Inherits \fBStatementNode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBInputStatement\fP ()"
.br
.RI "\fIConstructor used to show number of active digits\&. \fP"
.ti -1c
.RI "\fBInputStatement\fP (unsigned int \fBbase\fP)"
.br
.RI "\fIConstructor used to set number of active digits\&. \fP"
.ti -1c
.RI "\fB~InputStatement\fP ()"
.br
.ti -1c
.RI "char * \fBExecute\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "unsigned int \fBbase\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Change numeral input system\&. 
.PP
Definition at line 209 of file statements\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "InputStatement::InputStatement ()"

.PP
Constructor used to show number of active digits\&. 
.PP
Definition at line 455 of file statements\&.cpp\&.
.PP
References base\&.
.PP
Referenced by Parser::ParseNumeralStatement()\&.
.PP
.nf
455                                :
456     base(0) { }
.fi
.SS "InputStatement::InputStatement (unsigned int base)"

.PP
Constructor used to set number of active digits\&. 
.PP
Definition at line 462 of file statements\&.cpp\&.
.PP
References base, and StatementNode::StatementNode()\&.
.PP
Referenced by Parser::ParseNumeralStatement()\&.
.PP
.nf
462                                                 :
463     StatementNode(), base(base) { }
.fi
.SS "InputStatement::~InputStatement ()\fC [inline]\fP"

.PP
Definition at line 213 of file statements\&.h\&.
.PP
.nf
213 { }
.fi
.SH "Member Function Documentation"
.PP 
.SS "char * InputStatement::Execute ()\fC [virtual]\fP"

.PP
Implements \fBStatementNode\fP\&.
.PP
Definition at line 465 of file statements\&.cpp\&.
.PP
References CharBuffer::Append(), base, CharBuffer::Empty(), CharBuffer::EnsureSize(), NumeralSystem::GetDigits(), NumeralSystem::GetName(), CharBuffer::GetString(), Program::Input, Program::NewPositionalInput(), SyntaxNode::output, and StrLen()\&.
.PP
.nf
466 {
467     const char *text;
468 
469     if (base != 0) {
470         int digits = Program->Input->GetDigits();
471         Program->NewPositionalInput(base, digits);
472         text = HELPINPUSETT;
473     } else {
474         text = HELPINPUSHOW;
475     }
476 
477     const char *desc = Program->Input->GetName();
478 
479     output->Empty();
480     output->EnsureSize(StrLen(text) + StrLen(desc) + StrLen(NEWLINE) + 1);
481     output->Append(text);
482     output->Append(desc);
483     output->Append(NEWLINE);
484     return output->GetString();
485 }
.fi
.SH "Member Data Documentation"
.PP 
.SS "unsigned int InputStatement::base\fC [private]\fP"

.PP
Definition at line 217 of file statements\&.h\&.
.PP
Referenced by Execute(), and InputStatement()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for amath from the source code\&.
