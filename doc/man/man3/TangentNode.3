.TH "TangentNode" 3 "Sun Jan 22 2017" "Version 1.6.1" "amath" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TangentNode \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <functions\&.h>\fP
.PP
Inherits \fBFunctionNode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTangentNode\fP (\fBExpressionNode\fP *\fBexpression\fP)"
.br
.ti -1c
.RI "\fBNumber\fP * \fBEvaluate\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBFunctionNode\fP * \fBCreate\fP (\fBExpressionNode\fP *\fBexpression\fP)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "char * \fBGetNodeText\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 352 of file functions\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "TangentNode::TangentNode (\fBExpressionNode\fP * expression)"

.PP
Definition at line 782 of file functions\&.cpp\&.
.PP
References FunctionNode::FunctionNode()\&.
.PP
Referenced by Create()\&.
.PP
.nf
782                                                    :
783     FunctionNode(expression) { }
.fi
.SH "Member Function Documentation"
.PP 
.SS "\fBFunctionNode\fP * TangentNode::Create (\fBExpressionNode\fP * expression)\fC [static]\fP"

.PP
Definition at line 785 of file functions\&.cpp\&.
.PP
References TangentNode()\&.
.PP
.nf
786 {
787     return new TangentNode(expression);
788 }
.fi
.SS "\fBNumber\fP * TangentNode::Evaluate ()\fC [virtual]\fP"

.PP
Implements \fBExpressionNode\fP\&.
.PP
Definition at line 790 of file functions\&.cpp\&.
.PP
References ExpressionNode::Evaluate(), FunctionNode::expression, ExpressionNode::result, and Number::Tangent()\&.
.PP
.nf
791 {
792     result = expression->Evaluate()->Tangent();
793     return result;
794 }
.fi
.SS "char * TangentNode::GetNodeText ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Implements \fBExpressionNode\fP\&.
.PP
Definition at line 796 of file functions\&.cpp\&.
.PP
.nf
797 {
798     return (char*)"tan";
799 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for amath from the source code\&.
