.TH "lib/clib/alloccpy.c" 3 "Sun Jan 22 2017" "Version 1.6.1" "amath" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/clib/alloccpy.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'mem\&.h'\fP
.br
\fC#include 'clib\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "unsigned int \fBAllocAndCopy\fP (char **destination, const char *source)"
.br
.RI "\fIAllocate memory and copy a string into the array\&. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "unsigned int AllocAndCopy (char ** destination, const char * source)"

.PP
Allocate memory and copy a string into the array\&. 
.PP
Definition at line 34 of file alloccpy\&.c\&.
.PP
Referenced by AnsiConoleEngine::AnsiConoleEngine(), CharBuffer::ClearAndCopy(), ConsoleBase::ConsoleBase(), AnsiConoleEngine::CopyLine(), DeleteStatement::DeleteStatement(), DrawStatement::DrawStatement(), ErrorNode::ErrorNode(), ExecuteStatement::ExecuteStatement(), HelpStatement::HelpStatement(), Lexer::Lexer(), ListStatement::ListStatement(), StandardLanguage::LoadCatalog(), LoadStatement::LoadStatement(), PlotStatement::PlotStatement(), PromptStatement::PromptStatement(), SaveStatement::SaveStatement(), PreferencesBase::SetDefaults(), PreferencesBase::SetPrompt(), ConsoleBase::SetPrompt(), AnsiConoleEngine::SetPrompt(), AnsiConoleEngine::ShowLast(), ShowStatement::ShowStatement(), Token::Token(), UserFunction::UserFunction(), and Variable::Variable()\&.
.PP
.nf
35 {
36     char *i, *s, *d;
37     unsigned int n, size;
38 
39     if (source == NOMEM) {
40         *destination = NOMEM;
41         return 0;
42     }
43 
44     i = (char*)source;
45     s = (char*)source;
46     while (*i)
47         i++;
48 
49     n = i - s + 1;
50     size = n;
51     *destination = AllocMemSafe(size);
52     d = *destination;
53 
54     while (n--)
55         *d++ = *s++;
56 
57     return size;
58 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for amath from the source code\&.
