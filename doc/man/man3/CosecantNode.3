.TH "CosecantNode" 3 "Thu Jan 19 2017" "Version 1.6.0" "amath" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CosecantNode \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <functions\&.h>\fP
.PP
Inherits \fBFunctionNode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCosecantNode\fP (\fBExpressionNode\fP *\fBexpression\fP)"
.br
.ti -1c
.RI "\fBNumber\fP * \fBEvaluate\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBFunctionNode\fP * \fBCreate\fP (\fBExpressionNode\fP *\fBexpression\fP)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "char * \fBGetNodeText\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 372 of file functions\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "CosecantNode::CosecantNode (\fBExpressionNode\fP * expression)"

.PP
Definition at line 801 of file functions\&.cpp\&.
.PP
References FunctionNode::FunctionNode()\&.
.PP
Referenced by Create()\&.
.PP
.nf
801                                                      :
802     FunctionNode(expression) { }
.fi
.SH "Member Function Documentation"
.PP 
.SS "\fBFunctionNode\fP * CosecantNode::Create (\fBExpressionNode\fP * expression)\fC [static]\fP"

.PP
Definition at line 804 of file functions\&.cpp\&.
.PP
References CosecantNode()\&.
.PP
.nf
805 {
806     return new CosecantNode(expression);
807 }
.fi
.SS "\fBNumber\fP * CosecantNode::Evaluate ()\fC [virtual]\fP"

.PP
Implements \fBExpressionNode\fP\&.
.PP
Definition at line 809 of file functions\&.cpp\&.
.PP
References Number::Cosecant(), ExpressionNode::Evaluate(), FunctionNode::expression, and ExpressionNode::result\&.
.PP
.nf
810 {
811     result = expression->Evaluate()->Cosecant();
812     return result;
813 }
.fi
.SS "char * CosecantNode::GetNodeText ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Implements \fBExpressionNode\fP\&.
.PP
Definition at line 815 of file functions\&.cpp\&.
.PP
.nf
816 {
817     return (char*)"csc";
818 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for amath from the source code\&.
