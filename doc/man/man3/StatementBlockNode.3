.TH "StatementBlockNode" 3 "Sat Jan 21 2017" "Version 1.6.1" "amath" \" -*- nroff -*-
.ad l
.nh
.SH NAME
StatementBlockNode \- A sequence of statements in a syntax tree\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <nodes\&.h>\fP
.PP
Inherits \fBSyntaxNode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBStatementBlockNode\fP ()"
.br
.ti -1c
.RI "\fB~StatementBlockNode\fP ()"
.br
.ti -1c
.RI "\fBNodeType\fP \fBGetNodeType\fP ()"
.br
.ti -1c
.RI "\fBSyntaxNode\fP * \fBGetNext\fP ()"
.br
.ti -1c
.RI "void \fBAdd\fP (\fBSyntaxNode\fP *node)"
.br
.ti -1c
.RI "char * \fBGetTextCode\fP ()"
.br
.ti -1c
.RI "char * \fBExecute\fP ()"
.br
.ti -1c
.RI "void \fBAttach\fP (\fBSyntaxNode\fP *node)"
.br
.ti -1c
.RI "void \fBDetach\fP (\fBSyntaxNode\fP *node)"
.br
.ti -1c
.RI "void \fBReplace\fP (\fBSyntaxNode\fP *n, \fBSyntaxNode\fP *x)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBStatementBlockElement\fP * \fBfirst\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A sequence of statements in a syntax tree\&. 
.PP
Definition at line 156 of file nodes\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "StatementBlockNode::StatementBlockNode ()"

.PP
Definition at line 236 of file nodes\&.cpp\&.
.PP
References first, SyntaxNode::iterator, and SyntaxNode::SyntaxNode()\&.
.PP
Referenced by Parser::Parse()\&.
.PP
.nf
236                                        :
237     SyntaxNode() {
238     first = NOMEM;
239     iterator = NOMEM;
240 }
.fi
.SS "StatementBlockNode::~StatementBlockNode ()"

.PP
Definition at line 242 of file nodes\&.cpp\&.
.PP
References first, StatementBlockElement::next, and StatementBlockElement::statement\&.
.PP
.nf
243 {
244     StatementBlockElement *e = first;
245 
246     while (e != NOMEM) {
247         StatementBlockElement *next = e->next;
248         delete e->statement;
249         delete e;
250         e = next;
251     }
252 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void StatementBlockNode::Add (\fBSyntaxNode\fP * node)"

.PP
Definition at line 259 of file nodes\&.cpp\&.
.PP
References first, StatementBlockElement::next, and StatementBlockElement::statement\&.
.PP
Referenced by Parser::Parse()\&.
.PP
.nf
260 {
261     if (first == NOMEM) {
262         first = new StatementBlockElement();
263         first->statement = node;
264         first->next = NOMEM;
265         return;
266     }
267 
268     StatementBlockElement *last = first;
269     StatementBlockElement *current = first->next;
270 
271     while (current != NOMEM) {
272         current = current->next;
273         last = last->next;
274     }
275 
276     current = new StatementBlockElement();
277     current->statement = node;
278     current->next = NOMEM;
279     last->next = current;
280 }
.fi
.SS "void StatementBlockNode::Attach (\fBSyntaxNode\fP * node)\fC [virtual]\fP"

.PP
Implements \fBSyntaxNode\fP\&.
.PP
Definition at line 308 of file nodes\&.cpp\&.
.PP
.nf
309 { }
.fi
.SS "void StatementBlockNode::Detach (\fBSyntaxNode\fP * node)\fC [virtual]\fP"

.PP
Implements \fBSyntaxNode\fP\&.
.PP
Definition at line 311 of file nodes\&.cpp\&.
.PP
.nf
312 {
313     // TODO: IMPLEMENT
314 }
.fi
.SS "char * StatementBlockNode::Execute ()\fC [virtual]\fP"

.PP
Implements \fBSyntaxNode\fP\&.
.PP
Definition at line 287 of file nodes\&.cpp\&.
.PP
References CharBuffer::Append(), CharBuffer::ClearBuffer(), CharBuffer::Empty(), CharBuffer::EnsureGrowth(), SyntaxNode::Execute(), first, CharBuffer::GetString(), StatementBlockElement::next, SyntaxNode::output, StatementBlockElement::statement, and StrLen()\&.
.PP
.nf
288 {
289     output->ClearBuffer();
290     output->Empty();
291 
292     StatementBlockElement *e = first;
293     while (e != NOMEM) {
294         const char *out = e->statement->Execute();
295         output->EnsureGrowth(StrLen(out) + 1);
296         output->Append(out);
297         e = e->next;
298     }
299 
300     return output->GetString();
301 }
.fi
.SS "\fBSyntaxNode\fP * StatementBlockNode::GetNext ()\fC [virtual]\fP"

.PP
Implements \fBSyntaxNode\fP\&.
.PP
Definition at line 303 of file nodes\&.cpp\&.
.PP
.nf
304 {
305     return NOMEM; // TODO: Implement
306 }
.fi
.SS "\fBNodeType\fP StatementBlockNode::GetNodeType ()\fC [virtual]\fP"

.PP
Implements \fBSyntaxNode\fP\&.
.PP
Definition at line 254 of file nodes\&.cpp\&.
.PP
References statement\&.
.PP
.nf
255 {
256     return statement;
257 }
.fi
.SS "char * StatementBlockNode::GetTextCode ()\fC [virtual]\fP"

.PP
Implements \fBSyntaxNode\fP\&.
.PP
Definition at line 282 of file nodes\&.cpp\&.
.PP
.nf
283 {
284     return (char*)"SBLCK";
285 }
.fi
.SS "void StatementBlockNode::Replace (\fBSyntaxNode\fP * n, \fBSyntaxNode\fP * x)\fC [virtual]\fP"

.PP
Implements \fBSyntaxNode\fP\&.
.PP
Definition at line 316 of file nodes\&.cpp\&.
.PP
.nf
317 {
318     // TODO: IMPLEMENT
319 }
.fi
.SH "Member Data Documentation"
.PP 
.SS "\fBStatementBlockElement\fP* StatementBlockNode::first\fC [private]\fP"

.PP
Definition at line 171 of file nodes\&.h\&.
.PP
Referenced by Add(), Execute(), StatementBlockNode(), and ~StatementBlockNode()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for amath from the source code\&.
