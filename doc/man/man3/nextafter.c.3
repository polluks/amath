.TH "lib/real/nextafter.c" 3 "Fri Jan 20 2017" "Version 1.6.0" "amath" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/real/nextafter.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'fdlibm\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "double \fBnextafter\fP (double x, double y)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "double nextafter (double x, double y)"

.PP
Definition at line 57 of file nextafter\&.c\&.
.PP
.nf
60 {
61     int hx,hy,ix,iy;
62     unsigned lx,ly;
63 
64     hx = __HI(x);       /* high word of x */
65     lx = __LO(x);       /* low  word of x */
66     hy = __HI(y);       /* high word of y */
67     ly = __LO(y);       /* low  word of y */
68     ix = hx&0x7fffffff;     /* |x| */
69     iy = hy&0x7fffffff;     /* |y| */
70 
71     if(((ix>=0x7ff00000)&&((ix-0x7ff00000)|lx)!=0) ||   /* x is nan */
72             ((iy>=0x7ff00000)&&((iy-0x7ff00000)|ly)!=0))     /* y is nan */
73         return x+y;
74     if(x==y) return x;      /* x=y, return x */
75     if((ix|lx)==0) {            /* x == 0 */
76         __HI(x) = hy&0x80000000;    /* return +-minsubnormal */
77         __LO(x) = 1;
78         y = x*x;
79         if(y==x) return y;
80         else return x;  /* raise underflow flag */
81     }
82     if(hx>=0) {             /* x > 0 */
83         if(hx>hy||((hx==hy)&&(lx>ly))) {    /* x > y, x -= ulp */
84             if(lx==0) hx -= 1;
85             lx -= 1;
86         } else {                /* x < y, x += ulp */
87             lx += 1;
88             if(lx==0) hx += 1;
89         }
90     } else {                /* x < 0 */
91         if(hy>=0||hx>hy||((hx==hy)&&(lx>ly))) { /* x < y, x -= ulp */
92             if(lx==0) hx -= 1;
93             lx -= 1;
94         } else {                /* x > y, x += ulp */
95             lx += 1;
96             if(lx==0) hx += 1;
97         }
98     }
99     hy = hx&0x7ff00000;
100     if(hy>=0x7ff00000) return x+x;  /* overflow  */
101     if(hy<0x00100000) {     /* underflow */
102         y = x*x;
103         if(y!=x) {      /* raise underflow flag */
104             __HI(y) = hx;
105             __LO(y) = lx;
106             return y;
107         }
108     }
109     __HI(x) = hx;
110     __LO(x) = lx;
111     return x;
112 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for amath from the source code\&.
