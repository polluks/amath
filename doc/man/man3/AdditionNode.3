.TH "AdditionNode" 3 "Fri Jan 20 2017" "Version 1.6.0" "amath" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AdditionNode \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <operators\&.h>\fP
.PP
Inherits \fBNumericOperator\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAdditionNode\fP (\fBExpressionNode\fP *\fBleft\fP, \fBExpressionNode\fP *\fBright\fP)"
.br
.ti -1c
.RI "\fBReductionType\fP \fBGetReductionType\fP ()"
.br
.ti -1c
.RI "int \fBGetPrecedence\fP ()"
.br
.ti -1c
.RI "\fBNumber\fP * \fBEvaluate\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "char * \fBGetNodeText\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 96 of file operators\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "AdditionNode::AdditionNode (\fBExpressionNode\fP * left, \fBExpressionNode\fP * right)"

.PP
Definition at line 301 of file operators\&.cpp\&.
.PP
References NumericOperator::NumericOperator()\&.
.PP
Referenced by Parser::ParseAddSubstract()\&.
.PP
.nf
301                                                                      :
302     NumericOperator(left, right) { }
.fi
.SH "Member Function Documentation"
.PP 
.SS "\fBNumber\fP * AdditionNode::Evaluate ()\fC [virtual]\fP"

.PP
Implements \fBExpressionNode\fP\&.
.PP
Definition at line 314 of file operators\&.cpp\&.
.PP
References Number::Add(), ExpressionNode::Evaluate(), NumericOperator::left, ExpressionNode::result, and NumericOperator::right\&.
.PP
.nf
315 {
316     result = left->Evaluate()->Add(right->Evaluate());
317     return result;
318 }
.fi
.SS "char * AdditionNode::GetNodeText ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Implements \fBExpressionNode\fP\&.
.PP
Definition at line 320 of file operators\&.cpp\&.
.PP
.nf
321 {
322     return (char*)"+";
323 }
.fi
.SS "int AdditionNode::GetPrecedence ()\fC [virtual]\fP"

.PP
Implements \fBExpressionNode\fP\&.
.PP
Definition at line 309 of file operators\&.cpp\&.
.PP
.nf
310 {
311     return 2;
312 }
.fi
.SS "\fBReductionType\fP AdditionNode::GetReductionType ()\fC [virtual]\fP"

.PP
Reimplemented from \fBSyntaxNode\fP\&.
.PP
Definition at line 304 of file operators\&.cpp\&.
.PP
References compladdreduc\&.
.PP
.nf
305 {
306     return compladdreduc;
307 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for amath from the source code\&.
