.TH "Number" 3 "Tue Jan 24 2017" "Version 1.6.2" "amath" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Number \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <numb\&.h>\fP
.PP
Inherited by \fBComplexNumber\fP, and \fBRealNumber\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNumber\fP (\fBNumberSystem\fP \fBsystem\fP)"
.br
.ti -1c
.RI "virtual \fB~Number\fP ()"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBClone\fP ()=0"
.br
.ti -1c
.RI "virtual int \fBGetIntegerValue\fP ()=0"
.br
.ti -1c
.RI "virtual double \fBGetRealValue\fP ()=0"
.br
.ti -1c
.RI "virtual \fBbool\fP \fBPureComplexValue\fP ()=0"
.br
.ti -1c
.RI "virtual int \fBGetPrecedence\fP ()=0"
.br
.ti -1c
.RI "virtual int \fBGetDefaultPrecedence\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBUnary\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBAdd\fP (\fBNumber\fP *other)=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBSub\fP (\fBNumber\fP *other)=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBMul\fP (\fBNumber\fP *other)=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBDiv\fP (\fBNumber\fP *other)=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBRaise\fP (\fBNumber\fP *exponent)=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBSignum\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBTrunc\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBRound\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBFloor\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBCeiling\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBAbsolute\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBSquareRoot\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBCubeRoot\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBReciprocal\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBLog\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBLog2\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBLog10\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBSine\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBCosine\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBTangent\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBCosecant\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBSecant\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBCotangent\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBArcSine\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBArcCosine\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBArcTangent\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBArcCosecant\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBArcSecant\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBArcCotangent\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBHypSine\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBHypCosine\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBHypTangent\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBHypCosecant\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBHypSecant\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBHypCotangent\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBHypArcSine\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBHypArcCosine\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBHypArcTangent\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBHypArcCosecant\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBHypArcSecant\fP ()=0"
.br
.ti -1c
.RI "virtual \fBNumber\fP * \fBHypArcCotangent\fP ()=0"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBNumberSystem\fP \fBsystem\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBPositionalNumeralSystem\fP"
.br
.ti -1c
.RI "class \fBDecimalSystem\fP"
.br
.ti -1c
.RI "struct \fBRealNumber\fP"
.br
.ti -1c
.RI "struct \fBComplexNumber\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 48 of file numb\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Number::Number (\fBNumberSystem\fP system)\fC [inline]\fP"

.PP
Definition at line 50 of file numb\&.h\&.
.PP
References system\&.
.PP
Referenced by ComplexNumber::ComplexNumber(), and RealNumber::RealNumber()\&.
.PP
.nf
50 : system(system)  { }
.fi
.SS "virtual Number::~Number ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line 51 of file numb\&.h\&.
.PP
.nf
51 { }
.fi
.SH "Member Function Documentation"
.PP 
.SS "virtual \fBNumber\fP* Number::Absolute ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by AbsoluteNode::Evaluate(), and AbsoluteFunctionNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Add (\fBNumber\fP * other)\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by RealNumber::Add(), AdditionNode::Evaluate(), Optimizer::ReduceValueNodes(), and RealNumber::Sub()\&.
.SS "virtual \fBNumber\fP* Number::ArcCosecant ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by ArcCosecantNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::ArcCosine ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by ArcCosineNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::ArcCotangent ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by ArcCotangentNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::ArcSecant ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by ArcSecantNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::ArcSine ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by ArcSineNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::ArcTangent ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by ArcTangentNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Ceiling ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by CeilingNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Clone ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by Variable::AssignValue(), Variable::GetValue(), and Program::SetLastResult()\&.
.SS "virtual \fBNumber\fP* Number::Cosecant ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by CosecantNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Cosine ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by CosineNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Cotangent ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by CotangentNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::CubeRoot ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by CubeRootNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Div (\fBNumber\fP * other)\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by DivisionNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Floor ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by FloorNode::Evaluate()\&.
.SS "virtual int Number::GetDefaultPrecedence ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by NumericValueNode::GetPrecedence()\&.
.SS "virtual int Number::GetIntegerValue ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by Parser::ParseDigistStatement(), and Parser::ParseNumeralStatement()\&.
.SS "virtual int Number::GetPrecedence ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by NumericValueNode::GetPrecedence()\&.
.SS "virtual double Number::GetRealValue ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by Grid::FunctionValue(), PositionalNumeralSystem::GetText(), DecimalSystem::GetText(), and Parser::ParseNumber()\&.
.SS "virtual \fBNumber\fP* Number::HypArcCosecant ()\fC [pure virtual]\fP"

.PP
Implemented in \fBComplexNumber\fP, and \fBRealNumber\fP\&.
.PP
Referenced by HyperbolicArcCosecantNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::HypArcCosine ()\fC [pure virtual]\fP"

.PP
Implemented in \fBComplexNumber\fP, and \fBRealNumber\fP\&.
.PP
Referenced by HyperbolicArccosineNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::HypArcCotangent ()\fC [pure virtual]\fP"

.PP
Implemented in \fBComplexNumber\fP, and \fBRealNumber\fP\&.
.PP
Referenced by HyperbolicArcCotangentNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::HypArcSecant ()\fC [pure virtual]\fP"

.PP
Implemented in \fBComplexNumber\fP, and \fBRealNumber\fP\&.
.PP
Referenced by HyperbolicArcSecantNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::HypArcSine ()\fC [pure virtual]\fP"

.PP
Implemented in \fBComplexNumber\fP, and \fBRealNumber\fP\&.
.PP
Referenced by HyperbolicArcsineNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::HypArcTangent ()\fC [pure virtual]\fP"

.PP
Implemented in \fBComplexNumber\fP, and \fBRealNumber\fP\&.
.PP
Referenced by HyperbolicArctangentNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::HypCosecant ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by HyperbolicCosecantNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::HypCosine ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by HyperbolicCosineNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::HypCotangent ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by HyperbolicCotangentNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::HypSecant ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by HyperbolicSecantNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::HypSine ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by HyperbolicSineNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::HypTangent ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by HyperbolicTangentNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Log ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by LnRootNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Log10 ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by LogNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Log2 ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by BinaryLogNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Mul (\fBNumber\fP * other)\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by MultiplicationNode::Evaluate(), and RealNumber::Mul()\&.
.SS "virtual \fBbool\fP Number::PureComplexValue ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by Optimizer::ReduceValueNodes()\&.
.SS "virtual \fBNumber\fP* Number::Raise (\fBNumber\fP * exponent)\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by PowerNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Reciprocal ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by RealNumber::Div()\&.
.SS "virtual \fBNumber\fP* Number::Round ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by RoundNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Secant ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by SecantNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Signum ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by SignumNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Sine ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by SineNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::SquareRoot ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by SquareRootNode::Evaluate(), and RealNumber::SquareRoot()\&.
.SS "virtual \fBNumber\fP* Number::Sub (\fBNumber\fP * other)\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by SubtractionNode::Evaluate(), and Optimizer::ReduceValueNodes()\&.
.SS "virtual \fBNumber\fP* Number::Tangent ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by TangentNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Trunc ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by TruncNode::Evaluate()\&.
.SS "virtual \fBNumber\fP* Number::Unary ()\fC [pure virtual]\fP"

.PP
Implemented in \fBRealNumber\fP, and \fBComplexNumber\fP\&.
.PP
Referenced by UnaryNode::Evaluate(), Optimizer::ReduceUnaryNodes(), and RealNumber::Sub()\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "friend struct \fBComplexNumber\fP\fC [friend]\fP"

.PP
Definition at line 111 of file numb\&.h\&.
.SS "friend class \fBDecimalSystem\fP\fC [friend]\fP"

.PP
Definition at line 109 of file numb\&.h\&.
.SS "friend class \fBPositionalNumeralSystem\fP\fC [friend]\fP"

.PP
Definition at line 108 of file numb\&.h\&.
.SS "friend struct \fBRealNumber\fP\fC [friend]\fP"

.PP
Definition at line 110 of file numb\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBNumberSystem\fP Number::system\fC [protected]\fP"

.PP
Definition at line 114 of file numb\&.h\&.
.PP
Referenced by ComplexNumber::Add(), RealNumber::Add(), ComplexNumber::Div(), RealNumber::Div(), PositionalNumeralSystem::GetText(), DecimalSystem::GetText(), ComplexNumber::Mul(), RealNumber::Mul(), Number(), ComplexNumber::Raise(), RealNumber::Raise(), ComplexNumber::Sub(), and RealNumber::Sub()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for amath from the source code\&.
