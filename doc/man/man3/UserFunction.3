.TH "UserFunction" 3 "Tue Jan 24 2017" "Version 1.6.2" "amath" \" -*- nroff -*-
.ad l
.nh
.SH NAME
UserFunction \- A user defined function\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <functions\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBUserFunction\fP (const char *\fBname\fP, const char *\fBvariable\fP, \fBExpressionNode\fP *\fBexpression\fP)"
.br
.ti -1c
.RI "\fBUserFunction\fP (const char *\fBname\fP)"
.br
.ti -1c
.RI "\fB~UserFunction\fP ()"
.br
.ti -1c
.RI "char * \fBGetName\fP ()"
.br
.ti -1c
.RI "char * \fBGetDefitionName\fP ()"
.br
.ti -1c
.RI "char * \fBGetDefitionText\fP ()"
.br
.ti -1c
.RI "\fBVariable\fP * \fBGetVariable\fP ()"
.br
.ti -1c
.RI "\fBVariable\fP * \fBCreateVariable\fP (const char *\fBname\fP)"
.br
.ti -1c
.RI "\fBExpressionNode\fP * \fBGetExpression\fP ()"
.br
.ti -1c
.RI "void \fBSetExpression\fP (\fBExpressionNode\fP *\fBexpression\fP)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBUserFunction\fP * \fBNext\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBInitializeTexts\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "char * \fBname\fP"
.br
.ti -1c
.RI "\fBVariable\fP * \fBvariable\fP"
.br
.ti -1c
.RI "\fBExpressionNode\fP * \fBexpression\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBchainDelete\fP"
.br
.ti -1c
.RI "\fBCharBuffer\fP * \fBdefname\fP"
.br
.ti -1c
.RI "\fBCharBuffer\fP * \fBdefition\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "\fBbool\fP \fBFunctionList::Delete\fP (const char *\fBname\fP, const char *argument)"
.br
.in -1c
.SH "Detailed Description"
.PP 
A user defined function\&. 
.PP
Definition at line 105 of file functions\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "UserFunction::UserFunction (const char * name, const char * variable, \fBExpressionNode\fP * expression)"

.PP
Definition at line 106 of file functions\&.cpp\&.
.PP
References AllocAndCopy(), chainDelete, CharBuffer::CharBuffer(), defition, defname, expression, InitializeTexts(), name, Next, Variable::Variable(), and variable\&.
.PP
.nf
107 {
108     AllocAndCopy(&this->name, name);
109     this->variable = new Variable(variable);
110     this->expression = expression;
111     this->Next = NOMEM;
112 
113     defname = new CharBuffer();
114     defition = new CharBuffer();
115     InitializeTexts();
116 
117     chainDelete = true;
118 }
.fi
.SS "UserFunction::UserFunction (const char * name)"

.PP
Definition at line 120 of file functions\&.cpp\&.
.PP
References AllocAndCopy(), chainDelete, CharBuffer::CharBuffer(), defition, defname, expression, name, Next, and variable\&.
.PP
Referenced by FunctionList::GetFunctionDef()\&.
.PP
.nf
121 {
122     AllocAndCopy(&this->name, name);
123     this->variable = NOMEM;
124     this->expression = NOMEM;
125     this->Next = NOMEM;
126 
127     defname = new CharBuffer();
128     defition = new CharBuffer();
129 
130     chainDelete = true;
131 }
.fi
.SS "UserFunction::~UserFunction ()"

.PP
Definition at line 133 of file functions\&.cpp\&.
.PP
References chainDelete, defition, defname, expression, name, Next, and variable\&.
.PP
.nf
134 {
135     delete [] name;
136     delete defname;
137     delete defition;
138 
139     if (variable != NOMEM) {
140         delete variable;
141     }
142 
143     if (expression != NOMEM) {
144         delete expression;
145     }
146 
147     if (chainDelete && Next != NOMEM) {
148         delete Next;
149     }
150 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "\fBVariable\fP * UserFunction::CreateVariable (const char * name)"

.PP
Definition at line 186 of file functions\&.cpp\&.
.PP
References InitializeTexts(), Variable::Variable(), and variable\&.
.PP
Referenced by Parser::ParseFunctionDef()\&.
.PP
.nf
187 {
188     if(variable != NOMEM) {
189         delete variable;
190     }
191 
192     variable = new Variable(name);
193     InitializeTexts();
194 
195     return variable;
196 }
.fi
.SS "char * UserFunction::GetDefitionName ()"

.PP
Definition at line 171 of file functions\&.cpp\&.
.PP
References defname, and CharBuffer::GetString()\&.
.PP
.nf
172 {
173     return defname->GetString();
174 }
.fi
.SS "char * UserFunction::GetDefitionText ()"

.PP
Definition at line 176 of file functions\&.cpp\&.
.PP
References defition, and CharBuffer::GetString()\&.
.PP
.nf
177 {
178     return defition->GetString();
179 }
.fi
.SS "\fBExpressionNode\fP * UserFunction::GetExpression ()"

.PP
Definition at line 198 of file functions\&.cpp\&.
.PP
References expression\&.
.PP
Referenced by UserFunctionNode::Evaluate(), Grid::FunctionValue(), UserFunctionNode::GetNext(), and FunctionList::ListContent()\&.
.PP
.nf
199 {
200     return expression;
201 }
.fi
.SS "char * UserFunction::GetName ()"

.PP
Definition at line 166 of file functions\&.cpp\&.
.PP
References name\&.
.PP
Referenced by FunctionList::Delete(), FunctionList::GetFunctionCall(), FunctionList::GetFunctionDef(), UserFunctionNode::GetNodeText(), and FunctionList::ListContent()\&.
.PP
.nf
167 {
168     return name;
169 }
.fi
.SS "\fBVariable\fP * UserFunction::GetVariable ()"

.PP
Definition at line 181 of file functions\&.cpp\&.
.PP
References variable\&.
.PP
Referenced by FunctionList::Delete(), UserFunctionNode::Evaluate(), Grid::FunctionValue(), FunctionList::GetFunctionDef(), and FunctionList::ListContent()\&.
.PP
.nf
182 {
183     return variable;
184 }
.fi
.SS "void UserFunction::InitializeTexts ()\fC [private]\fP"

.PP
Definition at line 152 of file functions\&.cpp\&.
.PP
References CharBuffer::Append(), defition, defname, CharBuffer::Empty(), expression, Variable::GetName(), CharBuffer::GetString(), ExpressionNode::GetText(), name, and variable\&.
.PP
Referenced by CreateVariable(), SetExpression(), and UserFunction()\&.
.PP
.nf
153 {
154     defname->Empty();
155     defname->Append(name);
156     defname->Append('(');
157     defname->Append(variable != NOMEM ? variable->GetName() : EMPTYSTRING);
158     defname->Append(')');
159 
160     defition->Empty();
161     defition->Append(defname->GetString());
162     defition->Append('=');
163     defition->Append(expression != NOMEM ? expression->GetText() : EMPTYSTRING);
164 }
.fi
.SS "void UserFunction::SetExpression (\fBExpressionNode\fP * expression)"

.PP
Definition at line 203 of file functions\&.cpp\&.
.PP
References expression, and InitializeTexts()\&.
.PP
Referenced by Parser::ParseFunctionDef()\&.
.PP
.nf
204 {
205     delete this->expression;
206     this->expression = expression;
207     InitializeTexts();
208 }
.fi
.SH "Friends And Related Function Documentation"
.PP 
.SS "\fBbool\fP \fBFunctionList::Delete\fP (const char * name, const char * argument)\fC [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBbool\fP UserFunction::chainDelete\fC [private]\fP"

.PP
Definition at line 125 of file functions\&.h\&.
.PP
Referenced by FunctionList::Delete(), UserFunction(), and ~UserFunction()\&.
.SS "\fBCharBuffer\fP* UserFunction::defition\fC [private]\fP"

.PP
Definition at line 130 of file functions\&.h\&.
.PP
Referenced by GetDefitionText(), InitializeTexts(), UserFunction(), and ~UserFunction()\&.
.SS "\fBCharBuffer\fP* UserFunction::defname\fC [private]\fP"

.PP
Definition at line 129 of file functions\&.h\&.
.PP
Referenced by GetDefitionName(), InitializeTexts(), UserFunction(), and ~UserFunction()\&.
.SS "\fBExpressionNode\fP* UserFunction::expression\fC [private]\fP"

.PP
Definition at line 124 of file functions\&.h\&.
.PP
Referenced by GetExpression(), InitializeTexts(), SetExpression(), UserFunction(), and ~UserFunction()\&.
.SS "char* UserFunction::name\fC [private]\fP"

.PP
Definition at line 122 of file functions\&.h\&.
.PP
Referenced by GetName(), InitializeTexts(), UserFunction(), and ~UserFunction()\&.
.SS "\fBUserFunction\fP* UserFunction::Next"

.PP
Definition at line 111 of file functions\&.h\&.
.PP
Referenced by FunctionList::Delete(), FunctionList::GetFunctionCall(), FunctionList::GetFunctionDef(), FunctionList::ListContent(), UserFunction(), and ~UserFunction()\&.
.SS "\fBVariable\fP* UserFunction::variable\fC [private]\fP"

.PP
Definition at line 123 of file functions\&.h\&.
.PP
Referenced by CreateVariable(), GetVariable(), InitializeTexts(), UserFunction(), and ~UserFunction()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for amath from the source code\&.
