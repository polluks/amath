.TH "PowerNode" 3 "Tue Jan 24 2017" "Version 1.6.2" "amath" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PowerNode \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <operators\&.h>\fP
.PP
Inherits \fBNumericOperator\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPowerNode\fP (\fBExpressionNode\fP *\fBleft\fP, \fBExpressionNode\fP *\fBright\fP)"
.br
.ti -1c
.RI "int \fBGetPrecedence\fP ()"
.br
.ti -1c
.RI "\fBNumber\fP * \fBEvaluate\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "char * \fBGetNodeText\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 138 of file operators\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "PowerNode::PowerNode (\fBExpressionNode\fP * left, \fBExpressionNode\fP * right)"

.PP
Definition at line 403 of file operators\&.cpp\&.
.PP
References NumericOperator::NumericOperator()\&.
.PP
Referenced by Parser::ParsePower()\&.
.PP
.nf
403                                                                :
404     NumericOperator(left, right) { }
.fi
.SH "Member Function Documentation"
.PP 
.SS "\fBNumber\fP * PowerNode::Evaluate ()\fC [virtual]\fP"

.PP
Implements \fBExpressionNode\fP\&.
.PP
Definition at line 411 of file operators\&.cpp\&.
.PP
References ExpressionNode::Evaluate(), NumericOperator::left, Number::Raise(), ExpressionNode::result, and NumericOperator::right\&.
.PP
.nf
412 {
413     Number* exponent = right->Evaluate();
414     result = left->Evaluate()->Raise(exponent);
415     return result;
416 }
.fi
.SS "char * PowerNode::GetNodeText ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Implements \fBExpressionNode\fP\&.
.PP
Definition at line 418 of file operators\&.cpp\&.
.PP
.nf
419 {
420     return (char*)"^";
421 }
.fi
.SS "int PowerNode::GetPrecedence ()\fC [virtual]\fP"

.PP
Implements \fBExpressionNode\fP\&.
.PP
Definition at line 406 of file operators\&.cpp\&.
.PP
.nf
407 {
408     return 4;
409 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for amath from the source code\&.
