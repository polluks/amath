{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\info 
{\title {\comment amath  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.6.0 \par
}}amath}
{\comment Generated byDoxgyen. }
{\creatim \yr2017\mo1\dy20\hr22\min14\sec46}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt amath}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.6.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Fri Jan 20 2017 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Simple command line calculator\par \pard\plain 
{\tc \v Simple command line calculator}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Introduction
\par}
{\tc\tcl2 \v Introduction}
A mathematical calculator capable of evaluating arithmetic expressions. Main features include:{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Case sensitive command line interface\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Native IEEE 754 with 15 significant digits\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Calculations with real and complex numbers\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Variables and user defined functions\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Logarithmic and exponential functions\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Trigonometric and hyperbolic functions\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Mathematical constants and rounding functions\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Disk functions to load, save and view content\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Comprehensive and easy to use built-in help\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Freely distributable sources (BSD {\b License})\par}
{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Installation
\par}
{\tc\tcl3 \v Installation}
Install by copying the desired amath binary to C: or any other appropriate location.\par}
{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Usage
\par}
{\tc\tcl3 \v Usage}
amath supply 50 {\b Statements and functions} combined with 7 arithmetic operators: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     +     Mathematical addition.\par
    -     Mathematical subtraction.\par
    *     Mathematical multiplication.\par
    /     Mathematical division.\par
    ^     Mathematical exponentiation.\par
    =     Assignment of variable values.\par
    |     Absolute value of number.\par
}
\par
Do a calculation in shell (CLI mode): \par
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid amath 1.2+1.4 \par
}Get an interactive promt in shell: \par
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid amath shell \par
}Show version string: \par
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid amath version \par
}Open amath in its own window: \par
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid amath \par
}\par}
{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
License
\par}
{\tc\tcl3 \v License}
amath is open source. The main repository is located at gitlab:\par
 {\f2 https://gitlab.com/rnger/amath}\par}
{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
History
\par}
{\tc\tcl3 \v History}
A full {\b Release history} is available for amath. \par}
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Statements and functions{\tc \v Statements and functions}\par \pard\plain 
{\bkmkstart AAAAAAADGO}
{\bkmkend AAAAAAADGO}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Statements and functions
\par}
{\tc\tcl2 \v Statements and functions}
{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Statements
\par}
{\tc\tcl3 \v Statements}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid clear       Clear the console window.\par
def         Define function.\par
delete      Delete variable or function.\par
digits      Set number of significant digits.\par
eval        Evaluate arithmetic expression.\par
execute     Execute statements in a file.\par
functions   Show list of user defined functions.\par
help        Show basic help text.\par
list        Show the content of a directory.\par
show        Show the content of a file.\par
load        Load variable and functions from file.\par
save        Save variable and functions to file.\par
variables   Show list of variables.\par
version     Show version string.\par
exit        Exit program.\par
}
 \par}
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Base functions
\par}
{\tc\tcl3 \v Base functions}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid abs         Absolute value of number.\par
sgn         Mathematical signum function.\par
round       Round to nearest integer number.\par
trunc       Discard fraction part of number.\par
floor       Mathematical floor function.\par
ceil        Mathematical ceiling function.\par
sqrt        Square root function (exp 1/2).\par
cbrt        Cube root function (exp 1/3).\par
lb          Binary logarithm function (base 2).\par
ln          Natural logarithm function (base e).\par
lg          Common logarithm function (base 10).\par
}
 \par}
{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Trigonometric functions
\par}
{\tc\tcl3 \v Trigonometric functions}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid sin         Trigonometric sine function.\par
cos         Trigonometric cosine function.\par
tan         Trigonometric tangent function.\par
cot         Trigonometric cotangent function.\par
sec         Trigonometric secant function.\par
csc         Trigonometric cosecant function.\par
arcsin      Inverse trigonometric sine function.\par
arccos      Inverse trigonometric cosine function.\par
arctan      Inverse trigonometric tangent function.\par
arccot      Inverse trigonometric cotangent function.\par
arcsec      Inverse trigonometric secant function.\par
arccsc      Inverse trigonometric cosecant function.\par
}
 \par}
{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Hyperbolic functions
\par}
{\tc\tcl3 \v Hyperbolic functions}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid sinh        Hyperbolic sine function.\par
cosh        Hyperbolic cosine function.\par
tanh        Hyperbolic tangent function.\par
coth        Hyperbolic cotangent function.\par
sech        Hyperbolic secant function.\par
csch        Hyperbolic cosecant function.\par
arcsinh     Inverse hyperbolic sine function.\par
arccosh     Inverse hyperbolic cosine function.\par
arctanh     Inverse hyperbolic tangent function.\par
arccoth     Inverse hyperbolic cotangent function.\par
arcsech     Inverse hyperbolic secant function.\par
arccsch     Inverse hyperbolic cosecant function.\par
}
 \par}
{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Example script
\par}
{\tc\tcl3 \v Example script}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid round(1.5461);round(-1.5461);\par
ceil(43.5461);ceil(-43.5461);\par
floor(39.9531);floor(-39.9531);\par
trunc(23.827);trunc(-23.827);\par
sqrt(100);sqrt(52.23);\par
}
 \par}
{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Example script with functions
\par}
{\tc\tcl3 \v Example script with functions}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid f(x)=x*2+1;\par
g(y)=y^2+y*1.5+2;\par
a=2;b=3;c=a+b;\par
vars;funcs;\par
f(2.2);c+1.1;\par
}
 \par}
{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Example script with complex numbers
\par}
{\tc\tcl3 \v Example script with complex numbers}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid cos(1+2i);\par
sin(1+2i);\par
tan(1+2i);\par
coth(1+2i);\par
sech(1+2i);\par
csch(1+2i);\par
}
 \par}
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
License{\tc \v License}\par \pard\plain 
{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
License
\par}
{\tc\tcl2 \v License}
amath is using a permissive free software licenses.\par
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
BSD License
\par}
{\tc\tcl3 \v BSD License}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Copyright (c) 2015-2017 Carsten Sonne Larsen  {\f2 cs@innolan.dk}
All rights reserved.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
\par}
}\par}
{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Template
\par}
{\tc\tcl3 \v Template}
A template for The BSD 2-Clause License are available from the Open Source Initiative and Wikipidia\par
 {\f2 http://opensource.org/licenses/BSD-2-Clause}\par
 {\f2 http://en.wikipedia.org/wiki/BSD_licenses}\par
 \par}
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Release history{\tc \v Release history}\par \pard\plain 
{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Release history
\par}
{\tc\tcl2 \v Release history}
{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
v1.6.0 April 7 2016
\par}
{\tc\tcl3 \v v1.6.0 April 7 2016}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Complete internal restructure of source code.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed several minor bugs in calculation.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Support for Windows & Linux.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Custom memory handling.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Localization support.\par}
\par}
{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
1.5.4 March 04 2015
\par}
{\tc\tcl3 \v 1.5.4 March 04 2015}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed several bugs in output of significant digits.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed sign bug in addition of negative complex numbers.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed sign bug in inverse hyperbolic cosine of complex numbers.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed sign bug in inverse hyperbolic secant of complex numbers.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed calculation bug in division of real number with complex number.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed calculation bug in exponentiation with complex number.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Implemented reduction of unary sign in expressions.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Implemented reduction of complex numbers in expressions.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Implemented internal optimization of expression trees.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Miscellaneous internal code optimization.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Changed to Amiga hosted GCC compiler (ADE).\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Verified calculation through 192 test cases.\par}
\par}
{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
1.5.3 October 26 2014
\par}
{\tc\tcl3 \v 1.5.3 October 26 2014}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Changed iconed versions to run directly from Workbench.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Reconfigured builds to avoid erroneous calculations.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Removed broken support for numeral systems.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Switched to new floating output library.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Reintroduced 68020 FPU and 68030 version.\par}
\par}
{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
1.5.2 October 11 2014
\par}
{\tc\tcl3 \v 1.5.2 October 11 2014}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Modified character handling code to comply with licenses.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Modified complex math code to comply with licenses.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Modified code base to work with Kickstart 2.04.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Square root of negative numbers now yield correct result.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Implemented scientific notation of numbers.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Infinity is now shown in division with 0.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed bug in number code sometimes yielding 0.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Switched to Amiga memory allocation.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed out-of-memory bug.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Miscellaneous bug fixes.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Removed dead code.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Added icons.\par}
\par}
{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
1.5.1 September 28 2014
\par}
{\tc\tcl3 \v 1.5.1 September 28 2014}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Improved navigation with arrow keys.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Improved text and color compositions.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Implemented missing complex functions.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed bug in negative complex numbers.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed file I/O bug in shell mode.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed shell flush bug on AROS.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed clear console bug on AROS.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Miscellaneous minor bug fixes.\par}
\par}
{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
1.5 September 21 2014
\par}
{\tc\tcl3 \v 1.5 September 21 2014}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Calculation with complex numbers.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed command line version.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Miscellaneous bug fixed.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed spelling mistakes in help files.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Documentation including class diagrams in HTML format.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Scripts for porting and building the source.\par}
\par}
{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
1.4 August 24 2014
\par}
{\tc\tcl3 \v 1.4 August 24 2014}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
New math engine based on Sun Microsystems fdlibm (64 bit IEEE 754).\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Support for positional numeral systems including binary, octal and hexadecimal.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Added pure command line version (CLI) as addition to the stand-alone version.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Added statement to clear all in-memory variables and functions.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed bug causing console to close when entering an empty statement.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed bug causing application to hang when loading files with KS 2.0.4.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed accuracy bug when using pi and e.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Restructured and improved built-in help.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Added new 68030 and FPU versions.\par}
\par}
{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
1.3.2 August 11 2014
\par}
{\tc\tcl3 \v 1.3.2 August 11 2014}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed two severe bugs causing memory corruption.\par}
\par}
{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
1.3.1 August 08 2014
\par}
{\tc\tcl3 \v 1.3.1 August 08 2014}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AROS i386 version released.\par}
\par}
{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
1.3 August 06 2014
\par}
{\tc\tcl3 \v 1.3 August 06 2014}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
All trigonometric and hyperbolic functions are now supported.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Runs in console window. amath no longer depends on a shell.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Hardened code. amath is no longer a beta version.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Added support for disk based activities.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed bug in exponentiation operator.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Reverted back to clib math.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fixed a few memory leak bugs.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Optimized generated binaries.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Comments added in source code.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Improved error handling.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Improved built-in help.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Simplified license.\par}
\par}
{\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
1.2b July 21 2014
\par}
{\tc\tcl3 \v 1.2b July 21 2014}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Root functions added.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
User defined functions added.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Improved error handling.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Improved build-in help.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Binary support for additional processors.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Miscellaneous bug fixes.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Source files restructured.\par}
\par}
{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
1.1b July 13 2014
\par}
{\tc\tcl3 \v 1.1b July 13 2014}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Minor bug fixes.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Source code released.\par}
\par}
{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
1.0b July 11 2014
\par}
{\tc\tcl3 \v 1.0b July 11 2014}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
First public release. \par}
\par}
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
amathargs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
AnsiConoleEngine\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CharBuffer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
complex\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Evaluator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FilesystemBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDS \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
StandardFilesystem\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
functiondef\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FunctionList\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
GraphList\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
GraphWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Grid\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
helptextdef\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
identalias\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
identhelpdef\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ieee_float_shape_type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
keyworddef\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Language\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
AmigaLanguage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PosixLanguage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
StandardLanguage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Lexer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MemoryBlock\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MemoryList\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Number\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNM \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ComplexNumber\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RealNumber\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
NumeralSystem\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
PositionalNumeralSystem\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
DecimalSystem\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
operatordef\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Optimizer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Parser\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PreferencesBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUD \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
AmigaPreferences\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
StandardPreferences\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Program\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
AmigaProgram\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
StandardProgram\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TestProgram\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
StatementBlockElement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SyntaxNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ErrorNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpressionNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAP \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
AbsoluteNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FunctionNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFA \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
AbsoluteFunctionNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ArcCosecantNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ArcCosineNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ArcCotangentNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ArcSecantNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ArcSineNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ArcTangentNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BinaryLogNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CeilingNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CosecantNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CosineNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CotangentNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CubeRootNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FloorNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HyperbolicArcCosecantNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HyperbolicArccosineNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HyperbolicArcCotangentNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HyperbolicArcSecantNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HyperbolicArcsineNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HyperbolicArctangentNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACID \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HyperbolicCosecantNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HyperbolicCosineNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HyperbolicCotangentNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HyperbolicSecantNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HyperbolicSineNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HyperbolicTangentNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
LnRootNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACML \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
LogNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RoundNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SecantNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SignumNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SineNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SquareRootNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TangentNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TruncNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
UserFunctionNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
NumericOperator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQK \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
AdditionNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
AssignmentNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
DivisionNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MultiplicationNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PowerNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SubtractionNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
NumericValueNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQT \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ComplexiNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
EulersNumberNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PiNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
UnaryNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
VariableNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFW \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
InsVariableNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
StatementBlockNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
StatementNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAA \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ClearStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
DeleteStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
DigitsStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
DrawStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
EmptyStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
EvalStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExecuteStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExitStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FunctionDefinitionNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HelpStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
InputStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ListFunctionsStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ListStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ListVariablesStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
LoadStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MemoryStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
OutputStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PlotStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PrefsStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PromptStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SaveStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ShowStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SilentStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
VersionStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
TaskBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBH \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
StandardTask\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
tBigInt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
textdef\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
texttag\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
tFloatUnion32\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
tFloatUnion64\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ThreadBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDB \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ConsoleBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
StandardConsole\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
Token\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
UserFunction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Variable\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
VariableList\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b AbsoluteFunctionNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AbsoluteNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AdditionNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b amathargs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AmigaLanguage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AmigaPreferences} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AmigaProgram} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AnsiConoleEngine} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI console controller })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ArcCosecantNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ArcCosineNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ArcCotangentNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ArcSecantNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ArcSineNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ArcTangentNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AssignmentNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BinaryLogNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CeilingNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CharBuffer} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulate an character array which can be used as a string })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ClearStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the console window })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b complex} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ComplexiNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of the square root of -2 in a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ComplexNumber} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represent a complex number with 2 componts of 15 siginificant digits })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ConsoleBase} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating console logic })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CosecantNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CosineNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CotangentNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CubeRootNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DecimalSystem} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DeleteStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete variable or function })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DigitsStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set number of significant digits to show })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DivisionNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DrawStatement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmptyStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An empty statement })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ErrorNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an error message encapsulated in a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EulersNumberNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of Eulers number in a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EvalStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluate arithmetic expression })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Evaluator} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO: Comment })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExecuteStatement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExitStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exit program })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpressionNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all nodes related to mathematical expressions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FilesystemBase} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating file system calls })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FloorNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b functiondef} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function defitions of known mathematical functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FunctionDefinitionNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A syntax node able to define a user defined function })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FunctionList} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of user defined functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FunctionNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a mathematical function in a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GraphList} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of open graph windows })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GraphWindow} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Grid} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HelpStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logic related to the help statement })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b helptextdef} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HyperbolicArcCosecantNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HyperbolicArccosineNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HyperbolicArcCotangentNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HyperbolicArcSecantNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HyperbolicArcsineNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HyperbolicArctangentNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACID \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HyperbolicCosecantNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HyperbolicCosineNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HyperbolicCotangentNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HyperbolicSecantNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HyperbolicSineNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HyperbolicTangentNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b identalias} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b identhelpdef} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ieee_float_shape_type} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A union which permits us to convert between a float and a 32 bit int })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InputStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change numeral input system })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InsVariableNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of last result in a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b keyworddef} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Character representation of keyword tied with its symbol })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Language} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Lexer} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates an lexical analyzer. Provides token for the parser })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListFunctionsStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A syntax node able to list all user defined functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListStatement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListVariablesStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Statement to list all user defined variables })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LnRootNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACML \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LoadStatement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LogNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MemoryBlock} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MemoryList} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MemoryStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Show memory usage })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MultiplicationNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Number} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NumeralSystem} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all numeral systems })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NumericOperator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NumericValueNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of a numeric value in a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b operatordef} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Character representation of operator tied with its symbol })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Optimizer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OutputStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change numeral output system })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Parser} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates a recursive descent parser })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PiNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of PI in a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PlotStatement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PositionalNumeralSystem} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all numeral systems with a positional notation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PosixLanguage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PowerNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PreferencesBase} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PrefsStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load or save preferences })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Program} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Master control class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PromptStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set prompt string })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RealNumber} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represent a real number with 15 siginificant digits })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RoundNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A rounding function in a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SaveStatement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SecantNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ShowStatement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SignumNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A signum function in a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SilentStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mutes the output of another statement })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SineNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SquareRootNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StandardConsole} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates the IO of a console using Standard C and termios })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StandardFilesystem} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StandardLanguage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StandardPreferences} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StandardProgram} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StandardTask} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates calls to POSIX task })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StatementBlockElement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to create a linked list of statements })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StatementBlockNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A sequence of statements in a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StatementNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all statements in a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SubtractionNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SyntaxNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all nodes in a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TangentNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TaskBase} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating a system thread })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b tBigInt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TestProgram} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test control class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b textdef} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b texttag} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b tFloatUnion32} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b tFloatUnion64} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ThreadBase} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating runable component })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Token} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tokens are created by the Lexical Analyzer and provides an intermediate state for input consumed by the parser })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TruncNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A truncation function in a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UnaryNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UserFunction} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user defined function })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UserFunctionNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An expression node able to compute a function value })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Variable} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user defined variable })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b VariableList} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of user defined variables })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b VariableNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of a variable in a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b VersionStatement} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Show version string })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b app/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/lib/{\b aengine.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/lib/{\b aengine.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI Conole Engine })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/lib/{\b charbuf.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/lib/{\b charbuf.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
String and character array logic })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/lib/{\b cplex.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/lib/{\b cplex.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classbased handling of complex numbers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/lib/{\b fgrid.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/lib/{\b fgrid.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function grid used with graphs })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/lib/{\b ntext.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/lib/{\b ntext.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Text to numbers handling })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/lib/{\b numb.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classbase handling of numbers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/lib/{\b real.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/lib/{\b real.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classbased handling of complex numbers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/localize/{\b help.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Help texts for statement })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/localize/{\b ialias.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/localize/{\b ident.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Help texts for built-in functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/localize/{\b kword.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Keywords used by lexer })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/localize/{\b lex.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Lexer} defitions used by other classes })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/localize/{\b start.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start message and version text })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/localize/{\b tags.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/localize/{\b text.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static texts in amath })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b evaluator.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b evaluator.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO: Comment })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b functiondefs.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function defitions for math logic })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b functions.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b functions.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b graphlist.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b graphlist.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory maintainance for function of graphs })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b lexer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b lexer.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to {\b Lexer} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b nodes.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b nodes.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Top nodes in syntax trees })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b operators.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b operators.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to arithmetic operators })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b optimizer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b optimizer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b parser.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b parser.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to {\b Parser} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b statements.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b statements.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General statement nodes })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b token.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b token.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to {\b Token} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b values.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b values.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to numbers and values })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b viewer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/main/{\b viewer.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug class to view a syntax tree })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b console.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b console.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic console system calls })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b console_amiga.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b console_amiga.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b console_stdc.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b console_stdc.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b filesystem.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic file system calls })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b filesystem_amiga.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b filesystem_amiga.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b filesystem_stdc.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b filesystem_stdc.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b graph.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b graph.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logic related to graph of functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b graph_amiga.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b graph_amiga.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAID \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b graph_gtk.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b graph_gtk.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b language.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b language.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b language_amiga.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b language_amiga.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b language_posix.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b language_posix.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b language_stdc.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b language_stdc.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b preferences.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b preferences.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b preferences_amiga.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b preferences_amiga.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b preferences_stdc.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b preferences_stdc.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b proc_amiga.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b proc_amiga.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b program.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b program.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Program} flow and global states })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b program_amiga.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b program_amiga.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b program_stdc.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b program_stdc.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b program_test.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b program_test.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tests for arithmetic logic })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b task.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic task/process logic })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b task_amiga.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b task_amiga.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b task_stdc.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b task_stdc.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b window_amiga.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/{\b window_amiga.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/base/{\b io.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/base/{\b io.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System dependent I/O })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b app/system/base/{\b thread.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic thread logic })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/{\b clib.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C functions for manipulating strings and memory })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/{\b complex.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions in math library for handling complex numbers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/{\b doc.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Documentation in doxygen format })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/{\b dprint.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Format defitions used in the Dragon4 library })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/{\b dstandard.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type defitions for the Dragon4 library })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/{\b math.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions in math library for handling real numbers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/{\b mem.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/{\b platform.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/clib/{\b alloccpy.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/clib/{\b mem.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/clib/{\b memcpy.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/clib/{\b memset.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/clib/{\b strcmp.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/clib/{\b strlen.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/clib/{\b untag.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b cacos.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b cacosh.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b cacot.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b cacoth.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b cacsc.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b cacsch.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b casec.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b casech.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b casin.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b casinh.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b catan.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b catanh.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b ccbrt.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b ccos.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b ccosh.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b ccot.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b ccoth.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b ccsc.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b ccsch.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b cexp.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b clog.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b clog10.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b clogb.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b cpow.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b csec.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b csech.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b csgn.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b csin.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b csinh.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b csqrt.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b ctan.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b ctanh.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b prim.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/cplex/{\b prim.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/dconv/{\b dmath.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/dconv/{\b dmath.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Math used in the Dragon4 library })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/dconv/{\b dprint.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/dconv/{\b dragon4.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/dconv/{\b dragon4.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert floating point format to a decimal number in string format })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b acos.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b acosh.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b asin.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b asinh.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b atan.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b atan2.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b atanh.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b cbrt.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b ceil.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b copysign.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b cos.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b cosh.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b erf.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b exp.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b expm1.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b fabs.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b finite.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b floor.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b fmod.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b frexp.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b hypot.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b isnan.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b kcos.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b kremp2.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b ksin.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b kstandard.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b ktan.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b log.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b log10.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b log1p.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b matherr.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b modf.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b nextafter.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b pow.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b prim.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b remp2.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b rint.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b round.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b scalbn.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b sin.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b sinh.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b sqrt.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b tan.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b tanh.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/real/{\b trunc.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AbsoluteFunctionNode Class Reference\par \pard\plain 
{\tc\tcl2 \v AbsoluteFunctionNode}
{\xe \v AbsoluteFunctionNode}
{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for AbsoluteFunctionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAbsoluteFunctionNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for AbsoluteFunctionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAbsoluteFunctionNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AbsoluteFunctionNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 178 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AbsoluteFunctionNode\:AbsoluteFunctionNode}
{\xe \v AbsoluteFunctionNode\:AbsoluteFunctionNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AbsoluteFunctionNode::AbsoluteFunctionNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 491 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   491                                                                      :\par
  492     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAbsoluteFunctionNode_adcc843140de3a7435546a293b9b5b882_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAbsoluteFunctionNode_adcc843140de3a7435546a293b9b5b882_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:AbsoluteFunctionNode}
{\xe \v AbsoluteFunctionNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * AbsoluteFunctionNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 494 of file functions.cpp.}\par
{
References AbsoluteFunctionNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   495 \{\par
  496     return new AbsoluteFunctionNode(expression);\par
  497 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAbsoluteFunctionNode_a9da4bc82d15f41aaf9adde83974af83d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:AbsoluteFunctionNode}
{\xe \v AbsoluteFunctionNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * AbsoluteFunctionNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 499 of file functions.cpp.}\par
{
References Number::Absolute(), ExpressionNode::Evaluate(), FunctionNode::expression, and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   500 \{\par
  501     result = expression->Evaluate()->Absolute();\par
  502     return result;\par
  503 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAbsoluteFunctionNode_addd9710c60598aca391822e25d67ab33_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:AbsoluteFunctionNode}
{\xe \v AbsoluteFunctionNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * AbsoluteFunctionNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 505 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   506 \{\par
  507     return (char*)"abs";\par
  508 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AbsoluteNode Class Reference\par \pard\plain 
{\tc\tcl2 \v AbsoluteNode}
{\xe \v AbsoluteNode}
{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
\par
{
{\f2 #include <operators.h>}}\par
Inheritance diagram for AbsoluteNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAbsoluteNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for AbsoluteNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAbsoluteNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AbsoluteNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~AbsoluteNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetText} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b GetNext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Attach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Detach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Replace} ({\b SyntaxNode} *n, {\b SyntaxNode} *x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b expression}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 60 of file operators.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AbsoluteNode\:AbsoluteNode}
{\xe \v AbsoluteNode\:AbsoluteNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AbsoluteNode::AbsoluteNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file operators.cpp.}\par
{
References expression, and ExpressionNode::ExpressionNode().}\par
{
Referenced by Parser::ParseAtomic().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   125                                                      :\par
  126     ExpressionNode(), expression(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAbsoluteNode_af1206a7293f334c1d544cafe95af3ba5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAbsoluteNode_af1206a7293f334c1d544cafe95af3ba5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~AbsoluteNode\:AbsoluteNode}
{\xe \v AbsoluteNode\:~AbsoluteNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AbsoluteNode::~AbsoluteNode ()}}
\par
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 128 of file operators.cpp.}\par
{
References expression.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   129 \{\par
  130     if (expression != NOMEM) \{\par
  131         delete expression;\par
  132     \}\par
  133 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Attach\:AbsoluteNode}
{\xe \v AbsoluteNode\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AbsoluteNode::Attach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 175 of file operators.cpp.}\par
{
References expression, and SyntaxNode::SetParent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   176 \{\par
  177     if (expression == NOMEM) \{\par
  178         expression = (ExpressionNode*)node;\par
  179         node->SetParent(this);\par
  180     \}\par
  181 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAbsoluteNode_a4f947588881076306bf79f69145713b7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Detach\:AbsoluteNode}
{\xe \v AbsoluteNode\:Detach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AbsoluteNode::Detach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 183 of file operators.cpp.}\par
{
References expression.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   184 \{\par
  185     if (expression == node) \{\par
  186         expression = NOMEM;\par
  187     \}\par
  188 \}\par
}
}
{\xe \v Evaluate\:AbsoluteNode}
{\xe \v AbsoluteNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * AbsoluteNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 154 of file operators.cpp.}\par
{
References Number::Absolute(), ExpressionNode::Evaluate(), expression, and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   155 \{\par
  156     result = expression->Evaluate()->Absolute();\par
  157     return result;\par
  158 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAbsoluteNode_a35e012fdac8bff4c5252021254f07cbe_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNext\:AbsoluteNode}
{\xe \v AbsoluteNode\:GetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * AbsoluteNode::GetNext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 165 of file operators.cpp.}\par
{
References expression, and SyntaxNode::iterator.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   166 \{\par
  167     if (iterator == NOMEM) \{\par
  168         iterator = expression;\par
  169         return iterator;\par
  170     \}\par
  171 \par
  172     return NOMEM;\par
  173 \}\par
}
}
{\xe \v GetNodeText\:AbsoluteNode}
{\xe \v AbsoluteNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * AbsoluteNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 160 of file operators.cpp.}\par
{
Referenced by GetText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   161 \{\par
  162     return (char*)"|";\par
  163 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAbsoluteNode_ae5e2148cb9fedaee9137d3c124399c76_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetPrecedence\:AbsoluteNode}
{\xe \v AbsoluteNode\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AbsoluteNode::GetPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 149 of file operators.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   150 \{\par
  151     return 8;\par
  152 \}\par
}
}
{\xe \v GetText\:AbsoluteNode}
{\xe \v AbsoluteNode\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * AbsoluteNode::GetText (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 135 of file operators.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::Empty(), CharBuffer::EnsureSize(), expression, GetNodeText(), CharBuffer::GetString(), ExpressionNode::GetText(), SyntaxNode::output, and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   136 \{\par
  137     const char *expText = expression->GetText();\par
  138     const char *nodeText = GetNodeText();\par
  139 \par
  140     output->Empty();\par
  141     output->EnsureSize(StrLen(expText) + StrLen(nodeText) * 2 + 1);\par
  142     output->Append(nodeText);\par
  143     output->Append(expText);\par
  144     output->Append(nodeText);\par
  145 \par
  146     return output->GetString();\par
  147 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAbsoluteNode_ada1094b5e5ed6033f193ac151058c364_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Replace\:AbsoluteNode}
{\xe \v AbsoluteNode\:Replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AbsoluteNode::Replace ({\b SyntaxNode} *  {\i n}, {\b SyntaxNode} *  {\i x}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 190 of file operators.cpp.}\par
{
References expression.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   191 \{\par
  192     if (expression == n) \{\par
  193         delete expression;\par
  194         expression = (ExpressionNode*)x;\par
  195     \}\par
  196 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v expression\:AbsoluteNode}
{\xe \v AbsoluteNode\:expression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode}* AbsoluteNode::expression{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file operators.h.}\par
{
Referenced by AbsoluteNode(), Attach(), Detach(), Evaluate(), GetNext(), GetText(), Replace(), and ~AbsoluteNode().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AdditionNode Class Reference\par \pard\plain 
{\tc\tcl2 \v AdditionNode}
{\xe \v AdditionNode}
{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
\par
{
{\f2 #include <operators.h>}}\par
Inheritance diagram for AdditionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAdditionNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for AdditionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAdditionNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AdditionNode} ({\b ExpressionNode} *{\b left}, {\b ExpressionNode} *{\b right})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ReductionType} {\b GetReductionType} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 96 of file operators.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AdditionNode\:AdditionNode}
{\xe \v AdditionNode\:AdditionNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AdditionNode::AdditionNode ({\b ExpressionNode} *  {\i left}, {\b ExpressionNode} *  {\i right})}}
\par
{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 301 of file operators.cpp.}\par
{
References NumericOperator::NumericOperator().}\par
{
Referenced by Parser::ParseAddSubstract().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   301                                                                      :\par
  302     NumericOperator(left, right) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAdditionNode_ad887731026da63e83069e3c5a282b02d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAdditionNode_ad887731026da63e83069e3c5a282b02d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Evaluate\:AdditionNode}
{\xe \v AdditionNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * AdditionNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 314 of file operators.cpp.}\par
{
References Number::Add(), ExpressionNode::Evaluate(), NumericOperator::left, ExpressionNode::result, and NumericOperator::right.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   315 \{\par
  316     result = left->Evaluate()->Add(right->Evaluate());\par
  317     return result;\par
  318 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAdditionNode_a670d80d50ea6f8d1e38855de7130a503_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:AdditionNode}
{\xe \v AdditionNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * AdditionNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 320 of file operators.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   321 \{\par
  322     return (char*)"+";\par
  323 \}\par
}
}
{\xe \v GetPrecedence\:AdditionNode}
{\xe \v AdditionNode\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AdditionNode::GetPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 309 of file operators.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   310 \{\par
  311     return 2;\par
  312 \}\par
}
}
{\xe \v GetReductionType\:AdditionNode}
{\xe \v AdditionNode\:GetReductionType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ReductionType} AdditionNode::GetReductionType (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 304 of file operators.cpp.}\par
{
References compladdreduc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   305 \{\par
  306     return compladdreduc;\par
  307 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amathargs Struct Reference\par \pard\plain 
{\tc\tcl2 \v amathargs}
{\xe \v amathargs}
{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
\par
{
{\f2 #include <program_amiga.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b shell}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b input}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 31 of file program_amiga.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v input\:amathargs}
{\xe \v amathargs\:input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* amathargs::input}}
\par
{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file program_amiga.h.}\par
}
{\xe \v shell\:amathargs}
{\xe \v amathargs\:shell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long amathargs::shell}}
\par
{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file program_amiga.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b program_amiga.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AmigaLanguage Class Reference\par \pard\plain 
{\tc\tcl2 \v AmigaLanguage}
{\xe \v AmigaLanguage}
{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
\par
{
{\f2 #include <language_amiga.h>}}\par
Inheritance diagram for AmigaLanguage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAmigaLanguage__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for AmigaLanguage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAmigaLanguage__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AmigaLanguage} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~AmigaLanguage} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b GetFractionPoint} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsAlNum} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsAlpha} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsDigit} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsPunct} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsSpace} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsCntrl} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b StrIsEqualLoc} (const char *s1, const char *s2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Translate} ({\b textdef} *def)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Translate} ({\b helptextdef} *def)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Translate} ({\b identhelpdef} *def)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct Locale * {\b locale}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct Catalog * {\b helpcatalog}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct Catalog * {\b identcatalog}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct Catalog * {\b textcatalog}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct Catalog * {\b keywordcatalog}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 36 of file language_amiga.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AmigaLanguage\:AmigaLanguage}
{\xe \v AmigaLanguage\:AmigaLanguage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AmigaLanguage::AmigaLanguage ()}}
\par
{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~AmigaLanguage\:AmigaLanguage}
{\xe \v AmigaLanguage\:~AmigaLanguage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AmigaLanguage::~AmigaLanguage ()}}
\par
{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CharIsAlNum\:AmigaLanguage}
{\xe \v AmigaLanguage\:CharIsAlNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AmigaLanguage::CharIsAlNum (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v CharIsAlpha\:AmigaLanguage}
{\xe \v AmigaLanguage\:CharIsAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AmigaLanguage::CharIsAlpha (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v CharIsCntrl\:AmigaLanguage}
{\xe \v AmigaLanguage\:CharIsCntrl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AmigaLanguage::CharIsCntrl (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v CharIsDigit\:AmigaLanguage}
{\xe \v AmigaLanguage\:CharIsDigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AmigaLanguage::CharIsDigit (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v CharIsPunct\:AmigaLanguage}
{\xe \v AmigaLanguage\:CharIsPunct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AmigaLanguage::CharIsPunct (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v CharIsSpace\:AmigaLanguage}
{\xe \v AmigaLanguage\:CharIsSpace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AmigaLanguage::CharIsSpace (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetFractionPoint\:AmigaLanguage}
{\xe \v AmigaLanguage\:GetFractionPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char AmigaLanguage::GetFractionPoint (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v StrIsEqualLoc\:AmigaLanguage}
{\xe \v AmigaLanguage\:StrIsEqualLoc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AmigaLanguage::StrIsEqualLoc (const char *  {\i s1}, const char *  {\i s2}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Translate\:AmigaLanguage}
{\xe \v AmigaLanguage\:Translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* AmigaLanguage::Translate ({\b textdef} *  {\i def}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Translate\:AmigaLanguage}
{\xe \v AmigaLanguage\:Translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* AmigaLanguage::Translate ({\b helptextdef} *  {\i def}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Translate\:AmigaLanguage}
{\xe \v AmigaLanguage\:Translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* AmigaLanguage::Translate ({\b identhelpdef} *  {\i def}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v helpcatalog\:AmigaLanguage}
{\xe \v AmigaLanguage\:helpcatalog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct Catalog* AmigaLanguage::helpcatalog{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file language_amiga.h.}\par
}
{\xe \v identcatalog\:AmigaLanguage}
{\xe \v AmigaLanguage\:identcatalog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct Catalog* AmigaLanguage::identcatalog{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file language_amiga.h.}\par
}
{\xe \v keywordcatalog\:AmigaLanguage}
{\xe \v AmigaLanguage\:keywordcatalog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct Catalog* AmigaLanguage::keywordcatalog{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file language_amiga.h.}\par
}
{\xe \v locale\:AmigaLanguage}
{\xe \v AmigaLanguage\:locale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct Locale* AmigaLanguage::locale{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file language_amiga.h.}\par
}
{\xe \v textcatalog\:AmigaLanguage}
{\xe \v AmigaLanguage\:textcatalog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct Catalog* AmigaLanguage::textcatalog{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file language_amiga.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b language_amiga.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AmigaPreferences Class Reference\par \pard\plain 
{\tc\tcl2 \v AmigaPreferences}
{\xe \v AmigaPreferences}
{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
\par
{
{\f2 #include <preferences_amiga.h>}}\par
Inheritance diagram for AmigaPreferences:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAmigaPreferences__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for AmigaPreferences:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAmigaPreferences__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b Load} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b Keep} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b Save} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b SavePrefs} (const char *file)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 32 of file preferences_amiga.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Keep\:AmigaPreferences}
{\xe \v AmigaPreferences\:Keep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} AmigaPreferences::Keep (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b PreferencesBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Load\:AmigaPreferences}
{\xe \v AmigaPreferences\:Load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} AmigaPreferences::Load (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b PreferencesBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Save\:AmigaPreferences}
{\xe \v AmigaPreferences\:Save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} AmigaPreferences::Save (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b PreferencesBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v SavePrefs\:AmigaPreferences}
{\xe \v AmigaPreferences\:SavePrefs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AmigaPreferences::SavePrefs (const char *  {\i file}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b preferences_amiga.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AmigaProgram Class Reference\par \pard\plain 
{\tc\tcl2 \v AmigaProgram}
{\xe \v AmigaProgram}
{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
\par
{
{\f2 #include <program_amiga.h>}}\par
Inheritance diagram for AmigaProgram:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAmigaProgram__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for AmigaProgram:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAmigaProgram__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AmigaProgram} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~AmigaProgram} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Initialize} (int argc, char **argv)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Run} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Exit} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RDArgs * {\b rdargs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b amathargs} {\b args}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 36 of file program_amiga.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AmigaProgram\:AmigaProgram}
{\xe \v AmigaProgram\:AmigaProgram}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AmigaProgram::AmigaProgram ()}}
\par
{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~AmigaProgram\:AmigaProgram}
{\xe \v AmigaProgram\:~AmigaProgram}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual AmigaProgram::~AmigaProgram (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Exit\:AmigaProgram}
{\xe \v AmigaProgram\:Exit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void AmigaProgram::Exit (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Program} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Initialize\:AmigaProgram}
{\xe \v AmigaProgram\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void AmigaProgram::Initialize (int  {\i argc}, char **  {\i argv}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Program} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABND \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Run\:AmigaProgram}
{\xe \v AmigaProgram\:Run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void AmigaProgram::Run (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Program} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v args\:AmigaProgram}
{\xe \v AmigaProgram\:args}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b amathargs} AmigaProgram::args{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file program_amiga.h.}\par
}
{\xe \v rdargs\:AmigaProgram}
{\xe \v AmigaProgram\:rdargs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RDArgs* AmigaProgram::rdargs{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file program_amiga.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b program_amiga.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AnsiConoleEngine Class Reference\par \pard\plain 
{\tc\tcl2 \v AnsiConoleEngine}
{\xe \v AnsiConoleEngine}
{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI console controller. }}\par
{
{\f2 #include <aengine.h>}}\par
Collaboration diagram for AnsiConoleEngine:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AnsiConoleEngine} (const char *{\b prompt})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~AnsiConoleEngine} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b StartInput} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b InputDone} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b GetLine} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetPrompt} (const char *string)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b ProcessChar} (const unsigned char character)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CopyLine} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShowLast} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShowNext} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b prompt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char ** {\b lines}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} * {\b linebuf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b len}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b cursor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b endpos}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b curline}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b showline}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b lineswap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b editline}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b escmode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b csimode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b delmode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b linedone}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} * {\b out}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b maxLines} = 20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b lineSize} = 1024\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI console controller. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
More info on the ANSI console is available at Wikipedia: {\f2 http://en.wikipedia.org/wiki/ANSI_escape_code} \par
}{
Definition at line 44 of file aengine.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AnsiConoleEngine\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:AnsiConoleEngine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AnsiConoleEngine::AnsiConoleEngine (const char *  {\i prompt})}}
\par
{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file aengine.cpp.}\par
{
References AllocAndCopy(), CharBuffer::CharBuffer(), curline, editline, linebuf, lines, maxLines, out, and prompt.}\par
{
Referenced by StandardConsole::StandardConsole().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    32 \{\par
   33     AllocAndCopy(&this->prompt, prompt);\par
   34     linebuf = new CharBuffer();\par
   35     out = new CharBuffer();\par
   36 \par
   37     lines = new char*[maxLines];\par
   38 \par
   39     for (int i = 0; i < maxLines; i++) \{\par
   40         lines[i] = NOMEM;\par
   41     \}\par
   42 \par
   43     editline = NOMEM;\par
   44     curline = -1;\par
   45 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_aac394a191db46deb09a08522bdf72218_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_aac394a191db46deb09a08522bdf72218_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~AnsiConoleEngine\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:~AnsiConoleEngine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AnsiConoleEngine::~AnsiConoleEngine ()}}
\par
{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file aengine.cpp.}\par
{
References linebuf, lines, maxLines, out, and prompt.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48 \{\par
   49     for (int i = 0; i < maxLines; i++) \{\par
   50         if (lines[i] != NOMEM) \{\par
   51             delete [] lines[i];\par
   52         \}\par
   53     \}\par
   54 \par
   55     delete [] lines;\par
   56     delete linebuf;\par
   57     delete out;\par
   58     delete prompt;\par
   59 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CopyLine\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:CopyLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AnsiConoleEngine::CopyLine (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 214 of file aengine.cpp.}\par
{
References AllocAndCopy(), curline, editline, CharBuffer::GetString(), linebuf, lines, and maxLines.}\par
{
Referenced by ProcessChar().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   215 \{\par
  216     curline++;\par
  217 \par
  218     if (curline == maxLines) \{\par
  219         curline--;\par
  220 \par
  221         delete [] lines[0];\par
  222         for (int i = 0; i < maxLines - 1; i++) \{\par
  223             lines[i] = lines[i + 1];\par
  224         \}\par
  225     \}\par
  226 \par
  227     AllocAndCopy(&(lines[curline]), linebuf->GetString());\par
  228 \par
  229     if (editline != NOMEM) \{\par
  230         delete [] editline;\par
  231         editline = NOMEM;\par
  232     \}\par
  233 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_ae359fe52bf227c3db6edc42b8fc884f0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_ae359fe52bf227c3db6edc42b8fc884f0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetLine\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:GetLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * AnsiConoleEngine::GetLine ()}}
\par
{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 318 of file aengine.cpp.}\par
{
References CharBuffer::GetString(), and linebuf.}\par
{
Referenced by StandardConsole::ReadLine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   319 \{\par
  320     return linebuf->GetString();\par
  321 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_ae3b0bd4c66cb82f4ff939b45bd6e7446_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_ae3b0bd4c66cb82f4ff939b45bd6e7446_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v InputDone\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:InputDone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AnsiConoleEngine::InputDone ()}}
\par
{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 313 of file aengine.cpp.}\par
{
References linedone.}\par
{
Referenced by StandardConsole::ReadLine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   314 \{\par
  315     return linedone;\par
  316 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_ab136f725541608d36dedcd8ffa24e820_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ProcessChar\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:ProcessChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * AnsiConoleEngine::ProcessChar (const unsigned char  {\i character})}}
\par
{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 80 of file aengine.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::buf, CopyLine(), csimode, cursor, delmode, CharBuffer::Empty(), endpos, escmode, CharBuffer::GetString(), len, linebuf, linedone, out, CharBuffer::ptr, ShowLast(), and ShowNext().}\par
{
Referenced by StandardConsole::ReadLine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    81 \{\par
   82     unsigned char ch = character;\par
   83     out->Empty();\par
   84 \par
   85     /*\par
   86     // -------------- DEUG ------------------\par
   87     Number *d = new RealNumber((int)ch);\par
   88     NumeralSystem *ns = new DecimalSystem(0);\par
   89     const char *dtext = ns->GetText(d);\par
   90     StrCopy(out->buf, dtext);\par
   91     StrConcat(out->buf, SPACE);\par
   92     delete ns;\par
   93     delete d;\par
   94     return out->buf;\par
   95     // -------------- DEUG ------------------\par
   96     */\par
   97 \par
   98     if (len == 0) \{\par
   99         // TODO: double buffer\par
  100     \}\par
  101 \par
  102     bool processed = false;\par
  103 \par
  104     if (ch == 0) \{\par
  105         processed = true;\par
  106     \} else if (ch == 27) \{\par
  107         escmode = true;\par
  108         processed = true;\par
  109     \} else if (ch == 155 || (escmode && ch == 91)) \{\par
  110         csimode = true;\par
  111         processed = true;\par
  112     \} else if (csimode) \{\par
  113         switch (ch) \{\par
  114         case 65: // Arrow up (27 91 65)\par
  115             ShowLast();\par
  116             break;\par
  117         case 66: // Arrow down (27 91 66)\par
  118             ShowNext();\par
  119             break;\par
  120         case 67: // Arrow right (27 91 67)\par
  121             if (cursor != endpos) \{\par
  122                 cursor++;\par
  123                 out->Append(CURSORFORWARD);\par
  124             \}\par
  125             break;\par
  126         case 68: // Arrow left (27 91 68)\par
  127             if (cursor != linebuf->buf) \{\par
  128                 cursor--;\par
  129                 out->Append(CURSORBACKWARD);\par
  130             \}\par
  131             break;\par
  132         case 51: // DEL         27 91 51 126\par
  133             delmode = true;\par
  134         default:\par
  135             // F1          27 79 80\par
  136             // F2          27 79 81\par
  137             break;\par
  138         \}\par
  139 \par
  140         escmode = false;\par
  141         csimode = false;\par
  142         processed = true;\par
  143     \} else \{\par
  144         escmode = false;\par
  145         csimode = false;\par
  146     \}\par
  147 \par
  148     // Delete one character to the right\par
  149     if (delmode && ch == 126) \{\par
  150         if (cursor != endpos) \{\par
  151             char *i = cursor;\par
  152             do \{\par
  153                 *i = *(i + 1);\par
  154                 i++;\par
  155             \} while (i != endpos);\par
  156 \par
  157             len++;\par
  158             out->Append(DELETE1CHAR);\par
  159             endpos--;\par
  160             linebuf->ptr = endpos;\par
  161         \}\par
  162 \par
  163         processed = true;\par
  164         delmode = false;\par
  165     \}\par
  166 \par
  167     if (processed) \{\par
  168         return out->GetString();\par
  169     \}\par
  170 \par
  171     if (ch == 13 || ch == 10) \{\par
  172         out->Append(NEWLINE);\par
  173         linebuf->ptr = endpos;\par
  174         CopyLine();\par
  175         linedone = true;\par
  176     \} else if (cursor != linebuf->buf && (ch == 8 || ch == 127)) \{\par
  177         // Deleting in middle of line\par
  178         if (cursor != endpos) \{\par
  179             char *i = cursor - 1;\par
  180             do \{\par
  181                 *i = *(i + 1);\par
  182                 i++;\par
  183             \} while (i != endpos);\par
  184 \par
  185         \}\par
  186 \par
  187         len++;\par
  188         out->Append(CURSORBACKWARD);\par
  189         out->Append(DELETE1CHAR);\par
  190         cursor--;\par
  191         endpos--;\par
  192         linebuf->ptr = endpos;\par
  193     \} else if (ch >= 32 && ch <= 126) \{\par
  194         // Insert in middle of line\par
  195         if (cursor != endpos) \{\par
  196             char *i = endpos;\par
  197             do \{\par
  198                 *i = *(i - 1);\par
  199                 i--;\par
  200             \} while (i != cursor);\par
  201             out->Append(INSERT1CHAR);\par
  202         \}\par
  203 \par
  204         len--;\par
  205         out->Append(ch);\par
  206         *cursor++ = ch;\par
  207         endpos++;\par
  208         linebuf->ptr = endpos;\par
  209     \}\par
  210 \par
  211     return out->GetString();\par
  212 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_a7bb2dea88ddc5ae76643d2303fcc4bf1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_a7bb2dea88ddc5ae76643d2303fcc4bf1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetPrompt\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:SetPrompt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AnsiConoleEngine::SetPrompt (const char *  {\i string})}}
\par
{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 323 of file aengine.cpp.}\par
{
References AllocAndCopy(), and prompt.}\par
{
Referenced by StandardConsole::SetPrompt().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   324 \{\par
  325     delete prompt;\par
  326     AllocAndCopy(&prompt, string);\par
  327 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_a6c5dd4043aadc0b310f976eb10cbcd9f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_a6c5dd4043aadc0b310f976eb10cbcd9f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ShowLast\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:ShowLast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AnsiConoleEngine::ShowLast (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 235 of file aengine.cpp.}\par
{
References AllocAndCopy(), CharBuffer::Append(), CharBuffer::buf, curline, cursor, editline, CharBuffer::Empty(), endpos, CharBuffer::EnsureSize(), CharBuffer::GetString(), len, linebuf, lines, lineSize, lineswap, out, prompt, showline, and StrLen().}\par
{
Referenced by ProcessChar().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   236 \{\par
  237     if (curline == -1) \{\par
  238         return;\par
  239     \}\par
  240 \par
  241     if (!lineswap) \{\par
  242         AllocAndCopy(&editline, linebuf->GetString());\par
  243         lineswap = true;\par
  244         showline = curline + 1;\par
  245     \} else if (showline == curline + 1) \{\par
  246         delete editline;\par
  247         AllocAndCopy(&editline, linebuf->GetString());\par
  248     \}\par
  249 \par
  250     showline--;\par
  251     if (showline < 0) \{\par
  252         showline = 0;\par
  253     \}\par
  254 \par
  255     out->Empty();\par
  256     out->EnsureSize(\par
  257         StrLen(DELETELINE) +\par
  258         StrLen(prompt) +\par
  259         StrLen(lines[showline]) + 1);\par
  260 \par
  261     out->Append(DELETELINE);\par
  262     out->Append(prompt);\par
  263     out->Append(lines[showline]);\par
  264 \par
  265     linebuf->Empty();\par
  266     linebuf->EnsureSize(StrLen(lines[showline]));\par
  267     linebuf->Append(lines[showline]);\par
  268 \par
  269     unsigned int linelen = StrLen(linebuf->GetString());\par
  270     cursor = linebuf->buf + linelen;\par
  271     endpos = cursor;\par
  272     len = lineSize - linelen;\par
  273 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_afc441f10d1c52dba7b3ca1a5f2514e7c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_afc441f10d1c52dba7b3ca1a5f2514e7c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ShowNext\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:ShowNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AnsiConoleEngine::ShowNext (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 275 of file aengine.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::buf, curline, cursor, editline, CharBuffer::Empty(), endpos, CharBuffer::EnsureGrowth(), CharBuffer::EnsureSize(), CharBuffer::GetString(), len, linebuf, lines, lineSize, lineswap, out, prompt, showline, and StrLen().}\par
{
Referenced by ProcessChar().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   276 \{\par
  277     if (!lineswap) \{\par
  278         return;\par
  279     \}\par
  280 \par
  281     showline++;\par
  282     if (showline > curline + 1) \{\par
  283         showline = curline + 1;\par
  284         return;\par
  285     \}\par
  286 \par
  287     out->Empty();\par
  288     out->Append(DELETELINE);\par
  289     out->Append(prompt);\par
  290 \par
  291     if (showline > curline) \{\par
  292         out->EnsureGrowth(StrLen(editline) + 1);\par
  293         out->Append(editline);\par
  294 \par
  295         linebuf->Empty();\par
  296         linebuf->EnsureSize(StrLen(editline));\par
  297         linebuf->Append(editline);\par
  298     \} else \{\par
  299         out->EnsureGrowth(StrLen(lines[showline]) + 1);\par
  300         out->Append(lines[showline]);\par
  301 \par
  302         linebuf->Empty();\par
  303         linebuf->EnsureSize(StrLen(lines[showline]));\par
  304         linebuf->Append(lines[showline]);\par
  305     \}\par
  306 \par
  307     unsigned int linelen = StrLen(linebuf->GetString());\par
  308     cursor = linebuf->buf + linelen;\par
  309     endpos = cursor;\par
  310     len = lineSize - linelen;\par
  311 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_a93c3eccd6c1458e1a82bdbf202948d90_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_a93c3eccd6c1458e1a82bdbf202948d90_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v StartInput\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:StartInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AnsiConoleEngine::StartInput ()}}
\par
{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file aengine.cpp.}\par
{
References CharBuffer::buf, CharBuffer::ClearAndAlloc(), csimode, cursor, delmode, endpos, escmode, len, linebuf, linedone, lineSize, and lineswap.}\par
{
Referenced by StandardConsole::ReadLine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    62 \{\par
   63     linebuf->ClearAndAlloc(lineSize + 1);\par
   64     len = lineSize;\par
   65     cursor = linebuf->buf;\par
   66     endpos = cursor;\par
   67     *endpos = '\\0';\par
   68 \par
   69     lineswap = false;\par
   70     escmode = false;\par
   71     csimode = false;\par
   72     delmode = false;\par
   73     linedone = false;\par
   74 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_a8ad01a2ddd3ee5182deb4a74f3d2a0c1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAnsiConoleEngine_a8ad01a2ddd3ee5182deb4a74f3d2a0c1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v csimode\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:csimode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AnsiConoleEngine::csimode{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file aengine.h.}\par
{
Referenced by ProcessChar(), and StartInput().}\par
}
{\xe \v curline\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:curline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AnsiConoleEngine::curline{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file aengine.h.}\par
{
Referenced by AnsiConoleEngine(), CopyLine(), ShowLast(), and ShowNext().}\par
}
{\xe \v cursor\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:cursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* AnsiConoleEngine::cursor{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file aengine.h.}\par
{
Referenced by ProcessChar(), ShowLast(), ShowNext(), and StartInput().}\par
}
{\xe \v delmode\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:delmode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AnsiConoleEngine::delmode{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file aengine.h.}\par
{
Referenced by ProcessChar(), and StartInput().}\par
}
{\xe \v editline\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:editline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* AnsiConoleEngine::editline{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file aengine.h.}\par
{
Referenced by AnsiConoleEngine(), CopyLine(), ShowLast(), and ShowNext().}\par
}
{\xe \v endpos\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:endpos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* AnsiConoleEngine::endpos{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file aengine.h.}\par
{
Referenced by ProcessChar(), ShowLast(), ShowNext(), and StartInput().}\par
}
{\xe \v escmode\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:escmode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AnsiConoleEngine::escmode{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file aengine.h.}\par
{
Referenced by ProcessChar(), and StartInput().}\par
}
{\xe \v len\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int AnsiConoleEngine::len{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file aengine.h.}\par
{
Referenced by ProcessChar(), ShowLast(), ShowNext(), and StartInput().}\par
}
{\xe \v linebuf\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:linebuf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CharBuffer}* AnsiConoleEngine::linebuf{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file aengine.h.}\par
{
Referenced by AnsiConoleEngine(), CopyLine(), GetLine(), ProcessChar(), ShowLast(), ShowNext(), StartInput(), and ~AnsiConoleEngine().}\par
}
{\xe \v linedone\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:linedone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AnsiConoleEngine::linedone{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file aengine.h.}\par
{
Referenced by InputDone(), ProcessChar(), and StartInput().}\par
}
{\xe \v lines\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:lines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char** AnsiConoleEngine::lines{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file aengine.h.}\par
{
Referenced by AnsiConoleEngine(), CopyLine(), ShowLast(), ShowNext(), and ~AnsiConoleEngine().}\par
}
{\xe \v lineSize\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:lineSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int AnsiConoleEngine::lineSize = 1024{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file aengine.h.}\par
{
Referenced by ShowLast(), ShowNext(), and StartInput().}\par
}
{\xe \v lineswap\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:lineswap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AnsiConoleEngine::lineswap{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file aengine.h.}\par
{
Referenced by ShowLast(), ShowNext(), and StartInput().}\par
}
{\xe \v maxLines\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:maxLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int AnsiConoleEngine::maxLines = 20{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file aengine.h.}\par
{
Referenced by AnsiConoleEngine(), CopyLine(), and ~AnsiConoleEngine().}\par
}
{\xe \v out\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:out}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CharBuffer}* AnsiConoleEngine::out{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file aengine.h.}\par
{
Referenced by AnsiConoleEngine(), ProcessChar(), ShowLast(), ShowNext(), and ~AnsiConoleEngine().}\par
}
{\xe \v prompt\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:prompt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* AnsiConoleEngine::prompt{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file aengine.h.}\par
{
Referenced by AnsiConoleEngine(), SetPrompt(), ShowLast(), ShowNext(), and ~AnsiConoleEngine().}\par
}
{\xe \v showline\:AnsiConoleEngine}
{\xe \v AnsiConoleEngine\:showline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AnsiConoleEngine::showline{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file aengine.h.}\par
{
Referenced by ShowLast(), and ShowNext().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b aengine.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b aengine.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ArcCosecantNode Class Reference\par \pard\plain 
{\tc\tcl2 \v ArcCosecantNode}
{\xe \v ArcCosecantNode}
{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for ArcCosecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCosecantNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ArcCosecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCosecantNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArcCosecantNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 436 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ArcCosecantNode\:ArcCosecantNode}
{\xe \v ArcCosecantNode\:ArcCosecantNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ArcCosecantNode::ArcCosecantNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 919 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   919                                                            :\par
  920     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCosecantNode_a0a06f57986491b3a1a4f952688bc4036_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCosecantNode_a0a06f57986491b3a1a4f952688bc4036_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:ArcCosecantNode}
{\xe \v ArcCosecantNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * ArcCosecantNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 922 of file functions.cpp.}\par
{
References ArcCosecantNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   923 \{\par
  924     return new ArcCosecantNode(expression);\par
  925 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCosecantNode_a03cc6abd00b92a4a8d7e801fc0d063bb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:ArcCosecantNode}
{\xe \v ArcCosecantNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ArcCosecantNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 927 of file functions.cpp.}\par
{
References Number::ArcCosecant(), ExpressionNode::Evaluate(), FunctionNode::expression, and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   928 \{\par
  929     result = expression->Evaluate()->ArcCosecant();\par
  930     return result;\par
  931 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCosecantNode_a4cb42e104cb77fd303bb57c73d8286b0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:ArcCosecantNode}
{\xe \v ArcCosecantNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ArcCosecantNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 933 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   934 \{\par
  935     return (char*)"acsc";\par
  936 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ArcCosineNode Class Reference\par \pard\plain 
{\tc\tcl2 \v ArcCosineNode}
{\xe \v ArcCosineNode}
{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for ArcCosineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCosineNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ArcCosineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCosineNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArcCosineNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 406 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ArcCosineNode\:ArcCosineNode}
{\xe \v ArcCosineNode\:ArcCosineNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ArcCosineNode::ArcCosineNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 881 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   881                                                        :\par
  882     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCosineNode_aa152120e8ec71299525f1e8054a32f04_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCosineNode_aa152120e8ec71299525f1e8054a32f04_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:ArcCosineNode}
{\xe \v ArcCosineNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * ArcCosineNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 884 of file functions.cpp.}\par
{
References ArcCosineNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   885 \{\par
  886     return new ArcCosineNode(expression);\par
  887 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCosineNode_a72c4decd858fbf8db24f81581fd693cb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:ArcCosineNode}
{\xe \v ArcCosineNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ArcCosineNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 889 of file functions.cpp.}\par
{
References Number::ArcCosine(), ExpressionNode::Evaluate(), FunctionNode::expression, and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   890 \{\par
  891     result = expression->Evaluate()->ArcCosine();\par
  892     return result;\par
  893 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCosineNode_a67a999999c34f043bd65778669d5d819_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:ArcCosineNode}
{\xe \v ArcCosineNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ArcCosineNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 895 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   896 \{\par
  897     return (char*)"acos";\par
  898 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ArcCotangentNode Class Reference\par \pard\plain 
{\tc\tcl2 \v ArcCotangentNode}
{\xe \v ArcCotangentNode}
{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for ArcCotangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCotangentNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ArcCotangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCotangentNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArcCotangentNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 426 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ArcCotangentNode\:ArcCotangentNode}
{\xe \v ArcCotangentNode\:ArcCotangentNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ArcCotangentNode::ArcCotangentNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 957 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   957                                                              :\par
  958     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCotangentNode_aa67c2c4d48741e686b660c010c49bd41_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCotangentNode_aa67c2c4d48741e686b660c010c49bd41_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:ArcCotangentNode}
{\xe \v ArcCotangentNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * ArcCotangentNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 961 of file functions.cpp.}\par
{
References ArcCotangentNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   962 \{\par
  963     return new ArcCotangentNode(expression);\par
  964 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCotangentNode_a696c949ce9855f55d8e593622ebc0400_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:ArcCotangentNode}
{\xe \v ArcCotangentNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ArcCotangentNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 966 of file functions.cpp.}\par
{
References Number::ArcCotangent(), ExpressionNode::Evaluate(), FunctionNode::expression, and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   967 \{\par
  968     result = expression->Evaluate()->ArcCotangent();\par
  969     return result;\par
  970 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcCotangentNode_ace4c556eff07fb8352f8f341fa20702a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:ArcCotangentNode}
{\xe \v ArcCotangentNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ArcCotangentNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 972 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   973 \{\par
  974     return (char*)"acot";\par
  975 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ArcSecantNode Class Reference\par \pard\plain 
{\tc\tcl2 \v ArcSecantNode}
{\xe \v ArcSecantNode}
{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for ArcSecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcSecantNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ArcSecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcSecantNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArcSecantNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 446 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ArcSecantNode\:ArcSecantNode}
{\xe \v ArcSecantNode\:ArcSecantNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ArcSecantNode::ArcSecantNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 938 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   938                                                        :\par
  939     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcSecantNode_af52359509f3d178954501b477ff1db5e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcSecantNode_af52359509f3d178954501b477ff1db5e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:ArcSecantNode}
{\xe \v ArcSecantNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * ArcSecantNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 941 of file functions.cpp.}\par
{
References ArcSecantNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   942 \{\par
  943     return new ArcSecantNode(expression);\par
  944 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcSecantNode_abe48bdd0e47a2dd5e5478f551f20c357_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:ArcSecantNode}
{\xe \v ArcSecantNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ArcSecantNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 946 of file functions.cpp.}\par
{
References Number::ArcSecant(), ExpressionNode::Evaluate(), FunctionNode::expression, and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   947 \{\par
  948     result = expression->Evaluate()->ArcSecant();\par
  949     return result;\par
  950 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcSecantNode_a4440babc181bf1763a0dca583ad5adbb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:ArcSecantNode}
{\xe \v ArcSecantNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ArcSecantNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 952 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   953 \{\par
  954     return (char*)"asec";\par
  955 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ArcSineNode Class Reference\par \pard\plain 
{\tc\tcl2 \v ArcSineNode}
{\xe \v ArcSineNode}
{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for ArcSineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcSineNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ArcSineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcSineNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArcSineNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 396 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ArcSineNode\:ArcSineNode}
{\xe \v ArcSineNode\:ArcSineNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ArcSineNode::ArcSineNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 862 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   862                                                    :\par
  863     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcSineNode_a4aa122cd2144b5b2339f2fea18c17c9b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcSineNode_a4aa122cd2144b5b2339f2fea18c17c9b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:ArcSineNode}
{\xe \v ArcSineNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * ArcSineNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 865 of file functions.cpp.}\par
{
References ArcSineNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   866 \{\par
  867     return new ArcSineNode(expression);\par
  868 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcSineNode_ad4e718a483da426a9d6000e2a8b80951_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:ArcSineNode}
{\xe \v ArcSineNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ArcSineNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 870 of file functions.cpp.}\par
{
References Number::ArcSine(), ExpressionNode::Evaluate(), FunctionNode::expression, and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   871 \{\par
  872     result = expression->Evaluate()->ArcSine();\par
  873     return result;\par
  874 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcSineNode_a30a268b7f74bba579745399ccf3ac009_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:ArcSineNode}
{\xe \v ArcSineNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ArcSineNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 876 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   877 \{\par
  878     return (char*)"asin";\par
  879 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ArcTangentNode Class Reference\par \pard\plain 
{\tc\tcl2 \v ArcTangentNode}
{\xe \v ArcTangentNode}
{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for ArcTangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcTangentNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ArcTangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcTangentNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArcTangentNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 416 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ArcTangentNode\:ArcTangentNode}
{\xe \v ArcTangentNode\:ArcTangentNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ArcTangentNode::ArcTangentNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 900 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   900                                                          :\par
  901     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcTangentNode_a2b174bed5fa2e62b858ce79654e7bb3c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcTangentNode_a2b174bed5fa2e62b858ce79654e7bb3c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:ArcTangentNode}
{\xe \v ArcTangentNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * ArcTangentNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 903 of file functions.cpp.}\par
{
References ArcTangentNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   904 \{\par
  905     return new ArcTangentNode(expression);\par
  906 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcTangentNode_a39aefe24ffd196b99a8c110619e5db2b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:ArcTangentNode}
{\xe \v ArcTangentNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ArcTangentNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 908 of file functions.cpp.}\par
{
References Number::ArcTangent(), ExpressionNode::Evaluate(), FunctionNode::expression, and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   909 \{\par
  910     result = expression->Evaluate()->ArcTangent();\par
  911     return result;\par
  912 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classArcTangentNode_a61ce03a435f72dde99caba3547a0a2a8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:ArcTangentNode}
{\xe \v ArcTangentNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ArcTangentNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 914 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   915 \{\par
  916     return (char*)"atan";\par
  917 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AssignmentNode Class Reference\par \pard\plain 
{\tc\tcl2 \v AssignmentNode}
{\xe \v AssignmentNode}
{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
\par
{
{\f2 #include <operators.h>}}\par
Inheritance diagram for AssignmentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAssignmentNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for AssignmentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAssignmentNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AssignmentNode} ({\b VariableNode} *{\b variable}, {\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b IsSilent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VariableNode} * {\b variable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b expression}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 148 of file operators.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AssignmentNode\:AssignmentNode}
{\xe \v AssignmentNode\:AssignmentNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AssignmentNode::AssignmentNode ({\b VariableNode} *  {\i variable}, {\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 427 of file operators.cpp.}\par
{
References expression, NumericOperator::NumericOperator(), and variable.}\par
{
Referenced by Parser::ParseIdent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   427                                                                                 :\par
  428     NumericOperator(variable, expression),\par
  429     variable(variable), expression(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAssignmentNode_a8b2b07073d9900677a8ffe93f7d4171d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAssignmentNode_a8b2b07073d9900677a8ffe93f7d4171d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Evaluate\:AssignmentNode}
{\xe \v AssignmentNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * AssignmentNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 436 of file operators.cpp.}\par
{
References VariableNode::AssignValue(), ExpressionNode::Evaluate(), VariableNode::Evaluate(), expression, and variable.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   437 \{\par
  438     // NOTICE: Assignment does not generate a value itself.\par
  439     variable->AssignValue(expression->Evaluate());\par
  440     return variable->Evaluate();\par
  441 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAssignmentNode_ae6b454a04ec82aa97fa8e09c3752deb6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:AssignmentNode}
{\xe \v AssignmentNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * AssignmentNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 448 of file operators.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   449 \{\par
  450     return (char*)"=";\par
  451 \}\par
}
}
{\xe \v GetPrecedence\:AssignmentNode}
{\xe \v AssignmentNode\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AssignmentNode::GetPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 431 of file operators.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   432 \{\par
  433     return 6;\par
  434 \}\par
}
}
{\xe \v IsSilent\:AssignmentNode}
{\xe \v AssignmentNode\:IsSilent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} AssignmentNode::IsSilent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABPU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 443 of file operators.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   444 \{\par
  445     return true;\par
  446 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v expression\:AssignmentNode}
{\xe \v AssignmentNode\:expression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode}* AssignmentNode::expression{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 160 of file operators.h.}\par
{
Referenced by AssignmentNode(), and Evaluate().}\par
}
{\xe \v variable\:AssignmentNode}
{\xe \v AssignmentNode\:variable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b VariableNode}* AssignmentNode::variable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 159 of file operators.h.}\par
{
Referenced by AssignmentNode(), and Evaluate().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BinaryLogNode Class Reference\par \pard\plain 
{\tc\tcl2 \v BinaryLogNode}
{\xe \v BinaryLogNode}
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for BinaryLogNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBinaryLogNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for BinaryLogNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBinaryLogNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BinaryLogNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 318 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v BinaryLogNode\:BinaryLogNode}
{\xe \v BinaryLogNode\:BinaryLogNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
BinaryLogNode::BinaryLogNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 675 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   675                                                        :\par
  676     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBinaryLogNode_aba9e8a080b194de67e58f19c3aef2433_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBinaryLogNode_aba9e8a080b194de67e58f19c3aef2433_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:BinaryLogNode}
{\xe \v BinaryLogNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * BinaryLogNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 678 of file functions.cpp.}\par
{
References BinaryLogNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   679 \{\par
  680     return new BinaryLogNode(expression);\par
  681 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBinaryLogNode_a443a095bddfc93df884e96cf43c2e971_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:BinaryLogNode}
{\xe \v BinaryLogNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * BinaryLogNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 683 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::Log2(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   684 \{\par
  685     result = expression->Evaluate()->Log2();\par
  686     return result;\par
  687 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBinaryLogNode_a0ac91748d2e82ac41b3a86eca6cf51df_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:BinaryLogNode}
{\xe \v BinaryLogNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * BinaryLogNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 689 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   690 \{\par
  691     return (char*)"lb";\par
  692 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CeilingNode Class Reference\par \pard\plain 
{\tc\tcl2 \v CeilingNode}
{\xe \v CeilingNode}
{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for CeilingNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCeilingNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for CeilingNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCeilingNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CeilingNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 260 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CeilingNode\:CeilingNode}
{\xe \v CeilingNode\:CeilingNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CeilingNode::CeilingNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 606 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   606                                                    :\par
  607     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCeilingNode_ab3c7e409e41fe1f5c6561e907ff4a5bf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCeilingNode_ab3c7e409e41fe1f5c6561e907ff4a5bf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:CeilingNode}
{\xe \v CeilingNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * CeilingNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 609 of file functions.cpp.}\par
{
References CeilingNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   610 \{\par
  611     return new CeilingNode(expression);\par
  612 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCeilingNode_a6b935b420b30e2ce311a7fe179585baf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:CeilingNode}
{\xe \v CeilingNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * CeilingNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 614 of file functions.cpp.}\par
{
References Number::Ceiling(), ExpressionNode::Evaluate(), FunctionNode::expression, and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   615 \{\par
  616     result = expression->Evaluate()->Ceiling();\par
  617     return result;\par
  618 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCeilingNode_ac5a24bd7b0ef5d280dc9da0723983541_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:CeilingNode}
{\xe \v CeilingNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * CeilingNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 620 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   621 \{\par
  622     return (char*)"ceil";\par
  623 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CharBuffer Class Reference\par \pard\plain 
{\tc\tcl2 \v CharBuffer}
{\xe \v CharBuffer}
{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulate an character array which can be used as a string. }}\par
{
{\f2 #include <charbuf.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize without allocating memory. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} (unsigned int size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize while allocating specified amount of memory. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CharBuffer} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ClearBuffer} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Release memory in buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ClearAndCopy} (const char *source)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Release memory, allocate and copy source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ClearAndAlloc} (unsigned int size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Release memory and allocate new size. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EnsureSize} (unsigned int size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ensure a memory block of speficied size is allocated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EnsureSize} (unsigned int blocksize, unsigned int blocks)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EnsureMinimumSize} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EnsureGrowth} (unsigned int size)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Empty} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b Is} (const char *string)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare content of {\b CharBuffer} with string) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Copy} ({\b CharBuffer} *{\b buf})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Append} (const char *source)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Append} (const char c)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Append} (const char c, unsigned int count)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DeleteLastChar} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b RemoveTrailing} (const char c)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b RemoveTrailing} (const char *string)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b buf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b ptr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b cursize}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const unsigned int {\b minimumSize} = 64\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AnsiConoleEngine}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulate an character array which can be used as a string. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b CharBuffer} class eases the task of allocating a releasing memory. \par
}{
Definition at line 43 of file charbuf.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CharBuffer\:CharBuffer}
{\xe \v CharBuffer\:CharBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CharBuffer::CharBuffer ()}}
\par
{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize without allocating memory. }}\par
{
Definition at line 38 of file charbuf.cpp.}\par
{
References buf, cursize, and ptr.}\par
{
Referenced by AnsiConoleEngine::AnsiConoleEngine(), ErrorNode::ErrorNode(), Evaluator::Evaluator(), PromptStatement::Execute(), FunctionList::FunctionList(), StandardFilesystem::ListDirectory(), StandardPreferences::Load(), StandardFilesystem::LoadTextFile(), NumeralSystem::NumeralSystem(), PreferencesBase::PreferencesBase(), SyntaxNode::SyntaxNode(), UserFunction::UserFunction(), and VariableList::VariableList().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    39 \{\par
   40     buf = NOMEM;\par
   41     ptr = buf;\par
   42     cursize = 0;\par
   43 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a4345e9a5114f5c0292e8f242f26e3a7b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CharBuffer\:CharBuffer}
{\xe \v CharBuffer\:CharBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CharBuffer::CharBuffer (unsigned int  {\i size})}}
\par
{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize while allocating specified amount of memory. }}\par
{
Definition at line 49 of file charbuf.cpp.}\par
{
References buf, cursize, minimumSize, and ptr.}\par
{
Referenced by SaveStatement::Execute(), PositionalNumeralSystem::GetText(), and StandardProgram::Initialize().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{\par
   51     cursize = (size < minimumSize ? minimumSize : size);\par
   52     buf = new char[cursize];\par
   53     ptr = buf;\par
   54 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a36d153c126a018c5090374ccb5c37508_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~CharBuffer\:CharBuffer}
{\xe \v CharBuffer\:~CharBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CharBuffer::~CharBuffer ()}}
\par
{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file charbuf.cpp.}\par
{
References ClearBuffer().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    57 \{\par
   58     ClearBuffer();\par
   59 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a9e62778016bba5191fa9eaa6ea118926_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Append\:CharBuffer}
{\xe \v CharBuffer\:Append}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CharBuffer::Append (const char *  {\i source})}}
\par
{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 211 of file charbuf.cpp.}\par
{
References ptr.}\par
{
Referenced by ErrorNode::ErrorNode(), VersionStatement::Execute(), MemoryStatement::Execute(), ErrorNode::Execute(), EvalStatement::Execute(), StatementBlockNode::Execute(), DeleteStatement::Execute(), InputStatement::Execute(), OutputStatement::Execute(), DigitsStatement::Execute(), SaveStatement::Execute(), PlotStatement::Execute(), PreferencesBase::GetDescription(), PositionalNumeralSystem::GetName(), DecimalSystem::GetRealText(), UnaryNode::GetText(), FunctionNode::GetText(), AbsoluteNode::GetText(), PositionalNumeralSystem::GetText(), NumericOperator::GetText(), StandardProgram::Initialize(), UserFunction::InitializeTexts(), VariableList::ListContent(), FunctionList::ListContent(), StandardFilesystem::ListDirectory(), StandardPreferences::Load(), AnsiConoleEngine::ProcessChar(), AnsiConoleEngine::ShowLast(), and AnsiConoleEngine::ShowNext().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   212 \{\par
  213     while ((*ptr++ = *source++));\par
  214 \par
  215     ptr--;\par
  216 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a045b38735f7b3007c1b98d3d7b7feafe_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Append\:CharBuffer}
{\xe \v CharBuffer\:Append}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CharBuffer::Append (const char  {\i c})}}
\par
{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 195 of file charbuf.cpp.}\par
{
References ptr.}\par
{
Referenced by PromptStatement::Execute(), ErrorNode::Execute(), PlotStatement::Execute(), PreferencesBase::GetDescription(), PositionalNumeralSystem::GetText(), DecimalSystem::GetText(), StandardProgram::Initialize(), UserFunction::InitializeTexts(), PositionalNumeralSystem::IntegerToBuffer(), VariableList::ListContent(), FunctionList::ListContent(), StandardFilesystem::LoadTextFile(), and AnsiConoleEngine::ProcessChar().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   196 \{\par
  197     *ptr++ = c;\par
  198 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a1ba545a85907bbc9ab26cdc99b031440_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Append\:CharBuffer}
{\xe \v CharBuffer\:Append}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CharBuffer::Append (const char  {\i c}, unsigned int  {\i count})}}
\par
{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 200 of file charbuf.cpp.}\par
{
References ptr.}\par
{
Referenced by ErrorNode::Execute(), and StandardFilesystem::ListDirectory().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   201 \{\par
  202     if (count == 0) \{\par
  203         return;\par
  204     \}\par
  205 \par
  206     unsigned int n = count;\par
  207     while (n--)\par
  208         *ptr++ = c;\par
  209 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_af0db379281b7f3f8b4746344521999c1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ClearAndAlloc\:CharBuffer}
{\xe \v CharBuffer\:ClearAndAlloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CharBuffer::ClearAndAlloc (unsigned int  {\i size})}}
\par
{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Release memory and allocate new size. }}\par
{
Definition at line 91 of file charbuf.cpp.}\par
{
References buf, ClearBuffer(), cursize, minimumSize, and ptr.}\par
{
Referenced by ErrorNode::Execute(), and AnsiConoleEngine::StartInput().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    92 \{\par
   93     ClearBuffer();\par
   94     cursize = (size < minimumSize ? minimumSize : size);\par
   95     buf = new char[cursize];\par
   96     ptr = buf;\par
   97 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a8c0927c2c05c954161151045f68581c6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a8c0927c2c05c954161151045f68581c6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ClearAndCopy\:CharBuffer}
{\xe \v CharBuffer\:ClearAndCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CharBuffer::ClearAndCopy (const char *  {\i source})}}
\par
{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Release memory, allocate and copy source. }}\par
{
Definition at line 80 of file charbuf.cpp.}\par
{
References AllocAndCopy(), buf, ClearBuffer(), cursize, and ptr.}\par
{
Referenced by Evaluator::Evaluate(), PromptStatement::Execute(), HelpStatement::Execute(), ExecuteStatement::Execute(), and NumericValueNode::GetNodeText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    81 \{\par
   82     ClearBuffer();\par
   83     cursize = AllocAndCopy(&buf, source);\par
   84     ptr = buf + cursize - sizeof(char);\par
   85 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_ac52ed7b91190240eb7db4cf43d1e2abb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_ac52ed7b91190240eb7db4cf43d1e2abb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ClearBuffer\:CharBuffer}
{\xe \v CharBuffer\:ClearBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CharBuffer::ClearBuffer ()}}
\par
{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Release memory in buffer. }}\par
{
Definition at line 65 of file charbuf.cpp.}\par
{
References buf, cursize, and ptr.}\par
{
Referenced by VariableList::Clear(), FunctionList::Clear(), ClearAndAlloc(), ClearAndCopy(), Evaluator::Evaluate(), StatementBlockNode::Execute(), and ~CharBuffer().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    66 \{\par
   67     if (buf != NOMEM) \{\par
   68         delete [] buf;\par
   69     \}\par
   70 \par
   71     buf = NOMEM;\par
   72     ptr = buf;\par
   73     cursize = 0;\par
   74 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a0bcdd5708db4b04c887224e83a05086f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Copy\:CharBuffer}
{\xe \v CharBuffer\:Copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CharBuffer::Copy ({\b CharBuffer} *  {\i buf})}}
\par
{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 183 of file charbuf.cpp.}\par
{
References buf, cursize, EnsureSize(), GetString(), and ptr.}\par
{
Referenced by PositionalNumeralSystem::GetText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   184 \{\par
  185     EnsureSize(source->cursize);\par
  186     const char *s = source->GetString();\par
  187 \par
  188     ptr = buf;\par
  189     while ((*ptr++ = *s++))\par
  190         ;\par
  191 \par
  192     ptr--;\par
  193 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a9f35562a39a7785e73f09fbd9f6938bf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a9f35562a39a7785e73f09fbd9f6938bf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v DeleteLastChar\:CharBuffer}
{\xe \v CharBuffer\:DeleteLastChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CharBuffer::DeleteLastChar ()}}
\par
{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 177 of file charbuf.cpp.}\par
{
References ptr.}\par
{
Referenced by StandardProgram::Initialize().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   178 \{\par
  179     ptr--;\par
  180 \par
  181 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a8bc0eaf1a874ccf76c0034299f8459a7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Empty\:CharBuffer}
{\xe \v CharBuffer\:Empty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CharBuffer::Empty ()}}
\par
{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 168 of file charbuf.cpp.}\par
{
References buf, EnsureMinimumSize(), and ptr.}\par
{
Referenced by VersionStatement::Execute(), MemoryStatement::Execute(), ErrorNode::Execute(), EvalStatement::Execute(), StatementBlockNode::Execute(), DeleteStatement::Execute(), InputStatement::Execute(), OutputStatement::Execute(), DigitsStatement::Execute(), SaveStatement::Execute(), PlotStatement::Execute(), FunctionDefinitionNode::FunctionDefinitionNode(), PreferencesBase::GetDescription(), PositionalNumeralSystem::GetName(), UnaryNode::GetText(), FunctionNode::GetText(), AbsoluteNode::GetText(), PositionalNumeralSystem::GetText(), NumericOperator::GetText(), DecimalSystem::GetText(), StandardProgram::Initialize(), UserFunction::InitializeTexts(), VariableList::ListContent(), FunctionList::ListContent(), StandardFilesystem::ListDirectory(), StandardPreferences::Load(), StandardFilesystem::LoadTextFile(), NumeralSystem::NumeralSystem(), AnsiConoleEngine::ProcessChar(), AnsiConoleEngine::ShowLast(), and AnsiConoleEngine::ShowNext().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   169 \{\par
  170     if (buf == NOMEM) \{\par
  171         EnsureMinimumSize();\par
  172     \}\par
  173 \par
  174     ptr = buf;\par
  175 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_abe39d3fd7d8b9c8ec343af2cae7adc96_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_abe39d3fd7d8b9c8ec343af2cae7adc96_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v EnsureGrowth\:CharBuffer}
{\xe \v CharBuffer\:EnsureGrowth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CharBuffer::EnsureGrowth (unsigned int  {\i size})}}
\par
{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 158 of file charbuf.cpp.}\par
{
References buf, EnsureSize(), and ptr.}\par
{
Referenced by StatementBlockNode::Execute(), PlotStatement::Execute(), DecimalSystem::GetRealText(), StandardFilesystem::ListDirectory(), and AnsiConoleEngine::ShowNext().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   159 \{\par
  160     EnsureSize((ptr - buf) + size);\par
  161 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a73c71d361110b37819a1d681a1504b0e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a73c71d361110b37819a1d681a1504b0e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v EnsureMinimumSize\:CharBuffer}
{\xe \v CharBuffer\:EnsureMinimumSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CharBuffer::EnsureMinimumSize ()}}
\par
{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file charbuf.cpp.}\par
{
References buf, minimumSize, and ptr.}\par
{
Referenced by Empty(), and FunctionDefinitionNode::FunctionDefinitionNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   100 \{\par
  101     if (buf == NOMEM) \{\par
  102         unsigned int size = minimumSize;\par
  103         buf = new char[size];\par
  104         ptr = buf;\par
  105     \}\par
  106 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_ae742439a2d5d5a0ad64411dcbf4604c8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v EnsureSize\:CharBuffer}
{\xe \v CharBuffer\:EnsureSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CharBuffer::EnsureSize (unsigned int  {\i size})}}
\par
{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ensure a memory block of speficied size is allocated. }}\par
{
Definition at line 112 of file charbuf.cpp.}\par
{
References buf, cursize, MemCopy(), minimumSize, and ptr.}\par
{
Referenced by Copy(), EnsureGrowth(), ErrorNode::ErrorNode(), VersionStatement::Execute(), MemoryStatement::Execute(), EvalStatement::Execute(), DeleteStatement::Execute(), InputStatement::Execute(), OutputStatement::Execute(), DigitsStatement::Execute(), PreferencesBase::GetDescription(), PositionalNumeralSystem::GetName(), UnaryNode::GetText(), FunctionNode::GetText(), AbsoluteNode::GetText(), NumericOperator::GetText(), VariableList::ListContent(), FunctionList::ListContent(), StandardFilesystem::ListDirectory(), StandardPreferences::Load(), AnsiConoleEngine::ShowLast(), and AnsiConoleEngine::ShowNext().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   113 \{\par
  114     if (cursize < size) \{\par
  115 \par
  116         unsigned int tempsize = cursize;\par
  117         cursize = (size < minimumSize ? minimumSize : size);\par
  118 \par
  119         if (buf == NOMEM) \{ // Nothing allocated yet. Just allocate requested size.\par
  120             buf = new char[cursize];\par
  121             ptr = buf;\par
  122         \} else if (buf == ptr) \{ // Already allocated but buffer is empty.\par
  123             delete [] buf;\par
  124             buf = new char[cursize];\par
  125             ptr = buf;\par
  126         \} else \{ // Buffer already in use.\par
  127             // Make at least double size\par
  128             cursize = cursize < tempsize * 2 ? tempsize * 2 : cursize;\par
  129             unsigned int offset = ptr - buf;\par
  130             char *temp = new char[cursize];\par
  131             MemCopy(temp, buf, tempsize);\par
  132             delete [] buf;\par
  133             buf = temp;\par
  134             ptr = buf + offset;\par
  135         \}\par
  136     \}\par
  137 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_ad1907009b5ad136692b989fa96bf2f7e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_ad1907009b5ad136692b989fa96bf2f7e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v EnsureSize\:CharBuffer}
{\xe \v CharBuffer\:EnsureSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CharBuffer::EnsureSize (unsigned int  {\i blocksize}, unsigned int  {\i blocks})}}
\par
{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 139 of file charbuf.cpp.}\par
{
References buf, cursize, MemCopy(), and ptr.}\par
{
Referenced by StandardFilesystem::LoadTextFile().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   140 \{\par
  141     if (cursize < blocksize * blocks) \{\par
  142         if (buf == NOMEM) \{\par
  143             cursize = blocksize * blocks;\par
  144             buf = new char[cursize];\par
  145             ptr = buf;\par
  146         \} else \{\par
  147             unsigned int tptr = ptr - buf;\par
  148             char *temp = new char[blocksize * blocks];\par
  149             MemCopy(temp, buf, cursize);\par
  150             delete [] buf;\par
  151             cursize = blocksize * blocks;\par
  152             buf = temp;\par
  153             ptr = buf + tptr;\par
  154         \}\par
  155     \}\par
  156 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a91ce4f4083b9a29c48f75e2af4071f28_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a91ce4f4083b9a29c48f75e2af4071f28_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetString\:CharBuffer}
{\xe \v CharBuffer\:GetString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * CharBuffer::GetString ()}}
\par
{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 250 of file charbuf.cpp.}\par
{
References buf, and ptr.}\par
{
Referenced by Copy(), AnsiConoleEngine::CopyLine(), ErrorNode::ErrorNode(), VersionStatement::Execute(), MemoryStatement::Execute(), PromptStatement::Execute(), ErrorNode::Execute(), FunctionDefinitionNode::Execute(), EvalStatement::Execute(), StatementBlockNode::Execute(), HelpStatement::Execute(), DeleteStatement::Execute(), InputStatement::Execute(), OutputStatement::Execute(), DigitsStatement::Execute(), ShowStatement::Execute(), ListStatement::Execute(), LoadStatement::Execute(), SaveStatement::Execute(), ExecuteStatement::Execute(), PlotStatement::Execute(), UserFunction::GetDefitionName(), UserFunction::GetDefitionText(), PreferencesBase::GetDescription(), AnsiConoleEngine::GetLine(), PositionalNumeralSystem::GetName(), NumericValueNode::GetNodeText(), DecimalSystem::GetRealText(), Evaluator::GetResult(), UnaryNode::GetText(), FunctionNode::GetText(), AbsoluteNode::GetText(), PositionalNumeralSystem::GetText(), NumericOperator::GetText(), DecimalSystem::GetText(), FunctionDefinitionNode::GetText(), UserFunction::InitializeTexts(), Is(), VariableList::ListContent(), FunctionList::ListContent(), StandardFilesystem::ListDirectory(), StandardPreferences::Load(), StandardLanguage::LoadCatalog(), AnsiConoleEngine::ProcessChar(), StandardProgram::Run(), AnsiConoleEngine::ShowLast(), and AnsiConoleEngine::ShowNext().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   251 \{\par
  252     *ptr = '\\0';\par
  253     return buf;\par
  254 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a7dfd3feaaf80f318ba44efe15b1ec44b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Is\:CharBuffer}
{\xe \v CharBuffer\:Is}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} CharBuffer::Is (const char *  {\i string})}}
\par
{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare content of {\b CharBuffer} with string) }}\par
{
Definition at line 163 of file charbuf.cpp.}\par
{
References GetString(), and StrIsEqual().}\par
{
Referenced by PositionalNumeralSystem::GetText(), and StandardProgram::Initialize().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   164 \{\par
  165     return StrIsEqual(GetString(), string);\par
  166 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a64988275bda43dddb6d2b3b9551cefb0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a64988275bda43dddb6d2b3b9551cefb0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v RemoveTrailing\:CharBuffer}
{\xe \v CharBuffer\:RemoveTrailing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} CharBuffer::RemoveTrailing (const char  {\i c})}}
\par
{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 218 of file charbuf.cpp.}\par
{
References buf, and ptr.}\par
{
Referenced by PromptStatement::Execute(), DecimalSystem::GetRealText(), and PositionalNumeralSystem::GetText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   219 \{\par
  220     if (ptr == buf) \{\par
  221         return false;\par
  222     \}\par
  223 \par
  224     if (*(--ptr) == c) \{\par
  225         return true;\par
  226     \}\par
  227 \par
  228     ptr++;\par
  229     return false;\par
  230 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a1071772d1059263f4f880965fcc349ab_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v RemoveTrailing\:CharBuffer}
{\xe \v CharBuffer\:RemoveTrailing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} CharBuffer::RemoveTrailing (const char *  {\i string})}}
\par
{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 232 of file charbuf.cpp.}\par
{
References buf, ptr, StrIsEqual(), and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   233 \{\par
  234     int len = StrLen(string) * sizeof(char);\par
  235     char* s = ptr - len;\par
  236     if (s < buf) \{\par
  237         return false;\par
  238     \}\par
  239 \par
  240     *ptr = '\\0';\par
  241 \par
  242     if (StrIsEqual(s, string)) \{\par
  243         ptr = s;\par
  244         return true;\par
  245     \}\par
  246 \par
  247     return false;\par
  248 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCharBuffer_a45beaedff09c0c079075cfced78c8002_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v AnsiConoleEngine\:CharBuffer}
{\xe \v CharBuffer\:AnsiConoleEngine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b AnsiConoleEngine}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file charbuf.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buf\:CharBuffer}
{\xe \v CharBuffer\:buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* CharBuffer::buf{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file charbuf.h.}\par
{
Referenced by CharBuffer(), ClearAndAlloc(), ClearAndCopy(), ClearBuffer(), Copy(), Empty(), EnsureGrowth(), EnsureMinimumSize(), EnsureSize(), GetString(), AnsiConoleEngine::ProcessChar(), RemoveTrailing(), AnsiConoleEngine::ShowLast(), AnsiConoleEngine::ShowNext(), and AnsiConoleEngine::StartInput().}\par
}
{\xe \v cursize\:CharBuffer}
{\xe \v CharBuffer\:cursize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int CharBuffer::cursize{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file charbuf.h.}\par
{
Referenced by CharBuffer(), ClearAndAlloc(), ClearAndCopy(), ClearBuffer(), Copy(), and EnsureSize().}\par
}
{\xe \v minimumSize\:CharBuffer}
{\xe \v CharBuffer\:minimumSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int CharBuffer::minimumSize = 64{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file charbuf.h.}\par
{
Referenced by CharBuffer(), ClearAndAlloc(), EnsureMinimumSize(), and EnsureSize().}\par
}
{\xe \v ptr\:CharBuffer}
{\xe \v CharBuffer\:ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* CharBuffer::ptr{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file charbuf.h.}\par
{
Referenced by Append(), CharBuffer(), ClearAndAlloc(), ClearAndCopy(), ClearBuffer(), Copy(), DeleteLastChar(), Empty(), EnsureGrowth(), EnsureMinimumSize(), EnsureSize(), GetString(), AnsiConoleEngine::ProcessChar(), and RemoveTrailing().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b charbuf.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b charbuf.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClearStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v ClearStatement}
{\xe \v ClearStatement}
{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the console window. }}\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for ClearStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classClearStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ClearStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classClearStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClearStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ClearStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the console window. \par
}{
Definition at line 47 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ClearStatement\:ClearStatement}
{\xe \v ClearStatement\:ClearStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ClearStatement::ClearStatement (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file statements.h.}\par
{
Referenced by Parser::ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    49 \{ \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classClearStatement_a5c3069808cd784d6f98916bae6b1b94c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~ClearStatement\:ClearStatement}
{\xe \v ClearStatement\:~ClearStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ClearStatement::~ClearStatement (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file statements.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:ClearStatement}
{\xe \v ClearStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ClearStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 44 of file statements.cpp.}\par
{
References ConsoleBase::Clear(), and Program::Console.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45 \{\par
   46     Program->Console->Clear();\par
   47     return (char*)EMPTYSTRING;\par
   48 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classClearStatement_ad01255515180fd5271c491386df560a8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
complex Union Reference\par \pard\plain 
{\tc\tcl2 \v complex}
{\xe \v complex}
{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
\par
{
{\f2 #include <complex.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b parts} [2]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 40 of file complex.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v parts\:complex}
{\xe \v complex\:parts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double complex::parts[2]}}
\par
{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file complex.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this union was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
lib/{\b complex.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ComplexiNode Class Reference\par \pard\plain 
{\tc\tcl2 \v ComplexiNode}
{\xe \v ComplexiNode}
{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of the square root of -2 in a syntax tree. }}\par
{
{\f2 #include <values.h>}}\par
Inheritance diagram for ComplexiNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classComplexiNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ComplexiNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classComplexiNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ComplexiNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ReductionType} {\b GetReductionType} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of the square root of -2 in a syntax tree. \par
}{
Definition at line 191 of file values.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ComplexiNode\:ComplexiNode}
{\xe \v ComplexiNode\:ComplexiNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ComplexiNode::ComplexiNode ()}}
\par
{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 434 of file values.cpp.}\par
{
References ComplexNumber::ComplexNumber(), and NumericValueNode::NumericValueNode().}\par
{
Referenced by Parser::ParseAtomic().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   434                            :\par
  435     NumericValueNode(new ComplexNumber(0.0, 1.0)) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classComplexiNode_a79e05af8f2290980a8887769e925b228_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classComplexiNode_a79e05af8f2290980a8887769e925b228_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetNodeText\:ComplexiNode}
{\xe \v ComplexiNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ComplexiNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 442 of file values.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   443 \{\par
  444     return (char*)"i";\par
  445 \}\par
}
}
{\xe \v GetReductionType\:ComplexiNode}
{\xe \v ComplexiNode\:GetReductionType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ReductionType} ComplexiNode::GetReductionType (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 437 of file values.cpp.}\par
{
References nonereduc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   438 \{\par
  439     return nonereduc;\par
  440 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ComplexNumber Struct Reference\par \pard\plain 
{\tc\tcl2 \v ComplexNumber}
{\xe \v ComplexNumber}
{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represent a complex number with 2 componts of 15 siginificant digits. }}\par
{
{\f2 #include <cplex.h>}}\par
Inheritance diagram for ComplexNumber:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ComplexNumber:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ComplexNumber} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ComplexNumber} ({\b complex} {\b z})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ComplexNumber} (double real, double imag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ComplexNumber} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Clone} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetIntegerValue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetRealValue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetImagValue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b GetComplexValue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b PureComplexValue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetDefaultPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Unary} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Add} ({\b Number} *other)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Sub} ({\b Number} *other)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Mul} ({\b Number} *other)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Div} ({\b Number} *other)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Raise} ({\b Number} *exponent)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Signum} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Trunc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Round} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Floor} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Ceiling} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Absolute} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b SquareRoot} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b CubeRoot} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Reciprocal} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Log} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Log2} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Log10} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Sine} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Cosine} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Tangent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Cosecant} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Secant} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Cotangent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b ArcSine} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b ArcCosine} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b ArcTangent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b ArcCosecant} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b ArcSecant} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b ArcCotangent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypSine} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypCosine} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypTangent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypCosecant} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypSecant} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypCotangent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypArcSine} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypArcCosine} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypArcTangent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypArcCosecant} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypArcSecant} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypArcCotangent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b z}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represent a complex number with 2 componts of 15 siginificant digits. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculations are done using 64 bit IEEE 754 arithmetics. \par
}{
Definition at line 46 of file cplex.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ComplexNumber\:ComplexNumber}
{\xe \v ComplexNumber\:ComplexNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ComplexNumber::ComplexNumber ()}}
\par
{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file cplex.cpp.}\par
{
References cpack(), nsyscomplex, Number::Number(), and z.}\par
{
Referenced by Add(), Div(), Mul(), Raise(), and Sub().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    33                              :\par
   34     Number(nsyscomplex) \{\par
   35     z = cpack(0.0, 0.0);\par
   36 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a610e9db9ff0ddb0140e30d235ab64e44_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a610e9db9ff0ddb0140e30d235ab64e44_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ComplexNumber\:ComplexNumber}
{\xe \v ComplexNumber\:ComplexNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ComplexNumber::ComplexNumber ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file cplex.cpp.}\par
{
References nsyscomplex, Number::Number(), and z.}\par
{
Referenced by Add(), ArcCosecant(), ArcCosine(), ArcCotangent(), ArcSecant(), ArcSine(), ArcTangent(), Ceiling(), Clone(), Cosecant(), Cosine(), Cotangent(), CubeRoot(), Div(), Floor(), HypArcCosecant(), HypArcCosine(), HypArcCotangent(), HypArcSecant(), HypArcSine(), HypArcTangent(), HypCosecant(), HypCosine(), HypCotangent(), HypSecant(), HypSine(), HypTangent(), Log(), Log10(), Log2(), Mul(), Raise(), Reciprocal(), Round(), Secant(), Sine(), SquareRoot(), Sub(), Tangent(), Trunc(), and Unary().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    38                                       :\par
   39     Number(nsyscomplex) \{\par
   40     this->z = z;\par
   41 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a0d89581ead93385331befcef51698693_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a0d89581ead93385331befcef51698693_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ComplexNumber\:ComplexNumber}
{\xe \v ComplexNumber\:ComplexNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ComplexNumber::ComplexNumber (double  {\i real}, double  {\i imag})}}
\par
{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file cplex.cpp.}\par
{
References cpack(), nsyscomplex, Number::Number(), and z.}\par
{
Referenced by ComplexiNode::ComplexiNode(), Parser::ParseNumber(), RealNumber::Raise(), and RealNumber::SquareRoot().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    43                                                      :\par
   44     Number(nsyscomplex) \{\par
   45     z = cpack(real, imag);\par
   46 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_af0a78be5e675c845b8dc2bf8e5e8f32b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_af0a78be5e675c845b8dc2bf8e5e8f32b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~ComplexNumber\:ComplexNumber}
{\xe \v ComplexNumber\:~ComplexNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ComplexNumber::~ComplexNumber ()}}
\par
{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file cplex.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    49 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Absolute\:ComplexNumber}
{\xe \v ComplexNumber\:Absolute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Absolute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 173 of file cplex.cpp.}\par
{
References cabs(), RealNumber::RealNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   174 \{\par
  175     return new RealNumber(cabs(z));\par
  176 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a7fb865f9bca992bb78dc057f3d8cfd82_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Add\:ComplexNumber}
{\xe \v ComplexNumber\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Add ({\b Number} *  {\i other}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 103 of file cplex.cpp.}\par
{
References cadd(), ComplexNumber(), cpack(), nsyscomplex, nsysreal, Number::system, RealNumber::x, and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   104 \{\par
  105     if (other->system == nsyscomplex) \{\par
  106         ComplexNumber *w = (ComplexNumber*)other;\par
  107         return new ComplexNumber(cadd(z, w->z));\par
  108     \} else  if (other->system == nsysreal) \{\par
  109         RealNumber *a = (RealNumber*)other;\par
  110         return new ComplexNumber(cadd(z, cpack(a->x, 0.0)));\par
  111     \} else \{\par
  112         return new ComplexNumber();\par
  113     \}\par
  114 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_ad6b9fb6fe480c3a626f4e105024d2375_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcCosecant\:ComplexNumber}
{\xe \v ComplexNumber\:ArcCosecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::ArcCosecant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 278 of file cplex.cpp.}\par
{
References cacsc(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   279 \{\par
  280     return new ComplexNumber(cacsc(z));\par
  281 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a904a9af5470b037c1931d7d090410c94_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcCosine\:ComplexNumber}
{\xe \v ComplexNumber\:ArcCosine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::ArcCosine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 263 of file cplex.cpp.}\par
{
References cacos(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   264 \{\par
  265     return new ComplexNumber(cacos(z));\par
  266 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a5f9bdc56dba5fc8cdf8afb8cd232e7e4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcCotangent\:ComplexNumber}
{\xe \v ComplexNumber\:ArcCotangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::ArcCotangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 283 of file cplex.cpp.}\par
{
References cacot(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   284 \{\par
  285     return new ComplexNumber(cacot(z));\par
  286 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a412a4480826c808d9358ccc84f24a75f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcSecant\:ComplexNumber}
{\xe \v ComplexNumber\:ArcSecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::ArcSecant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 273 of file cplex.cpp.}\par
{
References casec(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   274 \{\par
  275     return new ComplexNumber(casec(z));\par
  276 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a66cb3904e4b3127f0e3714ba23a0c981_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcSine\:ComplexNumber}
{\xe \v ComplexNumber\:ArcSine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::ArcSine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 258 of file cplex.cpp.}\par
{
References casin(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   259 \{\par
  260     return new ComplexNumber(casin(z));\par
  261 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_ab52b2cfd9cd0ba862346408c580e385c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcTangent\:ComplexNumber}
{\xe \v ComplexNumber\:ArcTangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::ArcTangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 268 of file cplex.cpp.}\par
{
References catan(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   269 \{\par
  270     return new ComplexNumber(catan(z));\par
  271 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a69dc018433e7409d5b6b6d87568ae232_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Ceiling\:ComplexNumber}
{\xe \v ComplexNumber\:Ceiling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Ceiling (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 193 of file cplex.cpp.}\par
{
References cceil(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   194 \{\par
  195     return new ComplexNumber(cceil(z));\par
  196 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a4788f638a16773706510bdc2edd0ea49_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Clone\:ComplexNumber}
{\xe \v ComplexNumber\:Clone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Clone (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 51 of file cplex.cpp.}\par
{
References ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    52 \{\par
   53     return new ComplexNumber(z);\par
   54 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_acae8fd1b1c3cd871b9975053b9bcc4d1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Cosecant\:ComplexNumber}
{\xe \v ComplexNumber\:Cosecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Cosecant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 248 of file cplex.cpp.}\par
{
References ccsc(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   249 \{\par
  250     return new ComplexNumber(ccsc(z));\par
  251 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a9740a470743b92208243140c3f7a8b35_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Cosine\:ComplexNumber}
{\xe \v ComplexNumber\:Cosine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Cosine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 233 of file cplex.cpp.}\par
{
References ccos(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   234 \{\par
  235     return new ComplexNumber(ccos(z));\par
  236 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a9c52151f9a5111bf5163f43e5e697f9e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Cotangent\:ComplexNumber}
{\xe \v ComplexNumber\:Cotangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Cotangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 253 of file cplex.cpp.}\par
{
References ccot(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   254 \{\par
  255     return new ComplexNumber(ccot(z));\par
  256 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a922c244a14dbee2e17bd5dc6dbec7625_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CubeRoot\:ComplexNumber}
{\xe \v ComplexNumber\:CubeRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::CubeRoot (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 208 of file cplex.cpp.}\par
{
References ccbrt(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   209 \{\par
  210     return new ComplexNumber(ccbrt(z));\par
  211 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a1589eac796ec230625298d196fe84c25_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Div\:ComplexNumber}
{\xe \v ComplexNumber\:Div}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Div ({\b Number} *  {\i other}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 142 of file cplex.cpp.}\par
{
References cdiv(), ComplexNumber(), cpack(), nsyscomplex, nsysreal, Number::system, RealNumber::x, and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   143 \{\par
  144     if (other->system == nsyscomplex) \{\par
  145         ComplexNumber *w = (ComplexNumber*)other;\par
  146         return new ComplexNumber(cdiv(z, w->z));\par
  147     \} else  if (other->system == nsysreal) \{\par
  148         RealNumber *a = (RealNumber*)other;\par
  149         return new ComplexNumber(cdiv(z, cpack(a->x, 0.0)));\par
  150     \} else \{\par
  151         return new ComplexNumber();\par
  152     \}\par
  153 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a78f07b5e0e9d481629e3814b6037522b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Floor\:ComplexNumber}
{\xe \v ComplexNumber\:Floor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Floor (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 188 of file cplex.cpp.}\par
{
References cfloor(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   189 \{\par
  190     return new ComplexNumber(cfloor(z));\par
  191 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_abf02b60fa622fae2724b7a6768acf2d6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetComplexValue\:ComplexNumber}
{\xe \v ComplexNumber\:GetComplexValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ComplexNumber::GetComplexValue ()}}
\par
{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file cplex.cpp.}\par
{
References z.}\par
{
Referenced by PositionalNumeralSystem::GetText(), and DecimalSystem::GetText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    72 \{\par
   73     return z;\par
   74 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a711b2ce78037a97680c46a5e1e9a4bb8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetDefaultPrecedence\:ComplexNumber}
{\xe \v ComplexNumber\:GetDefaultPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ComplexNumber::GetDefaultPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 92 of file cplex.cpp.}\par
{
References cimag(), creal(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    93 \{\par
   94     return (creal(z) != 0.0 && cimag(z) != 0.0) ? 2 : 0;\par
   95 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a703a1afdc3223e5cdacff225903e62ef_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetImagValue\:ComplexNumber}
{\xe \v ComplexNumber\:GetImagValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ComplexNumber::GetImagValue ()}}
\par
{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file cplex.cpp.}\par
{
References cimag(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    67 \{\par
   68     return cimag(z);\par
   69 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a4b26887c940f046a442815ac154cda66_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetIntegerValue\:ComplexNumber}
{\xe \v ComplexNumber\:GetIntegerValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ComplexNumber::GetIntegerValue (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 56 of file cplex.cpp.}\par
{
References creal(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    57 \{\par
   58     return (int) creal(z);\par
   59 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a5d9fb1157a99a97244b306821b1d30c1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetPrecedence\:ComplexNumber}
{\xe \v ComplexNumber\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ComplexNumber::GetPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 81 of file cplex.cpp.}\par
{
References cimag(), creal(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    82 \{\par
   83     if ((creal(z) < 0.0) || (creal(z) == 0.0 && cimag(z) < 0.0)) \{\par
   84         return -1;\par
   85     \} else  if (creal(z) != 0.0 && cimag(z) != 0.0) \{\par
   86         return 2;\par
   87     \} else \{\par
   88         return 0;\par
   89     \}\par
   90 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a14e7e0bfb5fe65d667c9ff50634cfdf6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetRealValue\:ComplexNumber}
{\xe \v ComplexNumber\:GetRealValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ComplexNumber::GetRealValue (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 61 of file cplex.cpp.}\par
{
References creal(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    62 \{\par
   63     return creal(z);\par
   64 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_ae9f6a3f46c067286dec298358dee3cd7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcCosecant\:ComplexNumber}
{\xe \v ComplexNumber\:HypArcCosecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::HypArcCosecant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 338 of file cplex.cpp.}\par
{
References cacsch(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   339 \{\par
  340     return new ComplexNumber(cacsch(z));\par
  341 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_af53cdbbf59f07f40118cf05a51cf3d0a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcCosine\:ComplexNumber}
{\xe \v ComplexNumber\:HypArcCosine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::HypArcCosine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 323 of file cplex.cpp.}\par
{
References cacosh(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   324 \{\par
  325     return new ComplexNumber(cacosh(z));\par
  326 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a9d1b26167fb3e3c84e18b724bcfbb48a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcCotangent\:ComplexNumber}
{\xe \v ComplexNumber\:HypArcCotangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::HypArcCotangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 343 of file cplex.cpp.}\par
{
References cacoth(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   344 \{\par
  345     return new ComplexNumber(cacoth(z));\par
  346 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_acf624375cf09c48f5209ec3605ca01f6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcSecant\:ComplexNumber}
{\xe \v ComplexNumber\:HypArcSecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::HypArcSecant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 333 of file cplex.cpp.}\par
{
References casech(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   334 \{\par
  335     return new ComplexNumber(casech(z));\par
  336 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_af0d9ceb661b6bf3052d3806c84ab6faf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcSine\:ComplexNumber}
{\xe \v ComplexNumber\:HypArcSine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::HypArcSine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 318 of file cplex.cpp.}\par
{
References casinh(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   319 \{\par
  320     return new ComplexNumber(casinh(z));\par
  321 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a0081fb3057a6ab825ac0b3dbea62406b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcTangent\:ComplexNumber}
{\xe \v ComplexNumber\:HypArcTangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::HypArcTangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 328 of file cplex.cpp.}\par
{
References catanh(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   329 \{\par
  330     return new ComplexNumber(catanh(z));\par
  331 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a9c1090310f2f9e656467625e0137c8dc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypCosecant\:ComplexNumber}
{\xe \v ComplexNumber\:HypCosecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::HypCosecant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 308 of file cplex.cpp.}\par
{
References ccsch(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   309 \{\par
  310     return new ComplexNumber(ccsch(z));\par
  311 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_ab4ee0dc45e8e43e1fa647bef6c65542c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypCosine\:ComplexNumber}
{\xe \v ComplexNumber\:HypCosine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::HypCosine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 293 of file cplex.cpp.}\par
{
References ccosh(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   294 \{\par
  295     return new ComplexNumber(ccosh(z));\par
  296 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a3de3278838400b94d6da3aabc264e467_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypCotangent\:ComplexNumber}
{\xe \v ComplexNumber\:HypCotangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::HypCotangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 313 of file cplex.cpp.}\par
{
References ccoth(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   314 \{\par
  315     return new ComplexNumber(ccoth(z));\par
  316 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_aecf508c5b54725938ffe98f97088d4db_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypSecant\:ComplexNumber}
{\xe \v ComplexNumber\:HypSecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::HypSecant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 303 of file cplex.cpp.}\par
{
References ComplexNumber(), csech(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   304 \{\par
  305     return new ComplexNumber(csech(z));\par
  306 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_af3c80a4c100e00445f5e4c52be29c031_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypSine\:ComplexNumber}
{\xe \v ComplexNumber\:HypSine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::HypSine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 288 of file cplex.cpp.}\par
{
References ComplexNumber(), csinh(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   289 \{\par
  290     return new ComplexNumber(csinh(z));\par
  291 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a800a3cce573a4952ffdc61591ef781cc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypTangent\:ComplexNumber}
{\xe \v ComplexNumber\:HypTangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::HypTangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 298 of file cplex.cpp.}\par
{
References ComplexNumber(), ctanh(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   299 \{\par
  300     return new ComplexNumber(ctanh(z));\par
  301 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a313bade9f3fdc7171f907c9fbafa06a0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Log\:ComplexNumber}
{\xe \v ComplexNumber\:Log}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Log (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 213 of file cplex.cpp.}\par
{
References clog(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   214 \{\par
  215     return new ComplexNumber(clog(z));\par
  216 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_af2b337a76672ec647dbe707d3287d6df_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Log10\:ComplexNumber}
{\xe \v ComplexNumber\:Log10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Log10 (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 223 of file cplex.cpp.}\par
{
References clog10(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   224 \{\par
  225     return new ComplexNumber(clog10(z));\par
  226 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a77a7c95712136b6beeded79210a18c00_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Log2\:ComplexNumber}
{\xe \v ComplexNumber\:Log2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Log2 (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 218 of file cplex.cpp.}\par
{
References clogb(), ComplexNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   219 \{\par
  220     return new ComplexNumber(clogb(z));\par
  221 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_ae8ff446ea20c3b1e4dfa979eaed9ea86_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Mul\:ComplexNumber}
{\xe \v ComplexNumber\:Mul}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Mul ({\b Number} *  {\i other}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 129 of file cplex.cpp.}\par
{
References cmul(), ComplexNumber(), cpack(), nsyscomplex, nsysreal, Number::system, RealNumber::x, and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   130 \{\par
  131     if (other->system == nsyscomplex) \{\par
  132         ComplexNumber *w = (ComplexNumber*)other;\par
  133         return new ComplexNumber(cmul(z, w->z));\par
  134     \} else  if (other->system == nsysreal) \{\par
  135         RealNumber *a = (RealNumber*)other;\par
  136         return new ComplexNumber(cmul(z, cpack(a->x, 0.0)));\par
  137     \} else \{\par
  138         return new ComplexNumber();\par
  139     \}\par
  140 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a8b876b0e7e776fa2f0fa2bc034cc224b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v PureComplexValue\:ComplexNumber}
{\xe \v ComplexNumber\:PureComplexValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} ComplexNumber::PureComplexValue (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 76 of file cplex.cpp.}\par
{
References creal(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    77 \{\par
   78     return (creal(z) == 0.0);\par
   79 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a5343b272e85da4ea67a5b8aaa53fdac0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Raise\:ComplexNumber}
{\xe \v ComplexNumber\:Raise}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Raise ({\b Number} *  {\i exponent}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 155 of file cplex.cpp.}\par
{
References ComplexNumber(), cpack(), cpow(), nsyscomplex, nsysreal, Number::system, RealNumber::x, and z.}\par
{
Referenced by RealNumber::Raise().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   156 \{\par
  157     if (exponent->system == nsyscomplex) \{\par
  158         ComplexNumber *w = (ComplexNumber*)exponent;\par
  159         return new ComplexNumber(cpow(z, w->z));\par
  160     \} else  if (exponent->system == nsysreal) \{\par
  161         RealNumber *a = (RealNumber*)exponent;\par
  162         return new ComplexNumber(cpow(z, cpack(a->x, 0.0)));\par
  163     \} else \{\par
  164         return new ComplexNumber();\par
  165     \}\par
  166 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a0ab40e1cbe5c25629fe62643ed8b9352_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a0ab40e1cbe5c25629fe62643ed8b9352_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Reciprocal\:ComplexNumber}
{\xe \v ComplexNumber\:Reciprocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Reciprocal (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 203 of file cplex.cpp.}\par
{
References ComplexNumber(), creci(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   204 \{\par
  205     return new ComplexNumber(creci(z));\par
  206 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_ac85979812dffce5a38ccf3cab090b320_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Round\:ComplexNumber}
{\xe \v ComplexNumber\:Round}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Round (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 183 of file cplex.cpp.}\par
{
References ComplexNumber(), cround(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   184 \{\par
  185     return new ComplexNumber(cround(z));\par
  186 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a5026a3ed13a525843d02acbd0d94a4aa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Secant\:ComplexNumber}
{\xe \v ComplexNumber\:Secant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Secant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 243 of file cplex.cpp.}\par
{
References ComplexNumber(), csec(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   244 \{\par
  245     return new ComplexNumber(csec(z));\par
  246 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a214e1ed3096e8ed3aa0a3c446fe2ef8a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Signum\:ComplexNumber}
{\xe \v ComplexNumber\:Signum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Signum (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 168 of file cplex.cpp.}\par
{
References csgn(), RealNumber::RealNumber(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   169 \{\par
  170     return new RealNumber(csgn(z));\par
  171 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a0dc0f3ef7885f9d6b5a30e6ce983ceeb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Sine\:ComplexNumber}
{\xe \v ComplexNumber\:Sine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Sine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 228 of file cplex.cpp.}\par
{
References ComplexNumber(), csin(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   229 \{\par
  230     return new ComplexNumber(csin(z));\par
  231 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a5125e77b2c28147688cf65f596c9ccb7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SquareRoot\:ComplexNumber}
{\xe \v ComplexNumber\:SquareRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::SquareRoot (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 198 of file cplex.cpp.}\par
{
References ComplexNumber(), csqrt(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   199 \{\par
  200     return new ComplexNumber(csqrt(z));\par
  201 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a9c2d08c5faba8c3db38186264f2361a9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Sub\:ComplexNumber}
{\xe \v ComplexNumber\:Sub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Sub ({\b Number} *  {\i other}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 116 of file cplex.cpp.}\par
{
References ComplexNumber(), cpack(), csub(), nsyscomplex, nsysreal, Number::system, RealNumber::x, and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   117 \{\par
  118     if (other->system == nsyscomplex) \{\par
  119         ComplexNumber *w = (ComplexNumber*)other;\par
  120         return new ComplexNumber(csub(z, w->z));\par
  121     \} else  if (other->system == nsysreal) \{\par
  122         RealNumber *a = (RealNumber*)other;\par
  123         return new ComplexNumber(csub(z, cpack(a->x, 0.0)));\par
  124     \} else \{\par
  125         return new ComplexNumber();\par
  126     \}\par
  127 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a8f196f990620e30495f69338a1e40316_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Tangent\:ComplexNumber}
{\xe \v ComplexNumber\:Tangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Tangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 238 of file cplex.cpp.}\par
{
References ComplexNumber(), ctan(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   239 \{\par
  240     return new ComplexNumber(ctan(z));\par
  241 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a6b7cb0a68c9d44e3367c9a42748af045_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Trunc\:ComplexNumber}
{\xe \v ComplexNumber\:Trunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Trunc (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 178 of file cplex.cpp.}\par
{
References ComplexNumber(), ctrunc(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   179 \{\par
  180     return new ComplexNumber(ctrunc(z));\par
  181 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_aab24afa1330c3777b0e29c6d85114bf1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Unary\:ComplexNumber}
{\xe \v ComplexNumber\:Unary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * ComplexNumber::Unary (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 97 of file cplex.cpp.}\par
{
References cimag(), ComplexNumber(), cpack(), creal(), and z.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    98 \{\par
   99     complex w = cpack(-creal(z), -cimag(z));\par
  100     return new ComplexNumber(w);\par
  101 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structComplexNumber_a52bb791f848e90072a65841c7402b2c4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v z\:ComplexNumber}
{\xe \v ComplexNumber\:z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ComplexNumber::z{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 112 of file cplex.h.}\par
{
Referenced by Absolute(), Add(), ArcCosecant(), ArcCosine(), ArcCotangent(), ArcSecant(), ArcSine(), ArcTangent(), Ceiling(), Clone(), ComplexNumber(), Cosecant(), Cosine(), Cotangent(), CubeRoot(), Div(), Floor(), GetComplexValue(), GetDefaultPrecedence(), GetImagValue(), GetIntegerValue(), GetPrecedence(), GetRealValue(), HypArcCosecant(), HypArcCosine(), HypArcCotangent(), HypArcSecant(), HypArcSine(), HypArcTangent(), HypCosecant(), HypCosine(), HypCotangent(), HypSecant(), HypSine(), HypTangent(), Log(), Log10(), Log2(), Mul(), PureComplexValue(), Raise(), Reciprocal(), Round(), Secant(), Signum(), Sine(), SquareRoot(), Sub(), Tangent(), Trunc(), and Unary().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b cplex.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b cplex.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ConsoleBase Class Reference\par \pard\plain 
{\tc\tcl2 \v ConsoleBase}
{\xe \v ConsoleBase}
{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating console logic. }}\par
{
{\f2 #include <console.h>}}\par
Inheritance diagram for ConsoleBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConsoleBase__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ConsoleBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConsoleBase__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ConsoleBase} (const char *{\b prompt})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ConsoleBase} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b GetName} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Clear} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Exit} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b SetPrompt} (const char *string)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b WriteString} (const char *string)=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b StartMessage} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Prompt} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b prompt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating console logic. \par
}{
Definition at line 42 of file console.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ConsoleBase\:ConsoleBase}
{\xe \v ConsoleBase\:ConsoleBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ConsoleBase::ConsoleBase (const char *  {\i prompt})}}
\par
{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file console.cpp.}\par
{
References AllocAndCopy(), and prompt.}\par
{
Referenced by StandardConsole::StandardConsole().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    33 \{\par
   34     AllocAndCopy(&this->prompt, prompt);\par
   35 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConsoleBase_a69210c6548727255c817e70cdd167f84_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConsoleBase_a69210c6548727255c817e70cdd167f84_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~ConsoleBase\:ConsoleBase}
{\xe \v ConsoleBase\:~ConsoleBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ConsoleBase::~ConsoleBase (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file console.cpp.}\par
{
References prompt.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    38 \{\par
   39     delete prompt;\par
   40 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Clear\:ConsoleBase}
{\xe \v ConsoleBase\:Clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ConsoleBase::Clear (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file console.cpp.}\par
{
References WriteString().}\par
{
Referenced by ClearStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48 \{\par
   49     WriteString(CLEARWINDOW);\par
   50     WriteString(NORMALTEXT);\par
   51 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConsoleBase_a2f5aa6f61f903a098c315640e64815c6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConsoleBase_a2f5aa6f61f903a098c315640e64815c6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Exit\:ConsoleBase}
{\xe \v ConsoleBase\:Exit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void ConsoleBase::Exit (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StandardConsole} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by StandardProgram::Exit().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConsoleBase_a2d23be5ddae9da94a486e05581ed1e35_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetName\:ConsoleBase}
{\xe \v ConsoleBase\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * ConsoleBase::GetName (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ThreadBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABWB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 42 of file console.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    43 \{\par
   44     return CPROCNAME;\par
   45 \}\par
}
}
{\xe \v Prompt\:ConsoleBase}
{\xe \v ConsoleBase\:Prompt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ConsoleBase::Prompt (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file console.cpp.}\par
{
References prompt, and WriteString().}\par
{
Referenced by StandardConsole::Run().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    60 \{\par
   61     WriteString(NORMALTEXT);\par
   62     WriteString(prompt);\par
   63     WriteString(NORMALTEXT);\par
   64 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConsoleBase_a79c5aa072ff3db35944a9825dcbfd9a7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConsoleBase_a79c5aa072ff3db35944a9825dcbfd9a7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetPrompt\:ConsoleBase}
{\xe \v ConsoleBase\:SetPrompt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ConsoleBase::SetPrompt (const char *  {\i string}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b StandardConsole} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABWE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 66 of file console.cpp.}\par
{
References AllocAndCopy(), and prompt.}\par
{
Referenced by PrefsStatement::Execute(), StandardConsole::SetPrompt(), and Program::SetPrompt().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    67 \{\par
   68     delete prompt;\par
   69     AllocAndCopy(&prompt, string);\par
   70 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConsoleBase_a9d0c878a925b9f17d67c5c7ba1c1cec3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConsoleBase_a9d0c878a925b9f17d67c5c7ba1c1cec3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v StartMessage\:ConsoleBase}
{\xe \v ConsoleBase\:StartMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ConsoleBase::StartMessage (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file console.cpp.}\par
{
References WriteString().}\par
{
Referenced by StandardConsole::Run().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    54 \{\par
   55     WriteString(INTROMSG);\par
   56     WriteString(NORMALTEXT);\par
   57 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConsoleBase_a1a390339da026c37c036f87f3a084e87_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConsoleBase_a1a390339da026c37c036f87f3a084e87_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v WriteString\:ConsoleBase}
{\xe \v ConsoleBase\:WriteString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void ConsoleBase::WriteString (const char *  {\i string}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StandardConsole} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABWH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Clear(), Prompt(), and StartMessage().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConsoleBase_a839801eeb5c25cd0a2cb13523e387bed_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v prompt\:ConsoleBase}
{\xe \v ConsoleBase\:prompt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* ConsoleBase::prompt{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file console.h.}\par
{
Referenced by ConsoleBase(), Prompt(), SetPrompt(), and ~ConsoleBase().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b console.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b console.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CosecantNode Class Reference\par \pard\plain 
{\tc\tcl2 \v CosecantNode}
{\xe \v CosecantNode}
{\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for CosecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCosecantNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for CosecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCosecantNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CosecantNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 372 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CosecantNode\:CosecantNode}
{\xe \v CosecantNode\:CosecantNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CosecantNode::CosecantNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 801 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   801                                                      :\par
  802     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCosecantNode_a4e92c76b2ee0b9001f935bdf8b572992_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCosecantNode_a4e92c76b2ee0b9001f935bdf8b572992_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:CosecantNode}
{\xe \v CosecantNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * CosecantNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 804 of file functions.cpp.}\par
{
References CosecantNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   805 \{\par
  806     return new CosecantNode(expression);\par
  807 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCosecantNode_a8c69199ee5f01bfbb9c5e536626c71a3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:CosecantNode}
{\xe \v CosecantNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * CosecantNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 809 of file functions.cpp.}\par
{
References Number::Cosecant(), ExpressionNode::Evaluate(), FunctionNode::expression, and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   810 \{\par
  811     result = expression->Evaluate()->Cosecant();\par
  812     return result;\par
  813 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCosecantNode_a56ecfcf72005dc95477c95df291609e9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:CosecantNode}
{\xe \v CosecantNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * CosecantNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 815 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   816 \{\par
  817     return (char*)"csc";\par
  818 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CosineNode Class Reference\par \pard\plain 
{\tc\tcl2 \v CosineNode}
{\xe \v CosineNode}
{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for CosineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCosineNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for CosineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCosineNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CosineNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 342 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CosineNode\:CosineNode}
{\xe \v CosineNode\:CosineNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CosineNode::CosineNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 763 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   763                                                  :\par
  764     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCosineNode_aba5e5df8a1d7ddba943df048efd1bf87_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCosineNode_aba5e5df8a1d7ddba943df048efd1bf87_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:CosineNode}
{\xe \v CosineNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * CosineNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 766 of file functions.cpp.}\par
{
References CosineNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   767 \{\par
  768     return new CosineNode(expression);\par
  769 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCosineNode_ada8e23d238785cb727d3d11d88072bc2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:CosineNode}
{\xe \v CosineNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * CosineNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 771 of file functions.cpp.}\par
{
References Number::Cosine(), ExpressionNode::Evaluate(), FunctionNode::expression, and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   772 \{\par
  773     result = expression->Evaluate()->Cosine();\par
  774     return result;\par
  775 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCosineNode_a1dc01c6b70db9882e18d9bf773219447_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:CosineNode}
{\xe \v CosineNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * CosineNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 777 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   778 \{\par
  779     return (char*)"cos";\par
  780 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CotangentNode Class Reference\par \pard\plain 
{\tc\tcl2 \v CotangentNode}
{\xe \v CotangentNode}
{\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for CotangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCotangentNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for CotangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCotangentNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CotangentNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 362 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CotangentNode\:CotangentNode}
{\xe \v CotangentNode\:CotangentNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CotangentNode::CotangentNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 839 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   839                                                        :\par
  840     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCotangentNode_a3457b70c27b59112caa8dea6f9b167d9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCotangentNode_a3457b70c27b59112caa8dea6f9b167d9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:CotangentNode}
{\xe \v CotangentNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * CotangentNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 842 of file functions.cpp.}\par
{
References CotangentNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   843 \{\par
  844     return new CotangentNode(expression);\par
  845 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCotangentNode_ac9791f0fe778d4fcbab071a73186e1b0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:CotangentNode}
{\xe \v CotangentNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * CotangentNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 847 of file functions.cpp.}\par
{
References Number::Cotangent(), ExpressionNode::Evaluate(), FunctionNode::expression, and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   848 \{\par
  849     result = expression->Evaluate()->Cotangent();\par
  850     return result;\par
  851 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCotangentNode_a54c895e0369c2b738f12c0534d7d5aa4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:CotangentNode}
{\xe \v CotangentNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * CotangentNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 853 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   854 \{\par
  855     return (char*)"cot";\par
  856 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CubeRootNode Class Reference\par \pard\plain 
{\tc\tcl2 \v CubeRootNode}
{\xe \v CubeRootNode}
{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for CubeRootNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCubeRootNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for CubeRootNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCubeRootNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CubeRootNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 284 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CubeRootNode\:CubeRootNode}
{\xe \v CubeRootNode\:CubeRootNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CubeRootNode::CubeRootNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 652 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   652                                                      :\par
  653     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCubeRootNode_a07dade3cd376ecd6cff809222234cedb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCubeRootNode_a07dade3cd376ecd6cff809222234cedb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:CubeRootNode}
{\xe \v CubeRootNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * CubeRootNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 655 of file functions.cpp.}\par
{
References CubeRootNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   656 \{\par
  657     return new CubeRootNode(expression);\par
  658 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCubeRootNode_a0daa5b5228c4bf2a2ab64c4e94eb149b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:CubeRootNode}
{\xe \v CubeRootNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * CubeRootNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 660 of file functions.cpp.}\par
{
References Number::CubeRoot(), ExpressionNode::Evaluate(), FunctionNode::expression, and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   661 \{\par
  662     result = expression->Evaluate()->CubeRoot();\par
  663     return result;\par
  664 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCubeRootNode_ac1f62e660cecd6bc3cfca1a2dd9e2dcc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:CubeRootNode}
{\xe \v CubeRootNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * CubeRootNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 666 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   667 \{\par
  668     return (char*)"cbrt";\par
  669 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DecimalSystem Class Reference\par \pard\plain 
{\tc\tcl2 \v DecimalSystem}
{\xe \v DecimalSystem}
{\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
\par
{
{\f2 #include <ntext.h>}}\par
Inheritance diagram for DecimalSystem:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDecimalSystem__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for DecimalSystem:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDecimalSystem__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DecimalSystem} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DecimalSystem} (unsigned int {\b digits})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DecimalSystem} (unsigned int {\b digits}, const char {\b fractionpoint})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~DecimalSystem} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const char * {\b GetText} ({\b Number} *number)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b GetRealText} (double value)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 98 of file ntext.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DecimalSystem\:DecimalSystem}
{\xe \v DecimalSystem\:DecimalSystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DecimalSystem::DecimalSystem ()}}
\par
{\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 355 of file ntext.cpp.}\par
{
References PositionalNumeralSystem::PositionalNumeralSystem().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   355                              :\par
  356     PositionalNumeralSystem(10, 5, '\\0')\par
  357 \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDecimalSystem_a96bf562ac5934445ce10dd6d973a9db3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v DecimalSystem\:DecimalSystem}
{\xe \v DecimalSystem\:DecimalSystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DecimalSystem::DecimalSystem (unsigned int  {\i digits})}}
\par
{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 359 of file ntext.cpp.}\par
{
References PositionalNumeralSystem::PositionalNumeralSystem().}\par
{
Referenced by MemoryStatement::Execute(), DigitsStatement::Execute(), PlotStatement::Execute(), PreferencesBase::GetDescription(), PositionalNumeralSystem::GetName(), Parser::ParseDigistStatement(), and Parser::ParseNumeralStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   359                                                 :\par
  360     PositionalNumeralSystem(10, digits, '.')\par
  361 \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDecimalSystem_a726d1a38079ae571c54adfbd0724a0a3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDecimalSystem_a726d1a38079ae571c54adfbd0724a0a3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v DecimalSystem\:DecimalSystem}
{\xe \v DecimalSystem\:DecimalSystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DecimalSystem::DecimalSystem (unsigned int  {\i digits}, const char  {\i fractionpoint})}}
\par
{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 363 of file ntext.cpp.}\par
{
References PositionalNumeralSystem::PositionalNumeralSystem().}\par
{
Referenced by Program::NewPositionalInput(), Program::NewPositionalOutput(), and Program::Program().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   365                               :\par
  366     PositionalNumeralSystem(10, digits, fractionpoint)\par
  367 \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDecimalSystem_a0622c834a7a4a0dc452ab4cab8d84902_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDecimalSystem_a0622c834a7a4a0dc452ab4cab8d84902_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~DecimalSystem\:DecimalSystem}
{\xe \v DecimalSystem\:~DecimalSystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DecimalSystem::~DecimalSystem ()}}
\par
{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 369 of file ntext.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   370 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetRealText\:DecimalSystem}
{\xe \v DecimalSystem\:GetRealText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * DecimalSystem::GetRealText (double  {\i value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 405 of file ntext.cpp.}\par
{
References CharBuffer::Append(), NumeralSystem::buf, PositionalNumeralSystem::digits, CharBuffer::EnsureGrowth(), PositionalNumeralSystem::fractionpoint, CharBuffer::GetString(), log10(), pow(), PrintFloat64(), PrintFloatFormat_Positional, PrintFloatFormat_Scientific, CharBuffer::RemoveTrailing(), round(), and trunc().}\par
{
Referenced by GetText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   406 \{\par
  407     double exponent = log10(fabs(value));\par
  408     int formatdigits = digits - (int)trunc(exponent) - 1;\par
  409 \par
  410     double rounddigits = digits - 1;\par
  411     if (exponent < 0.0) \{\par
  412         rounddigits++;\par
  413         formatdigits++;\par
  414     \}\par
  415 \par
  416     // Remove output of inaccuracy\par
  417     if (formatdigits > (int)digits) \{\par
  418         formatdigits = digits;\par
  419     \}\par
  420 \par
  421     double roundfactor = pow(10.0, rounddigits);\par
  422     double roundedvalue = round(value * roundfactor) / roundfactor;\par
  423 \par
  424     if (roundedvalue == 0.0) \{\par
  425         return "0";\par
  426     \}\par
  427 \par
  428     double ulimit = pow(10.0, (double)digits);\par
  429     double llimit = pow(10.0, -(double)digits);\par
  430 \par
  431     if (fabs(roundedvalue) > ulimit) \{\par
  432         return "INF";\par
  433     \} else if (fabs(roundedvalue) < llimit) \{\par
  434         return "-INF";\par
  435     \}\par
  436 \par
  437     double expborder = log10(fabs(roundedvalue));\par
  438     tPrintFloatFormat format = (expborder > 6.0 || expborder < -5.0) ?\par
  439                                PrintFloatFormat_Scientific :\par
  440                                PrintFloatFormat_Positional;\par
  441 \par
  442     static const int size = 32;\par
  443     char *out = new char[size];\par
  444     PrintFloat64(out, size, roundedvalue, format, formatdigits, fractionpoint);\par
  445     buf->EnsureGrowth(size);\par
  446     buf->Append(out);\par
  447     while (buf->RemoveTrailing('0'))\par
  448         ;\par
  449     buf->RemoveTrailing(fractionpoint);\par
  450     delete[] out;\par
  451 \par
  452     return buf->GetString();\par
  453 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDecimalSystem_a7b3744c834e092220ab3c2b7ed8eee47_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDecimalSystem_a7b3744c834e092220ab3c2b7ed8eee47_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetText\:DecimalSystem}
{\xe \v DecimalSystem\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * DecimalSystem::GetText ({\b Number} *  {\i number}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b PositionalNumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABXK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 372 of file ntext.cpp.}\par
{
References CharBuffer::Append(), NumeralSystem::buf, cimag(), creal(), CharBuffer::Empty(), ComplexNumber::GetComplexValue(), GetRealText(), Number::GetRealValue(), CharBuffer::GetString(), nsysreal, and Number::system.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   373 \{\par
  374     buf->Empty();\par
  375 \par
  376     if (number->system == nsysreal) \{\par
  377         return GetRealText(number->GetRealValue());\par
  378     \}\par
  379 \par
  380     complex w = ((ComplexNumber*)number)->GetComplexValue();\par
  381     double a = creal(w);\par
  382     double b = cimag(w);\par
  383 \par
  384     if (a == 0.0 && b == 0.0) \{\par
  385         buf->Append('0');\par
  386         return buf->GetString();\par
  387     \}\par
  388 \par
  389     if (a != 0.0) \{\par
  390         GetRealText(a);\par
  391     \}\par
  392 \par
  393     if (a != 0.0 && b > 0.0) \{\par
  394         buf->Append('+');\par
  395     \}\par
  396 \par
  397     if (b != 0.0) \{\par
  398         GetRealText(b);\par
  399         buf->Append('i');\par
  400     \}\par
  401 \par
  402     return buf->GetString();\par
  403 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDecimalSystem_ab43f764ed35fe831a16a356bbdc72441_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b ntext.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b ntext.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DeleteStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v DeleteStatement}
{\xe \v DeleteStatement}
{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete variable or function. }}\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for DeleteStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDeleteStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for DeleteStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDeleteStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DeleteStatement} ({\b Symbol} symbol)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to delete either all variable or functions. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DeleteStatement} (const char *{\b name})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to delete a {\b Variable}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DeleteStatement} (const char *{\b name}, const char *{\b argument})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to delete a function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~DeleteStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Symbol} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b argument}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete variable or function. \par
}{
Definition at line 191 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DeleteStatement\:DeleteStatement}
{\xe \v DeleteStatement\:DeleteStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DeleteStatement::DeleteStatement ({\b Symbol}  {\i symbol})}}
\par
{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to delete either all variable or functions. }}\par
{
Definition at line 361 of file statements.cpp.}\par
{
References argument, name, and type.}\par
{
Referenced by Parser::ParseDeleteStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   362 \{\par
  363     type = symbol;\par
  364     name = NOMEM;\par
  365     argument = NOMEM;\par
  366 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDeleteStatement_a335cfbb9db4b3bad5f0a082f247efcaa_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v DeleteStatement\:DeleteStatement}
{\xe \v DeleteStatement\:DeleteStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DeleteStatement::DeleteStatement (const char *  {\i name})}}
\par
{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to delete a {\b Variable}. }}\par
{
Definition at line 372 of file statements.cpp.}\par
{
References AllocAndCopy(), argument, name, StatementNode::StatementNode(), symvariable, and type.}\par
{
Referenced by Parser::ParseDeleteStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   372                                                  :\par
  373     StatementNode()\par
  374 \{\par
  375     type = symvariable;\par
  376     AllocAndCopy(&this->name, name);\par
  377     argument = NOMEM;\par
  378 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDeleteStatement_a9f89688d9c3193cdb7a314f981126ee2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDeleteStatement_a9f89688d9c3193cdb7a314f981126ee2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v DeleteStatement\:DeleteStatement}
{\xe \v DeleteStatement\:DeleteStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DeleteStatement::DeleteStatement (const char *  {\i name}, const char *  {\i argument})}}
\par
{\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to delete a function. }}\par
{
Definition at line 384 of file statements.cpp.}\par
{
References AllocAndCopy(), argument, name, StatementNode::StatementNode(), symfunction, and type.}\par
{
Referenced by Parser::ParseDeleteStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   384                                                                        :\par
  385     StatementNode()\par
  386 \{\par
  387     type = symfunction;\par
  388     AllocAndCopy(&this->name, name);\par
  389     AllocAndCopy(&this->argument, argument);\par
  390 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDeleteStatement_ae742b66f6a74b0420e8ee54c8bc4a980_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDeleteStatement_ae742b66f6a74b0420e8ee54c8bc4a980_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~DeleteStatement\:DeleteStatement}
{\xe \v DeleteStatement\:~DeleteStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DeleteStatement::~DeleteStatement ()}}
\par
{\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 393 of file statements.cpp.}\par
{
References argument, and name.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   394 \{\par
  395     if (name != NOMEM) \{\par
  396         delete [] name;\par
  397     \}\par
  398 \par
  399     if (argument != NOMEM) \{\par
  400         delete [] argument;\par
  401     \}\par
  402 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:DeleteStatement}
{\xe \v DeleteStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * DeleteStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 404 of file statements.cpp.}\par
{
References CharBuffer::Append(), argument, VariableList::Clear(), FunctionList::Clear(), VariableList::Delete(), FunctionList::Delete(), CharBuffer::Empty(), CharBuffer::EnsureSize(), Program::Functions, CharBuffer::GetString(), name, SyntaxNode::output, StrLen(), symfunction, symvariable, type, and Program::Variables.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   405 \{\par
  406     bool success = true;\par
  407     output->Empty();\par
  408 \par
  409     if (type == symvariable && name == NOMEM) \{\par
  410         Program->Variables->Clear();\par
  411     \} else if (type == symvariable && name != NOMEM) \{\par
  412         success = Program->Variables->Delete(name);\par
  413         const char *msg = HELPVARNDEF;\par
  414 \par
  415         output->EnsureSize(\par
  416             StrLen(msg) +\par
  417             StrLen(name) +\par
  418             StrLen(NEWLINE) + 1);\par
  419 \par
  420         output->Append(msg);\par
  421         output->Append(name);\par
  422         output->Append(NEWLINE);\par
  423 \par
  424     \} else if (type == symfunction && name == NOMEM) \{\par
  425         Program->Functions->Clear();\par
  426     \} else if (type == symfunction && name != NOMEM) \{\par
  427         success = Program->Functions->Delete(name, argument);\par
  428         const char *msg = HELPFUNNDEF;\par
  429 \par
  430         output->EnsureSize(\par
  431             StrLen(msg) +\par
  432             StrLen(name) + 2 +\par
  433             StrLen(argument) +\par
  434             StrLen(NEWLINE) + 1);\par
  435 \par
  436         output->Append(msg);\par
  437         output->Append(name);\par
  438         output->Append("(");\par
  439         output->Append(argument);\par
  440         output->Append(")");\par
  441         output->Append(NEWLINE);\par
  442     \}\par
  443 \par
  444     return (char*)(success ? EMPTYSTRING : output->GetString());\par
  445 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDeleteStatement_a709e8696c9ca4be32679e6a72b82de86_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v argument\:DeleteStatement}
{\xe \v DeleteStatement\:argument}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* DeleteStatement::argument{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 202 of file statements.h.}\par
{
Referenced by DeleteStatement(), Execute(), and ~DeleteStatement().}\par
}
{\xe \v name\:DeleteStatement}
{\xe \v DeleteStatement\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* DeleteStatement::name{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 201 of file statements.h.}\par
{
Referenced by DeleteStatement(), Execute(), and ~DeleteStatement().}\par
}
{\xe \v type\:DeleteStatement}
{\xe \v DeleteStatement\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Symbol} DeleteStatement::type{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 200 of file statements.h.}\par
{
Referenced by DeleteStatement(), and Execute().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DigitsStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v DigitsStatement}
{\xe \v DigitsStatement}
{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set number of significant digits to show. }}\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for DigitsStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDigitsStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for DigitsStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDigitsStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DigitsStatement} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to show number of active digits. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DigitsStatement} (unsigned int {\b digits})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to show number of active digits. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~DigitsStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b show}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b digits}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set number of significant digits to show. \par
}{
Definition at line 239 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DigitsStatement\:DigitsStatement}
{\xe \v DigitsStatement\:DigitsStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DigitsStatement::DigitsStatement ()}}
\par
{\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to show number of active digits. }}\par
{
Definition at line 534 of file statements.cpp.}\par
{
References show.}\par
{
Referenced by Parser::ParseDigistStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   535 \{\par
  536     show = true;\par
  537 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDigitsStatement_a37883ab7d81a7ee7332d81cb2f84abf1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v DigitsStatement\:DigitsStatement}
{\xe \v DigitsStatement\:DigitsStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DigitsStatement::DigitsStatement (unsigned int  {\i digits})}}
\par
{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to show number of active digits. }}\par
{
Definition at line 543 of file statements.cpp.}\par
{
References digits, and show.}\par
{
Referenced by Parser::ParseDigistStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   543                                                     :\par
  544     digits(digits) \{\par
  545     show = false;\par
  546 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDigitsStatement_ac099980b5e6606bbeb82598dca08813b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~DigitsStatement\:DigitsStatement}
{\xe \v DigitsStatement\:~DigitsStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DigitsStatement::~DigitsStatement (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 243 of file statements.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   243 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:DigitsStatement}
{\xe \v DigitsStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * DigitsStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 548 of file statements.cpp.}\par
{
References CharBuffer::Append(), DecimalSystem::DecimalSystem(), digits, CharBuffer::Empty(), CharBuffer::EnsureSize(), NumeralSystem::GetDigits(), CharBuffer::GetString(), NumeralSystem::GetText(), Program::Input, Program::Output, SyntaxNode::output, Program::Preferences, RealNumber::RealNumber(), PreferencesBase::SetDigits(), NumeralSystem::SetDigits(), show, and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   549 \{\par
  550     const char *text;\par
  551 \par
  552     if (!show) \{\par
  553         Program->Input->SetDigits(digits);\par
  554         Program->Output->SetDigits(digits);\par
  555         Program->Preferences->SetDigits(digits);\par
  556         text = HELPDIGISETT;\par
  557     \} else \{\par
  558         text = HELPDIGISHOW;\par
  559         digits = Program->Output->GetDigits();\par
  560     \}\par
  561 \par
  562     Number *d = new RealNumber(digits);\par
  563     NumeralSystem *ns = new DecimalSystem(2);\par
  564     const char *dtext = ns->GetText(d);\par
  565     delete d;\par
  566 \par
  567     output->Empty();\par
  568     output->EnsureSize(StrLen(text) + StrLen(dtext) + StrLen(NEWLINE) + 1);\par
  569     output->Append(text);\par
  570     output->Append(dtext);\par
  571     output->Append(NEWLINE);\par
  572 \par
  573     delete ns;\par
  574     return output->GetString();\par
  575 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDigitsStatement_a5a16b621b4759cdc0bf980b01858350b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v digits\:DigitsStatement}
{\xe \v DigitsStatement\:digits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int DigitsStatement::digits{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 248 of file statements.h.}\par
{
Referenced by DigitsStatement(), and Execute().}\par
}
{\xe \v show\:DigitsStatement}
{\xe \v DigitsStatement\:show}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} DigitsStatement::show{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 247 of file statements.h.}\par
{
Referenced by DigitsStatement(), and Execute().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DivisionNode Class Reference\par \pard\plain 
{\tc\tcl2 \v DivisionNode}
{\xe \v DivisionNode}
{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
\par
{
{\f2 #include <operators.h>}}\par
Inheritance diagram for DivisionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDivisionNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for DivisionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDivisionNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DivisionNode} ({\b ExpressionNode} *{\b left}, {\b ExpressionNode} *{\b right})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 128 of file operators.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DivisionNode\:DivisionNode}
{\xe \v DivisionNode\:DivisionNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DivisionNode::DivisionNode ({\b ExpressionNode} *  {\i left}, {\b ExpressionNode} *  {\i right})}}
\par
{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 380 of file operators.cpp.}\par
{
References NumericOperator::NumericOperator().}\par
{
Referenced by Parser::ParseFactor().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   380                                                                       :\par
  381     NumericOperator(left, right) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDivisionNode_a39951420a0f89eb5622ec55f99626c19_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDivisionNode_a39951420a0f89eb5622ec55f99626c19_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Evaluate\:DivisionNode}
{\xe \v DivisionNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * DivisionNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 388 of file operators.cpp.}\par
{
References Number::Div(), ExpressionNode::Evaluate(), NumericOperator::left, ExpressionNode::result, and NumericOperator::right.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   389 \{\par
  390     result = left->Evaluate()->Div(right->Evaluate());\par
  391     return result;\par
  392 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDivisionNode_aacd5e91fefdd7b6147c4ad02e951130e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:DivisionNode}
{\xe \v DivisionNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * DivisionNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 394 of file operators.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   395 \{\par
  396     return (char*)"/";\par
  397 \}\par
}
}
{\xe \v GetPrecedence\:DivisionNode}
{\xe \v DivisionNode\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int DivisionNode::GetPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 383 of file operators.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   384 \{\par
  385     return 3;\par
  386 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DrawStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v DrawStatement}
{\xe \v DrawStatement}
{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for DrawStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDrawStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for DrawStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDrawStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DrawStatement} (const char *{\b name}, const char *{\b parameter})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~DrawStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b parameter}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 315 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DrawStatement\:DrawStatement}
{\xe \v DrawStatement\:DrawStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DrawStatement::DrawStatement (const char *  {\i name}, const char *  {\i parameter})}}
\par
{\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 853 of file statements.cpp.}\par
{
References AllocAndCopy(), name, and parameter.}\par
{
Referenced by Parser::ParseDrawStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   854 \{\par
  855     AllocAndCopy(&this->name, name);\par
  856     AllocAndCopy(&this->parameter, parameter);\par
  857 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDrawStatement_a370abbf650f311ecbcc9ff5faf9a451c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDrawStatement_a370abbf650f311ecbcc9ff5faf9a451c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~DrawStatement\:DrawStatement}
{\xe \v DrawStatement\:~DrawStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DrawStatement::~DrawStatement ()}}
\par
{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 859 of file statements.cpp.}\par
{
References name, and parameter.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   860 \{\par
  861     delete [] name;\par
  862     delete [] parameter;\par
  863 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:DrawStatement}
{\xe \v DrawStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * DrawStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 865 of file statements.cpp.}\par
{
References GraphList::CreateNewWindow(), GraphWindow::DrawGraph(), Program::Functions, FunctionList::GetFunctionDef(), Program::Graphs, name, GraphWindow::OpenGraphWindow(), and parameter.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   866 \{\par
  867     UserFunction *function = Program->Functions->GetFunctionDef(name, parameter);\par
  868 \par
  869     if (function == NOMEM) \{\par
  870         return (char*)("Function does not exists." NEWLINE);\par
  871     \}\par
  872 \par
  873     GraphWindow *graph = Program->Graphs->CreateNewWindow();\par
  874 \par
  875     if (graph == NOMEM) \{\par
  876         return (char*)"Graphs are not supported in this version.";\par
  877     \}\par
  878 \par
  879     graph->OpenGraphWindow(function);\par
  880     graph->DrawGraph(function);\par
  881 \par
  882     return (char*)EMPTYSTRING;\par
  883 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDrawStatement_af3be5149199ab9940b43ee5a2360ba80_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v name\:DrawStatement}
{\xe \v DrawStatement\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* DrawStatement::name{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 322 of file statements.h.}\par
{
Referenced by DrawStatement(), Execute(), and ~DrawStatement().}\par
}
{\xe \v parameter\:DrawStatement}
{\xe \v DrawStatement\:parameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* DrawStatement::parameter{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 323 of file statements.h.}\par
{
Referenced by DrawStatement(), Execute(), and ~DrawStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmptyStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v EmptyStatement}
{\xe \v EmptyStatement}
{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An empty statement. }}\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for EmptyStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEmptyStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for EmptyStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEmptyStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmptyStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~EmptyStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An empty statement. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Statement node which encapsulate an empty statment. This happens fx. if the user only enters a line feed. \par
}{
Definition at line 72 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EmptyStatement\:EmptyStatement}
{\xe \v EmptyStatement\:EmptyStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EmptyStatement::EmptyStatement (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYN}
{\bkmkend AAAAAAABYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file statements.h.}\par
{
Referenced by Parser::Parse().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    74 \{ \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEmptyStatement_a9e2080de25e56a7f44f9f64836c2236e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~EmptyStatement\:EmptyStatement}
{\xe \v EmptyStatement\:~EmptyStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EmptyStatement::~EmptyStatement (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYO}
{\bkmkend AAAAAAABYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file statements.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    75 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:EmptyStatement}
{\xe \v EmptyStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * EmptyStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYP}
{\bkmkend AAAAAAABYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 64 of file statements.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    65 \{\par
   66     return (char*)EMPTYSTRING;\par
   67 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ErrorNode Class Reference\par \pard\plain 
{\tc\tcl2 \v ErrorNode}
{\xe \v ErrorNode}
{\bkmkstart AAAAAAABYQ}
{\bkmkend AAAAAAABYQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an error message encapsulated in a syntax tree. }}\par
{
{\f2 #include <nodes.h>}}\par
Inheritance diagram for ErrorNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classErrorNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ErrorNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classErrorNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ErrorNode} (const char *{\b input}, int {\b pos})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ErrorNode} (const char *{\b input}, const char *{\b message}, const char *parameter, int {\b pos})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ErrorNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodeType} {\b GetNodeType} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b GetNext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetTextCode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Attach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Detach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Replace} ({\b SyntaxNode} *n, {\b SyntaxNode} *x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b StrCopyVisible} (char *destination, const char *source)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b message}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b input}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pos}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an error message encapsulated in a syntax tree. \par
}{
Definition at line 129 of file nodes.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ErrorNode\:ErrorNode}
{\xe \v ErrorNode\:ErrorNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ErrorNode::ErrorNode (const char *  {\i input}, int  {\i pos})}}
\par
{\bkmkstart AAAAAAABYR}
{\bkmkend AAAAAAABYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 170 of file nodes.cpp.}\par
{
References AllocAndCopy(), input, message, pos, StrCopyVisible(), StrLen(), and SyntaxNode::SyntaxNode().}\par
{
Referenced by Parser::Parse(), and Parser::TryParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   170                                                :\par
  171     SyntaxNode(), pos(pos) \{\par
  172     char *temp = HELPSYNTAX;\par
  173     this->input = new char[StrLen(input) + 1];\par
  174     StrCopyVisible(this->input, input);\par
  175     AllocAndCopy(&this->message, temp);\par
  176 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classErrorNode_ac47d46061f61fb60a5c1cf2a61f24a44_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classErrorNode_ac47d46061f61fb60a5c1cf2a61f24a44_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ErrorNode\:ErrorNode}
{\xe \v ErrorNode\:ErrorNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ErrorNode::ErrorNode (const char *  {\i input}, const char *  {\i message}, const char *  {\i parameter}, int  {\i pos})}}
\par
{\bkmkstart AAAAAAABYS}
{\bkmkend AAAAAAABYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 157 of file nodes.cpp.}\par
{
References AllocAndCopy(), CharBuffer::Append(), CharBuffer::CharBuffer(), CharBuffer::EnsureSize(), CharBuffer::GetString(), input, message, pos, StrCopyVisible(), StrLen(), and SyntaxNode::SyntaxNode().}\par
{
Referenced by Parser::ParseDigistStatement(), Parser::ParseFileStatement(), Parser::ParseFunctionDef(), Parser::ParseIdent(), and Parser::ParseNumeralStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   157                                                                                            :\par
  158     SyntaxNode(), pos(pos) \{\par
  159     this->input = new char[StrLen(input) + 1];\par
  160     StrCopyVisible(this->input, input);\par
  161 \par
  162     CharBuffer *temp = new CharBuffer();\par
  163     temp->EnsureSize(StrLen(message) + StrLen(parameter) + 1);\par
  164     temp->Append(message);\par
  165     temp->Append(parameter);\par
  166     AllocAndCopy(&this->message, temp->GetString());\par
  167     delete temp;\par
  168 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classErrorNode_a1c3d4afac02da7fcc0cec125a7ac03ba_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classErrorNode_a1c3d4afac02da7fcc0cec125a7ac03ba_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~ErrorNode\:ErrorNode}
{\xe \v ErrorNode\:~ErrorNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ErrorNode::~ErrorNode (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYT}
{\bkmkend AAAAAAABYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 178 of file nodes.cpp.}\par
{
References input, and message.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   179 \{\par
  180     delete [] input;\par
  181     delete [] message;\par
  182 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Attach\:ErrorNode}
{\xe \v ErrorNode\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ErrorNode::Attach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYU}
{\bkmkend AAAAAAABYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 223 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   224 \{ \}\par
}
}
{\xe \v Detach\:ErrorNode}
{\xe \v ErrorNode\:Detach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ErrorNode::Detach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYV}
{\bkmkend AAAAAAABYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 226 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   227 \{ \}\par
}
}
{\xe \v Execute\:ErrorNode}
{\xe \v ErrorNode\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ErrorNode::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYW}
{\bkmkend AAAAAAABYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 194 of file nodes.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::ClearAndAlloc(), CharBuffer::Empty(), CharBuffer::GetString(), input, message, SyntaxNode::output, pos, and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   195 \{\par
  196     output->ClearAndAlloc(StrLen(message) + StrLen(input) + pos + 1 + StrLen(NEWLINE) * 3 + 1);\par
  197     output->Empty();\par
  198     output->Append(message);\par
  199     output->Append(NEWLINE);\par
  200     output->Append(input);\par
  201     output->Append(NEWLINE);\par
  202     output->Append(' ', pos);\par
  203     output->Append('^');\par
  204     output->Append(NEWLINE);\par
  205 \par
  206     return output->GetString();\par
  207 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classErrorNode_a351cbedab751832da6a67b12ac0abcab_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNext\:ErrorNode}
{\xe \v ErrorNode\:GetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * ErrorNode::GetNext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYY}
{\bkmkend AAAAAAABYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 218 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   219 \{\par
  220     return NOMEM;\par
  221 \}\par
}
}
{\xe \v GetNodeType\:ErrorNode}
{\xe \v ErrorNode\:GetNodeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NodeType} ErrorNode::GetNodeType (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYZ}
{\bkmkend AAAAAAABYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 184 of file nodes.cpp.}\par
{
References othernodetype.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   185 \{\par
  186     return othernodetype;\par
  187 \}\par
}
}
{\xe \v GetTextCode\:ErrorNode}
{\xe \v ErrorNode\:GetTextCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ErrorNode::GetTextCode (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZB}
{\bkmkend AAAAAAABZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 189 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   190 \{\par
  191     return (char*)"ERRND";\par
  192 \}\par
}
}
{\xe \v Replace\:ErrorNode}
{\xe \v ErrorNode\:Replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ErrorNode::Replace ({\b SyntaxNode} *  {\i n}, {\b SyntaxNode} *  {\i x}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZD}
{\bkmkend AAAAAAABZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 229 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   230 \{ \}\par
}
}
{\xe \v StrCopyVisible\:ErrorNode}
{\xe \v ErrorNode\:StrCopyVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ErrorNode::StrCopyVisible (char *  {\i destination}, const char *  {\i source}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABZE}
{\bkmkend AAAAAAABZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 209 of file nodes.cpp.}\par
{
Referenced by ErrorNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   210 \{\par
  211     while (*source != '\\0' && *source >= 32 && *source <= 126) \{\par
  212         *destination++ = *source++;\par
  213     \}\par
  214 \par
  215     *destination = '\\0';\par
  216 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classErrorNode_a2e51822b04905fc867d13546af61abb8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v input\:ErrorNode}
{\xe \v ErrorNode\:input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* ErrorNode::input{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABZF}
{\bkmkend AAAAAAABZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 146 of file nodes.h.}\par
{
Referenced by ErrorNode(), Execute(), and ~ErrorNode().}\par
}
{\xe \v message\:ErrorNode}
{\xe \v ErrorNode\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* ErrorNode::message{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 145 of file nodes.h.}\par
{
Referenced by ErrorNode(), Execute(), and ~ErrorNode().}\par
}
{\xe \v pos\:ErrorNode}
{\xe \v ErrorNode\:pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ErrorNode::pos{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABZH}
{\bkmkend AAAAAAABZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 147 of file nodes.h.}\par
{
Referenced by ErrorNode(), and Execute().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b nodes.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b nodes.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EulersNumberNode Class Reference\par \pard\plain 
{\tc\tcl2 \v EulersNumberNode}
{\xe \v EulersNumberNode}
{\bkmkstart AAAAAAABZI}
{\bkmkend AAAAAAABZI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of Eulers number in a syntax tree. }}\par
{
{\f2 #include <values.h>}}\par
Inheritance diagram for EulersNumberNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEulersNumberNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for EulersNumberNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEulersNumberNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EulersNumberNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ReductionType} {\b GetReductionType} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of Eulers number in a syntax tree. \par
}{
Definition at line 165 of file values.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EulersNumberNode\:EulersNumberNode}
{\xe \v EulersNumberNode\:EulersNumberNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EulersNumberNode::EulersNumberNode ()}}
\par
{\bkmkstart AAAAAAABZJ}
{\bkmkend AAAAAAABZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 400 of file values.cpp.}\par
{
References NumericValueNode::NumericValueNode(), and RealNumber::RealNumber().}\par
{
Referenced by Parser::ParseAtomic().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   400                                    :\par
  401     NumericValueNode(new RealNumber(EULERS)) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEulersNumberNode_a5f2feea3aa3eca36d808303f1b10fc65_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEulersNumberNode_a5f2feea3aa3eca36d808303f1b10fc65_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetNodeText\:EulersNumberNode}
{\xe \v EulersNumberNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * EulersNumberNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZK}
{\bkmkend AAAAAAABZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 408 of file values.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   409 \{\par
  410     return (char*)"e";\par
  411 \}\par
}
}
{\xe \v GetReductionType\:EulersNumberNode}
{\xe \v EulersNumberNode\:GetReductionType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ReductionType} EulersNumberNode::GetReductionType (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZL}
{\bkmkend AAAAAAABZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 403 of file values.cpp.}\par
{
References nonereduc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   404 \{\par
  405     return nonereduc;\par
  406 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EvalStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v EvalStatement}
{\xe \v EvalStatement}
{\bkmkstart AAAAAAABZM}
{\bkmkend AAAAAAABZM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluate arithmetic expression. }}\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for EvalStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEvalStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for EvalStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEvalStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EvalStatement} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~EvalStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b GetNext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Attach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Detach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Replace} ({\b SyntaxNode} *n, {\b SyntaxNode} *x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b expression}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluate arithmetic expression. \par
}{
Definition at line 155 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EvalStatement\:EvalStatement}
{\xe \v EvalStatement\:EvalStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EvalStatement::EvalStatement ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAABZN}
{\bkmkend AAAAAAABZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 251 of file statements.cpp.}\par
{
References expression, and StatementNode::StatementNode().}\par
{
Referenced by Parser::ParseEvaluation(), and Parser::ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   251                                                        :\par
  252     StatementNode(), expression(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEvalStatement_aca4069dd093c588724a5516598ec413f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEvalStatement_aca4069dd093c588724a5516598ec413f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~EvalStatement\:EvalStatement}
{\xe \v EvalStatement\:~EvalStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EvalStatement::~EvalStatement ()}}
\par
{\bkmkstart AAAAAAABZO}
{\bkmkend AAAAAAABZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 254 of file statements.cpp.}\par
{
References expression.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   255 \{\par
  256     if (expression != NOMEM) \{\par
  257         delete expression;\par
  258     \}\par
  259 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Attach\:EvalStatement}
{\xe \v EvalStatement\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EvalStatement::Attach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZP}
{\bkmkend AAAAAAABZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 292 of file statements.cpp.}\par
{
References expression, and SyntaxNode::SetParent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   293 \{\par
  294     if (expression == NOMEM) \{\par
  295         expression = (ExpressionNode*)node;\par
  296         node->SetParent(this);\par
  297     \}\par
  298 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEvalStatement_a1b689a777c3022a40d042410fc3fac77_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Detach\:EvalStatement}
{\xe \v EvalStatement\:Detach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EvalStatement::Detach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZR}
{\bkmkend AAAAAAABZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 300 of file statements.cpp.}\par
{
References expression.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   301 \{\par
  302     if (expression == node) \{\par
  303         expression = NOMEM;\par
  304     \}\par
  305 \}\par
}
}
{\xe \v Execute\:EvalStatement}
{\xe \v EvalStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * EvalStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZT}
{\bkmkend AAAAAAABZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 261 of file statements.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::Empty(), CharBuffer::EnsureSize(), ExpressionNode::Evaluate(), expression, CharBuffer::GetString(), NumeralSystem::GetText(), ExpressionNode::GetText(), Program::Output, SyntaxNode::output, Program::SetLastResult(), and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   262 \{\par
  263     Number* result = expression->Evaluate();\par
  264     Program->SetLastResult(result);\par
  265     const char *text = expression->GetText();\par
  266     const char *val = Program->Output->GetText(result);\par
  267 \par
  268     output->Empty();\par
  269     output->EnsureSize(\par
  270         StrLen(text) + 3 +\par
  271         StrLen(val) +\par
  272         StrLen(NEWLINE) + 1);\par
  273 \par
  274     output->Append(text);\par
  275     output->Append(" = ");\par
  276     output->Append(val);\par
  277     output->Append(NEWLINE);\par
  278 \par
  279     return output->GetString();\par
  280 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEvalStatement_a6d3e0e2db3ed8cbdaa3250bf959a0be7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNext\:EvalStatement}
{\xe \v EvalStatement\:GetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * EvalStatement::GetNext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZU}
{\bkmkend AAAAAAABZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 282 of file statements.cpp.}\par
{
References expression, and SyntaxNode::iterator.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   283 \{\par
  284     if (iterator == NOMEM) \{\par
  285         iterator = expression;\par
  286         return iterator;\par
  287     \}\par
  288 \par
  289     return NOMEM;\par
  290 \}\par
}
}
{\xe \v Replace\:EvalStatement}
{\xe \v EvalStatement\:Replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EvalStatement::Replace ({\b SyntaxNode} *  {\i n}, {\b SyntaxNode} *  {\i x}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZW}
{\bkmkend AAAAAAABZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 307 of file statements.cpp.}\par
{
References expression.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   308 \{\par
  309     if (expression == n) \{\par
  310         delete expression;\par
  311         expression = (ExpressionNode*)x;\par
  312     \}\par
  313 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v expression\:EvalStatement}
{\xe \v EvalStatement\:expression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode}* EvalStatement::expression{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 167 of file statements.h.}\par
{
Referenced by Attach(), Detach(), EvalStatement(), Execute(), GetNext(), Replace(), and ~EvalStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Evaluator Class Reference\par \pard\plain 
{\tc\tcl2 \v Evaluator}
{\xe \v Evaluator}
{\bkmkstart AAAAAAABZZ}
{\bkmkend AAAAAAABZZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO: Comment. }}\par
{
{\f2 #include <evaluator.h>}}\par
Collaboration diagram for Evaluator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEvaluator__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Evaluator} (const char *{\b input})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Evaluator} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Evaluate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetResult} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b input}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} * {\b output}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO: Comment. \par
}{
Definition at line 43 of file evaluator.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Evaluator\:Evaluator}
{\xe \v Evaluator\:Evaluator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Evaluator::Evaluator (const char *  {\i input})}}
\par
{\bkmkstart AAAAAAACAA}
{\bkmkend AAAAAAACAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file evaluator.cpp.}\par
{
References CharBuffer::CharBuffer(), input, and output.}\par
{
Referenced by StandardProgram::Run(), and StandardConsole::Run().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    34 \{\par
   35     this->input = input;\par
   36     output = new CharBuffer();\par
   37 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEvaluator_a5eb7fa4c5ccc81b3f9e88980b9d62dd5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEvaluator_a5eb7fa4c5ccc81b3f9e88980b9d62dd5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~Evaluator\:Evaluator}
{\xe \v Evaluator\:~Evaluator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Evaluator::~Evaluator ()}}
\par
{\bkmkstart AAAAAAACAB}
{\bkmkend AAAAAAACAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file evaluator.cpp.}\par
{
References output.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40 \{\par
   41     if (output != NOMEM) \{\par
   42         delete output;\par
   43     \}\par
   44 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Evaluate\:Evaluator}
{\xe \v Evaluator\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Evaluator::Evaluate ()}}
\par
{\bkmkstart AAAAAAACAC}
{\bkmkend AAAAAAACAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file evaluator.cpp.}\par
{
References CharBuffer::ClearAndCopy(), CharBuffer::ClearBuffer(), SyntaxNode::Execute(), Optimizer::GetRoot(), input, Optimizer::Optimize(), Optimizer::Optimizer(), output, Parser::Parse(), and Parser::Parser().}\par
{
Referenced by StandardProgram::Run(), and StandardConsole::Run().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    47 \{\par
   48     output->ClearBuffer();\par
   49 \par
   50     Parser* parser = new Parser(input);\par
   51     SyntaxNode* node = parser->Parse();\par
   52     delete parser;\par
   53 \par
   54 #ifdef DEBUGTREE\par
   55     Viewer *viewer = new Viewer(node);\par
   56     const char *vout = viewer->GetTree();\par
   57     output->EnsureGrowth(StrLen(vout));\par
   58     output->Append(vout);\par
   59     delete viewer;\par
   60 #endif\par
   61 \par
   62     Optimizer* optimizer = new Optimizer(node);\par
   63     optimizer->Optimize();\par
   64     node = optimizer->GetRoot();\par
   65     delete optimizer;\par
   66 \par
   67 #ifdef DEBUGTREE\par
   68     viewer = new Viewer(node);\par
   69     vout = viewer->GetTree();\par
   70     output->EnsureGrowth(StrLen(vout));\par
   71     output->Append(vout);\par
   72     delete viewer;\par
   73 \par
   74     const char *out = node->Execute();\par
   75     output->EnsureGrowth(StrLen(out));\par
   76     output->Append(out);\par
   77 #endif\par
   78 \par
   79 #ifndef DEBUGTREE\par
   80     const char *out = node->Execute();\par
   81     output->ClearAndCopy(out);\par
   82 #endif\par
   83 \par
   84     delete node;\par
   85 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEvaluator_a40b30ece9d43c658877ee7f52aaec0a8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEvaluator_a40b30ece9d43c658877ee7f52aaec0a8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetResult\:Evaluator}
{\xe \v Evaluator\:GetResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * Evaluator::GetResult ()}}
\par
{\bkmkstart AAAAAAACAD}
{\bkmkend AAAAAAACAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file evaluator.cpp.}\par
{
References CharBuffer::GetString(), and output.}\par
{
Referenced by StandardProgram::Run(), and StandardConsole::Run().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    88 \{\par
   89     return output->GetString();\par
   90 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEvaluator_abcc678772175bf00127a3b307463ae4b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEvaluator_abcc678772175bf00127a3b307463ae4b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v input\:Evaluator}
{\xe \v Evaluator\:input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* Evaluator::input{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACAE}
{\bkmkend AAAAAAACAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file evaluator.h.}\par
{
Referenced by Evaluate(), and Evaluator().}\par
}
{\xe \v output\:Evaluator}
{\xe \v Evaluator\:output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CharBuffer}* Evaluator::output{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACAF}
{\bkmkend AAAAAAACAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file evaluator.h.}\par
{
Referenced by Evaluate(), Evaluator(), GetResult(), and ~Evaluator().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b evaluator.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b evaluator.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExecuteStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v ExecuteStatement}
{\xe \v ExecuteStatement}
{\bkmkstart AAAAAAACAG}
{\bkmkend AAAAAAACAG}
\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for ExecuteStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExecuteStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ExecuteStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExecuteStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExecuteStatement} (const char *{\b file})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ExecuteStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b file}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 292 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ExecuteStatement\:ExecuteStatement}
{\xe \v ExecuteStatement\:ExecuteStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ExecuteStatement::ExecuteStatement (const char *  {\i file})}}
\par
{\bkmkstart AAAAAAACAH}
{\bkmkend AAAAAAACAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 721 of file statements.cpp.}\par
{
References AllocAndCopy(), and file.}\par
{
Referenced by Parser::ParseFileStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   722 \{\par
  723     AllocAndCopy(&this->file, file);\par
  724 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExecuteStatement_a69c86b1a4517ba286491742238a234b3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExecuteStatement_a69c86b1a4517ba286491742238a234b3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~ExecuteStatement\:ExecuteStatement}
{\xe \v ExecuteStatement\:~ExecuteStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ExecuteStatement::~ExecuteStatement ()}}
\par
{\bkmkstart AAAAAAACAI}
{\bkmkend AAAAAAACAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 726 of file statements.cpp.}\par
{
References file.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   727 \{\par
  728     delete [] file;\par
  729 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:ExecuteStatement}
{\xe \v ExecuteStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ExecuteStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 731 of file statements.cpp.}\par
{
References CharBuffer::ClearAndCopy(), SyntaxNode::Execute(), file, Program::Filesystem, CharBuffer::GetString(), FilesystemBase::LoadTextFile(), SyntaxNode::output, Parser::Parse(), and Parser::Parser().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   732 \{\par
  733     CharBuffer *input = Program->Filesystem->LoadTextFile(file);\par
  734     if (input == NOMEM)\par
  735     \{\par
  736         return (char*)(MSGNOFILE);\par
  737     \}\par
  738 \par
  739     Parser *parser = new Parser(input->GetString());\par
  740     delete input;\par
  741 \par
  742     SyntaxNode *node = parser->Parse();\par
  743     delete parser;\par
  744 \par
  745     const char *res = node->Execute();\par
  746     output->ClearAndCopy(res);\par
  747     delete node;\par
  748 \par
  749     return output->GetString();\par
  750 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExecuteStatement_a8a3bbafeb8739749eab6eaf8a4b9969c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v file\:ExecuteStatement}
{\xe \v ExecuteStatement\:file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* ExecuteStatement::file{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 299 of file statements.h.}\par
{
Referenced by Execute(), ExecuteStatement(), and ~ExecuteStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExitStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v ExitStatement}
{\xe \v ExitStatement}
{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exit program. }}\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for ExitStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExitStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ExitStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExitStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExitStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ExitStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exit program. \par
}{
Definition at line 58 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ExitStatement\:ExitStatement}
{\xe \v ExitStatement\:ExitStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ExitStatement::ExitStatement (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file statements.h.}\par
{
Referenced by Parser::ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    60 \{ \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExitStatement_aa023a4db5bc1cef8841913c74861c8e3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~ExitStatement\:ExitStatement}
{\xe \v ExitStatement\:~ExitStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ExitStatement::~ExitStatement (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file statements.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    61 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:ExitStatement}
{\xe \v ExitStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ExitStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 54 of file statements.cpp.}\par
{
References Program::Exit().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    55 \{\par
   56     Program->Exit();\par
   57     return (char*)EMPTYSTRING;\par
   58 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExitStatement_a0c7aef922938d7f7f02b8ca402a3bd38_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpressionNode Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpressionNode}
{\xe \v ExpressionNode}
{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all nodes related to mathematical expressions. }}\par
{
{\f2 #include <nodes.h>}}\par
Inheritance diagram for ExpressionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpressionNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ExpressionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpressionNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} ({\b Number} *value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ExpressionNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodeType} {\b GetNodeType} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b IsSilent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual char * {\b GetText} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Evaluate} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b GetPrecedence} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetTextCode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual char * {\b GetNodeText} ()=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b result}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all nodes related to mathematical expressions. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nodes of this type is used to build trees representing an mathematical expressions. Each node in the tree consist of a number, an operator or any other element in an expression. \par
}{
Definition at line 88 of file nodes.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ExpressionNode\:ExpressionNode}
{\xe \v ExpressionNode\:ExpressionNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ExpressionNode::ExpressionNode ()}}
\par
{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 116 of file nodes.cpp.}\par
{
References result, and SyntaxNode::SyntaxNode().}\par
{
Referenced by AbsoluteNode::AbsoluteNode(), FunctionNode::FunctionNode(), NumericOperator::NumericOperator(), UnaryNode::UnaryNode(), and VariableNode::VariableNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   116                                :\par
  117     SyntaxNode() \{\par
  118     result = NOMEM;\par
  119 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpressionNode_adc8888de5329d356224c8a93f3ce2b75_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpressionNode_adc8888de5329d356224c8a93f3ce2b75_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ExpressionNode\:ExpressionNode}
{\xe \v ExpressionNode\:ExpressionNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ExpressionNode::ExpressionNode ({\b Number} *  {\i value})}}
\par
{\bkmkstart AAAAAAACAR}
{\bkmkend AAAAAAACAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 121 of file nodes.cpp.}\par
{
References result, and SyntaxNode::SyntaxNode().}\par
{
Referenced by NumericValueNode::NumericValueNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   121                                             :\par
  122     SyntaxNode() \{\par
  123     result = value;\par
  124 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpressionNode_a5d67579dd6c9777a18455a1360f29841_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpressionNode_a5d67579dd6c9777a18455a1360f29841_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~ExpressionNode\:ExpressionNode}
{\xe \v ExpressionNode\:~ExpressionNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ExpressionNode::~ExpressionNode (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAS}
{\bkmkend AAAAAAACAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 126 of file nodes.cpp.}\par
{
References result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   127 \{\par
  128     if (result != NOMEM) \{\par
  129         delete result;\par
  130     \}\par
  131 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Evaluate\:ExpressionNode}
{\xe \v ExpressionNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* ExpressionNode::Evaluate (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b HyperbolicArcSecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicArcCosecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicArcCotangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicArctangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicArcsineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicArccosineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicCosecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicSecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicCotangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicTangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicCosineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicSineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ArcSecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABPC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ArcCosecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABON \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ArcCotangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ArcTangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABPM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ArcCosineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ArcSineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABPH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CosecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABWM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CotangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABWW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b TangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CosineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABWR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b BinaryLogNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABQA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b LnRootNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b LogNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CubeRootNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABXB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SquareRootNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CeilingNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABQF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b FloorNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b TruncNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b RoundNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SignumNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AbsoluteFunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b UserFunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AssignmentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABPQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b PowerNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b InsVariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b DivisionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MultiplicationNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SubtractionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b VariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AdditionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AbsoluteNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b UnaryNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by UnaryNode::Evaluate(), AbsoluteNode::Evaluate(), AdditionNode::Evaluate(), SubtractionNode::Evaluate(), MultiplicationNode::Evaluate(), DivisionNode::Evaluate(), PowerNode::Evaluate(), AssignmentNode::Evaluate(), UserFunctionNode::Evaluate(), AbsoluteFunctionNode::Evaluate(), SignumNode::Evaluate(), RoundNode::Evaluate(), TruncNode::Evaluate(), FloorNode::Evaluate(), CeilingNode::Evaluate(), SquareRootNode::Evaluate(), CubeRootNode::Evaluate(), LogNode::Evaluate(), LnRootNode::Evaluate(), BinaryLogNode::Evaluate(), SineNode::Evaluate(), CosineNode::Evaluate(), TangentNode::Evaluate(), CotangentNode::Evaluate(), CosecantNode::Evaluate(), SecantNode::Evaluate(), ArcSineNode::Evaluate(), ArcCosineNode::Evaluate(), ArcTangentNode::Evaluate(), ArcCotangentNode::Evaluate(), ArcCosecantNode::Evaluate(), ArcSecantNode::Evaluate(), HyperbolicSineNode::Evaluate(), HyperbolicCosineNode::Evaluate(), HyperbolicTangentNode::Evaluate(), HyperbolicCotangentNode::Evaluate(), HyperbolicSecantNode::Evaluate(), HyperbolicCosecantNode::Evaluate(), HyperbolicArccosineNode::Evaluate(), HyperbolicArcsineNode::Evaluate(), HyperbolicArctangentNode::Evaluate(), HyperbolicArcCotangentNode::Evaluate(), HyperbolicArcCosecantNode::Evaluate(), HyperbolicArcSecantNode::Evaluate(), EvalStatement::Execute(), and Grid::FunctionValue().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpressionNode_a64975d4dc37742228bd522f6204537f7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Execute\:ExpressionNode}
{\xe \v ExpressionNode\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ExpressionNode::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBX}
{\bkmkend AAAAAAACBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 148 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   149 \{\par
  150     return NOMEM;\par
  151 \}\par
}
}
{\xe \v GetNodeText\:ExpressionNode}
{\xe \v ExpressionNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual char* ExpressionNode::GetNodeText (){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b HyperbolicArcSecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicArcCosecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicArcCotangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicArctangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicArcsineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicArccosineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicCosecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicSecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicCotangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicTangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicCosineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HyperbolicSineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ArcSecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABPD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ArcCosecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ArcCotangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ArcTangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABPN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ArcCosineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ArcSineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABPI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CosecantNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABWN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CotangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABWX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b TangentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CosineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABWS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SineNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b BinaryLogNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABQB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b LnRootNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b LogNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CubeRootNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABXC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SquareRootNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CeilingNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABQG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b FloorNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b TruncNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b RoundNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SignumNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ComplexiNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AbsoluteFunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b PiNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b EulersNumberNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b UserFunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AssignmentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABPR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b PowerNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b InsVariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b DivisionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MultiplicationNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b VariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SubtractionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AdditionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AbsoluteNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKT \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b UnaryNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by FunctionNode::GetText(), NumericOperator::GetText(), and GetTextCode().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpressionNode_a42a5e9562b0f645a19dcc83f698069b5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeType\:ExpressionNode}
{\xe \v ExpressionNode\:GetNodeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NodeType} ExpressionNode::GetNodeType (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDC}
{\bkmkend AAAAAAACDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 133 of file nodes.cpp.}\par
{
References expression.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   134 \{\par
  135     return expression;\par
  136 \}\par
}
}
{\xe \v GetPrecedence\:ExpressionNode}
{\xe \v ExpressionNode\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int ExpressionNode::GetPrecedence (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b AssignmentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABPS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b PowerNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b DivisionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MultiplicationNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SubtractionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b VariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AdditionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AbsoluteNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b FunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDI \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b UnaryNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Optimizer::BalanceTree(), UnaryNode::GetText(), and NumericOperator::GetText().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpressionNode_a161b9ea0b79bbfc101d6f687c8481ddd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetText\:ExpressionNode}
{\xe \v ExpressionNode\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual char* ExpressionNode::GetText (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b InsVariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b VariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b NumericOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AbsoluteNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b FunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDO \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b UnaryNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by EvalStatement::Execute(), UnaryNode::GetText(), FunctionNode::GetText(), AbsoluteNode::GetText(), NumericOperator::GetText(), UserFunction::InitializeTexts(), and FunctionList::ListContent().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpressionNode_a0bbf243108a14eaf963a8161ffd8eb92_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetTextCode\:ExpressionNode}
{\xe \v ExpressionNode\:GetTextCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ExpressionNode::GetTextCode (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 143 of file nodes.cpp.}\par
{
References GetNodeText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   144 \{\par
  145     return GetNodeText();\par
  146 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpressionNode_abb495de256b8c9a1c7bb61910fab25ab_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v IsSilent\:ExpressionNode}
{\xe \v ExpressionNode\:IsSilent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} ExpressionNode::IsSilent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b AssignmentNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABPT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 138 of file nodes.cpp.}\par
{
Referenced by Parser::ParseEvaluation().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   139 \{\par
  140     return false;\par
  141 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpressionNode_adc58a4c102b7fa18e9c3a0be361b0663_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v result\:ExpressionNode}
{\xe \v ExpressionNode\:result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number}* ExpressionNode::result{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACDR}
{\bkmkend AAAAAAACDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file nodes.h.}\par
{
Referenced by UnaryNode::Evaluate(), AbsoluteNode::Evaluate(), AdditionNode::Evaluate(), VariableNode::Evaluate(), SubtractionNode::Evaluate(), MultiplicationNode::Evaluate(), DivisionNode::Evaluate(), PowerNode::Evaluate(), NumericValueNode::Evaluate(), AbsoluteFunctionNode::Evaluate(), SignumNode::Evaluate(), RoundNode::Evaluate(), TruncNode::Evaluate(), FloorNode::Evaluate(), CeilingNode::Evaluate(), SquareRootNode::Evaluate(), CubeRootNode::Evaluate(), LogNode::Evaluate(), LnRootNode::Evaluate(), BinaryLogNode::Evaluate(), SineNode::Evaluate(), CosineNode::Evaluate(), TangentNode::Evaluate(), CotangentNode::Evaluate(), CosecantNode::Evaluate(), SecantNode::Evaluate(), ArcSineNode::Evaluate(), ArcCosineNode::Evaluate(), ArcTangentNode::Evaluate(), ArcCotangentNode::Evaluate(), ArcCosecantNode::Evaluate(), ArcSecantNode::Evaluate(), HyperbolicSineNode::Evaluate(), HyperbolicCosineNode::Evaluate(), HyperbolicTangentNode::Evaluate(), HyperbolicCotangentNode::Evaluate(), HyperbolicSecantNode::Evaluate(), HyperbolicCosecantNode::Evaluate(), HyperbolicArccosineNode::Evaluate(), HyperbolicArcsineNode::Evaluate(), HyperbolicArctangentNode::Evaluate(), HyperbolicArcCotangentNode::Evaluate(), HyperbolicArcCosecantNode::Evaluate(), HyperbolicArcSecantNode::Evaluate(), ExpressionNode(), NumericValueNode::GetNodeText(), NumericValueNode::GetPrecedence(), NumericValueNode::ReplaceWith(), and ~ExpressionNode().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b nodes.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b nodes.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FilesystemBase Class Reference\par \pard\plain 
{\tc\tcl2 \v FilesystemBase}
{\xe \v FilesystemBase}
{\bkmkstart AAAAAAACDS}
{\bkmkend AAAAAAACDS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating file system calls. }}\par
{
{\f2 #include <filesystem.h>}}\par
Inheritance diagram for FilesystemBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFilesystemBase__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~FilesystemBase} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b CharBuffer} * {\b ListDirectory} (const char *path)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b CharBuffer} * {\b LoadTextFile} (const char *name)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b SaveTextFile} (const char *name, const char *text)=0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating file system calls. \par
}{
Definition at line 42 of file filesystem.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ~FilesystemBase\:FilesystemBase}
{\xe \v FilesystemBase\:~FilesystemBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual FilesystemBase::~FilesystemBase (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDT}
{\bkmkend AAAAAAACDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file filesystem.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ListDirectory\:FilesystemBase}
{\xe \v FilesystemBase\:ListDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b CharBuffer}* FilesystemBase::ListDirectory (const char *  {\i path}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACDU}
{\bkmkend AAAAAAACDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StandardFilesystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by ListStatement::Execute().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFilesystemBase_a2f48a44b0b99b3c23e7c1a7587b5fc9c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v LoadTextFile\:FilesystemBase}
{\xe \v FilesystemBase\:LoadTextFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b CharBuffer}* FilesystemBase::LoadTextFile (const char *  {\i name}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACDW}
{\bkmkend AAAAAAACDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StandardFilesystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by ShowStatement::Execute(), LoadStatement::Execute(), ExecuteStatement::Execute(), and StandardLanguage::LoadCatalog().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFilesystemBase_adc4a9e1dc189bcd221e3b994bc854d46_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SaveTextFile\:FilesystemBase}
{\xe \v FilesystemBase\:SaveTextFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} FilesystemBase::SaveTextFile (const char *  {\i name}, const char *  {\i text}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACDY}
{\bkmkend AAAAAAACDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StandardFilesystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by SaveStatement::Execute().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFilesystemBase_a66b54f8151cd8903ac757207b062ef48_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b filesystem.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FloorNode Class Reference\par \pard\plain 
{\tc\tcl2 \v FloorNode}
{\xe \v FloorNode}
{\bkmkstart AAAAAAACEA}
{\bkmkend AAAAAAACEA}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for FloorNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFloorNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for FloorNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFloorNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FloorNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 250 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FloorNode\:FloorNode}
{\xe \v FloorNode\:FloorNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FloorNode::FloorNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACEB}
{\bkmkend AAAAAAACEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 583 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   583                                                :\par
  584     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFloorNode_abb0ae020cc7c684e8caba32b15c7e44f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFloorNode_abb0ae020cc7c684e8caba32b15c7e44f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:FloorNode}
{\xe \v FloorNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * FloorNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACEC}
{\bkmkend AAAAAAACEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 586 of file functions.cpp.}\par
{
References FloorNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   587 \{\par
  588     return new FloorNode(expression);\par
  589 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFloorNode_ad745c4e1c52cb8ad304d5ec5837e695a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:FloorNode}
{\xe \v FloorNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * FloorNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBL}
{\bkmkend AAAAAAACBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 591 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::Floor(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   592 \{\par
  593     result = expression->Evaluate()->Floor();\par
  594     return result;\par
  595 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFloorNode_a9c08ed22595cf33924eeb51160b30432_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:FloorNode}
{\xe \v FloorNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * FloorNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCQ}
{\bkmkend AAAAAAACCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 597 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   598 \{\par
  599     return (char*)"floor";\par
  600 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
functiondef Struct Reference\par \pard\plain 
{\tc\tcl2 \v functiondef}
{\xe \v functiondef}
{\bkmkstart AAAAAAACED}
{\bkmkend AAAAAAACED}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function defitions of known mathematical functions. }}\par
{
{\f2 #include <functiondefs.h>}}\par
Collaboration diagram for functiondef:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structfunctiondef__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CreateFunctionNode} {\b create}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function defitions of known mathematical functions. \par
}{
Definition at line 46 of file functiondefs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v create\:functiondef}
{\xe \v functiondef\:create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CreateFunctionNode} functiondef::create}}
\par
{\bkmkstart AAAAAAACEE}
{\bkmkend AAAAAAACEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file functiondefs.h.}\par
{
Referenced by FunctionList::GetFunctionCall().}\par
}
{\xe \v name\:functiondef}
{\xe \v functiondef\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* functiondef::name}}
\par
{\bkmkstart AAAAAAACEF}
{\bkmkend AAAAAAACEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file functiondefs.h.}\par
{
Referenced by FunctionList::GetSystemFunction().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functiondefs.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FunctionDefinitionNode Class Reference\par \pard\plain 
{\tc\tcl2 \v FunctionDefinitionNode}
{\xe \v FunctionDefinitionNode}
{\bkmkstart AAAAAAACEG}
{\bkmkend AAAAAAACEG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A syntax node able to define a user defined function. }}\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for FunctionDefinitionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionDefinitionNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for FunctionDefinitionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionDefinitionNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionDefinitionNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetText} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A syntax node able to define a user defined function. \par
}{
Definition at line 147 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FunctionDefinitionNode\:FunctionDefinitionNode}
{\xe \v FunctionDefinitionNode\:FunctionDefinitionNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FunctionDefinitionNode::FunctionDefinitionNode ()}}
\par
{\bkmkstart AAAAAAACEH}
{\bkmkend AAAAAAACEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 258 of file functions.cpp.}\par
{
References CharBuffer::Empty(), CharBuffer::EnsureMinimumSize(), SyntaxNode::output, and StatementNode::StatementNode().}\par
{
Referenced by Parser::ParseFunctionDef().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   258                                                :\par
  259     StatementNode() \{\par
  260     output->EnsureMinimumSize();\par
  261     output->Empty();\par
  262 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionDefinitionNode_a1ecb6319492be964ad5089739cf65d63_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionDefinitionNode_a1ecb6319492be964ad5089739cf65d63_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:FunctionDefinitionNode}
{\xe \v FunctionDefinitionNode\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * FunctionDefinitionNode::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACEI}
{\bkmkend AAAAAAACEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 264 of file functions.cpp.}\par
{
References CharBuffer::GetString(), and SyntaxNode::output.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   265 \{\par
  266     // TODO: Move function definition logic from parser to here.\par
  267     return output->GetString();\par
  268 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionDefinitionNode_af51888496269ad95052794a6898ccc07_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetText\:FunctionDefinitionNode}
{\xe \v FunctionDefinitionNode\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * FunctionDefinitionNode::GetText ()}}
\par
{\bkmkstart AAAAAAACEJ}
{\bkmkend AAAAAAACEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 270 of file functions.cpp.}\par
{
References CharBuffer::GetString(), and SyntaxNode::output.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   271 \{\par
  272     return output->GetString();\par
  273 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionDefinitionNode_a36b853a90870fab9f1dbebeaa9b9cc18_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FunctionList Class Reference\par \pard\plain 
{\tc\tcl2 \v FunctionList}
{\xe \v FunctionList}
{\bkmkstart AAAAAAACEK}
{\bkmkend AAAAAAACEK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of user defined functions. }}\par
{
{\f2 #include <functions.h>}}\par
Collaboration diagram for FunctionList:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionList} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FunctionList} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Clear} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b Delete} (const char *name, const char *argument)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b IsSystemFunction} (const char *name)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UserFunction} * {\b GetFirstFunction} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UserFunction} * {\b GetFunctionDef} (const char *name)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UserFunction} * {\b GetFunctionDef} (const char *name, const char *argument)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionNode} * {\b GetFunctionCall} (const char *function, {\b ExpressionNode} *value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b List} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b ListDefinitions} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b ListContent} ({\b bool} cmdFormat)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b functiondef} * {\b GetSystemFunction} (const char *ident)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} * {\b buf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UserFunction} * {\b first}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of user defined functions. \par
}{
Definition at line 78 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FunctionList\:FunctionList}
{\xe \v FunctionList\:FunctionList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FunctionList::FunctionList ()}}
\par
{\bkmkstart AAAAAAACEL}
{\bkmkend AAAAAAACEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 279 of file functions.cpp.}\par
{
References buf, CharBuffer::CharBuffer(), and first.}\par
{
Referenced by Program::Program().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   280 \{\par
  281     first = NOMEM;\par
  282     buf = new CharBuffer();\par
  283 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_a602bd0647dbe5ef4911100c52d1c9388_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_a602bd0647dbe5ef4911100c52d1c9388_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~FunctionList\:FunctionList}
{\xe \v FunctionList\:~FunctionList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FunctionList::~FunctionList ()}}
\par
{\bkmkstart AAAAAAACEM}
{\bkmkend AAAAAAACEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 285 of file functions.cpp.}\par
{
References buf, and first.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   286 \{\par
  287     if (first != NOMEM) \{\par
  288         delete first;\par
  289     \}\par
  290 \par
  291     delete buf;\par
  292 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Clear\:FunctionList}
{\xe \v FunctionList\:Clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FunctionList::Clear ()}}
\par
{\bkmkstart AAAAAAACEN}
{\bkmkend AAAAAAACEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 294 of file functions.cpp.}\par
{
References buf, CharBuffer::ClearBuffer(), and first.}\par
{
Referenced by DeleteStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   295 \{\par
  296     if (first != NOMEM) \{\par
  297         delete first;\par
  298         first = NOMEM;\par
  299     \}\par
  300 \par
  301     buf->ClearBuffer();\par
  302 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_afe4ccb5f29da8542a3df84f3fe64f4bb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_afe4ccb5f29da8542a3df84f3fe64f4bb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Delete\:FunctionList}
{\xe \v FunctionList\:Delete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} FunctionList::Delete (const char *  {\i name}, const char *  {\i argument})}}
\par
{\bkmkstart AAAAAAACEO}
{\bkmkend AAAAAAACEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 304 of file functions.cpp.}\par
{
References UserFunction::chainDelete, first, Variable::GetName(), UserFunction::GetName(), UserFunction::GetVariable(), UserFunction::Next, and StrIsEqual().}\par
{
Referenced by DeleteStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   305 \{\par
  306     if (first == NOMEM)\par
  307     \{\par
  308         return false;\par
  309     \}\par
  310 \par
  311     if (first != NOMEM && StrIsEqual(first->GetName(), name) && StrIsEqual(first->GetVariable()->GetName(), argument)) \{\par
  312         UserFunction *func = first;\par
  313         first = first->Next;\par
  314         func->chainDelete = false;\par
  315         delete func;\par
  316         return true;\par
  317     \}\par
  318 \par
  319     UserFunction *current = first->Next;\par
  320     UserFunction *last = first;\par
  321 \par
  322     while (current != NOMEM && !StrIsEqual(current->GetName(), name)) \{\par
  323         current = current->Next;\par
  324         last = last->Next;\par
  325     \}\par
  326 \par
  327     if (current == NOMEM) \{\par
  328         return false;\par
  329     \} else if (!StrIsEqual(current->GetVariable()->GetName(), argument)) \{\par
  330         return false;\par
  331     \}\par
  332 \par
  333     last->Next = current->Next;\par
  334 \par
  335     // Only delete this variable. Not the whole chain.\par
  336     current->chainDelete = false;\par
  337     delete current;\par
  338 \par
  339     return true;\par
  340 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_ae0e646a32dd118de74ab8d06f3bb775a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_ae0e646a32dd118de74ab8d06f3bb775a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetFirstFunction\:FunctionList}
{\xe \v FunctionList\:GetFirstFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UserFunction} * FunctionList::GetFirstFunction ()}}
\par
{\bkmkstart AAAAAAACEP}
{\bkmkend AAAAAAACEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 342 of file functions.cpp.}\par
{
References first.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   343 \{\par
  344     return first;\par
  345 \}\par
}
}
{\xe \v GetFunctionCall\:FunctionList}
{\xe \v FunctionList\:GetFunctionCall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * FunctionList::GetFunctionCall (const char *  {\i function}, {\b ExpressionNode} *  {\i value})}}
\par
{\bkmkstart AAAAAAACEQ}
{\bkmkend AAAAAAACEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 388 of file functions.cpp.}\par
{
References functiondef::create, first, UserFunction::GetName(), GetSystemFunction(), UserFunction::Next, StrIsEqual(), and UserFunctionNode::UserFunctionNode().}\par
{
Referenced by Parser::ParseIdent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   389 \{\par
  390     const functiondef *systemFunction = GetSystemFunction(function);\par
  391     if (systemFunction != NOMEM) \{\par
  392         return (systemFunction->create)(parameter);\par
  393     \}\par
  394 \par
  395     UserFunction *current = first;\par
  396     while (current != NOMEM && !StrIsEqual(current->GetName(), function)) \{\par
  397         current = current->Next;\par
  398     \}\par
  399 \par
  400     if (current != NOMEM) \{\par
  401         return new UserFunctionNode(current, parameter);\par
  402     \}\par
  403 \par
  404     return NOMEM;\par
  405 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_ae8dc9d2913429faefdfed463ae3272c1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_ae8dc9d2913429faefdfed463ae3272c1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetFunctionDef\:FunctionList}
{\xe \v FunctionList\:GetFunctionDef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UserFunction} * FunctionList::GetFunctionDef (const char *  {\i name})}}
\par
{\bkmkstart AAAAAAACER}
{\bkmkend AAAAAAACER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 347 of file functions.cpp.}\par
{
References first, UserFunction::GetName(), UserFunction::Next, StrIsEqual(), and UserFunction::UserFunction().}\par
{
Referenced by Parser::ParseFunctionDef().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   348 \{\par
  349     // Search the list for function definition. If function not found then create a new definition.\par
  350     if (first == NOMEM) \{\par
  351         first = new UserFunction(name);\par
  352         return first;\par
  353     \}\par
  354 \par
  355     UserFunction *current = first;\par
  356     UserFunction *last = NOMEM;\par
  357 \par
  358     while (current != NOMEM) \{\par
  359         if (StrIsEqual(current->GetName(), name)) \{\par
  360             return current;\par
  361         \}\par
  362 \par
  363         last = current;\par
  364         current = current->Next;\par
  365     \}\par
  366 \par
  367     current = new UserFunction(name);\par
  368     last->Next = current;\par
  369 \par
  370     return current;\par
  371 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_acf0716fd18c32a6d52a947052060a2a1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_acf0716fd18c32a6d52a947052060a2a1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetFunctionDef\:FunctionList}
{\xe \v FunctionList\:GetFunctionDef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UserFunction} * FunctionList::GetFunctionDef (const char *  {\i name}, const char *  {\i argument})}}
\par
{\bkmkstart AAAAAAACES}
{\bkmkend AAAAAAACES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 373 of file functions.cpp.}\par
{
References first, Variable::GetName(), UserFunction::GetName(), UserFunction::GetVariable(), UserFunction::Next, and StrIsEqual().}\par
{
Referenced by PlotStatement::Execute(), and DrawStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   374 \{\par
  375     UserFunction *current = first;\par
  376 \par
  377     while (current != NOMEM) \{\par
  378         if (StrIsEqual(current->GetName(), name) && StrIsEqual(current->GetVariable()->GetName(), argument)) \{\par
  379             return current;\par
  380         \}\par
  381 \par
  382         current = current->Next;\par
  383     \}\par
  384 \par
  385     return NOMEM;\par
  386 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_a867e5afb83ce8d6ee658290a76f54614_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_a867e5afb83ce8d6ee658290a76f54614_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetSystemFunction\:FunctionList}
{\xe \v FunctionList\:GetSystemFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b functiondef} * FunctionList::GetSystemFunction (const char *  {\i ident}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACET}
{\bkmkend AAAAAAACET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 463 of file functions.cpp.}\par
{
References functiondefs, functiondef::name, and StrIsEqual().}\par
{
Referenced by GetFunctionCall(), and IsSystemFunction().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   464 \{\par
  465     static const unsigned int count = sizeof(functiondefs) / sizeof(functiondef);\par
  466     for (unsigned int i = 0; i < count; i++) \{\par
  467         if (StrIsEqual(functiondefs[i].name, ident)) \{\par
  468             return (functiondef*)&functiondefs[i];\par
  469         \}\par
  470     \}\par
  471 \par
  472     return NOMEM;\par
  473 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_aabcebb1bdf56aee163f96483dcdc603c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_aabcebb1bdf56aee163f96483dcdc603c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v IsSystemFunction\:FunctionList}
{\xe \v FunctionList\:IsSystemFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} FunctionList::IsSystemFunction (const char *  {\i name})}}
\par
{\bkmkstart AAAAAAACEU}
{\bkmkend AAAAAAACEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 458 of file functions.cpp.}\par
{
References GetSystemFunction().}\par
{
Referenced by Parser::ParseFunctionDef().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   459 \{\par
  460     return (GetSystemFunction(name) != NOMEM);\par
  461 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_a7c5872fe4a522983041ac12c2cb37ea3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_a7c5872fe4a522983041ac12c2cb37ea3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v List\:FunctionList}
{\xe \v FunctionList\:List}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * FunctionList::List ()}}
\par
{\bkmkstart AAAAAAACEV}
{\bkmkend AAAAAAACEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 407 of file functions.cpp.}\par
{
References ListContent().}\par
{
Referenced by ListFunctionsStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   408 \{\par
  409     return ListContent(false);\par
  410 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_a667bf5683f0b7332b5607781df53c728_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_a667bf5683f0b7332b5607781df53c728_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ListContent\:FunctionList}
{\xe \v FunctionList\:ListContent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * FunctionList::ListContent ({\b bool}  {\i cmdFormat}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEW}
{\bkmkend AAAAAAACEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 417 of file functions.cpp.}\par
{
References CharBuffer::Append(), buf, CharBuffer::Empty(), CharBuffer::EnsureSize(), first, UserFunction::GetExpression(), Variable::GetName(), UserFunction::GetName(), CharBuffer::GetString(), ExpressionNode::GetText(), UserFunction::GetVariable(), UserFunction::Next, and StrLen().}\par
{
Referenced by List(), and ListDefinitions().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   418 \{\par
  419     if (first == NOMEM) \{\par
  420         return (char*)(cmdFormat ? NOMEM : HELPFUNCNDEF);\par
  421     \}\par
  422 \par
  423     int len = 0;\par
  424     UserFunction *current = first;\par
  425 \par
  426     while (current != NOMEM) \{\par
  427         len += StrLen(current->GetName());\par
  428         len += 1;\par
  429         len += StrLen(current->GetVariable()->GetName());\par
  430         len += 2;\par
  431         len += StrLen(current->GetExpression()->GetText());\par
  432         len += cmdFormat ? 2 : 1;\par
  433         current = current->Next;\par
  434     \}\par
  435 \par
  436     buf->Empty();\par
  437     buf->EnsureSize(len + StrLen(NEWLINE) + 1);\par
  438 \par
  439     current = first;\par
  440     while (current != NOMEM) \{\par
  441         buf->Append(current->GetName());\par
  442         buf->Append("(");\par
  443         buf->Append(current->GetVariable()->GetName());\par
  444         buf->Append(")=");\par
  445         buf->Append(current->GetExpression()->GetText());\par
  446 \par
  447         if (cmdFormat) \{\par
  448             buf->Append(';');\par
  449         \}\par
  450 \par
  451         buf->Append(NEWLINE);\par
  452         current = current->Next;\par
  453     \}\par
  454 \par
  455     return buf->GetString();\par
  456 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_ac87c5ecfbdfd7aa7c9c8c611b70c3a63_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_ac87c5ecfbdfd7aa7c9c8c611b70c3a63_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ListDefinitions\:FunctionList}
{\xe \v FunctionList\:ListDefinitions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * FunctionList::ListDefinitions ()}}
\par
{\bkmkstart AAAAAAACEX}
{\bkmkend AAAAAAACEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 412 of file functions.cpp.}\par
{
References ListContent().}\par
{
Referenced by SaveStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   413 \{\par
  414     return ListContent(true);\par
  415 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_af69593a40790f4d696a74e46c3c9e552_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionList_af69593a40790f4d696a74e46c3c9e552_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buf\:FunctionList}
{\xe \v FunctionList\:buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CharBuffer}* FunctionList::buf{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEY}
{\bkmkend AAAAAAACEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file functions.h.}\par
{
Referenced by Clear(), FunctionList(), ListContent(), and ~FunctionList().}\par
}
{\xe \v first\:FunctionList}
{\xe \v FunctionList\:first}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UserFunction}* FunctionList::first{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEZ}
{\bkmkend AAAAAAACEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file functions.h.}\par
{
Referenced by Clear(), Delete(), FunctionList(), GetFirstFunction(), GetFunctionCall(), GetFunctionDef(), ListContent(), and ~FunctionList().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FunctionNode Class Reference\par \pard\plain 
{\tc\tcl2 \v FunctionNode}
{\xe \v FunctionNode}
{\bkmkstart AAAAAAACFA}
{\bkmkend AAAAAAACFA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a mathematical function in a syntax tree. }}\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for FunctionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for FunctionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FunctionNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetText} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b SyntaxNode} * {\b GetNext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Attach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Detach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Replace} ({\b SyntaxNode} *n, {\b SyntaxNode} *x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b expression}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a mathematical function in a syntax tree. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function nodes in syntax trees can both be well known functions like cosine (cos) and also user defined functions. The function node represents a function call and not a function definition.\par
A formal description of mathematical functions can be found at Wikipedia: {\f2 http://en.wikipedia.org/wiki/Function_(mathematics)}\par
When instantiating a function node an argument must be supplied. The argument is a pointer to an expression node representing the value which should be used when computing the function value. \par
}{
Definition at line 55 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FunctionNode\:FunctionNode}
{\xe \v FunctionNode\:FunctionNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FunctionNode::FunctionNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACFB}
{\bkmkend AAAAAAACFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file functions.cpp.}\par
{
References expression, and ExpressionNode::ExpressionNode().}\par
{
Referenced by AbsoluteFunctionNode::AbsoluteFunctionNode(), ArcCosecantNode::ArcCosecantNode(), ArcCosineNode::ArcCosineNode(), ArcCotangentNode::ArcCotangentNode(), ArcSecantNode::ArcSecantNode(), ArcSineNode::ArcSineNode(), ArcTangentNode::ArcTangentNode(), BinaryLogNode::BinaryLogNode(), CeilingNode::CeilingNode(), CosecantNode::CosecantNode(), CosineNode::CosineNode(), CotangentNode::CotangentNode(), CubeRootNode::CubeRootNode(), FloorNode::FloorNode(), HyperbolicArcCosecantNode::HyperbolicArcCosecantNode(), HyperbolicArccosineNode::HyperbolicArccosineNode(), HyperbolicArcCotangentNode::HyperbolicArcCotangentNode(), HyperbolicArcSecantNode::HyperbolicArcSecantNode(), HyperbolicArcsineNode::HyperbolicArcsineNode(), HyperbolicArctangentNode::HyperbolicArctangentNode(), HyperbolicCosecantNode::HyperbolicCosecantNode(), HyperbolicCosineNode::HyperbolicCosineNode(), HyperbolicCotangentNode::HyperbolicCotangentNode(), HyperbolicSecantNode::HyperbolicSecantNode(), HyperbolicSineNode::HyperbolicSineNode(), HyperbolicTangentNode::HyperbolicTangentNode(), LnRootNode::LnRootNode(), LogNode::LogNode(), RoundNode::RoundNode(), SecantNode::SecantNode(), SignumNode::SignumNode(), SineNode::SineNode(), SquareRootNode::SquareRootNode(), TangentNode::TangentNode(), TruncNode::TruncNode(), and UserFunctionNode::UserFunctionNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    39                                                      :\par
   40     ExpressionNode(), expression(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionNode_a41cb7db0162ffbec0902bd8ff7ea435f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionNode_a41cb7db0162ffbec0902bd8ff7ea435f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~FunctionNode\:FunctionNode}
{\xe \v FunctionNode\:~FunctionNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FunctionNode::~FunctionNode ()}}
\par
{\bkmkstart AAAAAAACFC}
{\bkmkend AAAAAAACFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file functions.cpp.}\par
{
References expression.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    43 \{\par
   44     if (expression != NOMEM) \{\par
   45         delete expression;\par
   46     \}\par
   47 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Attach\:FunctionNode}
{\xe \v FunctionNode\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FunctionNode::Attach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACFD}
{\bkmkend AAAAAAACFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b UserFunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 79 of file functions.cpp.}\par
{
References expression, and SyntaxNode::SetParent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    80 \{\par
   81     if (expression == NOMEM) \{\par
   82         expression = (ExpressionNode*)node;\par
   83         node->SetParent(this);\par
   84     \}\par
   85 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionNode_aec646af849e98f7aee604398dccf1385_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Detach\:FunctionNode}
{\xe \v FunctionNode\:Detach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FunctionNode::Detach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACFF}
{\bkmkend AAAAAAACFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b UserFunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 87 of file functions.cpp.}\par
{
References expression.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    88 \{\par
   89     if (expression == node) \{\par
   90         expression = NOMEM;\par
   91     \}\par
   92 \}\par
}
}
{\xe \v GetNext\:FunctionNode}
{\xe \v FunctionNode\:GetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * FunctionNode::GetNext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACFH}
{\bkmkend AAAAAAACFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b UserFunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 69 of file functions.cpp.}\par
{
References expression, and SyntaxNode::iterator.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    70 \{\par
   71     if (iterator == NOMEM) \{\par
   72         iterator = expression;\par
   73         return expression;\par
   74     \}\par
   75 \par
   76     return NOMEM;\par
   77 \}\par
}
}
{\xe \v GetPrecedence\:FunctionNode}
{\xe \v FunctionNode\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FunctionNode::GetPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDI}
{\bkmkend AAAAAAACDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 49 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{\par
   51     return 5;\par
   52 \}\par
}
}
{\xe \v GetText\:FunctionNode}
{\xe \v FunctionNode\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * FunctionNode::GetText (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 54 of file functions.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::Empty(), CharBuffer::EnsureSize(), expression, ExpressionNode::GetNodeText(), CharBuffer::GetString(), ExpressionNode::GetText(), SyntaxNode::output, and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    55 \{\par
   56     const char *functionText = GetNodeText();\par
   57     const char *expText = expression->GetText();\par
   58 \par
   59     output->EnsureSize(StrLen(functionText) + StrLen(expText) + 2 + 1);\par
   60     output->Empty();\par
   61     output->Append(functionText);\par
   62     output->Append("(");\par
   63     output->Append(expText);\par
   64     output->Append(")");\par
   65 \par
   66     return output->GetString();\par
   67 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFunctionNode_a86b42caf0a4019d8f594dc994bb094e7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Replace\:FunctionNode}
{\xe \v FunctionNode\:Replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FunctionNode::Replace ({\b SyntaxNode} *  {\i n}, {\b SyntaxNode} *  {\i x}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACFJ}
{\bkmkend AAAAAAACFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b UserFunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 94 of file functions.cpp.}\par
{
References expression.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    95 \{\par
   96     if (expression == n) \{\par
   97         delete expression;\par
   98         expression = (ExpressionNode*)x;\par
   99     \}\par
  100 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v expression\:FunctionNode}
{\xe \v FunctionNode\:expression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode}* FunctionNode::expression{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACFL}
{\bkmkend AAAAAAACFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file functions.h.}\par
{
Referenced by Attach(), Detach(), UserFunctionNode::Evaluate(), AbsoluteFunctionNode::Evaluate(), SignumNode::Evaluate(), RoundNode::Evaluate(), TruncNode::Evaluate(), FloorNode::Evaluate(), CeilingNode::Evaluate(), SquareRootNode::Evaluate(), CubeRootNode::Evaluate(), LogNode::Evaluate(), LnRootNode::Evaluate(), BinaryLogNode::Evaluate(), SineNode::Evaluate(), CosineNode::Evaluate(), TangentNode::Evaluate(), CotangentNode::Evaluate(), CosecantNode::Evaluate(), SecantNode::Evaluate(), ArcSineNode::Evaluate(), ArcCosineNode::Evaluate(), ArcTangentNode::Evaluate(), ArcCotangentNode::Evaluate(), ArcCosecantNode::Evaluate(), ArcSecantNode::Evaluate(), HyperbolicSineNode::Evaluate(), HyperbolicCosineNode::Evaluate(), HyperbolicTangentNode::Evaluate(), HyperbolicCotangentNode::Evaluate(), HyperbolicSecantNode::Evaluate(), HyperbolicCosecantNode::Evaluate(), HyperbolicArccosineNode::Evaluate(), HyperbolicArcsineNode::Evaluate(), HyperbolicArctangentNode::Evaluate(), HyperbolicArcCotangentNode::Evaluate(), HyperbolicArcCosecantNode::Evaluate(), HyperbolicArcSecantNode::Evaluate(), FunctionNode(), GetNext(), GetText(), Replace(), and ~FunctionNode().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GraphList Class Reference\par \pard\plain 
{\tc\tcl2 \v GraphList}
{\xe \v GraphList}
{\bkmkstart AAAAAAACFM}
{\bkmkend AAAAAAACFM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of open graph windows. }}\par
{
{\f2 #include <graphlist.h>}}\par
Collaboration diagram for GraphList:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGraphList__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GraphList} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~GraphList} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GraphWindow} * {\b CreateNewWindow} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GraphWindow} * {\b first}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of open graph windows. \par
}{
Definition at line 42 of file graphlist.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v GraphList\:GraphList}
{\xe \v GraphList\:GraphList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GraphList::GraphList ()}}
\par
{\bkmkstart AAAAAAACFN}
{\bkmkend AAAAAAACFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file graphlist.cpp.}\par
{
References first.}\par
{
Referenced by Program::Program().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    33 \{\par
   34     first = NOMEM;\par
   35 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGraphList_a7a5c8bcb31e753f7b32cbd7da34db063_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~GraphList\:GraphList}
{\xe \v GraphList\:~GraphList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GraphList::~GraphList ()}}
\par
{\bkmkstart AAAAAAACFO}
{\bkmkend AAAAAAACFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file graphlist.cpp.}\par
{
References first.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    38 \{\par
   39     if (first != NOMEM) \{\par
   40         delete first;\par
   41     \}\par
   42 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateNewWindow\:GraphList}
{\xe \v GraphList\:CreateNewWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GraphWindow} * GraphList::CreateNewWindow ()}}
\par
{\bkmkstart AAAAAAACFP}
{\bkmkend AAAAAAACFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file graphlist.cpp.}\par
{
References CreateGraphWindow(), first, and GraphWindow::next.}\par
{
Referenced by DrawStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45 \{\par
   46     if (first == NOMEM) \{\par
   47         first = CreateGraphWindow();\par
   48         return first;\par
   49     \}\par
   50 \par
   51     GraphWindow *current = first;\par
   52     GraphWindow *last = NOMEM;\par
   53 \par
   54     do \{\par
   55         last = current;\par
   56         current = current->next;\par
   57     \} while (current != NOMEM);\par
   58 \par
   59     current = CreateGraphWindow();\par
   60     last->next = current;\par
   61 \par
   62     return current;\par
   63 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGraphList_a184e5ad986cd07281a96dc107ebfcd5d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGraphList_a184e5ad986cd07281a96dc107ebfcd5d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v first\:GraphList}
{\xe \v GraphList\:first}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GraphWindow}* GraphList::first{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFQ}
{\bkmkend AAAAAAACFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file graphlist.h.}\par
{
Referenced by CreateNewWindow(), GraphList(), and ~GraphList().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b graphlist.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b graphlist.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GraphWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v GraphWindow}
{\xe \v GraphWindow}
{\bkmkstart AAAAAAACFR}
{\bkmkend AAAAAAACFR}
\par
{
{\f2 #include <graph.h>}}\par
Collaboration diagram for GraphWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGraphWindow__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GraphWindow} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~GraphWindow} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OpenGraphWindow} ({\b UserFunction} *function)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b CloseGraphWindow} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b DrawGraph} ({\b UserFunction} *function)=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b DrawAxis} ()=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GraphWindow} * {\b next}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grid} * {\b grid}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GraphList}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 42 of file graph.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v GraphWindow\:GraphWindow}
{\xe \v GraphWindow\:GraphWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GraphWindow::GraphWindow ()}}
\par
{\bkmkstart AAAAAAACFS}
{\bkmkend AAAAAAACFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file graph.cpp.}\par
{
References grid, and next.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    31 \{\par
   32     grid = NOMEM;\par
   33     next = NOMEM;\par
   34 \}\par
}
}
{\xe \v ~GraphWindow\:GraphWindow}
{\xe \v GraphWindow\:~GraphWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GraphWindow::~GraphWindow (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACFT}
{\bkmkend AAAAAAACFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file graph.cpp.}\par
{
References grid, and next.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    37 \{\par
   38     if (grid != NOMEM) \{\par
   39         delete grid;\par
   40     \}\par
   41 \par
   42     if (next != NOMEM) \{\par
   43         delete next;\par
   44     \}\par
   45 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CloseGraphWindow\:GraphWindow}
{\xe \v GraphWindow\:CloseGraphWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void GraphWindow::CloseGraphWindow (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACFU}
{\bkmkend AAAAAAACFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawAxis\:GraphWindow}
{\xe \v GraphWindow\:DrawAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void GraphWindow::DrawAxis (){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACFV}
{\bkmkend AAAAAAACFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawGraph\:GraphWindow}
{\xe \v GraphWindow\:DrawGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void GraphWindow::DrawGraph ({\b UserFunction} *  {\i function}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACFW}
{\bkmkend AAAAAAACFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by DrawStatement::Execute().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGraphWindow_a476a4a268feb290df84b6dc4eeac8af2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v OpenGraphWindow\:GraphWindow}
{\xe \v GraphWindow\:OpenGraphWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void GraphWindow::OpenGraphWindow ({\b UserFunction} *  {\i function}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACFX}
{\bkmkend AAAAAAACFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by DrawStatement::Execute().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGraphWindow_a63309cbe3e1989d9eac566372dc888e8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v GraphList\:GraphWindow}
{\xe \v GraphWindow\:GraphList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b GraphList}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACFY}
{\bkmkend AAAAAAACFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file graph.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v grid\:GraphWindow}
{\xe \v GraphWindow\:grid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Grid}* GraphWindow::grid{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACFZ}
{\bkmkend AAAAAAACFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file graph.h.}\par
{
Referenced by GraphWindow(), and ~GraphWindow().}\par
}
{\xe \v next\:GraphWindow}
{\xe \v GraphWindow\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GraphWindow}* GraphWindow::next{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACGA}
{\bkmkend AAAAAAACGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file graph.h.}\par
{
Referenced by GraphList::CreateNewWindow(), GraphWindow(), and ~GraphWindow().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b graph.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b graph.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Grid Class Reference\par \pard\plain 
{\tc\tcl2 \v Grid}
{\xe \v Grid}
{\bkmkstart AAAAAAACGB}
{\bkmkend AAAAAAACGB}
\par
{
{\f2 #include <fgrid.h>}}\par
Collaboration diagram for Grid:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGrid__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grid} ({\b UserFunction} *{\b function})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Grid} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetFunctionBounderies} (double {\b minX}, double {\b maxX})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetScreenBounderues} (int {\b minX}, int {\b maxX}, int {\b minY}, int {\b maxY})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetScreenCoordinates} (double value, int *x, int *y)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetScreenCoordinates} (double xval, int *x, double yval, int *y)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetHorizontalResolution} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetXAxis} (int *xstart, int *xend, int *ystart, int *yend)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetYAxis} (int *xstart, int *xend, int *ystart, int *yend)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b FunctionValue} (double {\b parameter})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UserFunction} * {\b function}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RealNumber} * {\b parameter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minX}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b maxX}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minY}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b maxY}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pad}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b screenMinX}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b screenMaxX}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b screenMinY}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b screenMaxY}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b originX}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b originY}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b zoom}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scaleX}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scaleY}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 39 of file fgrid.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Grid\:Grid}
{\xe \v Grid\:Grid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Grid::Grid ({\b UserFunction} *  {\i function})}}
\par
{\bkmkstart AAAAAAACGC}
{\bkmkend AAAAAAACGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file fgrid.cpp.}\par
{
References function, pad, parameter, RealNumber::RealNumber(), and zoom.}\par
{
Referenced by PlotStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    31                                  :\par
   32     function(function)\par
   33 \{\par
   34     parameter = new RealNumber();\par
   35     zoom = 1.0;\par
   36     pad = 8;\par
   37 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGrid_af3a182cffb3b2f18ab0de9fb0184c3ca_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGrid_af3a182cffb3b2f18ab0de9fb0184c3ca_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~Grid\:Grid}
{\xe \v Grid\:~Grid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Grid::~Grid ()}}
\par
{\bkmkstart AAAAAAACGD}
{\bkmkend AAAAAAACGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file fgrid.cpp.}\par
{
References parameter.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40 \{\par
   41     delete parameter;\par
   42 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v FunctionValue\:Grid}
{\xe \v Grid\:FunctionValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Grid::FunctionValue (double  {\i parameter}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGE}
{\bkmkend AAAAAAACGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file fgrid.cpp.}\par
{
References Variable::AssignValue(), ExpressionNode::Evaluate(), function, UserFunction::GetExpression(), Number::GetRealValue(), UserFunction::GetVariable(), parameter, and RealNumber::SetRealValue().}\par
{
Referenced by GetScreenCoordinates(), and SetFunctionBounderies().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    79 \{\par
   80     this->parameter->SetRealValue(parameter);\par
   81     function->GetVariable()->AssignValue(this->parameter);\par
   82     Number *res = function->GetExpression()->Evaluate();\par
   83     double value = res->GetRealValue();\par
   84     return value;\par
   85 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGrid_a9e403482f403a28e3a152b435526829b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGrid_a9e403482f403a28e3a152b435526829b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetHorizontalResolution\:Grid}
{\xe \v Grid\:GetHorizontalResolution}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Grid::GetHorizontalResolution ()}}
\par
{\bkmkstart AAAAAAACGF}
{\bkmkend AAAAAAACGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file fgrid.cpp.}\par
{
References maxX, minX, screenMaxX, and screenMinX.}\par
{
Referenced by PlotStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45 \{\par
   46     return (maxX - minX) / (screenMaxX - screenMinX);\par
   47 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGrid_a9fa683c5f40922b5da39c647c4f4622d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetScreenCoordinates\:Grid}
{\xe \v Grid\:GetScreenCoordinates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Grid::GetScreenCoordinates (double  {\i value}, int *  {\i x}, int *  {\i y})}}
\par
{\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file fgrid.cpp.}\par
{
References FunctionValue(), originX, originY, scaleX, scaleY, screenMaxX, screenMaxY, screenMinX, screenMinY, and zoom.}\par
{
Referenced by PlotStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    88 \{\par
   89     double valueX = value * scaleX * zoom + originX;\par
   90     double valueY = FunctionValue(value) * scaleY * zoom + originY;\par
   91 \par
   92     *x = valueX < screenMinX || valueX > screenMaxX ? -1 : (int)valueX;\par
   93     *y = valueY < screenMinY || valueY > screenMaxY ? -1 : (int)valueY;\par
   94 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGrid_a430009c581ae9350ec310f63c1b89140_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGrid_a430009c581ae9350ec310f63c1b89140_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetScreenCoordinates\:Grid}
{\xe \v Grid\:GetScreenCoordinates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Grid::GetScreenCoordinates (double  {\i xval}, int *  {\i x}, double  {\i yval}, int *  {\i y})}}
\par
{\bkmkstart AAAAAAACGH}
{\bkmkend AAAAAAACGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file fgrid.cpp.}\par
{
References originX, originY, scaleX, scaleY, screenMaxX, screenMaxY, screenMinX, screenMinY, and zoom.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    97 \{\par
   98     double valueX = xval * scaleX * zoom + originX;\par
   99     double valueY = yval * scaleY * zoom + originY;\par
  100 \par
  101     *x = valueX < screenMinX || valueX > screenMaxX ? -1 : (int)valueX;\par
  102     *y = valueY < screenMinY || valueY > screenMaxY ? -1 : (int)valueY;\par
  103 \}\par
}
}
{\xe \v GetXAxis\:Grid}
{\xe \v Grid\:GetXAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Grid::GetXAxis (int *  {\i xstart}, int *  {\i xend}, int *  {\i ystart}, int *  {\i yend})}}
\par
{\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 105 of file fgrid.cpp.}\par
{
References originY, screenMaxX, and screenMinX.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   106 \{\par
  107     *xstart = screenMinX;\par
  108     *xend = screenMaxX;\par
  109     *ystart = originY;\par
  110     *yend = originY;\par
  111 \}\par
}
}
{\xe \v GetYAxis\:Grid}
{\xe \v Grid\:GetYAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Grid::GetYAxis (int *  {\i xstart}, int *  {\i xend}, int *  {\i ystart}, int *  {\i yend})}}
\par
{\bkmkstart AAAAAAACGJ}
{\bkmkend AAAAAAACGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 113 of file fgrid.cpp.}\par
{
References originX, screenMaxY, and screenMinY.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   114 \{\par
  115     *xstart = originX;\par
  116     *xend = originX;\par
  117     *ystart = screenMinY;\par
  118     *yend = screenMaxY;\par
  119 \}\par
}
}
{\xe \v SetFunctionBounderies\:Grid}
{\xe \v Grid\:SetFunctionBounderies}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Grid::SetFunctionBounderies (double  {\i minX}, double  {\i maxX})}}
\par
{\bkmkstart AAAAAAACGK}
{\bkmkend AAAAAAACGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file fgrid.cpp.}\par
{
References FunctionValue(), maxX, maxY, minX, minY, scaleX, scaleY, screenMaxX, screenMaxY, screenMinX, and screenMinY.}\par
{
Referenced by PlotStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{\par
   51     this->minX = minX;\par
   52     this->maxX = maxX;\par
   53     minY = FunctionValue(minX);\par
   54     maxY = FunctionValue(maxX);\par
   55 \par
   56     scaleX =  (screenMaxX - screenMinX) / (maxX - minX);\par
   57     scaleY =  (screenMaxY - screenMinY) / (maxY - minY);\par
   58 \par
   59     // Keep ascpect ratio\par
   60     if (scaleX < scaleY) \{\par
   61         scaleX = scaleY;\par
   62     \} else \{\par
   63         scaleY = scaleX;\par
   64     \}\par
   65 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGrid_ace057fbd3a401428399996eec3cb1577_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGrid_ace057fbd3a401428399996eec3cb1577_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetScreenBounderues\:Grid}
{\xe \v Grid\:SetScreenBounderues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Grid::SetScreenBounderues (int  {\i minX}, int  {\i maxX}, int  {\i minY}, int  {\i maxY})}}
\par
{\bkmkstart AAAAAAACGL}
{\bkmkend AAAAAAACGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file fgrid.cpp.}\par
{
References originX, originY, pad, screenMaxX, screenMaxY, screenMinX, and screenMinY.}\par
{
Referenced by PlotStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    68 \{\par
   69     screenMinX = minX + pad;\par
   70     screenMaxX = maxX - pad;\par
   71     screenMinY = minY + pad;\par
   72     screenMaxY = maxY - pad;\par
   73 \par
   74     originX = (screenMaxX - screenMinX) / 2;\par
   75     originY = (screenMaxY - screenMinY) / 2;\par
   76 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGrid_ac5386f4f62d3aae6a518fa11d25c7e59_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v function\:Grid}
{\xe \v Grid\:function}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UserFunction}* Grid::function{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGM}
{\bkmkend AAAAAAACGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file fgrid.h.}\par
{
Referenced by FunctionValue(), and Grid().}\par
}
{\xe \v maxX\:Grid}
{\xe \v Grid\:maxX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Grid::maxX{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGN}
{\bkmkend AAAAAAACGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file fgrid.h.}\par
{
Referenced by GetHorizontalResolution(), and SetFunctionBounderies().}\par
}
{\xe \v maxY\:Grid}
{\xe \v Grid\:maxY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Grid::maxY{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGO}
{\bkmkend AAAAAAACGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file fgrid.h.}\par
{
Referenced by SetFunctionBounderies().}\par
}
{\xe \v minX\:Grid}
{\xe \v Grid\:minX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Grid::minX{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGP}
{\bkmkend AAAAAAACGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file fgrid.h.}\par
{
Referenced by GetHorizontalResolution(), and SetFunctionBounderies().}\par
}
{\xe \v minY\:Grid}
{\xe \v Grid\:minY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Grid::minY{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGQ}
{\bkmkend AAAAAAACGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file fgrid.h.}\par
{
Referenced by SetFunctionBounderies().}\par
}
{\xe \v originX\:Grid}
{\xe \v Grid\:originX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Grid::originX{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGR}
{\bkmkend AAAAAAACGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file fgrid.h.}\par
{
Referenced by GetScreenCoordinates(), GetYAxis(), and SetScreenBounderues().}\par
}
{\xe \v originY\:Grid}
{\xe \v Grid\:originY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Grid::originY{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGS}
{\bkmkend AAAAAAACGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file fgrid.h.}\par
{
Referenced by GetScreenCoordinates(), GetXAxis(), and SetScreenBounderues().}\par
}
{\xe \v pad\:Grid}
{\xe \v Grid\:pad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Grid::pad{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGT}
{\bkmkend AAAAAAACGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file fgrid.h.}\par
{
Referenced by Grid(), and SetScreenBounderues().}\par
}
{\xe \v parameter\:Grid}
{\xe \v Grid\:parameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RealNumber}* Grid::parameter{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGU}
{\bkmkend AAAAAAACGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file fgrid.h.}\par
{
Referenced by FunctionValue(), Grid(), and ~Grid().}\par
}
{\xe \v scaleX\:Grid}
{\xe \v Grid\:scaleX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Grid::scaleX{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGV}
{\bkmkend AAAAAAACGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file fgrid.h.}\par
{
Referenced by GetScreenCoordinates(), and SetFunctionBounderies().}\par
}
{\xe \v scaleY\:Grid}
{\xe \v Grid\:scaleY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Grid::scaleY{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGW}
{\bkmkend AAAAAAACGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file fgrid.h.}\par
{
Referenced by GetScreenCoordinates(), and SetFunctionBounderies().}\par
}
{\xe \v screenMaxX\:Grid}
{\xe \v Grid\:screenMaxX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Grid::screenMaxX{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGX}
{\bkmkend AAAAAAACGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file fgrid.h.}\par
{
Referenced by GetHorizontalResolution(), GetScreenCoordinates(), GetXAxis(), SetFunctionBounderies(), and SetScreenBounderues().}\par
}
{\xe \v screenMaxY\:Grid}
{\xe \v Grid\:screenMaxY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Grid::screenMaxY{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGY}
{\bkmkend AAAAAAACGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file fgrid.h.}\par
{
Referenced by GetScreenCoordinates(), GetYAxis(), SetFunctionBounderies(), and SetScreenBounderues().}\par
}
{\xe \v screenMinX\:Grid}
{\xe \v Grid\:screenMinX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Grid::screenMinX{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGZ}
{\bkmkend AAAAAAACGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file fgrid.h.}\par
{
Referenced by GetHorizontalResolution(), GetScreenCoordinates(), GetXAxis(), SetFunctionBounderies(), and SetScreenBounderues().}\par
}
{\xe \v screenMinY\:Grid}
{\xe \v Grid\:screenMinY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Grid::screenMinY{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACHA}
{\bkmkend AAAAAAACHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file fgrid.h.}\par
{
Referenced by GetScreenCoordinates(), GetYAxis(), SetFunctionBounderies(), and SetScreenBounderues().}\par
}
{\xe \v zoom\:Grid}
{\xe \v Grid\:zoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Grid::zoom{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACHB}
{\bkmkend AAAAAAACHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file fgrid.h.}\par
{
Referenced by GetScreenCoordinates(), and Grid().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b fgrid.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b fgrid.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HelpStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v HelpStatement}
{\xe \v HelpStatement}
{\bkmkstart AAAAAAACHC}
{\bkmkend AAAAAAACHC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logic related to the help statement. }}\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for HelpStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHelpStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for HelpStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHelpStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HelpStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HelpStatement} ({\b Symbol} {\b argument})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HelpStatement} (const char *{\b ident})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~HelpStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Symbol} {\b argument}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b ident}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logic related to the help statement. \par
}{
Definition at line 174 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HelpStatement\:HelpStatement}
{\xe \v HelpStatement\:HelpStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HelpStatement::HelpStatement ()}}
\par
{\bkmkstart AAAAAAACHD}
{\bkmkend AAAAAAACHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 319 of file statements.cpp.}\par
{
References argument, ident, and StatementNode::StatementNode().}\par
{
Referenced by Parser::ParseHelpStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   319                              :\par
  320     StatementNode() \{\par
  321     argument = (Symbol)0;\par
  322     ident = NOMEM;\par
  323 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHelpStatement_aed16b9cc1ef9e4d7bf4909d66e4012c0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHelpStatement_aed16b9cc1ef9e4d7bf4909d66e4012c0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HelpStatement\:HelpStatement}
{\xe \v HelpStatement\:HelpStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HelpStatement::HelpStatement ({\b Symbol}  {\i argument})}}
\par
{\bkmkstart AAAAAAACHE}
{\bkmkend AAAAAAACHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 325 of file statements.cpp.}\par
{
References argument, ident, and StatementNode::StatementNode().}\par
{
Referenced by Parser::ParseHelpStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   325                                             :\par
  326     StatementNode(), argument(argument) \{\par
  327     ident = NOMEM;\par
  328 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHelpStatement_a09929d994355a84bebd655be6d463bfb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHelpStatement_a09929d994355a84bebd655be6d463bfb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HelpStatement\:HelpStatement}
{\xe \v HelpStatement\:HelpStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HelpStatement::HelpStatement (const char *  {\i ident})}}
\par
{\bkmkstart AAAAAAACHF}
{\bkmkend AAAAAAACHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 330 of file statements.cpp.}\par
{
References AllocAndCopy(), argument, ident, and symident.}\par
{
Referenced by Parser::ParseHelpStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   331 \{\par
  332     argument = symident;\par
  333     AllocAndCopy(&this->ident, ident);\par
  334 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHelpStatement_a638be9d0c5c09a437c75f07ba8229cbe_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHelpStatement_a638be9d0c5c09a437c75f07ba8229cbe_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~HelpStatement\:HelpStatement}
{\xe \v HelpStatement\:~HelpStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HelpStatement::~HelpStatement ()}}
\par
{\bkmkstart AAAAAAACHG}
{\bkmkend AAAAAAACHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 336 of file statements.cpp.}\par
{
References ident.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   337 \{\par
  338     if (ident != NOMEM) \{\par
  339         delete [] ident;\par
  340     \}\par
  341 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:HelpStatement}
{\xe \v HelpStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * HelpStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACHH}
{\bkmkend AAAAAAACHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 343 of file statements.cpp.}\par
{
References argument, CharBuffer::ClearAndCopy(), Language::GetHelpText(), CharBuffer::GetString(), ident, SyntaxNode::output, and symident.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   344 \{\par
  345     char *text = argument != symident ?\par
  346                  Program->Language->GetHelpText(argument) :\par
  347                  Program->Language->GetHelpText(ident);\par
  348 \par
  349     output->ClearAndCopy(text);\par
  350     return output->GetString();\par
  351 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHelpStatement_a733d3471c3bcfdd2d07d4766bbdbf6db_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v argument\:HelpStatement}
{\xe \v HelpStatement\:argument}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Symbol} HelpStatement::argument{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACHI}
{\bkmkend AAAAAAACHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 183 of file statements.h.}\par
{
Referenced by Execute(), and HelpStatement().}\par
}
{\xe \v ident\:HelpStatement}
{\xe \v HelpStatement\:ident}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* HelpStatement::ident{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACHJ}
{\bkmkend AAAAAAACHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 184 of file statements.h.}\par
{
Referenced by Execute(), HelpStatement(), and ~HelpStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
helptextdef Struct Reference\par \pard\plain 
{\tc\tcl2 \v helptextdef}
{\xe \v helptextdef}
{\bkmkstart AAAAAAACHK}
{\bkmkend AAAAAAACHK}
\par
{
{\f2 #include <help.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Symbol} {\b symbol}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b text}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 44 of file help.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v id\:helptextdef}
{\xe \v helptextdef\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int helptextdef::id}}
\par
{\bkmkstart AAAAAAACHL}
{\bkmkend AAAAAAACHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file help.h.}\par
{
Referenced by StandardLanguage::LoadCatalogs(), and StandardLanguage::Translate().}\par
}
{\xe \v symbol\:helptextdef}
{\xe \v helptextdef\:symbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Symbol} helptextdef::symbol}}
\par
{\bkmkstart AAAAAAACHM}
{\bkmkend AAAAAAACHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file help.h.}\par
{
Referenced by Language::GetHelpText(), and StandardLanguage::LoadCatalogs().}\par
}
{\xe \v text\:helptextdef}
{\xe \v helptextdef\:text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* helptextdef::text}}
\par
{\bkmkstart AAAAAAACHN}
{\bkmkend AAAAAAACHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file help.h.}\par
{
Referenced by StandardLanguage::LoadCatalogs(), StandardLanguage::Translate(), and PosixLanguage::Translate().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/localize/{\b help.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HyperbolicArcCosecantNode Class Reference\par \pard\plain 
{\tc\tcl2 \v HyperbolicArcCosecantNode}
{\xe \v HyperbolicArcCosecantNode}
{\bkmkstart AAAAAAACHO}
{\bkmkend AAAAAAACHO}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for HyperbolicArcCosecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcCosecantNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for HyperbolicArcCosecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcCosecantNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HyperbolicArcCosecantNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 564 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HyperbolicArcCosecantNode\:HyperbolicArcCosecantNode}
{\xe \v HyperbolicArcCosecantNode\:HyperbolicArcCosecantNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HyperbolicArcCosecantNode::HyperbolicArcCosecantNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACHP}
{\bkmkend AAAAAAACHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1194 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1194                                                                                :\par
 1195     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcCosecantNode_afb3223e893556ffadca8796cec9062f5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcCosecantNode_afb3223e893556ffadca8796cec9062f5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:HyperbolicArcCosecantNode}
{\xe \v HyperbolicArcCosecantNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * HyperbolicArcCosecantNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACHQ}
{\bkmkend AAAAAAACHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1197 of file functions.cpp.}\par
{
References HyperbolicArcCosecantNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1198 \{\par
 1199     return new HyperbolicArcCosecantNode(expression);\par
 1200 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcCosecantNode_ad40421e2519b6a034f02e5411dbcc58e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:HyperbolicArcCosecantNode}
{\xe \v HyperbolicArcCosecantNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * HyperbolicArcCosecantNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1202 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::HypArcCosecant(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1203 \{\par
 1204     result = expression->Evaluate()->HypArcCosecant();\par
 1205     return result;\par
 1206 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcCosecantNode_acefcd296ae5574bc5f57b3b234f23dba_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:HyperbolicArcCosecantNode}
{\xe \v HyperbolicArcCosecantNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * HyperbolicArcCosecantNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBZ}
{\bkmkend AAAAAAACBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1208 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1209 \{\par
 1210     return (char*)"acsch";\par
 1211 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HyperbolicArccosineNode Class Reference\par \pard\plain 
{\tc\tcl2 \v HyperbolicArccosineNode}
{\xe \v HyperbolicArccosineNode}
{\bkmkstart AAAAAAACHR}
{\bkmkend AAAAAAACHR}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for HyperbolicArccosineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArccosineNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for HyperbolicArccosineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArccosineNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HyperbolicArccosineNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 524 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HyperbolicArccosineNode\:HyperbolicArccosineNode}
{\xe \v HyperbolicArccosineNode\:HyperbolicArccosineNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HyperbolicArccosineNode::HyperbolicArccosineNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACHS}
{\bkmkend AAAAAAACHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1118 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1118                                                                            :\par
 1119     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArccosineNode_a39dd6c0bfe96f490eb25b5e695b7042f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArccosineNode_a39dd6c0bfe96f490eb25b5e695b7042f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:HyperbolicArccosineNode}
{\xe \v HyperbolicArccosineNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * HyperbolicArccosineNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACHT}
{\bkmkend AAAAAAACHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1121 of file functions.cpp.}\par
{
References HyperbolicArccosineNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1122 \{\par
 1123     return new HyperbolicArccosineNode(expression);\par
 1124 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArccosineNode_a0af1b04547b02be2ab89ed7368e82f59_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:HyperbolicArccosineNode}
{\xe \v HyperbolicArccosineNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * HyperbolicArccosineNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1126 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::HypArcCosine(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1127 \{\par
 1128     result = expression->Evaluate()->HypArcCosine();\par
 1129     return result;\par
 1130 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArccosineNode_af904405c7245b54f300d47c71ded279e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:HyperbolicArccosineNode}
{\xe \v HyperbolicArccosineNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * HyperbolicArccosineNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCD}
{\bkmkend AAAAAAACCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1132 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1133 \{\par
 1134     return (char*)"acosh";\par
 1135 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HyperbolicArcCotangentNode Class Reference\par \pard\plain 
{\tc\tcl2 \v HyperbolicArcCotangentNode}
{\xe \v HyperbolicArcCotangentNode}
{\bkmkstart AAAAAAACHU}
{\bkmkend AAAAAAACHU}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for HyperbolicArcCotangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcCotangentNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for HyperbolicArcCotangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcCotangentNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HyperbolicArcCotangentNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 554 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HyperbolicArcCotangentNode\:HyperbolicArcCotangentNode}
{\xe \v HyperbolicArcCotangentNode\:HyperbolicArcCotangentNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HyperbolicArcCotangentNode::HyperbolicArcCotangentNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACHV}
{\bkmkend AAAAAAACHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1156 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1156                                                                                  :\par
 1157     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcCotangentNode_aeb8d5f5d7f623a6f2c0da363e0eec026_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcCotangentNode_aeb8d5f5d7f623a6f2c0da363e0eec026_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:HyperbolicArcCotangentNode}
{\xe \v HyperbolicArcCotangentNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * HyperbolicArcCotangentNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACHW}
{\bkmkend AAAAAAACHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1159 of file functions.cpp.}\par
{
References HyperbolicArcCotangentNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1160 \{\par
 1161     return new HyperbolicArcCotangentNode(expression);\par
 1162 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcCotangentNode_a51c29b7be38fc24686add16377b6d883_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:HyperbolicArcCotangentNode}
{\xe \v HyperbolicArcCotangentNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * HyperbolicArcCotangentNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAV}
{\bkmkend AAAAAAACAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1164 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::HypArcCotangent(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1165 \{\par
 1166     result = expression->Evaluate()->HypArcCotangent();\par
 1167     return result;\par
 1168 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcCotangentNode_a517890860c5161dae48ef8e26b952144_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:HyperbolicArcCotangentNode}
{\xe \v HyperbolicArcCotangentNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * HyperbolicArcCotangentNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCA}
{\bkmkend AAAAAAACCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1170 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1171 \{\par
 1172     return (char*)"acoth";\par
 1173 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HyperbolicArcSecantNode Class Reference\par \pard\plain 
{\tc\tcl2 \v HyperbolicArcSecantNode}
{\xe \v HyperbolicArcSecantNode}
{\bkmkstart AAAAAAACHX}
{\bkmkend AAAAAAACHX}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for HyperbolicArcSecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcSecantNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for HyperbolicArcSecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcSecantNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HyperbolicArcSecantNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 574 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HyperbolicArcSecantNode\:HyperbolicArcSecantNode}
{\xe \v HyperbolicArcSecantNode\:HyperbolicArcSecantNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HyperbolicArcSecantNode::HyperbolicArcSecantNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACHY}
{\bkmkend AAAAAAACHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1175 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1175                                                                            :\par
 1176     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcSecantNode_a07e699822af1ff2ab863550b3f0a50c2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcSecantNode_a07e699822af1ff2ab863550b3f0a50c2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:HyperbolicArcSecantNode}
{\xe \v HyperbolicArcSecantNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * HyperbolicArcSecantNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACHZ}
{\bkmkend AAAAAAACHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1178 of file functions.cpp.}\par
{
References HyperbolicArcSecantNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1179 \{\par
 1180     return new HyperbolicArcSecantNode(expression);\par
 1181 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcSecantNode_a767d2539da79424ae9d5b8a004995cbc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:HyperbolicArcSecantNode}
{\xe \v HyperbolicArcSecantNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * HyperbolicArcSecantNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAT}
{\bkmkend AAAAAAACAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1183 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::HypArcSecant(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1184 \{\par
 1185     result = expression->Evaluate()->HypArcSecant();\par
 1186     return result;\par
 1187 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcSecantNode_a1432e0c3a61b8418994289e11cb7f1a0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:HyperbolicArcSecantNode}
{\xe \v HyperbolicArcSecantNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * HyperbolicArcSecantNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBY}
{\bkmkend AAAAAAACBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1189 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1190 \{\par
 1191     return (char*)"asech";\par
 1192 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HyperbolicArcsineNode Class Reference\par \pard\plain 
{\tc\tcl2 \v HyperbolicArcsineNode}
{\xe \v HyperbolicArcsineNode}
{\bkmkstart AAAAAAACIA}
{\bkmkend AAAAAAACIA}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for HyperbolicArcsineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcsineNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for HyperbolicArcsineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcsineNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HyperbolicArcsineNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 534 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HyperbolicArcsineNode\:HyperbolicArcsineNode}
{\xe \v HyperbolicArcsineNode\:HyperbolicArcsineNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HyperbolicArcsineNode::HyperbolicArcsineNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACIB}
{\bkmkend AAAAAAACIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1099 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1099                                                                        :\par
 1100     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcsineNode_abc5efe8b4f86817a3bf4a20a87c91c84_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcsineNode_abc5efe8b4f86817a3bf4a20a87c91c84_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:HyperbolicArcsineNode}
{\xe \v HyperbolicArcsineNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * HyperbolicArcsineNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACIC}
{\bkmkend AAAAAAACIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1102 of file functions.cpp.}\par
{
References HyperbolicArcsineNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1103 \{\par
 1104     return new HyperbolicArcsineNode(expression);\par
 1105 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcsineNode_a1694894ddaa623e53260fd2dfd029415_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:HyperbolicArcsineNode}
{\xe \v HyperbolicArcsineNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * HyperbolicArcsineNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAX}
{\bkmkend AAAAAAACAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1107 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::HypArcSine(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1108 \{\par
 1109     result = expression->Evaluate()->HypArcSine();\par
 1110     return result;\par
 1111 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArcsineNode_a51381b2347b180568af5c26b283156c2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:HyperbolicArcsineNode}
{\xe \v HyperbolicArcsineNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * HyperbolicArcsineNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCC}
{\bkmkend AAAAAAACCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1113 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1114 \{\par
 1115     return (char*)"asinh";\par
 1116 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HyperbolicArctangentNode Class Reference\par \pard\plain 
{\tc\tcl2 \v HyperbolicArctangentNode}
{\xe \v HyperbolicArctangentNode}
{\bkmkstart AAAAAAACID}
{\bkmkend AAAAAAACID}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for HyperbolicArctangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArctangentNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for HyperbolicArctangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArctangentNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HyperbolicArctangentNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 544 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HyperbolicArctangentNode\:HyperbolicArctangentNode}
{\xe \v HyperbolicArctangentNode\:HyperbolicArctangentNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HyperbolicArctangentNode::HyperbolicArctangentNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACIE}
{\bkmkend AAAAAAACIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1137 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1137                                                                              :\par
 1138     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArctangentNode_a4e4d9e88d6c095754631e325318e517a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArctangentNode_a4e4d9e88d6c095754631e325318e517a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:HyperbolicArctangentNode}
{\xe \v HyperbolicArctangentNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * HyperbolicArctangentNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACIF}
{\bkmkend AAAAAAACIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1140 of file functions.cpp.}\par
{
References HyperbolicArctangentNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1141 \{\par
 1142     return new HyperbolicArctangentNode(expression);\par
 1143 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArctangentNode_ac18a119c5ad51586132840b788cfff21_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:HyperbolicArctangentNode}
{\xe \v HyperbolicArctangentNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * HyperbolicArctangentNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1145 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::HypArcTangent(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1146 \{\par
 1147     result = expression->Evaluate()->HypArcTangent();\par
 1148     return result;\par
 1149 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicArctangentNode_abd0bcfeba3e6c349955f1b149e813177_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:HyperbolicArctangentNode}
{\xe \v HyperbolicArctangentNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * HyperbolicArctangentNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCB}
{\bkmkend AAAAAAACCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1151 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1152 \{\par
 1153     return (char*)"atanh";\par
 1154 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HyperbolicCosecantNode Class Reference\par \pard\plain 
{\tc\tcl2 \v HyperbolicCosecantNode}
{\xe \v HyperbolicCosecantNode}
{\bkmkstart AAAAAAACIG}
{\bkmkend AAAAAAACIG}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for HyperbolicCosecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCosecantNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for HyperbolicCosecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCosecantNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HyperbolicCosecantNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 510 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HyperbolicCosecantNode\:HyperbolicCosecantNode}
{\xe \v HyperbolicCosecantNode\:HyperbolicCosecantNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HyperbolicCosecantNode::HyperbolicCosecantNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACIH}
{\bkmkend AAAAAAACIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1076 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1076                                                                          :\par
 1077     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCosecantNode_ad0da5d38d47fa26a9e31e2b3926b914d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCosecantNode_ad0da5d38d47fa26a9e31e2b3926b914d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:HyperbolicCosecantNode}
{\xe \v HyperbolicCosecantNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * HyperbolicCosecantNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACII}
{\bkmkend AAAAAAACII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1079 of file functions.cpp.}\par
{
References HyperbolicCosecantNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1080 \{\par
 1081     return new HyperbolicCosecantNode(expression);\par
 1082 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCosecantNode_a36dba4574a0322666733d91973a194ba_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:HyperbolicCosecantNode}
{\xe \v HyperbolicCosecantNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * HyperbolicCosecantNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1084 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::HypCosecant(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1085 \{\par
 1086     result = expression->Evaluate()->HypCosecant();\par
 1087     return result;\par
 1088 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCosecantNode_a974a45cab3da5b79271db954e8d4825a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:HyperbolicCosecantNode}
{\xe \v HyperbolicCosecantNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * HyperbolicCosecantNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCE}
{\bkmkend AAAAAAACCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1090 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1091 \{\par
 1092     return (char*)"csch";\par
 1093 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HyperbolicCosineNode Class Reference\par \pard\plain 
{\tc\tcl2 \v HyperbolicCosineNode}
{\xe \v HyperbolicCosineNode}
{\bkmkstart AAAAAAACIJ}
{\bkmkend AAAAAAACIJ}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for HyperbolicCosineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCosineNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for HyperbolicCosineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCosineNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HyperbolicCosineNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 470 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HyperbolicCosineNode\:HyperbolicCosineNode}
{\xe \v HyperbolicCosineNode\:HyperbolicCosineNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HyperbolicCosineNode::HyperbolicCosineNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACIK}
{\bkmkend AAAAAAACIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1000 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1001     : FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCosineNode_a0b67f82a145ad333756d14613919a00c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCosineNode_a0b67f82a145ad333756d14613919a00c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:HyperbolicCosineNode}
{\xe \v HyperbolicCosineNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * HyperbolicCosineNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACIL}
{\bkmkend AAAAAAACIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1003 of file functions.cpp.}\par
{
References HyperbolicCosineNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1004 \{\par
 1005     return new HyperbolicCosineNode(expression);\par
 1006 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCosineNode_ae50b7e2de3943b0eda108e384dbe75a2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:HyperbolicCosineNode}
{\xe \v HyperbolicCosineNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * HyperbolicCosineNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBD}
{\bkmkend AAAAAAACBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1008 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::HypCosine(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1009 \{\par
 1010     result = expression->Evaluate()->HypCosine();\par
 1011     return result;\par
 1012 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCosineNode_a22a3609a695c926aa3dd0b641282bb1f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:HyperbolicCosineNode}
{\xe \v HyperbolicCosineNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * HyperbolicCosineNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCI}
{\bkmkend AAAAAAACCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1014 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1015 \{\par
 1016     return (char*)"cosh";\par
 1017 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HyperbolicCotangentNode Class Reference\par \pard\plain 
{\tc\tcl2 \v HyperbolicCotangentNode}
{\xe \v HyperbolicCotangentNode}
{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for HyperbolicCotangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCotangentNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for HyperbolicCotangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCotangentNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HyperbolicCotangentNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 490 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HyperbolicCotangentNode\:HyperbolicCotangentNode}
{\xe \v HyperbolicCotangentNode\:HyperbolicCotangentNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HyperbolicCotangentNode::HyperbolicCotangentNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1038 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1038                                                                            :\par
 1039     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCotangentNode_a10ec2c243e9572bc4ae3ac43ab654822_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCotangentNode_a10ec2c243e9572bc4ae3ac43ab654822_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:HyperbolicCotangentNode}
{\xe \v HyperbolicCotangentNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * HyperbolicCotangentNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1041 of file functions.cpp.}\par
{
References HyperbolicCotangentNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1042 \{\par
 1043     return new HyperbolicCotangentNode(expression);\par
 1044 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCotangentNode_aae6696fb8049c3b34d9389e81e583697_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:HyperbolicCotangentNode}
{\xe \v HyperbolicCotangentNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * HyperbolicCotangentNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBB}
{\bkmkend AAAAAAACBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1046 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::HypCotangent(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1047 \{\par
 1048     result = expression->Evaluate()->HypCotangent();\par
 1049     return result;\par
 1050 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicCotangentNode_a399d6bc7f6cb8b8b07b5a55f54c47aef_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:HyperbolicCotangentNode}
{\xe \v HyperbolicCotangentNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * HyperbolicCotangentNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCG}
{\bkmkend AAAAAAACCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1052 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1053 \{\par
 1054     return (char*)"coth";\par
 1055 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HyperbolicSecantNode Class Reference\par \pard\plain 
{\tc\tcl2 \v HyperbolicSecantNode}
{\xe \v HyperbolicSecantNode}
{\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for HyperbolicSecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicSecantNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for HyperbolicSecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicSecantNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HyperbolicSecantNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 500 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HyperbolicSecantNode\:HyperbolicSecantNode}
{\xe \v HyperbolicSecantNode\:HyperbolicSecantNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HyperbolicSecantNode::HyperbolicSecantNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1057 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1057                                                                      :\par
 1058     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicSecantNode_a37e6e8b05d445531db7481549b921bef_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicSecantNode_a37e6e8b05d445531db7481549b921bef_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:HyperbolicSecantNode}
{\xe \v HyperbolicSecantNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * HyperbolicSecantNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACIR}
{\bkmkend AAAAAAACIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1060 of file functions.cpp.}\par
{
References HyperbolicSecantNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1061 \{\par
 1062     return new HyperbolicSecantNode(expression);\par
 1063 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicSecantNode_a90694b7427bd82908e6bea1624f43fe1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:HyperbolicSecantNode}
{\xe \v HyperbolicSecantNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * HyperbolicSecantNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1065 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::HypSecant(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1066 \{\par
 1067     result = expression->Evaluate()->HypSecant();\par
 1068     return result;\par
 1069 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicSecantNode_a1ffab630945e5272ba6da8f91f6b22ce_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:HyperbolicSecantNode}
{\xe \v HyperbolicSecantNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * HyperbolicSecantNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCF}
{\bkmkend AAAAAAACCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1071 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1072 \{\par
 1073     return (char*)"sech";\par
 1074 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HyperbolicSineNode Class Reference\par \pard\plain 
{\tc\tcl2 \v HyperbolicSineNode}
{\xe \v HyperbolicSineNode}
{\bkmkstart AAAAAAACIS}
{\bkmkend AAAAAAACIS}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for HyperbolicSineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicSineNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for HyperbolicSineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicSineNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HyperbolicSineNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 460 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HyperbolicSineNode\:HyperbolicSineNode}
{\xe \v HyperbolicSineNode\:HyperbolicSineNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HyperbolicSineNode::HyperbolicSineNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACIT}
{\bkmkend AAAAAAACIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 981 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   981                                                                  :\par
  982     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicSineNode_a3ebf3cd088c7f0d2d4a1a2f4ec7ac0b0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicSineNode_a3ebf3cd088c7f0d2d4a1a2f4ec7ac0b0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:HyperbolicSineNode}
{\xe \v HyperbolicSineNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * HyperbolicSineNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACIU}
{\bkmkend AAAAAAACIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 984 of file functions.cpp.}\par
{
References HyperbolicSineNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   985 \{\par
  986     return new HyperbolicSineNode(expression);\par
  987 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicSineNode_a32bfb217a9351f882d1a68a76f4d2b94_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:HyperbolicSineNode}
{\xe \v HyperbolicSineNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * HyperbolicSineNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBE}
{\bkmkend AAAAAAACBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 989 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::HypSine(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   990 \{\par
  991     result = expression->Evaluate()->HypSine();\par
  992     return result;\par
  993 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicSineNode_a8f11c6b2d8d793856f17e3a249f20b69_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:HyperbolicSineNode}
{\xe \v HyperbolicSineNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * HyperbolicSineNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCJ}
{\bkmkend AAAAAAACCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 995 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   996 \{\par
  997     return (char*)"sinh";\par
  998 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HyperbolicTangentNode Class Reference\par \pard\plain 
{\tc\tcl2 \v HyperbolicTangentNode}
{\xe \v HyperbolicTangentNode}
{\bkmkstart AAAAAAACIV}
{\bkmkend AAAAAAACIV}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for HyperbolicTangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicTangentNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for HyperbolicTangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicTangentNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HyperbolicTangentNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 480 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HyperbolicTangentNode\:HyperbolicTangentNode}
{\xe \v HyperbolicTangentNode\:HyperbolicTangentNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HyperbolicTangentNode::HyperbolicTangentNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACIW}
{\bkmkend AAAAAAACIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1019 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1019                                                                        :\par
 1020     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicTangentNode_a18d198b26efeb8d15efae4fda943212b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicTangentNode_a18d198b26efeb8d15efae4fda943212b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:HyperbolicTangentNode}
{\xe \v HyperbolicTangentNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * HyperbolicTangentNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACIX}
{\bkmkend AAAAAAACIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1022 of file functions.cpp.}\par
{
References HyperbolicTangentNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1023 \{\par
 1024     return new HyperbolicTangentNode(expression);\par
 1025 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicTangentNode_a8e207d88423bd62a7a865c1a7b01c870_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:HyperbolicTangentNode}
{\xe \v HyperbolicTangentNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * HyperbolicTangentNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBC}
{\bkmkend AAAAAAACBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1027 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::HypTangent(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1028 \{\par
 1029     result = expression->Evaluate()->HypTangent();\par
 1030     return result;\par
 1031 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHyperbolicTangentNode_a7ea56cdbc709f28de4ff10486a79c2b5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:HyperbolicTangentNode}
{\xe \v HyperbolicTangentNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * HyperbolicTangentNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCH}
{\bkmkend AAAAAAACCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 1033 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1034 \{\par
 1035     return (char*)"tanh";\par
 1036 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
identalias Struct Reference\par \pard\plain 
{\tc\tcl2 \v identalias}
{\xe \v identalias}
{\bkmkstart AAAAAAACIY}
{\bkmkend AAAAAAACIY}
\par
{
{\f2 #include <ialias.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b ident}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b alias}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 30 of file ialias.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v alias\:identalias}
{\xe \v identalias\:alias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* identalias::alias}}
\par
{\bkmkstart AAAAAAACIZ}
{\bkmkend AAAAAAACIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file ialias.h.}\par
{
Referenced by Language::FindAlias().}\par
}
{\xe \v ident\:identalias}
{\xe \v identalias\:ident}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* identalias::ident}}
\par
{\bkmkstart AAAAAAACJA}
{\bkmkend AAAAAAACJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file ialias.h.}\par
{
Referenced by Language::FindAlias().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/localize/{\b ialias.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
identhelpdef Struct Reference\par \pard\plain 
{\tc\tcl2 \v identhelpdef}
{\xe \v identhelpdef}
{\bkmkstart AAAAAAACJB}
{\bkmkend AAAAAAACJB}
\par
{
{\f2 #include <ident.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b ident}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b text}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 41 of file ident.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v id\:identhelpdef}
{\xe \v identhelpdef\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int identhelpdef::id}}
\par
{\bkmkstart AAAAAAACJC}
{\bkmkend AAAAAAACJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file ident.h.}\par
{
Referenced by StandardLanguage::LoadCatalogs(), and StandardLanguage::Translate().}\par
}
{\xe \v ident\:identhelpdef}
{\xe \v identhelpdef\:ident}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* identhelpdef::ident}}
\par
{\bkmkstart AAAAAAACJD}
{\bkmkend AAAAAAACJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file ident.h.}\par
{
Referenced by Language::GetHelpText(), and StandardLanguage::LoadCatalogs().}\par
}
{\xe \v text\:identhelpdef}
{\xe \v identhelpdef\:text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* identhelpdef::text}}
\par
{\bkmkstart AAAAAAACJE}
{\bkmkend AAAAAAACJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file ident.h.}\par
{
Referenced by StandardLanguage::LoadCatalogs(), StandardLanguage::Translate(), and PosixLanguage::Translate().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/localize/{\b ident.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ieee_float_shape_type Union Reference\par \pard\plain 
{\tc\tcl2 \v ieee_float_shape_type}
{\xe \v ieee_float_shape_type}
{\bkmkstart AAAAAAACJF}
{\bkmkend AAAAAAACJF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A union which permits us to convert between a float and a 32 bit int. }}\par
{
{\f2 #include <prim.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b value}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uword} {\b word}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A union which permits us to convert between a float and a 32 bit int. \par
}{
Definition at line 227 of file prim.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v value\:ieee_float_shape_type}
{\xe \v ieee_float_shape_type\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ieee_float_shape_type::value}}
\par
{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 229 of file prim.h.}\par
}
{\xe \v word\:ieee_float_shape_type}
{\xe \v ieee_float_shape_type\:word}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uword} ieee_float_shape_type::word}}
\par
{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 230 of file prim.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this union was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
lib/real/{\b prim.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InputStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v InputStatement}
{\xe \v InputStatement}
{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change numeral input system. }}\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for InputStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classInputStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for InputStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classInputStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InputStatement} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to show number of active digits. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InputStatement} (unsigned int {\b base})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to set number of active digits. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~InputStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b base}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change numeral input system. \par
}{
Definition at line 209 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InputStatement\:InputStatement}
{\xe \v InputStatement\:InputStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
InputStatement::InputStatement ()}}
\par
{\bkmkstart AAAAAAACJJ}
{\bkmkend AAAAAAACJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to show number of active digits. }}\par
{
Definition at line 455 of file statements.cpp.}\par
{
References base.}\par
{
Referenced by Parser::ParseNumeralStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   455                                :\par
  456     base(0) \{ \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classInputStatement_a93f36b9493387b157b38c44f54952eef_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v InputStatement\:InputStatement}
{\xe \v InputStatement\:InputStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
InputStatement::InputStatement (unsigned int  {\i base})}}
\par
{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to set number of active digits. }}\par
{
Definition at line 462 of file statements.cpp.}\par
{
References base, and StatementNode::StatementNode().}\par
{
Referenced by Parser::ParseNumeralStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   462                                                 :\par
  463     StatementNode(), base(base) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classInputStatement_a3be3342d08524bb5e3c1caa197926d26_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classInputStatement_a3be3342d08524bb5e3c1caa197926d26_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~InputStatement\:InputStatement}
{\xe \v InputStatement\:~InputStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
InputStatement::~InputStatement (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 213 of file statements.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   213 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:InputStatement}
{\xe \v InputStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * InputStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 465 of file statements.cpp.}\par
{
References CharBuffer::Append(), base, CharBuffer::Empty(), CharBuffer::EnsureSize(), NumeralSystem::GetDigits(), NumeralSystem::GetName(), CharBuffer::GetString(), Program::Input, Program::NewPositionalInput(), SyntaxNode::output, and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   466 \{\par
  467     const char *text;\par
  468 \par
  469     if (base != 0) \{\par
  470         int digits = Program->Input->GetDigits();\par
  471         Program->NewPositionalInput(base, digits);\par
  472         text = HELPINPUSETT;\par
  473     \} else \{\par
  474         text = HELPINPUSHOW;\par
  475     \}\par
  476 \par
  477     const char *desc = Program->Input->GetName();\par
  478 \par
  479     output->Empty();\par
  480     output->EnsureSize(StrLen(text) + StrLen(desc) + StrLen(NEWLINE) + 1);\par
  481     output->Append(text);\par
  482     output->Append(desc);\par
  483     output->Append(NEWLINE);\par
  484     return output->GetString();\par
  485 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classInputStatement_ac4a9288ba2fe5002ae78d65c270222a5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v base\:InputStatement}
{\xe \v InputStatement\:base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int InputStatement::base{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACJN}
{\bkmkend AAAAAAACJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 217 of file statements.h.}\par
{
Referenced by Execute(), and InputStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InsVariableNode Class Reference\par \pard\plain 
{\tc\tcl2 \v InsVariableNode}
{\xe \v InsVariableNode}
{\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of last result in a syntax tree. }}\par
{
{\f2 #include <values.h>}}\par
Inheritance diagram for InsVariableNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classInsVariableNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for InsVariableNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classInsVariableNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InsVariableNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetText} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of last result in a syntax tree. \par
}{
Definition at line 128 of file values.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InsVariableNode\:InsVariableNode}
{\xe \v InsVariableNode\:InsVariableNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
InsVariableNode::InsVariableNode ()}}
\par
{\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 318 of file values.cpp.}\par
{
References VariableNode::VariableNode().}\par
{
Referenced by Parser::ParseAtomic().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   318                                  :\par
  319     VariableNode(NOMEM)\par
  320 \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classInsVariableNode_a76772ab88bcb3dd4d8f5b299ed4bf8ee_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classInsVariableNode_a76772ab88bcb3dd4d8f5b299ed4bf8ee_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Evaluate\:InsVariableNode}
{\xe \v InsVariableNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * InsVariableNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBS}
{\bkmkend AAAAAAACBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b VariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 322 of file values.cpp.}\par
{
References Program::GetLastResult().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   323 \{\par
  324     return Program->GetLastResult();\par
  325 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classInsVariableNode_aad01cefd8321d0a6ddaf0d4ef5e62ddf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:InsVariableNode}
{\xe \v InsVariableNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * InsVariableNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCX}
{\bkmkend AAAAAAACCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b VariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 332 of file values.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   333 \{\par
  334     return (char*)"ins";\par
  335 \}\par
}
}
{\xe \v GetText\:InsVariableNode}
{\xe \v InsVariableNode\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * InsVariableNode::GetText (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDL}
{\bkmkend AAAAAAACDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b VariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 327 of file values.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   328 \{\par
  329     return (char*)"ins";\par
  330 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
keyworddef Struct Reference\par \pard\plain 
{\tc\tcl2 \v keyworddef}
{\xe \v keyworddef}
{\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Character representation of keyword tied with its symbol. }}\par
{
{\f2 #include <kword.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Symbol} {\b symbol}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b name}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Character representation of keyword tied with its symbol. \par
}{
Definition at line 46 of file kword.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v id\:keyworddef}
{\xe \v keyworddef\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int keyworddef::id}}
\par
{\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file kword.h.}\par
{
Referenced by StandardLanguage::LoadCatalogs().}\par
}
{\xe \v name\:keyworddef}
{\xe \v keyworddef\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* keyworddef::name}}
\par
{\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file kword.h.}\par
{
Referenced by Language::FindKeyword(), Lexer::FindKeyword(), and StandardLanguage::LoadCatalogs().}\par
}
{\xe \v symbol\:keyworddef}
{\xe \v keyworddef\:symbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Symbol} keyworddef::symbol}}
\par
{\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file kword.h.}\par
{
Referenced by Language::FindKeyword(), Lexer::FindKeyword(), and StandardLanguage::LoadCatalogs().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/localize/{\b kword.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Language Class Reference\par \pard\plain 
{\tc\tcl2 \v Language}
{\xe \v Language}
{\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
\par
{
{\f2 #include <language.h>}}\par
Inheritance diagram for Language:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Language:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Language} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Language} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetText} (int id)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetHelpText} (char *ident)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetHelpText} ({\b Symbol} symbol)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Symbol} {\b FindKeyword} (const char *ident)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual char {\b GetFractionPoint} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b CharIsAlNum} (unsigned long character)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b CharIsAlpha} (unsigned long character)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b CharIsDigit} (unsigned long character)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b CharIsPunct} (unsigned long character)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b CharIsSpace} (unsigned long character)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b CharIsCntrl} (unsigned long character)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b StrIsEqualLoc} (const char *s1, const char *s2)=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual char * {\b Translate} ({\b textdef} *def)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual char * {\b Translate} ({\b helptextdef} *def)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual char * {\b Translate} ({\b identhelpdef} *def)=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b keyworddef} * {\b keywordsloc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b keywordcount}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b textcount}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b identcount}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b helpcount}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b aliascount}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b FindAlias} (const char *ident)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b UntagText} (const char *text)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b lastText}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 36 of file language.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Language\:Language}
{\xe \v Language\:Language}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Language::Language ()}}
\par
{\bkmkstart AAAAAAACJV}
{\bkmkend AAAAAAACJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file language.cpp.}\par
{
References aliascount, helpcount, helptexts, identaliases, identcount, identtexts, keywordcount, keywords, keywordsloc, lastText, textcount, and textdefs.}\par
{
Referenced by PosixLanguage::PosixLanguage(), and StandardLanguage::StandardLanguage().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    39 \{\par
   40     lastText = NOMEM;\par
   41     keywordsloc = NOMEM;\par
   42     keywordcount = sizeof(keywords) / sizeof(keyworddef);\par
   43     textcount = sizeof(textdefs) / sizeof(textdef);\par
   44     identcount = sizeof(identtexts) / sizeof(identhelpdef);\par
   45     helpcount = sizeof(helptexts) / sizeof(helptextdef);\par
   46     aliascount = sizeof(identaliases) / sizeof(identalias);\par
   47 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a09448361f9188bceaaeebc5576cd6896_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~Language\:Language}
{\xe \v Language\:~Language}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Language::~Language (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file language.cpp.}\par
{
References keywordsloc, and lastText.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{\par
   51     if (lastText != NOMEM) \{\par
   52         delete lastText;\par
   53     \}\par
   54 \par
   55     if (keywordsloc != NOMEM) \{\par
   56         delete [] keywordsloc;\par
   57     \}\par
   58 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CharIsAlNum\:Language}
{\xe \v Language\:CharIsAlNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} Language::CharIsAlNum (unsigned long  {\i character}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PosixLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AmigaLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLO \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b StandardLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v CharIsAlpha\:Language}
{\xe \v Language\:CharIsAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} Language::CharIsAlpha (unsigned long  {\i character}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PosixLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AmigaLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b StandardLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Lexer::GetLitteral().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a179619af0ab0e5159b9fd4158dcac3a9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CharIsCntrl\:Language}
{\xe \v Language\:CharIsCntrl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} Language::CharIsCntrl (unsigned long  {\i character}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PosixLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AmigaLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLS \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b StandardLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Lexer::GetQuotedIdent(), and Lexer::ShouldSkip().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a392214aa8de840d1cf7b738945ce1799_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CharIsDigit\:Language}
{\xe \v Language\:CharIsDigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} Language::CharIsDigit (unsigned long  {\i character}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PosixLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AmigaLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLU \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b StandardLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Lexer::GetLitteral().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a9f165e7098006b44eadd61e0c95f925b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CharIsPunct\:Language}
{\xe \v Language\:CharIsPunct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} Language::CharIsPunct (unsigned long  {\i character}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PosixLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AmigaLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLW \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b StandardLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v CharIsSpace\:Language}
{\xe \v Language\:CharIsSpace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} Language::CharIsSpace (unsigned long  {\i character}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PosixLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AmigaLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLY \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b StandardLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Lexer::GetNextToken(), and Lexer::ShouldSkip().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a1470832710ca9c4e4695bb442759c0a7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v FindAlias\:Language}
{\xe \v Language\:FindAlias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * Language::FindAlias (const char *  {\i ident}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKJ}
{\bkmkend AAAAAAACKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file language.cpp.}\par
{
References identalias::alias, aliascount, identalias::ident, identaliases, and StrIsEqual().}\par
{
Referenced by GetHelpText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    61 \{\par
   62     for (unsigned int i = 0; i < aliascount; i++) \{\par
   63         if (StrIsEqual(identaliases[i].ident, ident)) \{\par
   64             return (char*)identaliases[i].alias;\par
   65         \}\par
   66     \}\par
   67     return (char*)ident;\par
   68 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a14a991ea42d5d0482911d459ee68e8be_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a14a991ea42d5d0482911d459ee68e8be_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v FindKeyword\:Language}
{\xe \v Language\:FindKeyword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Symbol} Language::FindKeyword (const char *  {\i ident})}}
\par
{\bkmkstart AAAAAAACKK}
{\bkmkend AAAAAAACKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file language.cpp.}\par
{
References keywordcount, keywords, keywordsloc, keyworddef::name, StrIsEqualLoc(), and keyworddef::symbol.}\par
{
Referenced by Lexer::FindKeyword().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    71 \{\par
   72     for (unsigned int i = 0; i < keywordcount; i++) \{\par
   73         if (\par
   74             Program->Language->StrIsEqualLoc(keywords[i].name, ident) ||\par
   75             (keywordsloc != NULL &&\par
   76              Program->Language->StrIsEqualLoc(keywordsloc[i].name, ident))) \{\par
   77             return keywords[i].symbol;\par
   78         \}\par
   79     \}\par
   80     return (Symbol)0;\par
   81 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a8a9aa7fef5a0c2c3626249705292e71a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a8a9aa7fef5a0c2c3626249705292e71a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetFractionPoint\:Language}
{\xe \v Language\:GetFractionPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual char Language::GetFractionPoint (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PosixLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AmigaLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMA \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b StandardLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Program::NewPositionalInput(), Program::NewPositionalOutput(), and Program::Program().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a4c214f08d47e84d53f37bcb5b1fe1b65_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetHelpText\:Language}
{\xe \v Language\:GetHelpText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * Language::GetHelpText (char *  {\i ident})}}
\par
{\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 102 of file language.cpp.}\par
{
References FindAlias(), identhelpdef::ident, identcount, identtexts, StrIsEqual(), Translate(), and UntagText().}\par
{
Referenced by HelpStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   103 \{\par
  104     char *s = FindAlias(ident);\par
  105     identhelpdef *def = NOMEM;\par
  106     for (unsigned int i = 0; i < identcount; i++) \{\par
  107         if (StrIsEqual(identtexts[i].ident, s)) \{\par
  108             def = (identhelpdef*)&identtexts[i];\par
  109             break;\par
  110         \}\par
  111     \}\par
  112 \par
  113     if (def == NOMEM) \{\par
  114         return (char*)(HELPNOHELP);\par
  115     \}\par
  116 \par
  117     char *text = Translate(def);\par
  118     char *untagged = UntagText(text);\par
  119     return untagged;\par
  120 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a0044feceac32f8ce943b88165ade965e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a0044feceac32f8ce943b88165ade965e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetHelpText\:Language}
{\xe \v Language\:GetHelpText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * Language::GetHelpText ({\b Symbol}  {\i symbol})}}
\par
{\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 122 of file language.cpp.}\par
{
References helpcount, helptexts, helptextdef::symbol, Translate(), and UntagText().}\par
{
Referenced by HelpStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   123 \{\par
  124     helptextdef *def = NOMEM;\par
  125     for (unsigned int i = 0; i < helpcount; i++) \{\par
  126         if (helptexts[i].symbol == symbol) \{\par
  127             def = (helptextdef*)&helptexts[i];\par
  128             break;\par
  129         \}\par
  130     \}\par
  131 \par
  132     if (def == NOMEM) \{\par
  133         return (char*)(HELPNOHELP);\par
  134     \}\par
  135 \par
  136     char *text = Translate(def);\par
  137     char *untagged = UntagText(text);\par
  138     return untagged;\par
  139 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_ad2c5b22fcacde4bbff0e3c013dce4a96_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_ad2c5b22fcacde4bbff0e3c013dce4a96_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetText\:Language}
{\xe \v Language\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * Language::GetText (int  {\i id})}}
\par
{\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file language.cpp.}\par
{
References textdef::id, textcount, textdefs, Translate(), and UntagText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    84 \{\par
   85     textdef *def = NOMEM;\par
   86     for (unsigned int i = 0; i < textcount; i++) \{\par
   87         if (textdefs[i].id == id) \{\par
   88             def = (textdef*)&textdefs[i];\par
   89             break;\par
   90         \}\par
   91     \}\par
   92 \par
   93     if (def == NOMEM) \{\par
   94         return (char*)(HELPNOHELP);\par
   95     \}\par
   96 \par
   97     char *text = Translate(def);\par
   98     char *untagged = UntagText(text);\par
   99     return untagged;\par
  100 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_aaed350eac1a57388b010e73826e3ab83_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v StrIsEqualLoc\:Language}
{\xe \v Language\:StrIsEqualLoc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} Language::StrIsEqualLoc (const char *  {\i s1}, const char *  {\i s2}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PosixLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AmigaLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMC \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b StandardLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by FindKeyword().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a68d70b8d5232b4fa0b03268531dca0a3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Translate\:Language}
{\xe \v Language\:Translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual char* Language::Translate ({\b textdef} *  {\i def}){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PosixLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AmigaLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABME \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b StandardLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by GetText().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_ae4515a9a4191e57c5ccab61e99687818_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Translate\:Language}
{\xe \v Language\:Translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual char* Language::Translate ({\b helptextdef} *  {\i def}){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PosixLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AmigaLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMG \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b StandardLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by GetHelpText().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_aa51c505262ca738bf4675fc87f96dbf6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Translate\:Language}
{\xe \v Language\:Translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual char* Language::Translate ({\b identhelpdef} *  {\i def}){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PosixLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AmigaLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMI \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b StandardLanguage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by GetHelpText().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a232a8b51c7866013363b9916fe89299c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v UntagText\:Language}
{\xe \v Language\:UntagText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * Language::UntagText (const char *  {\i text}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 141 of file language.cpp.}\par
{
References lastText, MemCopy(), StrLen(), texttags, and Untag().}\par
{
Referenced by GetHelpText(), and GetText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   142 \{\par
  143     if (lastText != NOMEM) \{\par
  144         delete lastText;\par
  145         lastText = NULL;\par
  146     \}\par
  147 \par
  148     if (text == NOMEM) \{\par
  149         return NOMEM;\par
  150     \}\par
  151 \par
  152     unsigned int count = sizeof(texttags) / sizeof(texttag);\par
  153     char *untagged = new char[StrLen(text) * 2];\par
  154     Untag(untagged, text, (texttag*)texttags, count);\par
  155 \par
  156     unsigned int len = StrLen(untagged) + 1;\par
  157     lastText = new char[len];\par
  158     MemCopy(lastText, untagged, len);\par
  159     delete [] untagged;\par
  160 \par
  161     return lastText;\par
  162 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a69c5b3269ec8570a2f8f28e8e632cf44_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLanguage_a69c5b3269ec8570a2f8f28e8e632cf44_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v aliascount\:Language}
{\xe \v Language\:aliascount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Language::aliascount{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file language.h.}\par
{
Referenced by FindAlias(), and Language().}\par
}
{\xe \v helpcount\:Language}
{\xe \v Language\:helpcount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Language::helpcount{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file language.h.}\par
{
Referenced by GetHelpText(), Language(), and StandardLanguage::LoadCatalogs().}\par
}
{\xe \v identcount\:Language}
{\xe \v Language\:identcount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Language::identcount{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file language.h.}\par
{
Referenced by GetHelpText(), Language(), and StandardLanguage::LoadCatalogs().}\par
}
{\xe \v keywordcount\:Language}
{\xe \v Language\:keywordcount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Language::keywordcount{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file language.h.}\par
{
Referenced by FindKeyword(), Language(), and StandardLanguage::LoadCatalogs().}\par
}
{\xe \v keywordsloc\:Language}
{\xe \v Language\:keywordsloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b keyworddef}* Language::keywordsloc{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file language.h.}\par
{
Referenced by FindKeyword(), Language(), StandardLanguage::LoadCatalogs(), and ~Language().}\par
}
{\xe \v lastText\:Language}
{\xe \v Language\:lastText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* Language::lastText{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file language.h.}\par
{
Referenced by Language(), UntagText(), and ~Language().}\par
}
{\xe \v textcount\:Language}
{\xe \v Language\:textcount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Language::textcount{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file language.h.}\par
{
Referenced by GetText(), Language(), and StandardLanguage::LoadCatalogs().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b language.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b language.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lexer Class Reference\par \pard\plain 
{\tc\tcl2 \v Lexer}
{\xe \v Lexer}
{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates an lexical analyzer. Provides token for the parser. }}\par
{
{\f2 #include <lexer.h>}}\par
Collaboration diagram for Lexer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Lexer} (const char *{\b input})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Lexer} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Tokenize} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} * {\b GetFirstToken} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetInput} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static char * {\b FindKeyword} ({\b Symbol} symbol)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetNextToken} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b GetOperator} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b GetQuotedIdent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b GetLitteral} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b GetDigitValue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b ShouldSkip} (char character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Symbol} {\b FindKeyword} (const char *ident)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b input}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b str}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b pos}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} * {\b first}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} * {\b current}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates an lexical analyzer. Provides token for the parser. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
More info on lexical analysis is available at Wikipedia: {\f2 http://en.wikipedia.org/wiki/Lexical_analysis} \par
}{
Definition at line 45 of file lexer.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Lexer\:Lexer}
{\xe \v Lexer\:Lexer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Lexer::Lexer (const char *  {\i input})}}
\par
{\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file lexer.cpp.}\par
{
References AllocAndCopy(), current, first, input, pos, and str.}\par
{
Referenced by Parser::Parser().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    35 \{\par
   36     AllocAndCopy(&this->input, input);\par
   37     pos = 0;\par
   38     str = this->input;\par
   39     first = NOMEM;\par
   40     current = NOMEM;\par
   41 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a8e12946738ee015bac381da30e2b03b0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a8e12946738ee015bac381da30e2b03b0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~Lexer\:Lexer}
{\xe \v Lexer\:~Lexer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Lexer::~Lexer ()}}
\par
{\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file lexer.cpp.}\par
{
References first, and input.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     delete [] input;\par
   46 \par
   47     if (first != NOMEM) \{\par
   48         delete first;\par
   49     \}\par
   50 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v FindKeyword\:Lexer}
{\xe \v Lexer\:FindKeyword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * Lexer::FindKeyword ({\b Symbol}  {\i symbol}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 221 of file lexer.cpp.}\par
{
References operatordef::chr, keywords, keyworddef::name, operators, keyworddef::symbol, and operatordef::symbol.}\par
{
Referenced by PreferencesBase::GetDescription().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   222 \{\par
  223     static const unsigned int kwcount = sizeof(keywords) / sizeof(keyworddef);\par
  224     for (unsigned int i = 0; i < kwcount; i++) \{\par
  225         if (keywords[i].symbol == symbol) \{\par
  226             return (char*)keywords[i].name;\par
  227         \}\par
  228     \}\par
  229 \par
  230     static const unsigned int ocount = sizeof(operators) / sizeof(operatordef);\par
  231     for (unsigned int i = 0; i < ocount; i++) \{\par
  232         if (operators[i].symbol == symbol) \{\par
  233             return (char*)&(operators[i].chr);\par
  234         \}\par
  235     \}\par
  236 \par
  237     return NOMEM;\par
  238 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_affd4bac61db830383302be71198a372a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v FindKeyword\:Lexer}
{\xe \v Lexer\:FindKeyword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Symbol} Lexer::FindKeyword (const char *  {\i ident}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 216 of file lexer.cpp.}\par
{
References Language::FindKeyword().}\par
{
Referenced by GetLitteral().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   217 \{\par
  218     return Program->Language->FindKeyword(ident);\par
  219 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_ab2f2c675530801d7cc1052b3ca4d1d68_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_ab2f2c675530801d7cc1052b3ca4d1d68_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetDigitValue\:Lexer}
{\xe \v Lexer\:GetDigitValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Lexer::GetDigitValue (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 190 of file lexer.cpp.}\par
{
References current, Program::Input, MemCopy(), NumeralSystem::Parse(), pos, str, symnumber, and Token::Token().}\par
{
Referenced by GetNextToken().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   191 \{\par
  192     unsigned int len;\par
  193     char *end;\par
  194 \par
  195     // Only the numeral parser can determine if next token is a value\par
  196     Number *number = Program->Input->Parse(str, &len, &end);\par
  197 \par
  198     if (str == end) \{\par
  199         delete number;\par
  200         return false;\par
  201     \}\par
  202 \par
  203     char *text = new char[len + 1];\par
  204     MemCopy(text, str, len);\par
  205     *(text + len) = '\\0';\par
  206 \par
  207     current = new Token(current, symnumber, text, pos);\par
  208     delete [] text;\par
  209     delete number;\par
  210 \par
  211     pos += len;\par
  212     str = end;\par
  213     return true;\par
  214 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a9cb42b9797270ecbd944d5c5f3043c3a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a9cb42b9797270ecbd944d5c5f3043c3a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetFirstToken\:Lexer}
{\xe \v Lexer\:GetFirstToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Token} * Lexer::GetFirstToken ()}}
\par
{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file lexer.cpp.}\par
{
References first.}\par
{
Referenced by Parser::GetToken().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    58 \{\par
   59     return first;\par
   60 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_afbb12eaae7cff3bd2960f444cfe98f69_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetInput\:Lexer}
{\xe \v Lexer\:GetInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * Lexer::GetInput ()}}
\par
{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file lexer.cpp.}\par
{
References input.}\par
{
Referenced by Parser::Parse(), Parser::ParseDigistStatement(), Parser::ParseFileStatement(), Parser::ParseFunctionDef(), Parser::ParseIdent(), Parser::ParseNumeralStatement(), and Parser::TryParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    53 \{\par
   54     return input;\par
   55 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a3032cbeb851294bccd61b722d9a86265_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetLitteral\:Lexer}
{\xe \v Lexer\:GetLitteral}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Lexer::GetLitteral (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 150 of file lexer.cpp.}\par
{
References Language::CharIsAlpha(), Language::CharIsDigit(), current, FindKeyword(), MemCopy(), pos, str, symident, and Token::Token().}\par
{
Referenced by GetNextToken().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   151 \{\par
  152     const char *start = str;\par
  153     const unsigned int startPos = pos;\par
  154     int unsigned len = 0;\par
  155     bool found = true;\par
  156     Symbol ksymbol;\par
  157 \par
  158     while (found) \{\par
  159         if (Program->Language->CharIsAlpha(*str)) \{\par
  160             str++;\par
  161             len++;\par
  162         \} else if (len != 0 && Program->Language->CharIsDigit(*str)) \{\par
  163             str++;\par
  164             len++;\par
  165         \} else \{\par
  166             found = false;\par
  167         \}\par
  168     \}\par
  169 \par
  170     if (len == 0) \{\par
  171         return false;\par
  172     \}\par
  173 \par
  174     char *ident = new char[len + 1];\par
  175     MemCopy(ident, start, len);\par
  176     ident[len] = 0;\par
  177 \par
  178     if ((ksymbol = FindKeyword(ident))) \{\par
  179         current = new Token(current, ksymbol, startPos);\par
  180     \} else \{\par
  181         current = new Token(current, symident, ident, startPos);\par
  182     \}\par
  183 \par
  184     pos += len;\par
  185 \par
  186     delete [] ident;\par
  187     return true;\par
  188 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a1a2555bec4f29b19fc0edd3989237110_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a1a2555bec4f29b19fc0edd3989237110_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNextToken\:Lexer}
{\xe \v Lexer\:GetNextToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Lexer::GetNextToken (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file lexer.cpp.}\par
{
References Language::CharIsSpace(), current, GetDigitValue(), GetLitteral(), GetOperator(), GetQuotedIdent(), pos, ShouldSkip(), str, symend, symunknown, and Token::Token().}\par
{
Referenced by Tokenize().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    80 \{\par
   81     // Skip spaces and non visible characters\par
   82     while (*str != 0 && ShouldSkip(*str)) \{\par
   83         str++;\par
   84         if (Program->Language->CharIsSpace(*str)) \{\par
   85             pos++;\par
   86         \}\par
   87     \}\par
   88 \par
   89     if (*str == 0)\par
   90     \{\par
   91         current = new Token(current, symend, pos);\par
   92     \} else if (GetOperator() || GetQuotedIdent() || GetDigitValue() || GetLitteral()) \{\par
   93         return;\par
   94     \} else \{\par
   95         str++;\par
   96         pos++;\par
   97         current = new Token(current, symunknown, pos - 1);\par
   98     \}\par
   99 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a0f32556fc91f85a9ad55ed52321d2ae0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a0f32556fc91f85a9ad55ed52321d2ae0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetOperator\:Lexer}
{\xe \v Lexer\:GetOperator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Lexer::GetOperator (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file lexer.cpp.}\par
{
References operatordef::chr, current, operators, pos, str, operatordef::symbol, and Token::Token().}\par
{
Referenced by GetNextToken().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   102 \{\par
  103     static const unsigned int count = sizeof(operators) / sizeof(operatordef);\par
  104     for (unsigned int i = 0; i < count; i++) \{\par
  105         if (operators[i].chr == *str) \{\par
  106             current = new Token(current, operators[i].symbol, pos);\par
  107             str++;\par
  108             pos++;\par
  109             return true;\par
  110         \}\par
  111     \}\par
  112 \par
  113     return false;\par
  114 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a6d8ab3a715307bf89fdfa8f83879c3cf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a6d8ab3a715307bf89fdfa8f83879c3cf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetQuotedIdent\:Lexer}
{\xe \v Lexer\:GetQuotedIdent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Lexer::GetQuotedIdent (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 116 of file lexer.cpp.}\par
{
References Language::CharIsCntrl(), current, MemCopy(), pos, str, symqident, and Token::Token().}\par
{
Referenced by GetNextToken().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   117 \{\par
  118     if (*str != '"') \{\par
  119         return false;\par
  120     \}\par
  121 \par
  122     char *start = str;\par
  123     const unsigned int startPos = pos;\par
  124     int unsigned len = 0;\par
  125     str++;\par
  126 \par
  127     while (*str != 0 && *str != '"' && !Program->Language->CharIsCntrl(*str)) \{\par
  128         str++;\par
  129         len++;\par
  130     \}\par
  131 \par
  132     if (len == 0 || *str != '"') \{\par
  133         str = start;\par
  134         return false;\par
  135     \}\par
  136 \par
  137     char *ident = new char[len + 1];\par
  138     MemCopy(ident, start + 1, len);\par
  139     ident[len] = 0;\par
  140 \par
  141     current = new Token(current, symqident, ident, startPos);\par
  142 \par
  143     str++;\par
  144     pos += len + 1;\par
  145 \par
  146     delete [] ident;\par
  147     return true;\par
  148 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a3444c8c0450b3cd82bb395627095769b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a3444c8c0450b3cd82bb395627095769b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ShouldSkip\:Lexer}
{\xe \v Lexer\:ShouldSkip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Lexer::ShouldSkip (char  {\i character}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 240 of file lexer.cpp.}\par
{
References Language::CharIsCntrl(), and Language::CharIsSpace().}\par
{
Referenced by GetNextToken().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   241 \{\par
  242     if (character == '\\n') \{\par
  243         return false;\par
  244     \}\par
  245 \par
  246     if (Program->Language->CharIsCntrl(character)) \{\par
  247         return true;\par
  248     \}\par
  249 \par
  250     if (Program->Language->CharIsSpace(character)) \{\par
  251         return true;\par
  252     \}\par
  253 \par
  254     return false;\par
  255 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a864c73023ef6b437a8d58c8158fbc6be_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a864c73023ef6b437a8d58c8158fbc6be_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Tokenize\:Lexer}
{\xe \v Lexer\:Tokenize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Lexer::Tokenize ()}}
\par
{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file lexer.cpp.}\par
{
References current, first, GetNextToken(), input, Token::next, pos, str, Token::symbol, and symend.}\par
{
Referenced by Parser::Parse().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    63 \{\par
   64     pos = 0;\par
   65     str = input;\par
   66     first = NOMEM;\par
   67     current = NOMEM;\par
   68 \par
   69     GetNextToken();\par
   70     first = current;\par
   71 \par
   72     do \{\par
   73         Token* last = current;\par
   74         GetNextToken();\par
   75         last->next = current;\par
   76     \} while (current->symbol != symend);\par
   77 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a02696cb1f974ae74116c2b746dcba365_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLexer_a02696cb1f974ae74116c2b746dcba365_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v current\:Lexer}
{\xe \v Lexer\:current}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Token}* Lexer::current{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file lexer.h.}\par
{
Referenced by GetDigitValue(), GetLitteral(), GetNextToken(), GetOperator(), GetQuotedIdent(), Lexer(), and Tokenize().}\par
}
{\xe \v first\:Lexer}
{\xe \v Lexer\:first}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Token}* Lexer::first{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file lexer.h.}\par
{
Referenced by GetFirstToken(), Lexer(), Tokenize(), and ~Lexer().}\par
}
{\xe \v input\:Lexer}
{\xe \v Lexer\:input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* Lexer::input{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file lexer.h.}\par
{
Referenced by GetInput(), Lexer(), Tokenize(), and ~Lexer().}\par
}
{\xe \v pos\:Lexer}
{\xe \v Lexer\:pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Lexer::pos{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file lexer.h.}\par
{
Referenced by GetDigitValue(), GetLitteral(), GetNextToken(), GetOperator(), GetQuotedIdent(), Lexer(), and Tokenize().}\par
}
{\xe \v str\:Lexer}
{\xe \v Lexer\:str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* Lexer::str{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file lexer.h.}\par
{
Referenced by GetDigitValue(), GetLitteral(), GetNextToken(), GetOperator(), GetQuotedIdent(), Lexer(), and Tokenize().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b lexer.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b lexer.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ListFunctionsStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v ListFunctionsStatement}
{\xe \v ListFunctionsStatement}
{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A syntax node able to list all user defined functions. }}\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for ListFunctionsStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListFunctionsStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ListFunctionsStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListFunctionsStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListFunctionsStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A syntax node able to list all user defined functions. \par
}{
Definition at line 137 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ListFunctionsStatement\:ListFunctionsStatement}
{\xe \v ListFunctionsStatement\:ListFunctionsStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ListFunctionsStatement::ListFunctionsStatement ()}}
\par
{\bkmkstart AAAAAAACMA}
{\bkmkend AAAAAAACMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 479 of file functions.cpp.}\par
{
References StatementNode::StatementNode().}\par
{
Referenced by Parser::ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   479                                                :\par
  480     StatementNode() \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListFunctionsStatement_a45535c4ae1a1d56a617d82b51d775e32_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListFunctionsStatement_a45535c4ae1a1d56a617d82b51d775e32_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:ListFunctionsStatement}
{\xe \v ListFunctionsStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ListFunctionsStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 482 of file functions.cpp.}\par
{
References Program::Functions, and FunctionList::List().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   483 \{\par
  484     return Program->Functions->List();\par
  485 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListFunctionsStatement_aecbd17235ded16103ebed33a8fcca90e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ListStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v ListStatement}
{\xe \v ListStatement}
{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for ListStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ListStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListStatement} (const char *{\b directory})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ListStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b directory}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 261 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ListStatement\:ListStatement}
{\xe \v ListStatement\:ListStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ListStatement::ListStatement ()}}
\par
{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 608 of file statements.cpp.}\par
{
References directory, and StatementNode::StatementNode().}\par
{
Referenced by Parser::ParseListStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   608                              :\par
  609     StatementNode()\par
  610 \{\par
  611     directory = NOMEM;\par
  612 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListStatement_af21b0471e6e3eea7f3f5a282e92d2cb9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListStatement_af21b0471e6e3eea7f3f5a282e92d2cb9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ListStatement\:ListStatement}
{\xe \v ListStatement\:ListStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ListStatement::ListStatement (const char *  {\i directory})}}
\par
{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 614 of file statements.cpp.}\par
{
References AllocAndCopy(), directory, and StatementNode::StatementNode().}\par
{
Referenced by Parser::ParseListStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   614                                                   :\par
  615     StatementNode()\par
  616 \{\par
  617     AllocAndCopy(&this->directory,  directory);\par
  618 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListStatement_a13b22290109d3bffce78fdd2dcffb51d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListStatement_a13b22290109d3bffce78fdd2dcffb51d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~ListStatement\:ListStatement}
{\xe \v ListStatement\:~ListStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ListStatement::~ListStatement ()}}
\par
{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 620 of file statements.cpp.}\par
{
References directory.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   621 \{\par
  622     if (directory != NOMEM) \{\par
  623         delete [] directory;\par
  624     \}\par
  625 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:ListStatement}
{\xe \v ListStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ListStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 627 of file statements.cpp.}\par
{
References directory, Program::Filesystem, CharBuffer::GetString(), FilesystemBase::ListDirectory(), and SyntaxNode::output.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   628 \{\par
  629     CharBuffer *text = Program->Filesystem->ListDirectory(directory);\par
  630     if (text == NOMEM)\par
  631     \{\par
  632         return (char*)(MSGNODIR);\par
  633     \}\par
  634 \par
  635     delete output;\par
  636     output = text;\par
  637     return text->GetString();\par
  638 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListStatement_a49cc9fe49b665a1276f288c069e1c78b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v directory\:ListStatement}
{\xe \v ListStatement\:directory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* ListStatement::directory{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 269 of file statements.h.}\par
{
Referenced by Execute(), ListStatement(), and ~ListStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ListVariablesStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v ListVariablesStatement}
{\xe \v ListVariablesStatement}
{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Statement to list all user defined variables. }}\par
{
{\f2 #include <values.h>}}\par
Inheritance diagram for ListVariablesStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListVariablesStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ListVariablesStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListVariablesStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListVariablesStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Statement to list all user defined variables. \par
}{
Definition at line 94 of file values.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ListVariablesStatement\:ListVariablesStatement}
{\xe \v ListVariablesStatement\:ListVariablesStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ListVariablesStatement::ListVariablesStatement ()}}
\par
{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 259 of file values.cpp.}\par
{
References StatementNode::StatementNode().}\par
{
Referenced by Parser::ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   260     : StatementNode() \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListVariablesStatement_a99567f05d8c7b39f9d64246584024b83_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListVariablesStatement_a99567f05d8c7b39f9d64246584024b83_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:ListVariablesStatement}
{\xe \v ListVariablesStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ListVariablesStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 262 of file values.cpp.}\par
{
References VariableList::List(), and Program::Variables.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   263 \{\par
  264     return Program->Variables->List();\par
  265 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListVariablesStatement_a2ca734439e1c118b8b62d550baac8dc0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LnRootNode Class Reference\par \pard\plain 
{\tc\tcl2 \v LnRootNode}
{\xe \v LnRootNode}
{\bkmkstart AAAAAAACML}
{\bkmkend AAAAAAACML}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for LnRootNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLnRootNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for LnRootNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLnRootNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LnRootNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 308 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LnRootNode\:LnRootNode}
{\xe \v LnRootNode\:LnRootNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
LnRootNode::LnRootNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 698 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   698                                                  :\par
  699     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLnRootNode_a4424f5992bbad7bc9787c6b13f12b020_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLnRootNode_a4424f5992bbad7bc9787c6b13f12b020_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:LnRootNode}
{\xe \v LnRootNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * LnRootNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 701 of file functions.cpp.}\par
{
References LnRootNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   702 \{\par
  703     return new LnRootNode(expression);\par
  704 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLnRootNode_a4d634842fba548eabb422ee40032bac6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:LnRootNode}
{\xe \v LnRootNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * LnRootNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBI}
{\bkmkend AAAAAAACBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 706 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::Log(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   707 \{\par
  708     result = expression->Evaluate()->Log();\par
  709     return result;\par
  710 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLnRootNode_a549db364d3661c94bb9edb587d191439_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:LnRootNode}
{\xe \v LnRootNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * LnRootNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCN}
{\bkmkend AAAAAAACCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 712 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   713 \{\par
  714     return (char*)"ln";\par
  715 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LoadStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v LoadStatement}
{\xe \v LoadStatement}
{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for LoadStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLoadStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for LoadStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLoadStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LoadStatement} (const char *{\b file})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~LoadStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b file}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 272 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LoadStatement\:LoadStatement}
{\xe \v LoadStatement\:LoadStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
LoadStatement::LoadStatement (const char *  {\i file})}}
\par
{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 644 of file statements.cpp.}\par
{
References AllocAndCopy(), and file.}\par
{
Referenced by Parser::ParseFileStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   645 \{\par
  646     AllocAndCopy(&this->file, file);\par
  647 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLoadStatement_a4828300bc260971c2070947a70e710c1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLoadStatement_a4828300bc260971c2070947a70e710c1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~LoadStatement\:LoadStatement}
{\xe \v LoadStatement\:~LoadStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
LoadStatement::~LoadStatement ()}}
\par
{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 649 of file statements.cpp.}\par
{
References file.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   650 \{\par
  651     delete [] file;\par
  652 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:LoadStatement}
{\xe \v LoadStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * LoadStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 654 of file statements.cpp.}\par
{
References SyntaxNode::Execute(), file, Program::Filesystem, CharBuffer::GetString(), FilesystemBase::LoadTextFile(), Parser::Parse(), and Parser::Parser().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   655 \{\par
  656     CharBuffer *input = Program->Filesystem->LoadTextFile(file);\par
  657     if (input == NOMEM)\par
  658     \{\par
  659         return (char*)(MSGNOFILE);\par
  660     \}\par
  661 \par
  662     Parser *parser = new Parser(input->GetString());\par
  663     delete input;\par
  664 \par
  665     SyntaxNode *node = parser->Parse();\par
  666     delete parser;\par
  667 \par
  668     node->Execute();\par
  669     delete node;\par
  670 \par
  671     return (char*)HELPLOADSUCC;\par
  672 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLoadStatement_ae3cbd157ad8de73551ff430fa3c089d9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v file\:LoadStatement}
{\xe \v LoadStatement\:file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* LoadStatement::file{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 279 of file statements.h.}\par
{
Referenced by Execute(), LoadStatement(), and ~LoadStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LogNode Class Reference\par \pard\plain 
{\tc\tcl2 \v LogNode}
{\xe \v LogNode}
{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for LogNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLogNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for LogNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLogNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LogNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 298 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LogNode\:LogNode}
{\xe \v LogNode\:LogNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
LogNode::LogNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACMU}
{\bkmkend AAAAAAACMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 721 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   721                                            :\par
  722     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLogNode_a6bf6a9d421767f3cf02f0fa2d4dc11a9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLogNode_a6bf6a9d421767f3cf02f0fa2d4dc11a9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:LogNode}
{\xe \v LogNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * LogNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 724 of file functions.cpp.}\par
{
References LogNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   725 \{\par
  726     return new LogNode(expression);\par
  727 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLogNode_a06ab1d2b9676804d54efed4dca5d3b25_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:LogNode}
{\xe \v LogNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * LogNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 729 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, Number::Log10(), and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   730 \{\par
  731     result = expression->Evaluate()->Log10();\par
  732     return result;\par
  733 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLogNode_aa8bf2ac5af5a3b9e2f56c80a496beca8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:LogNode}
{\xe \v LogNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * LogNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCO}
{\bkmkend AAAAAAACCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 735 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   736 \{\par
  737     return (char*)"lg";\par
  738 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MemoryBlock Struct Reference\par \pard\plain 
{\tc\tcl2 \v MemoryBlock}
{\xe \v MemoryBlock}
{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
Collaboration diagram for MemoryBlock:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structMemoryBlock__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MemoryBlock} * {\b next}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b address}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 46 of file mem.c.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v address\:MemoryBlock}
{\xe \v MemoryBlock\:address}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* MemoryBlock::address}}
\par
{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file mem.c.}\par
{
Referenced by AllocMemSafe(), FreeAllSafe(), and FreeMemSafe().}\par
}
{\xe \v next\:MemoryBlock}
{\xe \v MemoryBlock\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b MemoryBlock}* MemoryBlock::next}}
\par
{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file mem.c.}\par
{
Referenced by AllocMemSafe(), FreeAllSafe(), and FreeMemSafe().}\par
}
{\xe \v size\:MemoryBlock}
{\xe \v MemoryBlock\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t MemoryBlock::size}}
\par
{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file mem.c.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
lib/clib/{\b mem.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MemoryList Struct Reference\par \pard\plain 
{\tc\tcl2 \v MemoryList}
{\xe \v MemoryList}
{\bkmkstart AAAAAAACNA}
{\bkmkend AAAAAAACNA}
Collaboration diagram for MemoryList:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structMemoryList__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MemoryBlock} * {\b first}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MemoryBlock} * {\b last}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b peak}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b count}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 53 of file mem.c.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v count\:MemoryList}
{\xe \v MemoryList\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long MemoryList::count}}
\par
{\bkmkstart AAAAAAACNB}
{\bkmkend AAAAAAACNB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file mem.c.}\par
{
Referenced by AllocMemSafe(), FreeMemSafe(), and MemUsage().}\par
}
{\xe \v first\:MemoryList}
{\xe \v MemoryList\:first}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b MemoryBlock}* MemoryList::first}}
\par
{\bkmkstart AAAAAAACNC}
{\bkmkend AAAAAAACNC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file mem.c.}\par
{
Referenced by AllocMemSafe(), FreeAllSafe(), and FreeMemSafe().}\par
}
{\xe \v last\:MemoryList}
{\xe \v MemoryList\:last}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b MemoryBlock}* MemoryList::last}}
\par
{\bkmkstart AAAAAAACND}
{\bkmkend AAAAAAACND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file mem.c.}\par
{
Referenced by AllocMemSafe(), and FreeMemSafe().}\par
}
{\xe \v peak\:MemoryList}
{\xe \v MemoryList\:peak}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long MemoryList::peak}}
\par
{\bkmkstart AAAAAAACNE}
{\bkmkend AAAAAAACNE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file mem.c.}\par
{
Referenced by AllocMemSafe(), and MemUsage().}\par
}
{\xe \v size\:MemoryList}
{\xe \v MemoryList\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long MemoryList::size}}
\par
{\bkmkstart AAAAAAACNF}
{\bkmkend AAAAAAACNF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file mem.c.}\par
{
Referenced by AllocMemSafe(), and MemUsage().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
lib/clib/{\b mem.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MemoryStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v MemoryStatement}
{\xe \v MemoryStatement}
{\bkmkstart AAAAAAACNG}
{\bkmkend AAAAAAACNG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Show memory usage. }}\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for MemoryStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classMemoryStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for MemoryStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classMemoryStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MemoryStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MemoryStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Show memory usage. \par
}{
Definition at line 94 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MemoryStatement\:MemoryStatement}
{\xe \v MemoryStatement\:MemoryStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MemoryStatement::MemoryStatement (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACNH}
{\bkmkend AAAAAAACNH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file statements.h.}\par
{
Referenced by Parser::ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    96 \{ \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classMemoryStatement_a7aa2d5e60c07a928e6bcbbee00d29ec6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~MemoryStatement\:MemoryStatement}
{\xe \v MemoryStatement\:~MemoryStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MemoryStatement::~MemoryStatement (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACNI}
{\bkmkend AAAAAAACNI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file statements.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    97 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:MemoryStatement}
{\xe \v MemoryStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * MemoryStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNJ}
{\bkmkend AAAAAAACNJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 163 of file statements.cpp.}\par
{
References CharBuffer::Append(), DecimalSystem::DecimalSystem(), CharBuffer::Empty(), CharBuffer::EnsureSize(), CharBuffer::GetString(), NumeralSystem::GetText(), MemUsage(), SyntaxNode::output, RealNumber::RealNumber(), and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   164 \{\par
  165     long blocks, size, peak;\par
  166     MemUsage(&blocks, &size, &peak);\par
  167     Number *a = new RealNumber((int)blocks);\par
  168     Number *b = new RealNumber((int)size);\par
  169     Number *c = new RealNumber((int)peak);\par
  170 \par
  171     NumeralSystem *ns = new DecimalSystem(8);\par
  172     output->Empty();\par
  173     output->EnsureSize(\par
  174         StrLen(TXTMEMBLOCKS) + 8 +\par
  175         StrLen(TXTMEMSIZE) + 12 +\par
  176         StrLen(TXTMEMMAXSIZE) + 12);\par
  177     output->Append(TXTMEMBLOCKS);\par
  178     output->Append(ns->GetText(a));\par
  179     output->Append(NEWLINE);\par
  180     output->Append(TXTMEMSIZE);\par
  181     output->Append(ns->GetText(b));\par
  182     output->Append(NEWLINE);\par
  183     output->Append(TXTMEMMAXSIZE);\par
  184     output->Append(ns->GetText(c));\par
  185     output->Append(NEWLINE);\par
  186 \par
  187     delete a;\par
  188     delete b;\par
  189     delete c;\par
  190     delete ns;\par
  191     return output->GetString();\par
  192 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classMemoryStatement_a0cfd7aae34f2103c7734980907426f4e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MultiplicationNode Class Reference\par \pard\plain 
{\tc\tcl2 \v MultiplicationNode}
{\xe \v MultiplicationNode}
{\bkmkstart AAAAAAACNK}
{\bkmkend AAAAAAACNK}
\par
{
{\f2 #include <operators.h>}}\par
Inheritance diagram for MultiplicationNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classMultiplicationNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for MultiplicationNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classMultiplicationNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MultiplicationNode} ({\b ExpressionNode} *{\b left}, {\b ExpressionNode} *{\b right})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 118 of file operators.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MultiplicationNode\:MultiplicationNode}
{\xe \v MultiplicationNode\:MultiplicationNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MultiplicationNode::MultiplicationNode ({\b ExpressionNode} *  {\i left}, {\b ExpressionNode} *  {\i right})}}
\par
{\bkmkstart AAAAAAACNL}
{\bkmkend AAAAAAACNL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 357 of file operators.cpp.}\par
{
References NumericOperator::NumericOperator().}\par
{
Referenced by Parser::ParseFactor().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   357                                                                                   :\par
  358     NumericOperator(left, right) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classMultiplicationNode_a3f96a30f283caa7991dd67be334e71af_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classMultiplicationNode_a3f96a30f283caa7991dd67be334e71af_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Evaluate\:MultiplicationNode}
{\xe \v MultiplicationNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * MultiplicationNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBT}
{\bkmkend AAAAAAACBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 365 of file operators.cpp.}\par
{
References ExpressionNode::Evaluate(), NumericOperator::left, Number::Mul(), ExpressionNode::result, and NumericOperator::right.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   366 \{\par
  367     result = left->Evaluate()->Mul(right->Evaluate());\par
  368     return result;\par
  369 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classMultiplicationNode_a6f8b2f1b4a4779fd99acc6cef50545cc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:MultiplicationNode}
{\xe \v MultiplicationNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * MultiplicationNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCY}
{\bkmkend AAAAAAACCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 371 of file operators.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   372 \{\par
  373     return (char*)"*";\par
  374 \}\par
}
}
{\xe \v GetPrecedence\:MultiplicationNode}
{\xe \v MultiplicationNode\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MultiplicationNode::GetPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDF}
{\bkmkend AAAAAAACDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 360 of file operators.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   361 \{\par
  362     return 3;\par
  363 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Number Struct Reference\par \pard\plain 
{\tc\tcl2 \v Number}
{\xe \v Number}
{\bkmkstart AAAAAAACNM}
{\bkmkend AAAAAAACNM}
\par
{
{\f2 #include <numb.h>}}\par
Inheritance diagram for Number:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} ({\b NumberSystem} {\b system})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Number} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Clone} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b GetIntegerValue} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b GetRealValue} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b PureComplexValue} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b GetPrecedence} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b GetDefaultPrecedence} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Unary} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Add} ({\b Number} *other)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Sub} ({\b Number} *other)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Mul} ({\b Number} *other)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Div} ({\b Number} *other)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Raise} ({\b Number} *exponent)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Signum} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Trunc} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Round} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Floor} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Ceiling} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Absolute} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b SquareRoot} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b CubeRoot} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Reciprocal} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Log} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Log2} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Log10} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Sine} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Cosine} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Tangent} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Cosecant} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Secant} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Cotangent} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b ArcSine} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b ArcCosine} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b ArcTangent} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b ArcCosecant} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b ArcSecant} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b ArcCotangent} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b HypSine} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b HypCosine} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b HypTangent} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b HypCosecant} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b HypSecant} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b HypCotangent} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b HypArcSine} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b HypArcCosine} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b HypArcTangent} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b HypArcCosecant} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b HypArcSecant} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b HypArcCotangent} ()=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NumberSystem} {\b system}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PositionalNumeralSystem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DecimalSystem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RealNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ComplexNumber}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 48 of file numb.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Number\:Number}
{\xe \v Number\:Number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Number::Number ({\b NumberSystem}  {\i system}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACNN}
{\bkmkend AAAAAAACNN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file numb.h.}\par
{
References system.}\par
{
Referenced by ComplexNumber::ComplexNumber(), and RealNumber::RealNumber().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 : system(system)  \{ \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_afd3c2f9b4b288e339f741a6e4ae54593_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~Number\:Number}
{\xe \v Number\:~Number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual Number::~Number (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNO}
{\bkmkend AAAAAAACNO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file numb.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    51 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Absolute\:Number}
{\xe \v Number\:Absolute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Absolute (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNP \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by AbsoluteNode::Evaluate(), and AbsoluteFunctionNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_acdbe13cd9862bb73225a893fb14de2a5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Add\:Number}
{\xe \v Number\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Add ({\b Number} *  {\i other}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by RealNumber::Add(), AdditionNode::Evaluate(), Optimizer::ReduceValueNodes(), and RealNumber::Sub().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_af38172a47d725f10b8586846cb06e8a4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcCosecant\:Number}
{\xe \v Number\:ArcCosecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::ArcCosecant (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNR \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by ArcCosecantNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a31dc5fa52529b5a7e76459bb984505e8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcCosine\:Number}
{\xe \v Number\:ArcCosine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::ArcCosine (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNS \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by ArcCosineNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a0056c25bf82bef6565963740ebab7517_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcCotangent\:Number}
{\xe \v Number\:ArcCotangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::ArcCotangent (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNT \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by ArcCotangentNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a859439f92698a61407238c4be5c1f1f5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcSecant\:Number}
{\xe \v Number\:ArcSecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::ArcSecant (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNU \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by ArcSecantNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_aa7056bfff596b8d78757cac21a708094_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcSine\:Number}
{\xe \v Number\:ArcSine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::ArcSine (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNV \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by ArcSineNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_aabfd7afb2309911d8f1bc26b6927e4ef_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcTangent\:Number}
{\xe \v Number\:ArcTangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::ArcTangent (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNW \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by ArcTangentNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_aaf001a24205a4062b2cfc79873d2884d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Ceiling\:Number}
{\xe \v Number\:Ceiling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Ceiling (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNX \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by CeilingNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_af6cc655e7d0eeb4f68a091456dddc25a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Clone\:Number}
{\xe \v Number\:Clone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Clone (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNY \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Variable::AssignValue(), Variable::GetValue(), and Program::SetLastResult().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_af59101b8a549616be51212fa1c17785e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Cosecant\:Number}
{\xe \v Number\:Cosecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Cosecant (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABST \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by CosecantNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a267a79888fd185d689e2877b449128d8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Cosine\:Number}
{\xe \v Number\:Cosine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Cosine (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOA \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by CosineNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a39425d97b36e17af4a26f8494a4b6ac4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Cotangent\:Number}
{\xe \v Number\:Cotangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Cotangent (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOB \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by CotangentNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a651d9569abac017baaac7b2edb8f09a8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CubeRoot\:Number}
{\xe \v Number\:CubeRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::CubeRoot (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOC \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by CubeRootNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a2c1fed99c53bc717da667e037fbf871b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Div\:Number}
{\xe \v Number\:Div}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Div ({\b Number} *  {\i other}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOD \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by DivisionNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a63917f8ad27c63f6616107d480ef9b5e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Floor\:Number}
{\xe \v Number\:Floor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Floor (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOE \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by FloorNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_ae0f6a7e7552384f7a2781aaf0c6c2837_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetDefaultPrecedence\:Number}
{\xe \v Number\:GetDefaultPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int Number::GetDefaultPrecedence (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOF \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by NumericValueNode::GetPrecedence().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a63541fd80102c9fc36f8f913446700df_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetIntegerValue\:Number}
{\xe \v Number\:GetIntegerValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int Number::GetIntegerValue (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOG \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Parser::ParseDigistStatement(), and Parser::ParseNumeralStatement().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_aa2c4b207ac557a8bdbc1cf5696d37160_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetPrecedence\:Number}
{\xe \v Number\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int Number::GetPrecedence (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOH \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by NumericValueNode::GetPrecedence().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a283da553cc9b328c3805611f2d96523d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetRealValue\:Number}
{\xe \v Number\:GetRealValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double Number::GetRealValue (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOI \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Grid::FunctionValue(), PositionalNumeralSystem::GetText(), DecimalSystem::GetText(), and Parser::ParseNumber().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a83da654d465f1344162ce8b8f8c564b9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcCosecant\:Number}
{\xe \v Number\:HypArcCosecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::HypArcCosecant (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTP \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by HyperbolicArcCosecantNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a161ee9528f4ba95e95e1310d840f7092_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcCosine\:Number}
{\xe \v Number\:HypArcCosine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::HypArcCosine (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTR \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by HyperbolicArccosineNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_ae919ea5844a071f26f61a069055429ea_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcCotangent\:Number}
{\xe \v Number\:HypArcCotangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::HypArcCotangent (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTT \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by HyperbolicArcCotangentNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a41bd8f9dadae875b260ee4fe50280d3e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcSecant\:Number}
{\xe \v Number\:HypArcSecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::HypArcSecant (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTV \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by HyperbolicArcSecantNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_aa58d792da89672016b2f58beea9009d7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcSine\:Number}
{\xe \v Number\:HypArcSine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::HypArcSine (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTX \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACON \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by HyperbolicArcsineNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_aab0a62427355e8139c6d853c7c7ef8d2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcTangent\:Number}
{\xe \v Number\:HypArcTangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::HypArcTangent (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by HyperbolicArctangentNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_aa1af1928e54054a73c43340fd5238299_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypCosecant\:Number}
{\xe \v Number\:HypCosecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::HypCosecant (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOP \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by HyperbolicCosecantNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a0f75e1e5a241d6a639e20d8a6c427541_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypCosine\:Number}
{\xe \v Number\:HypCosine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::HypCosine (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by HyperbolicCosineNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_abab40aa368d554af3e94c410aeb6c636_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypCotangent\:Number}
{\xe \v Number\:HypCotangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::HypCotangent (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOR \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by HyperbolicCotangentNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a854b3416ab11151bf64247fcfeb69757_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypSecant\:Number}
{\xe \v Number\:HypSecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::HypSecant (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOS \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by HyperbolicSecantNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a88a320bdba4f338347207f82f71bd287_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypSine\:Number}
{\xe \v Number\:HypSine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::HypSine (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOT \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by HyperbolicSineNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a5e05df2319f17aa33da95560f9274042_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypTangent\:Number}
{\xe \v Number\:HypTangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::HypTangent (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOU \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by HyperbolicTangentNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a0e121d7ed52086bf35a166355101051a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Log\:Number}
{\xe \v Number\:Log}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Log (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOV \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by LnRootNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a50a23b917c744ce16f0a4eb4e6f76071_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Log10\:Number}
{\xe \v Number\:Log10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Log10 (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOW \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by LogNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a53f6451df2a81d0ab48887e41f9c98f9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Log2\:Number}
{\xe \v Number\:Log2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Log2 (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOX \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by BinaryLogNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a8ace103bb7d32fabc11b65d00ab70f6a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Mul\:Number}
{\xe \v Number\:Mul}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Mul ({\b Number} *  {\i other}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOY \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by MultiplicationNode::Evaluate(), and RealNumber::Mul().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_ab853199817c9cd4e43c43aaedc4eef35_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v PureComplexValue\:Number}
{\xe \v Number\:PureComplexValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} Number::PureComplexValue (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACOZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Optimizer::ReduceValueNodes().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a037b461c2c9189c00b11f395a325735d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Raise\:Number}
{\xe \v Number\:Raise}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Raise ({\b Number} *  {\i exponent}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPA \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by PowerNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_ad258f0357483820672fe2bc41a569dd3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Reciprocal\:Number}
{\xe \v Number\:Reciprocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Reciprocal (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPB \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by RealNumber::Div().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a3048907149c34115a40461c848a34e9e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Round\:Number}
{\xe \v Number\:Round}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Round (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPC \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by RoundNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_abc34ae359f4b660cccd21d36e7e46334_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Secant\:Number}
{\xe \v Number\:Secant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Secant (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPD \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by SecantNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a63ddfeb7b264f76845a0414dc8ade3e6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Signum\:Number}
{\xe \v Number\:Signum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Signum (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPE \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by SignumNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_ab855ebca1f99be092914ae41aff52204_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Sine\:Number}
{\xe \v Number\:Sine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Sine (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPF \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by SineNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a493b5d26f9791985315624a0e9cb9dd6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SquareRoot\:Number}
{\xe \v Number\:SquareRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::SquareRoot (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPG \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by SquareRootNode::Evaluate(), and RealNumber::SquareRoot().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a388fb639e9a8232cb4083e581352311c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Sub\:Number}
{\xe \v Number\:Sub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Sub ({\b Number} *  {\i other}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPH \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by SubtractionNode::Evaluate(), and Optimizer::ReduceValueNodes().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_ae64075f6f73ded559499d3156bde0bdb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Tangent\:Number}
{\xe \v Number\:Tangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Tangent (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPI \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by TangentNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a4a49daab06d7311db480e2cf81e1da67_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Trunc\:Number}
{\xe \v Number\:Trunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Trunc (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by TruncNode::Evaluate().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a18dc6a153c55c3b0295b5d5fe1f6ab7d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Unary\:Number}
{\xe \v Number\:Unary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* Number::Unary (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b RealNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPK \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ComplexNumber} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by UnaryNode::Evaluate(), Optimizer::ReduceUnaryNodes(), and RealNumber::Sub().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNumber_a4283e401f772614fc566db78087cf860_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v ComplexNumber\:Number}
{\xe \v Number\:ComplexNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend struct {\b ComplexNumber}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 111 of file numb.h.}\par
}
{\xe \v DecimalSystem\:Number}
{\xe \v Number\:DecimalSystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b DecimalSystem}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 109 of file numb.h.}\par
}
{\xe \v PositionalNumeralSystem\:Number}
{\xe \v Number\:PositionalNumeralSystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b PositionalNumeralSystem}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 108 of file numb.h.}\par
}
{\xe \v RealNumber\:Number}
{\xe \v Number\:RealNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend struct {\b RealNumber}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 110 of file numb.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v system\:Number}
{\xe \v Number\:system}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NumberSystem} Number::system{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 114 of file numb.h.}\par
{
Referenced by ComplexNumber::Add(), RealNumber::Add(), ComplexNumber::Div(), RealNumber::Div(), PositionalNumeralSystem::GetText(), DecimalSystem::GetText(), ComplexNumber::Mul(), RealNumber::Mul(), Number(), ComplexNumber::Raise(), RealNumber::Raise(), ComplexNumber::Sub(), and RealNumber::Sub().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b numb.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NumeralSystem Class Reference\par \pard\plain 
{\tc\tcl2 \v NumeralSystem}
{\xe \v NumeralSystem}
{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all numeral systems. }}\par
{
{\f2 #include <ntext.h>}}\par
Inheritance diagram for NumeralSystem:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumeralSystem__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for NumeralSystem:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumeralSystem__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NumeralSystem} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~NumeralSystem} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const char * {\b GetName} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const char * {\b GetPrefix} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual unsigned int {\b GetDigits} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b SetDigits} (unsigned int digits)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const char {\b GetFractionPoint} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b SetFractionPoint} (const char fractionpoint)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const char * {\b GetText} ({\b Number} *number)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Parse} (const char *text, unsigned int *length, char **end)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Parse} (const char *text)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} * {\b buf}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all numeral systems. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
More info on numeral systems is available at Wikipedia: {\f2 http://en.wikipedia.org/wiki/Numeral_system} \par
}{
Definition at line 48 of file ntext.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v NumeralSystem\:NumeralSystem}
{\xe \v NumeralSystem\:NumeralSystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NumeralSystem::NumeralSystem ()}}
\par
{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file ntext.cpp.}\par
{
References buf, CharBuffer::CharBuffer(), and CharBuffer::Empty().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    39 \{\par
   40     buf = new CharBuffer();\par
   41     buf->Empty();\par
   42 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumeralSystem_a1bca07a7784148e5505e77cf6ab97123_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~NumeralSystem\:NumeralSystem}
{\xe \v NumeralSystem\:~NumeralSystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NumeralSystem::~NumeralSystem (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPS}
{\bkmkend AAAAAAACPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file ntext.cpp.}\par
{
References buf.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45 \{\par
   46     delete buf;\par
   47 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetDigits\:NumeralSystem}
{\xe \v NumeralSystem\:GetDigits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual unsigned int NumeralSystem::GetDigits (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PositionalNumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by InputStatement::Execute(), OutputStatement::Execute(), and DigitsStatement::Execute().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumeralSystem_ace143acf659454d7fa8ae119236b7700_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetFractionPoint\:NumeralSystem}
{\xe \v NumeralSystem\:GetFractionPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual const char NumeralSystem::GetFractionPoint (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PositionalNumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetName\:NumeralSystem}
{\xe \v NumeralSystem\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual const char* NumeralSystem::GetName (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PositionalNumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by InputStatement::Execute(), and OutputStatement::Execute().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumeralSystem_a1bfe3fd463e687451a81f7a22cd4264b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetPrefix\:NumeralSystem}
{\xe \v NumeralSystem\:GetPrefix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual const char* NumeralSystem::GetPrefix (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PositionalNumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetText\:NumeralSystem}
{\xe \v NumeralSystem\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual const char* NumeralSystem::GetText ({\b Number} *  {\i number}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b DecimalSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABXJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b PositionalNumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABXK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by MemoryStatement::Execute(), EvalStatement::Execute(), DigitsStatement::Execute(), PlotStatement::Execute(), PreferencesBase::GetDescription(), PositionalNumeralSystem::GetName(), NumericValueNode::GetNodeText(), and VariableList::ListContent().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumeralSystem_a74dc91c4dbab4a88a123b2a32753f485_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Parse\:NumeralSystem}
{\xe \v NumeralSystem\:Parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Number}* NumeralSystem::Parse (const char *  {\i text}, unsigned int *  {\i length}, char **  {\i end}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PositionalNumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Lexer::GetDigitValue(), and Parse().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumeralSystem_af3643941efdda71a873e2a31276f2d49_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Parse\:NumeralSystem}
{\xe \v NumeralSystem\:Parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * NumeralSystem::Parse (const char *  {\i text}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file ntext.cpp.}\par
{
References Parse().}\par
{
Referenced by Parser::ParseDigistStatement(), Parser::ParseNumber(), and Parser::ParseNumeralStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{\par
   51     unsigned int length;\par
   52     char *end;\par
   53     return Parse(text, &length, &end);\par
   54 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumeralSystem_a1f8d8a04e99540260d4fc4f16c63ddc3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumeralSystem_a1f8d8a04e99540260d4fc4f16c63ddc3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetDigits\:NumeralSystem}
{\xe \v NumeralSystem\:SetDigits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void NumeralSystem::SetDigits (unsigned int  {\i digits}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PositionalNumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by PrefsStatement::Execute(), and DigitsStatement::Execute().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumeralSystem_acd05f991ab35e808f46eacef6d7a4fb8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetFractionPoint\:NumeralSystem}
{\xe \v NumeralSystem\:SetFractionPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void NumeralSystem::SetFractionPoint (const char  {\i fractionpoint}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b PositionalNumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buf\:NumeralSystem}
{\xe \v NumeralSystem\:buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CharBuffer}* NumeralSystem::buf{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file ntext.h.}\par
{
Referenced by PositionalNumeralSystem::GetName(), DecimalSystem::GetRealText(), PositionalNumeralSystem::GetText(), DecimalSystem::GetText(), PositionalNumeralSystem::IntegerToBuffer(), NumeralSystem(), and ~NumeralSystem().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b ntext.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b ntext.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NumericOperator Class Reference\par \pard\plain 
{\tc\tcl2 \v NumericOperator}
{\xe \v NumericOperator}
{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
\par
{
{\f2 #include <operators.h>}}\par
Inheritance diagram for NumericOperator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericOperator__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for NumericOperator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericOperator__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NumericOperator} ({\b ExpressionNode} *{\b left}, {\b ExpressionNode} *{\b right})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~NumericOperator} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b GetNext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetText} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Attach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Detach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Replace} ({\b SyntaxNode} *n, {\b SyntaxNode} *x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b left}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b right}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 80 of file operators.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v NumericOperator\:NumericOperator}
{\xe \v NumericOperator\:NumericOperator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NumericOperator::NumericOperator ({\b ExpressionNode} *  {\i left}, {\b ExpressionNode} *  {\i right})}}
\par
{\bkmkstart AAAAAAACQL}
{\bkmkend AAAAAAACQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 202 of file operators.cpp.}\par
{
References ExpressionNode::ExpressionNode(), left, and right.}\par
{
Referenced by AdditionNode::AdditionNode(), AssignmentNode::AssignmentNode(), DivisionNode::DivisionNode(), MultiplicationNode::MultiplicationNode(), PowerNode::PowerNode(), and SubtractionNode::SubtractionNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   202                                                                             :\par
  203     ExpressionNode(), left(left), right(right) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericOperator_a49cd2230b867cdfca64715aaf6e37561_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericOperator_a49cd2230b867cdfca64715aaf6e37561_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~NumericOperator\:NumericOperator}
{\xe \v NumericOperator\:~NumericOperator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NumericOperator::~NumericOperator ()}}
\par
{\bkmkstart AAAAAAACQM}
{\bkmkend AAAAAAACQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 205 of file operators.cpp.}\par
{
References left, and right.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   206 \{\par
  207     if (left != NOMEM) \{\par
  208         delete left;\par
  209     \}\par
  210 \par
  211     if (right != NOMEM) \{\par
  212         delete right;\par
  213     \}\par
  214 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Attach\:NumericOperator}
{\xe \v NumericOperator\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NumericOperator::Attach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACQN}
{\bkmkend AAAAAAACQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 259 of file operators.cpp.}\par
{
References left, right, and SyntaxNode::SetParent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   260 \{\par
  261     if(left == NOMEM) \{\par
  262         left = (ExpressionNode*)node;\par
  263         node->SetParent(this);\par
  264     \} else if (right == NOMEM) \{\par
  265         right = (ExpressionNode*)node;\par
  266         node->SetParent(this);\par
  267     \}\par
  268 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericOperator_ab40d02625fde750d08168ca2ef46c432_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Detach\:NumericOperator}
{\xe \v NumericOperator\:Detach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NumericOperator::Detach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACQO}
{\bkmkend AAAAAAACQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 270 of file operators.cpp.}\par
{
References left, and right.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   271 \{\par
  272     if (left == node) \{\par
  273         left = NOMEM;\par
  274     \} else if (right == node) \{\par
  275         right = NOMEM;\par
  276     \}\par
  277 \}\par
}
}
{\xe \v GetNext\:NumericOperator}
{\xe \v NumericOperator\:GetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * NumericOperator::GetNext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACQP}
{\bkmkend AAAAAAACQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 246 of file operators.cpp.}\par
{
References SyntaxNode::iterator, left, and right.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   247 \{\par
  248     if (iterator == NOMEM) \{\par
  249         iterator = left;\par
  250         return left;\par
  251     \} else if (iterator == left) \{\par
  252         iterator = right;\par
  253         return right;\par
  254     \} else \{\par
  255         return NOMEM;\par
  256     \}\par
  257 \}\par
}
}
{\xe \v GetText\:NumericOperator}
{\xe \v NumericOperator\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * NumericOperator::GetText (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 216 of file operators.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::Empty(), CharBuffer::EnsureSize(), ExpressionNode::GetNodeText(), ExpressionNode::GetPrecedence(), CharBuffer::GetString(), ExpressionNode::GetText(), left, SyntaxNode::output, right, and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   217 \{\par
  218     const char *leftText = left->GetText();\par
  219     const char *nodeText = GetNodeText();\par
  220     const char *rightText = right->GetText();\par
  221 \par
  222     output->Empty();\par
  223     output->EnsureSize(StrLen(leftText) + 2 + StrLen(nodeText) + StrLen(rightText) + 2 + 1);\par
  224 \par
  225     if (left->GetPrecedence() != 0 && left->GetPrecedence() < GetPrecedence()) \{\par
  226         output->Append("(");\par
  227         output->Append(leftText);\par
  228         output->Append(")");\par
  229     \} else \{\par
  230         output->Append(leftText);\par
  231     \}\par
  232 \par
  233     output->Append(nodeText);\par
  234 \par
  235     if (right->GetPrecedence() != 0 && GetPrecedence() > right->GetPrecedence()) \{\par
  236         output->Append("(");\par
  237         output->Append(rightText);\par
  238         output->Append(")");\par
  239     \} else \{\par
  240         output->Append(rightText);\par
  241     \}\par
  242 \par
  243     return output->GetString();\par
  244 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericOperator_aaeef2885eb34d240cef0f55593354805_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Replace\:NumericOperator}
{\xe \v NumericOperator\:Replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NumericOperator::Replace ({\b SyntaxNode} *  {\i n}, {\b SyntaxNode} *  {\i x}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACQQ}
{\bkmkend AAAAAAACQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 279 of file operators.cpp.}\par
{
References SyntaxNode::iterator, left, and right.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   280 \{\par
  281     if (left == n) \{\par
  282         if(iterator == left) \{\par
  283             iterator = (ExpressionNode*)x;\par
  284         \}\par
  285         delete left;\par
  286         left = (ExpressionNode*)x;\par
  287 \par
  288     \} else if (right == n) \{\par
  289         if(iterator == right) \{\par
  290             iterator = (ExpressionNode*)x;\par
  291         \}\par
  292         delete right;\par
  293         right = (ExpressionNode*)x;\par
  294     \}\par
  295 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v left\:NumericOperator}
{\xe \v NumericOperator\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode}* NumericOperator::left{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACQR}
{\bkmkend AAAAAAACQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file operators.h.}\par
{
Referenced by Attach(), Detach(), AdditionNode::Evaluate(), SubtractionNode::Evaluate(), MultiplicationNode::Evaluate(), DivisionNode::Evaluate(), PowerNode::Evaluate(), GetNext(), GetText(), NumericOperator(), Replace(), and ~NumericOperator().}\par
}
{\xe \v right\:NumericOperator}
{\xe \v NumericOperator\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode}* NumericOperator::right{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACQS}
{\bkmkend AAAAAAACQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file operators.h.}\par
{
Referenced by Attach(), Detach(), AdditionNode::Evaluate(), SubtractionNode::Evaluate(), MultiplicationNode::Evaluate(), DivisionNode::Evaluate(), PowerNode::Evaluate(), GetNext(), GetText(), NumericOperator(), Replace(), and ~NumericOperator().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NumericValueNode Class Reference\par \pard\plain 
{\tc\tcl2 \v NumericValueNode}
{\xe \v NumericValueNode}
{\bkmkstart AAAAAAACQT}
{\bkmkend AAAAAAACQT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of a numeric value in a syntax tree. }}\par
{
{\f2 #include <values.h>}}\par
Inheritance diagram for NumericValueNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericValueNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for NumericValueNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericValueNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NumericValueNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NumericValueNode} ({\b Number} *value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ReductionType} {\b GetReductionType} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetText} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b GetNext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Attach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Detach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Replace} ({\b SyntaxNode} *n, {\b SyntaxNode} *x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReplaceWith} ({\b Number} *value)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of a numeric value in a syntax tree. \par
}{
Definition at line 142 of file values.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v NumericValueNode\:NumericValueNode}
{\xe \v NumericValueNode\:NumericValueNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NumericValueNode::NumericValueNode ()}}
\par
{\bkmkstart AAAAAAACQU}
{\bkmkend AAAAAAACQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 341 of file values.cpp.}\par
{
References ExpressionNode::ExpressionNode(), and RealNumber::RealNumber().}\par
{
Referenced by Parser::ParseAtomic(), and Parser::ParseIdent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   341                                    :\par
  342     ExpressionNode(new RealNumber()) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericValueNode_a85977b96aa8e3883e409ca549139258b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericValueNode_a85977b96aa8e3883e409ca549139258b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v NumericValueNode\:NumericValueNode}
{\xe \v NumericValueNode\:NumericValueNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NumericValueNode::NumericValueNode ({\b Number} *  {\i value})}}
\par
{\bkmkstart AAAAAAACQV}
{\bkmkend AAAAAAACQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 344 of file values.cpp.}\par
{
References ExpressionNode::ExpressionNode().}\par
{
Referenced by ComplexiNode::ComplexiNode(), EulersNumberNode::EulersNumberNode(), Parser::ParseNumber(), PiNode::PiNode(), and Optimizer::ReduceValueNodes().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   344                                                 :\par
  345     ExpressionNode(value) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericValueNode_a5ad87623d57e875b72d8f166c578231f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericValueNode_a5ad87623d57e875b72d8f166c578231f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Attach\:NumericValueNode}
{\xe \v NumericValueNode\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NumericValueNode::Attach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACQW}
{\bkmkend AAAAAAACQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 381 of file values.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   382 \{ \}\par
}
}
{\xe \v Detach\:NumericValueNode}
{\xe \v NumericValueNode\:Detach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NumericValueNode::Detach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACQX}
{\bkmkend AAAAAAACQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 384 of file values.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   385 \{ \}\par
}
}
{\xe \v Evaluate\:NumericValueNode}
{\xe \v NumericValueNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * NumericValueNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 359 of file values.cpp.}\par
{
References ExpressionNode::result.}\par
{
Referenced by Optimizer::ReduceUnaryNodes(), and Optimizer::ReduceValueNodes().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   360 \{\par
  361     return result;\par
  362 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericValueNode_abdd2e6fd1723488a24a645fec481a971_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNext\:NumericValueNode}
{\xe \v NumericValueNode\:GetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * NumericValueNode::GetNext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACQY}
{\bkmkend AAAAAAACQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 376 of file values.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   377 \{\par
  378     return NOMEM;\par
  379 \}\par
}
}
{\xe \v GetNodeText\:NumericValueNode}
{\xe \v NumericValueNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * NumericValueNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b ComplexiNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b PiNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCU \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b EulersNumberNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 369 of file values.cpp.}\par
{
References CharBuffer::ClearAndCopy(), CharBuffer::GetString(), NumeralSystem::GetText(), Program::Input, SyntaxNode::output, and ExpressionNode::result.}\par
{
Referenced by GetText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   370 \{\par
  371     const char *val = Program->Input->GetText(result);\par
  372     output->ClearAndCopy(val);\par
  373     return output->GetString();\par
  374 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericValueNode_a078bf8f0496d2afcb7e3a050110a0c0d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericValueNode_a078bf8f0496d2afcb7e3a050110a0c0d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetPrecedence\:NumericValueNode}
{\xe \v NumericValueNode\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NumericValueNode::GetPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDD}
{\bkmkend AAAAAAACDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 352 of file values.cpp.}\par
{
References Number::GetDefaultPrecedence(), Number::GetPrecedence(), SyntaxNode::leftBottom, and ExpressionNode::result.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   353 \{\par
  354     return !leftBottom ?\par
  355            result->GetPrecedence() :\par
  356            result->GetDefaultPrecedence();\par
  357 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericValueNode_a711b5772df36814fcb92fc10a0e4924a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetReductionType\:NumericValueNode}
{\xe \v NumericValueNode\:GetReductionType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ReductionType} NumericValueNode::GetReductionType (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b ComplexiNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b PiNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b EulersNumberNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 347 of file values.cpp.}\par
{
References valuereduc.}\par
{
Referenced by Optimizer::ReduceValueNodes().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   348 \{\par
  349     return valuereduc;\par
  350 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericValueNode_ad75510c6a6e06f4004248d072cd5c3cb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetText\:NumericValueNode}
{\xe \v NumericValueNode\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * NumericValueNode::GetText (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDK}
{\bkmkend AAAAAAACDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 364 of file values.cpp.}\par
{
References GetNodeText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   365 \{\par
  366     return GetNodeText();\par
  367 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericValueNode_a57b1e79016279279f2567937c7e32e12_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Replace\:NumericValueNode}
{\xe \v NumericValueNode\:Replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NumericValueNode::Replace ({\b SyntaxNode} *  {\i n}, {\b SyntaxNode} *  {\i x}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACRA}
{\bkmkend AAAAAAACRA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 387 of file values.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   388 \{ \}\par
}
}
{\xe \v ReplaceWith\:NumericValueNode}
{\xe \v NumericValueNode\:ReplaceWith}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NumericValueNode::ReplaceWith ({\b Number} *  {\i value})}}
\par
{\bkmkstart AAAAAAACRB}
{\bkmkend AAAAAAACRB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 390 of file values.cpp.}\par
{
References ExpressionNode::result.}\par
{
Referenced by Optimizer::ReduceUnaryNodes().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   391 \{\par
  392     delete result;\par
  393     result = value;\par
  394 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNumericValueNode_ab46507560d70b5e4396f1f5fba5368ec_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
operatordef Struct Reference\par \pard\plain 
{\tc\tcl2 \v operatordef}
{\xe \v operatordef}
{\bkmkstart AAAAAAACRC}
{\bkmkend AAAAAAACRC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Character representation of operator tied with its symbol. }}\par
{
{\f2 #include <lex.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b chr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Symbol} {\b symbol}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Character representation of operator tied with its symbol. \par
}{
Definition at line 60 of file lex.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v chr\:operatordef}
{\xe \v operatordef\:chr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char operatordef::chr}}
\par
{\bkmkstart AAAAAAACRD}
{\bkmkend AAAAAAACRD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file lex.h.}\par
{
Referenced by Lexer::FindKeyword(), and Lexer::GetOperator().}\par
}
{\xe \v symbol\:operatordef}
{\xe \v operatordef\:symbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Symbol} operatordef::symbol}}
\par
{\bkmkstart AAAAAAACRE}
{\bkmkend AAAAAAACRE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file lex.h.}\par
{
Referenced by Lexer::FindKeyword(), and Lexer::GetOperator().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/localize/{\b lex.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Optimizer Class Reference\par \pard\plain 
{\tc\tcl2 \v Optimizer}
{\xe \v Optimizer}
{\bkmkstart AAAAAAACRF}
{\bkmkend AAAAAAACRF}
\par
{
{\f2 #include <optimizer.h>}}\par
Collaboration diagram for Optimizer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Optimizer} ({\b SyntaxNode} *{\b root})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Optimizer} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Optimize} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b GetRoot} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetTreeDepth} ({\b SyntaxNode} *node, int depth)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagChildren} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BalanceTree} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReduceUnaryNodes} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReduceValueNodes} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagStartNode} ({\b SyntaxNode} *node)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b root}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 42 of file optimizer.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Optimizer\:Optimizer}
{\xe \v Optimizer\:Optimizer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Optimizer::Optimizer ({\b SyntaxNode} *  {\i root})}}
\par
{\bkmkstart AAAAAAACRG}
{\bkmkend AAAAAAACRG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file optimizer.cpp.}\par
{
References root.}\par
{
Referenced by Evaluator::Evaluate().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    32 \{\par
   33     this->root = root;\par
   34 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_a7b4482e542418f5b32a1c9960428c54a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~Optimizer\:Optimizer}
{\xe \v Optimizer\:~Optimizer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Optimizer::~Optimizer ()}}
\par
{\bkmkstart AAAAAAACRH}
{\bkmkend AAAAAAACRH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file optimizer.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    37 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v BalanceTree\:Optimizer}
{\xe \v Optimizer\:BalanceTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Optimizer::BalanceTree ({\b SyntaxNode} *  {\i node}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRI}
{\bkmkend AAAAAAACRI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file optimizer.cpp.}\par
{
References SyntaxNode::Attach(), BalanceTree(), SyntaxNode::Detach(), expression, SyntaxNode::GetNext(), SyntaxNode::GetNodeType(), SyntaxNode::GetParent(), ExpressionNode::GetPrecedence(), GetTreeDepth(), and SyntaxNode::ResetIterator().}\par
{
Referenced by BalanceTree(), and Optimize().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    64 \{\par
   65     if (node == NOMEM) \{\par
   66         return;\par
   67     \} else \{\par
   68         node->ResetIterator();\par
   69     \}\par
   70 \par
   71     SyntaxNode* current = node->GetNext();\par
   72 \par
   73     while (current != NOMEM) \{\par
   74         if (current->GetNodeType() == expression) \{\par
   75             ExpressionNode *troot = (ExpressionNode*)current;\par
   76             troot->ResetIterator();\par
   77             ExpressionNode *pivot = (ExpressionNode*)troot->GetNext();\par
   78             if (pivot != NOMEM && troot->GetPrecedence() == pivot->GetPrecedence()) \{\par
   79                 int rdepth = GetTreeDepth(troot, 1);\par
   80                 int pdepth = GetTreeDepth(pivot, 0);\par
   81                 if (rdepth - pdepth > 1 || rdepth - pdepth < -1) \{\par
   82                     pivot->ResetIterator();\par
   83                     pivot->GetNext();\par
   84                     ExpressionNode *child = (ExpressionNode*)pivot->GetNext();\par
   85                     if (child != NOMEM) \{\par
   86                         SyntaxNode* parent = troot->GetParent();\par
   87                         parent->Detach(troot);\par
   88                         troot->Detach(pivot);\par
   89                         pivot->Detach(child);\par
   90                         troot->Attach(child);\par
   91                         pivot->Attach(troot);\par
   92                         parent->Attach(pivot);\par
   93                         current = pivot;\par
   94                         current->ResetIterator();\par
   95                     \}\par
   96                 \}\par
   97             \}\par
   98 \par
   99         \}\par
  100 \par
  101         current = node->GetNext();\par
  102         BalanceTree(current);\par
  103     \}\par
  104 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_ad84621adb872b88ab7fdb3672064cfdb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_ad84621adb872b88ab7fdb3672064cfdb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetRoot\:Optimizer}
{\xe \v Optimizer\:GetRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Optimizer::GetRoot ()}}
\par
{\bkmkstart AAAAAAACRJ}
{\bkmkend AAAAAAACRJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file optimizer.cpp.}\par
{
References root.}\par
{
Referenced by Evaluator::Evaluate().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40 \{\par
   41     return root;\par
   42 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_ae50ae3a88ea8f5161b9bb072ccf4ea93_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetTreeDepth\:Optimizer}
{\xe \v Optimizer\:GetTreeDepth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Optimizer::GetTreeDepth ({\b SyntaxNode} *  {\i node}, int  {\i depth})}}
\par
{\bkmkstart AAAAAAACRK}
{\bkmkend AAAAAAACRK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 106 of file optimizer.cpp.}\par
{
References SyntaxNode::GetNext(), GetTreeDepth(), and SyntaxNode::ResetIterator().}\par
{
Referenced by BalanceTree(), and GetTreeDepth().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   107 \{\par
  108     int max = depth;\par
  109     SyntaxNode* current;\par
  110     node->ResetIterator();\par
  111 \par
  112     while ((current = node->GetNext()) != NOMEM) \{\par
  113         int a = GetTreeDepth(current, depth + 1);\par
  114         if (a > max) \{\par
  115             max = a;\par
  116         \}\par
  117     \}\par
  118 \par
  119     return max;\par
  120 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_a4a80c3e845604f1ea53a6bfc187b2bba_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_a4a80c3e845604f1ea53a6bfc187b2bba_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Optimize\:Optimizer}
{\xe \v Optimizer\:Optimize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Optimizer::Optimize ()}}
\par
{\bkmkstart AAAAAAACRL}
{\bkmkend AAAAAAACRL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file optimizer.cpp.}\par
{
References BalanceTree(), ReduceUnaryNodes(), ReduceValueNodes(), root, TagChildren(), and TagStartNode().}\par
{
Referenced by Evaluator::Evaluate().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45 \{\par
   46     TagChildren(root);\par
   47     ReduceUnaryNodes(root);\par
   48     BalanceTree(root);\par
   49     ReduceValueNodes(root);\par
   50     TagStartNode(root);\par
   51 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_a5764ae0825fa43921f74d8b972e53b1e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_a5764ae0825fa43921f74d8b972e53b1e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ReduceUnaryNodes\:Optimizer}
{\xe \v Optimizer\:ReduceUnaryNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Optimizer::ReduceUnaryNodes ({\b SyntaxNode} *  {\i node}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRM}
{\bkmkend AAAAAAACRM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 122 of file optimizer.cpp.}\par
{
References SyntaxNode::Detach(), NumericValueNode::Evaluate(), SyntaxNode::GetNext(), SyntaxNode::GetParent(), SyntaxNode::GetReductionType(), ReduceUnaryNodes(), SyntaxNode::Replace(), NumericValueNode::ReplaceWith(), SyntaxNode::ResetIterator(), Number::Unary(), unaryreduc, and valuereduc.}\par
{
Referenced by Optimize(), and ReduceUnaryNodes().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   123 \{\par
  124     SyntaxNode* current;\par
  125     node->ResetIterator();\par
  126 \par
  127     while ((current = node->GetNext()) != NOMEM) \{\par
  128         ReduceUnaryNodes(current);\par
  129 \par
  130         if (current->GetReductionType() == unaryreduc) \{\par
  131             ExpressionNode *expression = (ExpressionNode*)current;\par
  132             expression->ResetIterator();\par
  133             ExpressionNode *next = (ExpressionNode*)expression->GetNext();\par
  134 \par
  135             if (next->GetReductionType() == unaryreduc) \{\par
  136                 next->ResetIterator();\par
  137                 SyntaxNode *temp = next->GetNext();\par
  138                 next->Detach(temp);\par
  139                 SyntaxNode *parent = expression->GetParent();\par
  140                 parent->Replace(expression, temp);\par
  141                 current = parent;\par
  142                 current->ResetIterator();\par
  143             \} else if (next->GetReductionType() == valuereduc) \{\par
  144                 NumericValueNode *valueNode = (NumericValueNode*)next;\par
  145                 Number *number = valueNode->Evaluate();\par
  146                 Number *modified = number->Unary();\par
  147                 valueNode->ReplaceWith(modified);\par
  148 \par
  149                 current->Detach(valueNode);\par
  150                 SyntaxNode *parent = current->GetParent();\par
  151                 parent->Replace(current, valueNode);\par
  152                 current = parent;\par
  153                 current->ResetIterator();\par
  154             \}\par
  155         \}\par
  156     \}\par
  157 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_aef8d80bb6301ee01a7ed271148438733_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_aef8d80bb6301ee01a7ed271148438733_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ReduceValueNodes\:Optimizer}
{\xe \v Optimizer\:ReduceValueNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Optimizer::ReduceValueNodes ({\b SyntaxNode} *  {\i node}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRN}
{\bkmkend AAAAAAACRN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 159 of file optimizer.cpp.}\par
{
References Number::Add(), compladdreduc, complsubreduc, NumericValueNode::Evaluate(), expression, SyntaxNode::GetNext(), SyntaxNode::GetNodeType(), SyntaxNode::GetParent(), SyntaxNode::GetReductionType(), NumericValueNode::GetReductionType(), NumericValueNode::NumericValueNode(), Number::PureComplexValue(), ReduceValueNodes(), SyntaxNode::Replace(), SyntaxNode::ResetIterator(), Number::Sub(), and valuereduc.}\par
{
Referenced by Optimize(), and ReduceValueNodes().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   160 \{\par
  161     SyntaxNode* current;\par
  162     node->ResetIterator();\par
  163 \par
  164     while ((current = node->GetNext()) != NOMEM) \{\par
  165         if (current->GetNodeType() == expression) \{\par
  166             ExpressionNode *expression = (ExpressionNode*)current;\par
  167             ReductionType reduction = expression->GetReductionType();\par
  168             if (reduction == compladdreduc || reduction == complsubreduc) \{\par
  169                 expression->ResetIterator();\par
  170                 NumericValueNode *first = (NumericValueNode*)expression->GetNext();\par
  171                 NumericValueNode *second = (NumericValueNode*)expression->GetNext();\par
  172                 if (\par
  173                     first->GetReductionType() == valuereduc && second->GetReductionType() == valuereduc &&\par
  174                     ((first->Evaluate()->PureComplexValue() && !second->Evaluate()->PureComplexValue()) ||\par
  175                      (!first->Evaluate()->PureComplexValue() && second->Evaluate()->PureComplexValue()))\par
  176                 ) \{\par
  177                     Number *number =\par
  178                         reduction == compladdreduc ?\par
  179                         first->Evaluate()->Add(second->Evaluate()):\par
  180                         first->Evaluate()->Sub(second->Evaluate());\par
  181                     NumericValueNode *reducedNode = new NumericValueNode(number);\par
  182                     SyntaxNode *parent = current->GetParent();\par
  183                     parent->Replace(current, reducedNode);\par
  184                     current = parent;\par
  185                     current->ResetIterator();\par
  186                 \}\par
  187             \}\par
  188 \par
  189         \}\par
  190 \par
  191         ReduceValueNodes(current);\par
  192     \}\par
  193 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_a5b45089aff3c6568f3531faa9e701f21_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_a5b45089aff3c6568f3531faa9e701f21_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v TagChildren\:Optimizer}
{\xe \v Optimizer\:TagChildren}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Optimizer::TagChildren ({\b SyntaxNode} *  {\i node}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRO}
{\bkmkend AAAAAAACRO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file optimizer.cpp.}\par
{
References SyntaxNode::GetNext(), SyntaxNode::ResetIterator(), SyntaxNode::SetParent(), and TagChildren().}\par
{
Referenced by Optimize(), and TagChildren().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    54 \{\par
   55     SyntaxNode* current;\par
   56     node->ResetIterator();\par
   57     while ((current = node->GetNext()) != NOMEM) \{\par
   58         current->SetParent(node);\par
   59         TagChildren(current);\par
   60     \}\par
   61 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_a5227e42d69dcbf08fde579642a98c78c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_a5227e42d69dcbf08fde579642a98c78c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v TagStartNode\:Optimizer}
{\xe \v Optimizer\:TagStartNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Optimizer::TagStartNode ({\b SyntaxNode} *  {\i node}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRP}
{\bkmkend AAAAAAACRP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 195 of file optimizer.cpp.}\par
{
References SyntaxNode::GetNext(), SyntaxNode::ResetIterator(), SyntaxNode::SetFirstNode(), and TagStartNode().}\par
{
Referenced by Optimize(), and TagStartNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   196 \{\par
  197     node->ResetIterator();\par
  198     SyntaxNode* next = node->GetNext();\par
  199 \par
  200     if (next != NOMEM) \{\par
  201         TagStartNode(next);\par
  202     \} else \{\par
  203         node->SetFirstNode();\par
  204     \}\par
  205 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_a2b71012237663dc9459a908fba6fbecc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOptimizer_a2b71012237663dc9459a908fba6fbecc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v root\:Optimizer}
{\xe \v Optimizer\:root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode}* Optimizer::root{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRQ}
{\bkmkend AAAAAAACRQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file optimizer.h.}\par
{
Referenced by GetRoot(), Optimize(), and Optimizer().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b optimizer.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b optimizer.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OutputStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v OutputStatement}
{\xe \v OutputStatement}
{\bkmkstart AAAAAAACRR}
{\bkmkend AAAAAAACRR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change numeral output system. }}\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for OutputStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOutputStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for OutputStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOutputStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OutputStatement} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to show number of active digits. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OutputStatement} (unsigned int {\b base})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to set number of active digits. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~OutputStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b base}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change numeral output system. \par
}{
Definition at line 224 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v OutputStatement\:OutputStatement}
{\xe \v OutputStatement\:OutputStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
OutputStatement::OutputStatement ()}}
\par
{\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to show number of active digits. }}\par
{
Definition at line 495 of file statements.cpp.}\par
{
References base.}\par
{
Referenced by Parser::ParseNumeralStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   495                                  :\par
  496     base(0) \{ \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOutputStatement_ad5e8759afc35877c8c26c24823f14243_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v OutputStatement\:OutputStatement}
{\xe \v OutputStatement\:OutputStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
OutputStatement::OutputStatement (unsigned int  {\i base})}}
\par
{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor used to set number of active digits. }}\par
{
Definition at line 502 of file statements.cpp.}\par
{
References base, and StatementNode::StatementNode().}\par
{
Referenced by Parser::ParseNumeralStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   502                                                   :\par
  503     StatementNode(), base(base) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOutputStatement_a69e4af18b24add7abe276ca1e681ac8b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOutputStatement_a69e4af18b24add7abe276ca1e681ac8b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~OutputStatement\:OutputStatement}
{\xe \v OutputStatement\:~OutputStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
OutputStatement::~OutputStatement (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 228 of file statements.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   228 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:OutputStatement}
{\xe \v OutputStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * OutputStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 505 of file statements.cpp.}\par
{
References CharBuffer::Append(), base, CharBuffer::Empty(), CharBuffer::EnsureSize(), NumeralSystem::GetDigits(), NumeralSystem::GetName(), CharBuffer::GetString(), Program::NewPositionalOutput(), Program::Output, SyntaxNode::output, and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   506 \{\par
  507     const char *text;\par
  508 \par
  509     if (base != 0) \{\par
  510         int digits = Program->Output->GetDigits();\par
  511         Program->NewPositionalOutput(base, digits);\par
  512         text = HELPOUTPSETT;\par
  513     \} else \{\par
  514         text = HELPOUTPSHOW;\par
  515     \}\par
  516 \par
  517     const char *desc = Program->Output->GetName();\par
  518 \par
  519     output->Empty();\par
  520     output->EnsureSize(StrLen(text) + StrLen(desc) + StrLen(NEWLINE) + 1);\par
  521     output->Append(text);\par
  522     output->Append(desc);\par
  523     output->Append(NEWLINE);\par
  524     return output->GetString();\par
  525 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOutputStatement_a870c0d2b4bffb94e542d1e5890ec3c20_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v base\:OutputStatement}
{\xe \v OutputStatement\:base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int OutputStatement::base{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 232 of file statements.h.}\par
{
Referenced by Execute(), and OutputStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Parser Class Reference\par \pard\plain 
{\tc\tcl2 \v Parser}
{\xe \v Parser}
{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates a recursive descent parser. }}\par
{
{\f2 #include <parser.h>}}\par
Collaboration diagram for Parser:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Parser} (const char *input)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Parser} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b Parse} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses the input into a syntax tree. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b ParseDefault} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b TryParseStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b ParseStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b ParseEvaluation} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b ParseExpression} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b ParseAddSubstract} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b ParseFactor} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b ParsePower} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b ParseUnary} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b ParseAtomic} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b ParseIdent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b ParseNumber} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b ParseFunctionDef} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b ParseHelpStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b ParseDeleteStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b ParseListStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b ParseFileStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b ParseNumeralStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b ParseDigistStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b ParseDrawStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b ParsePromptStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b ParsePrefsStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetToken} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PutToken} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b Expect} ({\b Symbol} symbol)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Lexer} * {\b lexer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} * {\b token}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b syntaxError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ErrorNode} * {\b errorNode}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates a recursive descent parser. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
More info on recursive descent parsers is available at Wikipedia: {\f2 http://en.wikipedia.org/wiki/Recursive_descent_parser} \par
}{
Definition at line 49 of file parser.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Parser\:Parser}
{\xe \v Parser\:Parser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Parser::Parser (const char *  {\i input})}}
\par
{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file parser.cpp.}\par
{
References Lexer::Lexer(), and lexer.}\par
{
Referenced by Evaluator::Evaluate(), LoadStatement::Execute(), ExecuteStatement::Execute(), and PreferencesBase::SetPrefs().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40 \{\par
   41     lexer = new Lexer(input);\par
   42 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a40600baa2c3d4262fd8b770a4615aed0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a40600baa2c3d4262fd8b770a4615aed0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~Parser\:Parser}
{\xe \v Parser\:~Parser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Parser::~Parser ()}}
\par
{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file parser.cpp.}\par
{
References lexer.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45 \{\par
   46     delete lexer;\par
   47 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Expect\:Parser}
{\xe \v Parser\:Expect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Parser::Expect ({\b Symbol}  {\i symbol}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 411 of file parser.cpp.}\par
{
References Token::GetPos(), GetToken(), Token::symbol, syntaxError, and token.}\par
{
Referenced by ParseAtomic(), ParseDefault(), ParseDeleteStatement(), ParseDrawStatement(), ParseFileStatement(), ParseFunctionDef(), and ParseIdent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   412 \{\par
  413     GetToken();\par
  414     if (token->symbol != symbol) \{\par
  415         syntaxError = token->GetPos();\par
  416         return false;\par
  417     \} else \{\par
  418         return true;\par
  419     \}\par
  420 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a811765334b0cd3f01152c35c9f5bcaec_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a811765334b0cd3f01152c35c9f5bcaec_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetToken\:Parser}
{\xe \v Parser\:GetToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Parser::GetToken (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 401 of file parser.cpp.}\par
{
References Lexer::GetFirstToken(), Token::GetNextToken(), lexer, and token.}\par
{
Referenced by Expect(), Parse(), ParseAddSubstract(), ParseAtomic(), ParseDeleteStatement(), ParseDigistStatement(), ParseFactor(), ParseHelpStatement(), ParseIdent(), ParseListStatement(), ParseNumber(), ParseNumeralStatement(), ParsePower(), ParsePrefsStatement(), ParsePromptStatement(), ParseStatement(), ParseUnary(), and TryParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   402 \{\par
  403     token = (token == NOMEM ? lexer->GetFirstToken() : token->GetNextToken());\par
  404 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a415a103e66558b4d366d9a1420561fe3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a415a103e66558b4d366d9a1420561fe3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Parse\:Parser}
{\xe \v Parser\:Parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::Parse ()}}
\par
{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses the input into a syntax tree. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SyntaxNode* representing a pointer to the top node of the tree. Notice: The caller is responsible for releasing memory. \par
}}{
Definition at line 49 of file parser.cpp.}\par
{
References StatementBlockNode::Add(), EmptyStatement::EmptyStatement(), ErrorNode::ErrorNode(), Lexer::GetInput(), Token::GetPos(), GetToken(), lexer, PutToken(), StatementBlockNode::StatementBlockNode(), Token::symbol, symdelimiter, symend, token, Lexer::Tokenize(), and TryParseStatement().}\par
{
Referenced by Evaluator::Evaluate(), LoadStatement::Execute(), ExecuteStatement::Execute(), and PreferencesBase::SetPrefs().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{\par
   51     lexer->Tokenize();\par
   52     token = NOMEM;\par
   53 \par
   54     StatementBlockNode *block = NOMEM;\par
   55     SyntaxNode *result;\par
   56     Token *current;\par
   57 \par
   58     do \{\par
   59         result = TryParseStatement();\par
   60 \par
   61         GetToken();\par
   62         if (token->symbol == symdelimiter || (token->symbol == symend && block != NOMEM)) \{\par
   63             if (block == NOMEM) \{\par
   64                 block = new StatementBlockNode();\par
   65             \}\par
   66 \par
   67             if (result != NOMEM) \{\par
   68                 block->Add(result);\par
   69             \}\par
   70 \par
   71             while (token->symbol == symdelimiter) \{\par
   72                 GetToken();\par
   73             \}\par
   74         \} else if (token->symbol != symend) \{\par
   75             if (result != NOMEM) \{\par
   76                 delete result;\par
   77             \}\par
   78 \par
   79             result = new ErrorNode(lexer->GetInput(), token->GetPos());\par
   80             if (block != NOMEM) \{\par
   81                 block->Add(result);\par
   82             \}\par
   83 \par
   84             GetToken();\par
   85         \}\par
   86 \par
   87         current = token;\par
   88         PutToken();\par
   89     \} while (current->symbol != symend);\par
   90 \par
   91     return block != NOMEM ? block :\par
   92            result != NOMEM ? result : new EmptyStatement();;\par
   93 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a1861d1d9cc6165970cf07e07cacd11df_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a1861d1d9cc6165970cf07e07cacd11df_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseAddSubstract\:Parser}
{\xe \v Parser\:ParseAddSubstract}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode} * Parser::ParseAddSubstract (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 237 of file parser.cpp.}\par
{
References AdditionNode::AdditionNode(), GetToken(), ParseFactor(), PutToken(), SubtractionNode::SubtractionNode(), Token::symbol, symminus, symplus, and token.}\par
{
Referenced by ParseExpression().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   238 \{\par
  239     ExpressionNode* node = ParseFactor ();\par
  240 \par
  241     GetToken();\par
  242     while (token->symbol == symplus || token->symbol == symminus) \{\par
  243         if (token->symbol == symplus) \{\par
  244             node = new AdditionNode (node, ParseFactor ());\par
  245         \} else if (token->symbol == symminus) \{\par
  246             node = new SubtractionNode (node, ParseFactor ());\par
  247         \}\par
  248 \par
  249         GetToken();\par
  250     \}\par
  251 \par
  252     PutToken();\par
  253     return node;\par
  254 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a47ba11ddd167c1b0b5cf1d2fd1cf1ccd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a47ba11ddd167c1b0b5cf1d2fd1cf1ccd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseAtomic\:Parser}
{\xe \v Parser\:ParseAtomic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode} * Parser::ParseAtomic (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 304 of file parser.cpp.}\par
{
References AbsoluteNode::AbsoluteNode(), ComplexiNode::ComplexiNode(), EulersNumberNode::EulersNumberNode(), Expect(), Token::GetPos(), GetToken(), InsVariableNode::InsVariableNode(), NumericValueNode::NumericValueNode(), ParseExpression(), ParseIdent(), ParseNumber(), PiNode::PiNode(), symabsolute, Token::symbol, syme, symi, symident, symins, symlparen, symnumber, sympi, symrparen, syntaxError, and token.}\par
{
Referenced by ParseUnary().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   305 \{\par
  306     ExpressionNode* node;\par
  307 \par
  308     GetToken();\par
  309     if (token->symbol == symlparen) \{\par
  310         node = ParseExpression();\par
  311         Expect(symrparen);\par
  312     \} else if (token->symbol == symabsolute) \{\par
  313         node = new AbsoluteNode(ParseExpression());\par
  314         Expect(symabsolute);\par
  315     \} else if (token->symbol == symident) \{\par
  316         node = ParseIdent();\par
  317     \} else if (token->symbol == sympi) \{\par
  318         node = new PiNode();\par
  319     \} else if (token->symbol == syme) \{\par
  320         node = new EulersNumberNode();\par
  321     \} else if (token->symbol == symi) \{\par
  322         node = new ComplexiNode();\par
  323     \} else if (token->symbol == symins) \{\par
  324         node = new InsVariableNode();\par
  325     \} else if (token->symbol == symnumber) \{\par
  326         node = ParseNumber();\par
  327     \} else \{\par
  328         node = new NumericValueNode();\par
  329         syntaxError = token->GetPos();\par
  330     \}\par
  331 \par
  332     return node;\par
  333 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_ac1a69267c9414b54a4b592c9ad084780_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_ac1a69267c9414b54a4b592c9ad084780_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseDefault\:Parser}
{\xe \v Parser\:ParseDefault}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::ParseDefault (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 194 of file parser.cpp.}\par
{
References errorNode, Expect(), ParseEvaluation(), ParseFunctionDef(), symassign, symident, symlparen, symrparen, syntaxError, and token.}\par
{
Referenced by ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   195 \{\par
  196     Token *temp = token;\par
  197 \par
  198     // Peek tokens\par
  199     bool funcdef = Expect(symident);\par
  200     funcdef = funcdef && Expect(symlparen);\par
  201     funcdef = funcdef && Expect(symident);\par
  202     funcdef = funcdef && Expect(symrparen);\par
  203     funcdef = funcdef && Expect(symassign);\par
  204 \par
  205     // Restart parsing\par
  206     syntaxError = -1;\par
  207     errorNode = NOMEM;\par
  208     token = temp;\par
  209 \par
  210     if (funcdef) \{\par
  211         return ParseFunctionDef();\par
  212     \} else \{\par
  213         return ParseEvaluation();\par
  214     \}\par
  215 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_aca8329fb5ee4812398144fd1d647fe39_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_aca8329fb5ee4812398144fd1d647fe39_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseDeleteStatement\:Parser}
{\xe \v Parser\:ParseDeleteStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::ParseDeleteStatement (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 470 of file parser.cpp.}\par
{
References DeleteStatement::DeleteStatement(), Expect(), Token::GetPos(), Token::GetText(), GetToken(), PutToken(), Token::symbol, symfunction, symident, symlparen, symrparen, symvariable, syntaxError, and token.}\par
{
Referenced by ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   471 \{\par
  472     GetToken();\par
  473     if (token->symbol == symvariable || token->symbol == symfunction) \{\par
  474         return new DeleteStatement(token->symbol);\par
  475     \} else if (token->symbol != symident) \{\par
  476         syntaxError = token->GetPos();\par
  477         return NOMEM;\par
  478     \}\par
  479 \par
  480     Token *identToken = token;\par
  481 \par
  482     GetToken();\par
  483     if (token->symbol == symlparen) \{\par
  484         Expect(symident);\par
  485         Token *parameter = token;\par
  486         Expect(symrparen);\par
  487         return new DeleteStatement(identToken->GetText(), parameter->GetText());\par
  488     \} else \{\par
  489         PutToken();\par
  490         return new DeleteStatement(token->GetText());\par
  491     \}\par
  492 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a41008319e22949c5a6045e3859335000_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a41008319e22949c5a6045e3859335000_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseDigistStatement\:Parser}
{\xe \v Parser\:ParseDigistStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::ParseDigistStatement (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 588 of file parser.cpp.}\par
{
References DecimalSystem::DecimalSystem(), DigitsStatement::DigitsStatement(), errorNode, ErrorNode::ErrorNode(), Lexer::GetInput(), Number::GetIntegerValue(), Token::GetPos(), Token::GetText(), GetToken(), lexer, NumeralSystem::Parse(), PutToken(), Token::symbol, symdelimiter, symend, symnumber, syntaxError, and token.}\par
{
Referenced by ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   589 \{\par
  590     GetToken();\par
  591     if (token->symbol == symdelimiter || token->symbol == symend) \{\par
  592         PutToken();\par
  593         return new DigitsStatement();\par
  594     \} else if (token->symbol != symnumber) \{\par
  595         syntaxError = token->GetPos();\par
  596         return NOMEM;\par
  597     \}\par
  598 \par
  599     NumeralSystem *nsys = new DecimalSystem(0);\par
  600     Number *number = nsys->Parse(token->GetText());\par
  601     int digits = number->GetIntegerValue();\par
  602     delete number;\par
  603     delete nsys;\par
  604 \par
  605     if (digits < 0 || digits > 15) \{\par
  606         errorNode = new ErrorNode(\par
  607             lexer->GetInput(),\par
  608             HELPPDIGITS,\par
  609             token->GetText(),\par
  610             token->GetPos());\par
  611 \par
  612         return NOMEM;\par
  613     \}\par
  614 \par
  615     return new DigitsStatement(digits);\par
  616 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a14aa2850063f998f76530e027c3ef399_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a14aa2850063f998f76530e027c3ef399_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseDrawStatement\:Parser}
{\xe \v Parser\:ParseDrawStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::ParseDrawStatement (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 640 of file parser.cpp.}\par
{
References DrawStatement::DrawStatement(), Expect(), Token::GetText(), PlotStatement::PlotStatement(), Token::symbol, symident, symlparen, symplot, symrparen, and token.}\par
{
Referenced by ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   641 \{\par
  642     Token *statement = token;\par
  643 \par
  644     Expect(symident);\par
  645     Token *identToken = token;\par
  646     Expect(symlparen);\par
  647     Expect(symident);\par
  648     Token *paramToken = token;\par
  649     Expect(symrparen);\par
  650 \par
  651     if (statement->symbol == symplot) \{\par
  652         return new PlotStatement(identToken->GetText(), paramToken->GetText());\par
  653     \} else \{\par
  654         return new DrawStatement(identToken->GetText(), paramToken->GetText());\par
  655     \}\par
  656 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a38a55851f31c226c193090403dfbaff8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a38a55851f31c226c193090403dfbaff8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseEvaluation\:Parser}
{\xe \v Parser\:ParseEvaluation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::ParseEvaluation (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 217 of file parser.cpp.}\par
{
References EvalStatement::EvalStatement(), ExpressionNode::IsSilent(), ParseExpression(), and SilentStatement::SilentStatement().}\par
{
Referenced by ParseDefault().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   218 \{\par
  219     ExpressionNode *exp = ParseExpression();\par
  220     if (exp == NOMEM) \{\par
  221         return NOMEM;\par
  222     \}\par
  223 \par
  224     StatementNode *sta = new EvalStatement(exp);\par
  225     if (exp->IsSilent()) \{\par
  226         sta = new SilentStatement(sta);\par
  227     \}\par
  228 \par
  229     return sta;\par
  230 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a19c5b6055d066d21ad39a32287e833c2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a19c5b6055d066d21ad39a32287e833c2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseExpression\:Parser}
{\xe \v Parser\:ParseExpression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode} * Parser::ParseExpression (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 232 of file parser.cpp.}\par
{
References ParseAddSubstract().}\par
{
Referenced by ParseAtomic(), ParseEvaluation(), ParseFunctionDef(), ParseIdent(), and ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   233 \{\par
  234     return ParseAddSubstract();\par
  235 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_ae46b0a87abe76f40ae117c5bdcb2f29d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_ae46b0a87abe76f40ae117c5bdcb2f29d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseFactor\:Parser}
{\xe \v Parser\:ParseFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode} * Parser::ParseFactor (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 256 of file parser.cpp.}\par
{
References DivisionNode::DivisionNode(), GetToken(), MultiplicationNode::MultiplicationNode(), ParsePower(), PutToken(), Token::symbol, symslash, symtimes, and token.}\par
{
Referenced by ParseAddSubstract().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   257 \{\par
  258     ExpressionNode* node = ParsePower ();\par
  259 \par
  260     GetToken();\par
  261     while (token->symbol == symtimes || token->symbol == symslash) \{\par
  262         if (token->symbol == symtimes) \{\par
  263             node = new MultiplicationNode (node, ParsePower ());\par
  264         \} else if (token->symbol == symslash) \{\par
  265             node = new DivisionNode (node, ParsePower ());\par
  266         \}\par
  267 \par
  268         GetToken();\par
  269     \}\par
  270 \par
  271     PutToken();\par
  272     return node;\par
  273 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a70c674c7b40f7a0ab1df0523c4c8c530_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a70c674c7b40f7a0ab1df0523c4c8c530_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseFileStatement\:Parser}
{\xe \v Parser\:ParseFileStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::ParseFileStatement (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 508 of file parser.cpp.}\par
{
References ErrorNode::ErrorNode(), ExecuteStatement::ExecuteStatement(), Expect(), Lexer::GetInput(), Token::GetPos(), Token::GetText(), lexer, LoadStatement::LoadStatement(), SaveStatement::SaveStatement(), ShowStatement::ShowStatement(), Token::symbol, symexecute, symload, symqident, symsave, symshow, and token.}\par
{
Referenced by ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   509 \{\par
  510     Token *statement = token;\par
  511 \par
  512     Expect(symqident);\par
  513     Token *identToken = token;\par
  514 \par
  515     if (statement->symbol == symload) \{\par
  516         return new LoadStatement(identToken->GetText());\par
  517     \} else if (statement->symbol == symsave) \{\par
  518         return new SaveStatement(identToken->GetText());\par
  519     \} else if (statement->symbol == symexecute) \{\par
  520         return new ExecuteStatement(identToken->GetText());\par
  521     \} else if (statement->symbol == symshow) \{\par
  522         return new ShowStatement(identToken->GetText());\par
  523     \} else \{\par
  524         return new ErrorNode(\par
  525                    lexer->GetInput(),\par
  526                    HELPUERROR, EMPTYSTRING,\par
  527                    statement->GetPos());\par
  528     \}\par
  529 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a3c671b953bee260ed4eb3f5c30ededc2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a3c671b953bee260ed4eb3f5c30ededc2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseFunctionDef\:Parser}
{\xe \v Parser\:ParseFunctionDef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::ParseFunctionDef (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 426 of file parser.cpp.}\par
{
References UserFunction::CreateVariable(), errorNode, ErrorNode::ErrorNode(), Expect(), FunctionDefinitionNode::FunctionDefinitionNode(), Program::Functions, FunctionList::GetFunctionDef(), Lexer::GetInput(), Token::GetPos(), Token::GetText(), VariableList::InsertTemporaryVariable(), FunctionList::IsSystemFunction(), lexer, ParseExpression(), VariableList::RemoveTemporaryVariable(), UserFunction::SetExpression(), symassign, symident, symlparen, symrparen, token, and Program::Variables.}\par
{
Referenced by ParseDefault(), and ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   427 \{\par
  428     Expect(symident);\par
  429     Token* funcToken = token;\par
  430     Expect(symlparen);\par
  431     Expect(symident);\par
  432     Token* funcVariable = token;\par
  433     Expect(symrparen);\par
  434     Expect(symassign);\par
  435 \par
  436     if (Program->Functions->IsSystemFunction(funcToken->GetText())) \{\par
  437         errorNode = new ErrorNode(\par
  438             lexer->GetInput(),\par
  439             HELPFUNRDEF,\par
  440             funcToken->GetText(),\par
  441             funcToken->GetPos());\par
  442 \par
  443         return NOMEM;\par
  444     \}\par
  445 \par
  446     UserFunction* function = Program->Functions->GetFunctionDef(funcToken->GetText());\par
  447     Variable* variable = function->CreateVariable(funcVariable->GetText());\par
  448     Program->Variables->InsertTemporaryVariable(variable);\par
  449     function->SetExpression(ParseExpression());\par
  450     Program->Variables->RemoveTemporaryVariable();\par
  451 \par
  452     // TODO: Move logic to FunctionDefinitionNode\par
  453     return new FunctionDefinitionNode();\par
  454 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a0e8b1f794af2b9923bc3fcb7498004f9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a0e8b1f794af2b9923bc3fcb7498004f9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseHelpStatement\:Parser}
{\xe \v Parser\:ParseHelpStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::ParseHelpStatement (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 456 of file parser.cpp.}\par
{
References Token::GetText(), GetToken(), HelpStatement::HelpStatement(), PutToken(), Token::symbol, symdelimiter, symend, symident, and token.}\par
{
Referenced by ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   457 \{\par
  458     GetToken();\par
  459 \par
  460     if (token->symbol == symdelimiter || token->symbol == symend) \{\par
  461         PutToken();\par
  462         return new HelpStatement();\par
  463     \} else if (token->symbol == symident) \{\par
  464         return new HelpStatement(token->GetText());\par
  465     \} else \{\par
  466         return new HelpStatement(token->symbol);\par
  467     \}\par
  468 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a1e00b1a9ee0541508953564442312526_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a1e00b1a9ee0541508953564442312526_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseIdent\:Parser}
{\xe \v Parser\:ParseIdent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode} * Parser::ParseIdent (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 335 of file parser.cpp.}\par
{
References AssignmentNode::AssignmentNode(), VariableList::CreateVariable(), errorNode, ErrorNode::ErrorNode(), Expect(), Program::Functions, FunctionList::GetFunctionCall(), Lexer::GetInput(), Token::GetPos(), Token::GetText(), GetToken(), VariableList::GetVariable(), lexer, NumericValueNode::NumericValueNode(), ParseExpression(), PutToken(), symassign, Token::symbol, symlparen, symrparen, token, VariableNode::VariableNode(), and Program::Variables.}\par
{
Referenced by ParseAtomic().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   336 \{\par
  337     ExpressionNode *node;\par
  338     Token *identToken = token;\par
  339 \par
  340     GetToken();\par
  341     if (token->symbol == symlparen) \{\par
  342         ExpressionNode* parameter = ParseExpression();\par
  343         Expect(symrparen);\par
  344         node = Program->Functions->GetFunctionCall(identToken->GetText(), parameter);\par
  345 \par
  346         if (node == NOMEM) \{\par
  347             errorNode = new ErrorNode(\par
  348                 lexer->GetInput(),\par
  349                 HELPFUNNDEF,\par
  350                 identToken->GetText(),\par
  351                 identToken->GetPos());\par
  352 \par
  353             delete parameter;\par
  354             node = new NumericValueNode();\par
  355         \}\par
  356     \} else if (token->symbol == symassign) \{\par
  357         Variable* var = Program->Variables->CreateVariable(identToken->GetText());\par
  358         node = new AssignmentNode(new VariableNode(var), ParseExpression());\par
  359     \} else \{\par
  360         PutToken();\par
  361         Variable* var = Program->Variables->GetVariable(token->GetText());\par
  362 \par
  363         if (var == NOMEM) \{\par
  364             errorNode = new ErrorNode(\par
  365                 lexer->GetInput(),\par
  366                 HELPVARNDEF,\par
  367                 identToken->GetText(),\par
  368                 identToken->GetPos());\par
  369 \par
  370             node = new NumericValueNode();\par
  371         \} else \{\par
  372             node = new VariableNode(var);\par
  373         \}\par
  374     \}\par
  375 \par
  376     return node;\par
  377 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a84af27a6f4e42888eba6ac36ccd0815c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a84af27a6f4e42888eba6ac36ccd0815c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseListStatement\:Parser}
{\xe \v Parser\:ParseListStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::ParseListStatement (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 494 of file parser.cpp.}\par
{
References Token::GetPos(), Token::GetText(), GetToken(), ListStatement::ListStatement(), PutToken(), Token::symbol, symdelimiter, symend, symqident, syntaxError, and token.}\par
{
Referenced by ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   495 \{\par
  496     GetToken();\par
  497     if (token->symbol == symqident)\par
  498         return new ListStatement(token->GetText());\par
  499     else if (token->symbol == symend || symdelimiter) \{\par
  500         PutToken();\par
  501         return new ListStatement();\par
  502     \} else \{\par
  503         syntaxError = token->GetPos();\par
  504         return NOMEM;\par
  505     \}\par
  506 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_aa0642d13c500401b168035f9fcdbe1f4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_aa0642d13c500401b168035f9fcdbe1f4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseNumber\:Parser}
{\xe \v Parser\:ParseNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode} * Parser::ParseNumber (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 379 of file parser.cpp.}\par
{
References ComplexNumber::ComplexNumber(), Number::GetRealValue(), Token::GetText(), GetToken(), Program::Input, NumericValueNode::NumericValueNode(), NumeralSystem::Parse(), PutToken(), Token::symbol, symi, and token.}\par
{
Referenced by ParseAtomic().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   380 \{\par
  381     const char *a = token->GetText();\par
  382     Number *number = NOMEM;\par
  383 \par
  384     GetToken();\par
  385     if (token->symbol == symi) \{\par
  386         Number *imag = Program->Input->Parse(a);\par
  387         number = new ComplexNumber(0.0, imag->GetRealValue());\par
  388         delete imag;\par
  389     \} else \{\par
  390         PutToken();\par
  391         number = Program->Input->Parse(a);\par
  392     \}\par
  393 \par
  394     return new NumericValueNode (number);\par
  395 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a769d580b14d3d097ed255ad869cc1653_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a769d580b14d3d097ed255ad869cc1653_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseNumeralStatement\:Parser}
{\xe \v Parser\:ParseNumeralStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::ParseNumeralStatement (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 531 of file parser.cpp.}\par
{
References DecimalSystem::DecimalSystem(), errorNode, ErrorNode::ErrorNode(), Lexer::GetInput(), Number::GetIntegerValue(), Token::GetPos(), Token::GetText(), GetToken(), InputStatement::InputStatement(), lexer, OutputStatement::OutputStatement(), NumeralSystem::Parse(), PutToken(), symbin, Token::symbol, symdec, symdelimiter, symend, symhex, syminput, symnumber, symoct, syntaxError, and token.}\par
{
Referenced by ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   532 \{\par
  533     Token *statement = token;\par
  534     unsigned int base;\par
  535 \par
  536     GetToken();\par
  537     switch (token->symbol) \{\par
  538     case symend:\par
  539     case symdelimiter:\par
  540         PutToken();\par
  541         return (statement->symbol == syminput) ?\par
  542                (SyntaxNode*)new InputStatement() :\par
  543                (SyntaxNode*)new OutputStatement();\par
  544     case symbin:\par
  545         base = 2;\par
  546         break;\par
  547     case symoct:\par
  548         base = 8;\par
  549         break;\par
  550     case symdec:\par
  551         base = 10;\par
  552         break;\par
  553     case symhex:\par
  554         base = 16;\par
  555         break;\par
  556     default:\par
  557         base = 0;\par
  558     \}\par
  559 \par
  560     if (base == 0 && token->symbol != symnumber) \{\par
  561         syntaxError = token->GetPos();\par
  562         return NOMEM;\par
  563     \}\par
  564 \par
  565     if (base == 0) \{\par
  566         NumeralSystem *nsys = new DecimalSystem(0);\par
  567         Number *number = nsys->Parse(token->GetText());\par
  568         base = number->GetIntegerValue();\par
  569         delete number;\par
  570         delete nsys;\par
  571 \par
  572         if (base < 2 || base > 32) \{\par
  573             errorNode = new ErrorNode(\par
  574                 lexer->GetInput(),\par
  575                 HELPPNUMERA,\par
  576                 token->GetText(),\par
  577                 token->GetPos());\par
  578 \par
  579             return NOMEM;\par
  580         \}\par
  581     \}\par
  582 \par
  583     return (statement->symbol == syminput) ?\par
  584            (SyntaxNode*)new InputStatement(base) :\par
  585            (SyntaxNode*)new OutputStatement(base);\par
  586 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_ae2a3cdedfb708c19c7552fd402a224c6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_ae2a3cdedfb708c19c7552fd402a224c6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParsePower\:Parser}
{\xe \v Parser\:ParsePower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode} * Parser::ParsePower (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 275 of file parser.cpp.}\par
{
References GetToken(), ParseUnary(), PowerNode::PowerNode(), PutToken(), Token::symbol, sympower, and token.}\par
{
Referenced by ParseFactor().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   276 \{\par
  277     ExpressionNode* node = ParseUnary ();\par
  278 \par
  279     GetToken();\par
  280     while (token->symbol == sympower) \{\par
  281         node = new PowerNode (node, ParseUnary ());\par
  282         GetToken ();\par
  283     \}\par
  284 \par
  285     PutToken();\par
  286     return node;\par
  287 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_ad6ccc6e873d1fb3dcfa142655a5b0732_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_ad6ccc6e873d1fb3dcfa142655a5b0732_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParsePrefsStatement\:Parser}
{\xe \v Parser\:ParsePrefsStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::ParsePrefsStatement (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 629 of file parser.cpp.}\par
{
References GetToken(), PrefsStatement::PrefsStatement(), PutToken(), Token::symbol, symload, symsave, and token.}\par
{
Referenced by ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   630 \{\par
  631     GetToken();\par
  632     if (token->symbol == symload || token->symbol == symsave) \{\par
  633         return new PrefsStatement(token->symbol);\par
  634     \}\par
  635 \par
  636     PutToken();\par
  637     return new PrefsStatement();;\par
  638 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_ab655f0d3ad73a8ec8a299d2e2e3248ea_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_ab655f0d3ad73a8ec8a299d2e2e3248ea_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParsePromptStatement\:Parser}
{\xe \v Parser\:ParsePromptStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::ParsePromptStatement (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 618 of file parser.cpp.}\par
{
References Token::GetText(), GetToken(), PromptStatement::PromptStatement(), PutToken(), Token::symbol, symqident, and token.}\par
{
Referenced by ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   619 \{\par
  620     GetToken();\par
  621     if (token->symbol == symqident) \{\par
  622         return new PromptStatement(token->GetText());\par
  623     \}\par
  624 \par
  625     PutToken();\par
  626     return NOMEM;\par
  627 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a3ff34c9305bf6b5f10aacf27e5d20c28_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a3ff34c9305bf6b5f10aacf27e5d20c28_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseStatement\:Parser}
{\xe \v Parser\:ParseStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::ParseStatement (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 124 of file parser.cpp.}\par
{
References ClearStatement::ClearStatement(), EvalStatement::EvalStatement(), ExitStatement::ExitStatement(), GetToken(), ListFunctionsStatement::ListFunctionsStatement(), ListVariablesStatement::ListVariablesStatement(), MemoryStatement::MemoryStatement(), ParseDefault(), ParseDeleteStatement(), ParseDigistStatement(), ParseDrawStatement(), ParseExpression(), ParseFileStatement(), ParseFunctionDef(), ParseHelpStatement(), ParseListStatement(), ParseNumeralStatement(), ParsePrefsStatement(), ParsePromptStatement(), PutToken(), Token::symbol, symclear, symdef, symdelete, symdigits, symdraw, symeval, symexecute, symexit, symfunction, symhelp, syminput, symlist, symload, symmem, symoutput, symplot, symprefs, symprompt, symsave, symshow, symvariable, symversion, token, and VersionStatement::VersionStatement().}\par
{
Referenced by TryParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   125 \{\par
  126     SyntaxNode* res = NOMEM;\par
  127 \par
  128     GetToken();\par
  129     switch (token->symbol) \{\par
  130     case symhelp:\par
  131         res = ParseHelpStatement();\par
  132         break;\par
  133     case symdelete:\par
  134         res = ParseDeleteStatement();\par
  135         break;\par
  136     case symdef:\par
  137         res = ParseFunctionDef();\par
  138         break;\par
  139     case symlist:\par
  140         res = ParseListStatement();\par
  141         break;\par
  142     case symshow:\par
  143     case symload:\par
  144     case symsave:\par
  145     case symexecute:\par
  146         res = ParseFileStatement();\par
  147         break;\par
  148     case syminput:\par
  149     case symoutput:\par
  150         res = ParseNumeralStatement();\par
  151         break;\par
  152     case symprompt:\par
  153         res = ParsePromptStatement();\par
  154         break;\par
  155     case symprefs:\par
  156         res = ParsePrefsStatement();\par
  157         break;\par
  158     case symdigits:\par
  159         res = ParseDigistStatement();\par
  160         break;\par
  161     case symdraw:\par
  162     case symplot:\par
  163         res = ParseDrawStatement();\par
  164         break;\par
  165     case symversion:\par
  166         res = new VersionStatement();\par
  167         break;\par
  168     case  symexit:\par
  169         res = new ExitStatement();\par
  170         break;\par
  171     case symclear:\par
  172         res =  new ClearStatement();\par
  173         break;\par
  174     case symmem:\par
  175         res = new MemoryStatement();\par
  176         break;\par
  177     case  symvariable:\par
  178         res = new ListVariablesStatement();\par
  179         break;\par
  180     case symfunction:\par
  181         res = new ListFunctionsStatement();\par
  182         break;\par
  183     case symeval:\par
  184         res = new EvalStatement(ParseExpression());\par
  185         break;\par
  186     default:\par
  187         PutToken();\par
  188         res = ParseDefault();\par
  189     \}\par
  190 \par
  191     return res;\par
  192 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a370277018ad3e0e157a8ff5849892f7d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a370277018ad3e0e157a8ff5849892f7d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ParseUnary\:Parser}
{\xe \v Parser\:ParseUnary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode} * Parser::ParseUnary (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 289 of file parser.cpp.}\par
{
References GetToken(), ParseAtomic(), PutToken(), Token::symbol, symminus, token, and UnaryNode::UnaryNode().}\par
{
Referenced by ParsePower().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   290 \{\par
  291     ExpressionNode* node;\par
  292 \par
  293     GetToken();\par
  294     if (token->symbol == symminus) \{\par
  295         node = new UnaryNode(ParseAtomic ());\par
  296     \} else \{\par
  297         PutToken();\par
  298         node = ParseAtomic();\par
  299     \}\par
  300 \par
  301     return node;\par
  302 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a446237993f806a92dd3e78ba8019f4f5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_a446237993f806a92dd3e78ba8019f4f5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v PutToken\:Parser}
{\xe \v Parser\:PutToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Parser::PutToken (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 406 of file parser.cpp.}\par
{
References Token::GetLastToken(), and token.}\par
{
Referenced by Parse(), ParseAddSubstract(), ParseDeleteStatement(), ParseDigistStatement(), ParseFactor(), ParseHelpStatement(), ParseIdent(), ParseListStatement(), ParseNumber(), ParseNumeralStatement(), ParsePower(), ParsePrefsStatement(), ParsePromptStatement(), ParseStatement(), ParseUnary(), and TryParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   407 \{\par
  408     token = token->GetLastToken();\par
  409 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_adb5c3a188b36f7ecb198ae30f06338b3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_adb5c3a188b36f7ecb198ae30f06338b3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v TryParseStatement\:Parser}
{\xe \v Parser\:TryParseStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * Parser::TryParseStatement (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file parser.cpp.}\par
{
References errorNode, ErrorNode::ErrorNode(), Lexer::GetInput(), GetToken(), lexer, ParseStatement(), PutToken(), Token::symbol, symdelimiter, symend, syntaxError, and token.}\par
{
Referenced by Parse().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    96 \{\par
   97     GetToken();\par
   98     if(token->symbol == symend || token->symbol == symdelimiter) \{\par
   99         PutToken();\par
  100         return NOMEM;\par
  101     \}\par
  102     PutToken();\par
  103 \par
  104     errorNode = NOMEM;\par
  105     syntaxError = -1;\par
  106     SyntaxNode *result = ParseStatement();\par
  107 \par
  108     if (errorNode == NOMEM && syntaxError != -1) \{\par
  109         errorNode = new ErrorNode(lexer->GetInput(), syntaxError);\par
  110     \}\par
  111 \par
  112     if (errorNode != NOMEM) \{\par
  113         delete result;\par
  114         result = errorNode;\par
  115     \}\par
  116 \par
  117     return result;\par
  118 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_aeef41071b484e09942290ab55953dc4f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classParser_aeef41071b484e09942290ab55953dc4f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v errorNode\:Parser}
{\xe \v Parser\:errorNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ErrorNode}* Parser::errorNode{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file parser.h.}\par
{
Referenced by ParseDefault(), ParseDigistStatement(), ParseFunctionDef(), ParseIdent(), ParseNumeralStatement(), and TryParseStatement().}\par
}
{\xe \v lexer\:Parser}
{\xe \v Parser\:lexer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Lexer}* Parser::lexer{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file parser.h.}\par
{
Referenced by GetToken(), Parse(), ParseDigistStatement(), ParseFileStatement(), ParseFunctionDef(), ParseIdent(), ParseNumeralStatement(), Parser(), TryParseStatement(), and ~Parser().}\par
}
{\xe \v syntaxError\:Parser}
{\xe \v Parser\:syntaxError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Parser::syntaxError{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file parser.h.}\par
{
Referenced by Expect(), ParseAtomic(), ParseDefault(), ParseDeleteStatement(), ParseDigistStatement(), ParseListStatement(), ParseNumeralStatement(), and TryParseStatement().}\par
}
{\xe \v token\:Parser}
{\xe \v Parser\:token}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Token}* Parser::token{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file parser.h.}\par
{
Referenced by Expect(), GetToken(), Parse(), ParseAddSubstract(), ParseAtomic(), ParseDefault(), ParseDeleteStatement(), ParseDigistStatement(), ParseDrawStatement(), ParseFactor(), ParseFileStatement(), ParseFunctionDef(), ParseHelpStatement(), ParseIdent(), ParseListStatement(), ParseNumber(), ParseNumeralStatement(), ParsePower(), ParsePrefsStatement(), ParsePromptStatement(), ParseStatement(), ParseUnary(), PutToken(), and TryParseStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b parser.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b parser.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PiNode Class Reference\par \pard\plain 
{\tc\tcl2 \v PiNode}
{\xe \v PiNode}
{\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of PI in a syntax tree. }}\par
{
{\f2 #include <values.h>}}\par
Inheritance diagram for PiNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPiNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for PiNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPiNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PiNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ReductionType} {\b GetReductionType} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of PI in a syntax tree. \par
}{
Definition at line 178 of file values.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PiNode\:PiNode}
{\xe \v PiNode\:PiNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PiNode::PiNode ()}}
\par
{\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 417 of file values.cpp.}\par
{
References NumericValueNode::NumericValueNode(), and RealNumber::RealNumber().}\par
{
Referenced by Parser::ParseAtomic().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   417                :\par
  418     NumericValueNode(new RealNumber(PI)) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPiNode_a75ae61c6fa1883bca5b253123013c047_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPiNode_a75ae61c6fa1883bca5b253123013c047_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetNodeText\:PiNode}
{\xe \v PiNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * PiNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCU}
{\bkmkend AAAAAAACCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 425 of file values.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   426 \{\par
  427     return (char*)"pi";\par
  428 \}\par
}
}
{\xe \v GetReductionType\:PiNode}
{\xe \v PiNode\:GetReductionType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ReductionType} PiNode::GetReductionType (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACQZ}
{\bkmkend AAAAAAACQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 420 of file values.cpp.}\par
{
References nonereduc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   421 \{\par
  422     return nonereduc;\par
  423 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PlotStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v PlotStatement}
{\xe \v PlotStatement}
{\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for PlotStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPlotStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for PlotStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPlotStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlotStatement} (const char *{\b name}, const char *{\b parameter}, const char *{\b file})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlotStatement} (const char *{\b name}, const char *{\b parameter})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~PlotStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b parameter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b file}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 302 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PlotStatement\:PlotStatement}
{\xe \v PlotStatement\:PlotStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PlotStatement::PlotStatement (const char *  {\i name}, const char *  {\i parameter}, const char *  {\i file})}}
\par
{\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 756 of file statements.cpp.}\par
{
References AllocAndCopy(), file, name, parameter, and StatementNode::StatementNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   756                                                                                       :\par
  757     StatementNode()\par
  758 \{\par
  759     AllocAndCopy(&this->name, name);\par
  760     AllocAndCopy(&this->parameter, parameter);\par
  761     AllocAndCopy(&this->file, file);\par
  762 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPlotStatement_a47efbe7353578971d93bc9843ffbe2e1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v PlotStatement\:PlotStatement}
{\xe \v PlotStatement\:PlotStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PlotStatement::PlotStatement (const char *  {\i name}, const char *  {\i parameter})}}
\par
{\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 764 of file statements.cpp.}\par
{
References AllocAndCopy(), file, name, parameter, and StatementNode::StatementNode().}\par
{
Referenced by Parser::ParseDrawStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   764                                                                     :\par
  765     StatementNode()\par
  766 \{\par
  767     AllocAndCopy(&this->name, name);\par
  768     AllocAndCopy(&this->parameter, parameter);\par
  769     file = NOMEM;\par
  770 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPlotStatement_ab627e3becfbdd9d11f13b544c7dfa6c3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPlotStatement_ab627e3becfbdd9d11f13b544c7dfa6c3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~PlotStatement\:PlotStatement}
{\xe \v PlotStatement\:~PlotStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PlotStatement::~PlotStatement ()}}
\par
{\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 772 of file statements.cpp.}\par
{
References file, name, and parameter.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   773 \{\par
  774     delete [] name;\par
  775     delete [] parameter;\par
  776 \par
  777     if (file != NOMEM) \{\par
  778         delete [] file;\par
  779     \}\par
  780 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:PlotStatement}
{\xe \v PlotStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * PlotStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 782 of file statements.cpp.}\par
{
References CharBuffer::Append(), DecimalSystem::DecimalSystem(), CharBuffer::Empty(), CharBuffer::EnsureGrowth(), Program::Functions, FunctionList::GetFunctionDef(), Grid::GetHorizontalResolution(), Grid::GetScreenCoordinates(), CharBuffer::GetString(), NumeralSystem::GetText(), Grid::Grid(), name, SyntaxNode::output, parameter, RealNumber::RealNumber(), Grid::SetFunctionBounderies(), RealNumber::SetRealValue(), and Grid::SetScreenBounderues().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   783 \{\par
  784     UserFunction *function = Program->Functions->GetFunctionDef(name, parameter);\par
  785 \par
  786     if (function == NOMEM) \{\par
  787         return (char*)("Function does not exists." NEWLINE);\par
  788     \}\par
  789 \par
  790     output->Empty();\par
  791 \par
  792     Grid *grid = new Grid(function);\par
  793     static const int width = 400;\par
  794     static const int height = 300;\par
  795 \par
  796     grid->SetScreenBounderues(0, width, 20, height);\par
  797     bool first = true;\par
  798 \par
  799     static const double min = -5.0;\par
  800     static const double max = +5.0;\par
  801     grid->SetFunctionBounderies(min, max);\par
  802 \par
  803     double x = min;\par
  804     double step = grid->GetHorizontalResolution();\par
  805 \par
  806     int screenX;\par
  807     int screenY;\par
  808 \par
  809     RealNumber *n = new RealNumber();\par
  810     NumeralSystem *ns = new DecimalSystem(5);\par
  811 \par
  812     while (x < max) \{\par
  813         grid->GetScreenCoordinates(x, &screenX, &screenY);\par
  814 \par
  815         output->EnsureGrowth(32);\par
  816 \par
  817         if (screenX != -1 && screenY != -1) \{\par
  818             if (first) \{\par
  819                 output->Append('(');\par
  820                 n->SetRealValue(screenX);\par
  821                 output->Append(ns->GetText(n));\par
  822                 output->Append(',');\par
  823                 n->SetRealValue(height - screenY);\par
  824                 output->Append(ns->GetText(n));\par
  825                 output->Append(')');\par
  826                 output->Append(NEWLINE);\par
  827                 first = false;\par
  828             \} else \{\par
  829                 output->Append('(');\par
  830                 n->SetRealValue(screenX);\par
  831                 output->Append(ns->GetText(n));\par
  832                 output->Append(',');\par
  833                 n->SetRealValue(height - screenY);\par
  834                 output->Append(ns->GetText(n));\par
  835                 output->Append(')');\par
  836                 output->Append(NEWLINE);\par
  837             \}\par
  838         \}\par
  839 \par
  840         x = x + step;\par
  841     \}\par
  842 \par
  843     delete n;\par
  844     delete ns;\par
  845 \par
  846     return output->GetString();\par
  847 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPlotStatement_a653ff64c2c918b3209be426f7c243459_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v file\:PlotStatement}
{\xe \v PlotStatement\:file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* PlotStatement::file{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 312 of file statements.h.}\par
{
Referenced by PlotStatement(), and ~PlotStatement().}\par
}
{\xe \v name\:PlotStatement}
{\xe \v PlotStatement\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* PlotStatement::name{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 310 of file statements.h.}\par
{
Referenced by Execute(), PlotStatement(), and ~PlotStatement().}\par
}
{\xe \v parameter\:PlotStatement}
{\xe \v PlotStatement\:parameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* PlotStatement::parameter{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 311 of file statements.h.}\par
{
Referenced by Execute(), PlotStatement(), and ~PlotStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PositionalNumeralSystem Class Reference\par \pard\plain 
{\tc\tcl2 \v PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem}
{\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all numeral systems with a positional notation. }}\par
{
{\f2 #include <ntext.h>}}\par
Inheritance diagram for PositionalNumeralSystem:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPositionalNumeralSystem__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for PositionalNumeralSystem:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPositionalNumeralSystem__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositionalNumeralSystem} (unsigned int {\b base}, unsigned int {\b digits}, const char {\b fractionpoint})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~PositionalNumeralSystem} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const char * {\b GetName} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const char * {\b GetPrefix} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual unsigned int {\b GetDigits} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b SetDigits} (unsigned int {\b digits})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const char {\b GetFractionPoint} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b SetFractionPoint} (const char {\b fractionpoint})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const char * {\b GetText} ({\b Number} *number)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Number} * {\b Parse} (const char *text, unsigned int *length, char **end)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b base}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b digits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b fractionpoint}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b GetText} (double number)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b IntegerToBuffer} (double value, unsigned int {\b digits}, int *outdigits)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all numeral systems with a positional notation. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
More info on positional notation is available at Wikipedia: {\f2 http://en.wikipedia.org/wiki/Positional_notation} \par
}{
Definition at line 74 of file ntext.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PositionalNumeralSystem\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:PositionalNumeralSystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PositionalNumeralSystem::PositionalNumeralSystem (unsigned int  {\i base}, unsigned int  {\i digits}, const char  {\i fractionpoint})}}
\par
{\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file ntext.cpp.}\par
{
References base, digits, and fractionpoint.}\par
{
Referenced by DecimalSystem::DecimalSystem(), Program::NewPositionalInput(), and Program::NewPositionalOutput().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    61                               :\par
   62     base(base * 1.0), digits(digits) \{\par
   63     this->fractionpoint = fractionpoint;\par
   64 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPositionalNumeralSystem_a923f36569ecc830f17bcf56dd2811754_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~PositionalNumeralSystem\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:~PositionalNumeralSystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PositionalNumeralSystem::~PositionalNumeralSystem ()}}
\par
{\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file ntext.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    67 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetDigits\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:GetDigits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int PositionalNumeralSystem::GetDigits (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b NumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 107 of file ntext.cpp.}\par
{
References digits.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   108 \{\par
  109     return digits;\par
  110 \}\par
}
}
{\xe \v GetFractionPoint\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:GetFractionPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char PositionalNumeralSystem::GetFractionPoint (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPW}
{\bkmkend AAAAAAACPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b NumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 117 of file ntext.cpp.}\par
{
References fractionpoint.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   118 \{\par
  119     return (const char)this->fractionpoint;\par
  120 \}\par
}
}
{\xe \v GetName\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * PositionalNumeralSystem::GetName (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b NumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 69 of file ntext.cpp.}\par
{
References CharBuffer::Append(), base, NumeralSystem::buf, DecimalSystem::DecimalSystem(), CharBuffer::Empty(), CharBuffer::EnsureSize(), CharBuffer::GetString(), NumeralSystem::GetText(), RealNumber::RealNumber(), and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    70 \{\par
   71     switch ((int)base) \{\par
   72     case 2:\par
   73         return "binary";\par
   74         break;\par
   75     case 8:\par
   76         return "octal";\par
   77         break;\par
   78     case 10:\par
   79         return "decimal";\par
   80         break;\par
   81     case 16:\par
   82         return "hexadecimal";\par
   83         break;\par
   84     \}\par
   85 \par
   86     const char *text = "base ";\par
   87     Number *n = new RealNumber(base);\par
   88     NumeralSystem *ns = new DecimalSystem(2);\par
   89     const char *numtext = ns->GetText(n);\par
   90 \par
   91     buf->EnsureSize(StrLen(text) + StrLen(numtext) + 1);\par
   92     buf->Empty();\par
   93     buf->Append(text);\par
   94     buf->Append(numtext);\par
   95 \par
   96     delete ns;\par
   97     delete n;\par
   98     return buf->GetString();\par
   99 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPositionalNumeralSystem_ab52249b8607a9e67d4676aad39a6e15d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetPrefix\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:GetPrefix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * PositionalNumeralSystem::GetPrefix (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b NumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 101 of file ntext.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   102 \{\par
  103     // TODO: Implement\par
  104     return "";\par
  105 \}\par
}
}
{\xe \v GetText\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * PositionalNumeralSystem::GetText ({\b Number} *  {\i number}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b NumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b DecimalSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABXJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 127 of file ntext.cpp.}\par
{
References CharBuffer::Append(), NumeralSystem::buf, CharBuffer::CharBuffer(), cimag(), CharBuffer::Copy(), creal(), CharBuffer::Empty(), ComplexNumber::GetComplexValue(), Number::GetRealValue(), CharBuffer::GetString(), GetText(), nsysreal, and Number::system.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   128 \{\par
  129     if (number->system == nsysreal) \{\par
  130         return GetText(number->GetRealValue());\par
  131     \}\par
  132 \par
  133     complex w = ((ComplexNumber*)number)->GetComplexValue();\par
  134     double a = creal(w);\par
  135     double b = cimag(w);\par
  136 \par
  137     if (a == 0.0 && b == 0.0) \{\par
  138         buf->Empty();\par
  139         buf->Append('0');\par
  140         return buf->GetString();\par
  141     \}\par
  142 \par
  143     CharBuffer *val = new CharBuffer(512);\par
  144     val->Empty();\par
  145 \par
  146     if (a != 0.0) \{\par
  147         const char *real = GetText(a);\par
  148         val->Append(real);\par
  149     \}\par
  150 \par
  151     const char *imag = GetText(b);\par
  152     if (a != 0.0 && b > 0.0) \{\par
  153         val->Append('+');\par
  154     \}\par
  155 \par
  156     if (b != 0.0) \{\par
  157         val->Append(imag);\par
  158         val->Append('i');\par
  159     \}\par
  160 \par
  161     buf->Copy(val);\par
  162     delete val;\par
  163 \par
  164     return buf->GetString();\par
  165 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPositionalNumeralSystem_ac4acbb807861e8ff702d9624fb5db87d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetText\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * PositionalNumeralSystem::GetText (double  {\i number}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 167 of file ntext.cpp.}\par
{
References CharBuffer::Append(), base, NumeralSystem::buf, digits, CharBuffer::Empty(), finite(), fractionpoint, CharBuffer::GetString(), IntegerToBuffer(), CharBuffer::Is(), isnan(), pow(), CharBuffer::RemoveTrailing(), round(), and trunc().}\par
{
Referenced by GetText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   168 \{\par
  169     if (!finite(number)) \{\par
  170         return "Inf";\par
  171     \} else if (isnan(number)) \{\par
  172         return "NaN";\par
  173     \} else if (number == 0.0) \{\par
  174         return "0";\par
  175     \}\par
  176 \par
  177     buf->Empty();\par
  178 \par
  179     double dnumber = number;\par
  180     if (dnumber < 0.0) \{\par
  181         buf->Append('-');\par
  182         dnumber = -dnumber;\par
  183     \}\par
  184 \par
  185     double expborder = log2p(base, dnumber);\par
  186     int exponent = 0;\par
  187 \par
  188     // Find exponent\par
  189     if (expborder > 6.0 || expborder < -5.0) \{\par
  190         double dexp = trunc(log2p(base, dnumber));\par
  191 \par
  192         // Adjust to keep one digits before dot.\par
  193         if (dexp < 0.0) \{\par
  194             dexp -= 1.0;\par
  195         \}\par
  196 \par
  197         dnumber = dnumber * pow(base, -dexp);\par
  198         exponent = (int)dexp;\par
  199     \}\par
  200 \par
  201     int digitout;\par
  202     int intdigits;\par
  203 \par
  204     // NOTICE: 1.5.3 Scaled trunc\par
  205     int intvalue = (int)(trunc(dnumber * base) / base);\par
  206     IntegerToBuffer(intvalue, digits, &intdigits);\par
  207 \par
  208     int fragdigits = digits - intdigits;\par
  209     if (fragdigits > 0) \{\par
  210         buf->Append('.');\par
  211 \par
  212         // TODO: Fix fraction error (try 1.5439)\par
  213         double fraction = fabs(round((dnumber - round(dnumber)) * pow(base, fragdigits)));\par
  214 \par
  215         // NOTICE: 1.5.3 Changed from trunc to round\par
  216         double actualdigits = round(log2p(base, fraction));\par
  217         int padding = fragdigits - (finite(actualdigits) == 1 ? (int)actualdigits : 0) - 1;\par
  218 \par
  219         // Pad zeros if needed\par
  220         while (padding-- > 0) \{\par
  221             buf->Append('0');\par
  222         \}\par
  223 \par
  224         // NOTICE: 1.5.3 Scaled trunc\par
  225         intvalue = (int)(trunc(fraction * base) / base);\par
  226         IntegerToBuffer(intvalue, digits - intdigits, &digitout);\par
  227 \par
  228         // Remove trailing zeros\par
  229         while (buf->RemoveTrailing('0'))\par
  230             ;\par
  231 \par
  232         buf->RemoveTrailing(fractionpoint);\par
  233     \}\par
  234 \par
  235     // Add exponent\par
  236     if (exponent != 0) \{\par
  237         buf->Append('e');\par
  238         buf->Append(exponent > 0 ? '+' : '-');\par
  239         IntegerToBuffer(abs(exponent), 3, &digitout);\par
  240     \}\par
  241 \par
  242     // Make sure no rounding error is returned\par
  243     if (buf->Is("-0")) \{\par
  244         buf->Empty();\par
  245         buf->Append('0');\par
  246     \}\par
  247 \par
  248     return buf->GetString();\par
  249 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPositionalNumeralSystem_a2f6ecf8dd5ebff779bd2cba4e356febe_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPositionalNumeralSystem_a2f6ecf8dd5ebff779bd2cba4e356febe_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v IntegerToBuffer\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:IntegerToBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PositionalNumeralSystem::IntegerToBuffer (double  {\i value}, unsigned int  {\i digits}, int *  {\i outdigits}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 251 of file ntext.cpp.}\par
{
References CharBuffer::Append(), base, NumeralSystem::buf, and trunc().}\par
{
Referenced by GetText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   252 \{\par
  253     static const char *alphaNumerics = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";\par
  254     unsigned int count = 0;\par
  255     char *chars = new char[128]; // TODO: Find correct size\par
  256     char *start = chars;\par
  257 \par
  258     do \{\par
  259         count++;\par
  260         unsigned int intremainder = (unsigned int) trunc(fmod(value, base));\par
  261         *chars++ = alphaNumerics[intremainder];\par
  262         value /= base;\par
  263     \} while (value >= 1.0);\par
  264 \par
  265     unsigned int n = count;\par
  266     unsigned int q = digits;\par
  267     chars--;\par
  268 \par
  269     while (n-- != 0 && q-- != 0) \{\par
  270         buf->Append(*chars--);\par
  271     \}\par
  272 \par
  273     n++;\par
  274     while (n-- != 0) \{\par
  275         buf->Append('0');\par
  276     \}\par
  277 \par
  278     *outdigits = count;\par
  279     delete [] start;\par
  280 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPositionalNumeralSystem_ac2edd0c7d5b47dc04908038f3eb03556_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPositionalNumeralSystem_ac2edd0c7d5b47dc04908038f3eb03556_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Parse\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:Parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * PositionalNumeralSystem::Parse (const char *  {\i text}, unsigned int *  {\i length}, char **  {\i end}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b NumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 282 of file ntext.cpp.}\par
{
References base, fractionpoint, pow(), and RealNumber::RealNumber().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   283 \{\par
  284     unsigned int intbase = (unsigned int)base;\par
  285     char maxNumeric = (intbase > 10 ? 10 : intbase) + '0' - 1;\par
  286     char maxAlpha = intbase > 10 ? intbase + 'A' - 11 : 0;\par
  287 \par
  288     unsigned int pos = 0;\par
  289     double integer = 0;\par
  290     double addition;\par
  291 \par
  292     while (*text != '\\0' && ((*text >= '0' && *text <= maxNumeric) || (maxAlpha != 0 && *text >= 'A' && *text <= maxAlpha))) \{\par
  293         addition = ((*text >= '0' && *text <= maxNumeric) ? (*text - '0') : (*text - 'A' + 10)) * 1.0;\par
  294         integer = integer * base + addition;\par
  295         text++;\par
  296         pos++;\par
  297     \}\par
  298 \par
  299     // Digits not found\par
  300     if (pos == 0) \{\par
  301         *length = 0;\par
  302         *end = (char*)text;\par
  303         return new RealNumber();\par
  304     \}\par
  305 \par
  306     double fraction = 0.0;\par
  307     double divisor = 1.0;\par
  308     if (*text == fractionpoint) \{\par
  309         text++;\par
  310         pos++;\par
  311 \par
  312         while (*text != '\\0' && ((*text >= '0' && *text <= maxNumeric) || (maxAlpha != '\\0' && *text >= 'A' && *text <= maxAlpha))) \{\par
  313             addition = ((*text >= '0' && *text <= maxNumeric) ? (*text - '0') : (*text - 'A' + 10));\par
  314             fraction = fraction * base + addition;\par
  315             divisor *= base;\par
  316             text++;\par
  317             pos++;\par
  318         \}\par
  319     \}\par
  320 \par
  321     double exp = 0;\par
  322     if (*text == 'e' || *text == 'E') \{\par
  323         text++;\par
  324         pos++;\par
  325 \par
  326         double sign = *text == '+' ? 1.0 : *text == '-' ? -1.0 : 0.0;\par
  327 \par
  328         if (sign != 0.0) \{\par
  329             text++;\par
  330             pos++;\par
  331 \par
  332             while (*text != '\\0' && ((*text >= '0' && *text <= maxNumeric) || (maxAlpha != 0 && *text >= 'A' && *text <= maxAlpha))) \{\par
  333                 addition = ((*text >= '0' && *text <= maxNumeric) ? (*text - '0') : (*text - 'A' + 10)) * 1.0;\par
  334                 exp = exp * base + addition;\par
  335                 text++;\par
  336                 pos++;\par
  337             \}\par
  338 \par
  339             exp *= sign;\par
  340         \} else \{\par
  341             text--;\par
  342             pos--;\par
  343         \}\par
  344     \}\par
  345 \par
  346     *length = pos;\par
  347     *end = (char*)text;\par
  348     double dnumber = (integer + (fraction / divisor)) * pow(base, exp);\par
  349 \par
  350     return new RealNumber(dnumber);\par
  351 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPositionalNumeralSystem_a6fd2861b5cd8da952191218121df7f56_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetDigits\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:SetDigits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PositionalNumeralSystem::SetDigits (unsigned int  {\i digits}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b NumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 112 of file ntext.cpp.}\par
{
References digits.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   113 \{\par
  114     this->digits = digits;\par
  115 \}\par
}
}
{\xe \v SetFractionPoint\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:SetFractionPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PositionalNumeralSystem::SetFractionPoint (const char  {\i fractionpoint}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b NumeralSystem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 122 of file ntext.cpp.}\par
{
References fractionpoint.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   123 \{\par
  124     this->fractionpoint = fractionpoint;\par
  125 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v base\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double PositionalNumeralSystem::base{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 89 of file ntext.h.}\par
{
Referenced by GetName(), GetText(), IntegerToBuffer(), Parse(), and PositionalNumeralSystem().}\par
}
{\xe \v digits\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:digits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int PositionalNumeralSystem::digits{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 90 of file ntext.h.}\par
{
Referenced by GetDigits(), DecimalSystem::GetRealText(), GetText(), PositionalNumeralSystem(), and SetDigits().}\par
}
{\xe \v fractionpoint\:PositionalNumeralSystem}
{\xe \v PositionalNumeralSystem\:fractionpoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char PositionalNumeralSystem::fractionpoint{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file ntext.h.}\par
{
Referenced by GetFractionPoint(), DecimalSystem::GetRealText(), GetText(), Parse(), PositionalNumeralSystem(), and SetFractionPoint().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b ntext.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b ntext.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PosixLanguage Class Reference\par \pard\plain 
{\tc\tcl2 \v PosixLanguage}
{\xe \v PosixLanguage}
{\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
\par
{
{\f2 #include <language_posix.h>}}\par
Inheritance diagram for PosixLanguage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPosixLanguage__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for PosixLanguage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPosixLanguage__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PosixLanguage} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~PosixLanguage} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b GetFractionPoint} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsAlNum} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsAlpha} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsDigit} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsPunct} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsSpace} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsCntrl} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b StrIsEqualLoc} (const char *s1, const char *s2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Translate} ({\b textdef} *def)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Translate} ({\b helptextdef} *def)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Translate} ({\b identhelpdef} *def)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
locale_t {\b locale}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct lconv * {\b conv}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 41 of file language_posix.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PosixLanguage\:PosixLanguage}
{\xe \v PosixLanguage\:PosixLanguage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PosixLanguage::PosixLanguage ()}}
\par
{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file language_posix.cpp.}\par
{
References conv, Language::Language(), and locale.}\par
{
Referenced by CreateLanguage().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45                              :\par
   46     Language()\par
   47 \{\par
   48 //    locale = newlocale(LC_ALL, "da_DK.ISO8859-15", (locale_t)0);\par
   49 //    setlocale(LC_NUMERIC, "da_DK.ISO8859-15");\par
   50     locale = newlocale(LC_ALL, "", (locale_t)0);\par
   51     setlocale(LC_NUMERIC, "");\par
   52     conv = localeconv();\par
   53 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPosixLanguage_adec9134e7ac6b7519f9c0de05432a670_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPosixLanguage_adec9134e7ac6b7519f9c0de05432a670_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~PosixLanguage\:PosixLanguage}
{\xe \v PosixLanguage\:~PosixLanguage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PosixLanguage::~PosixLanguage ()}}
\par
{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file language_posix.cpp.}\par
{
References locale.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    56 \{\par
   57     freelocale(locale);\par
   58 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CharIsAlNum\:PosixLanguage}
{\xe \v PosixLanguage\:CharIsAlNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} PosixLanguage::CharIsAlNum (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 60 of file language_posix.cpp.}\par
{
References locale.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    61 \{\par
   62     return (bool)isalnum_l((int)character, locale);\par
   63 \}\par
}
}
{\xe \v CharIsAlpha\:PosixLanguage}
{\xe \v PosixLanguage\:CharIsAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} PosixLanguage::CharIsAlpha (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 65 of file language_posix.cpp.}\par
{
References locale.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    66 \{\par
   67     return (bool)isalpha_l((int)character, locale);\par
   68 \}\par
}
}
{\xe \v CharIsCntrl\:PosixLanguage}
{\xe \v PosixLanguage\:CharIsCntrl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} PosixLanguage::CharIsCntrl (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKB}
{\bkmkend AAAAAAACKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 70 of file language_posix.cpp.}\par
{
References locale.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    71 \{\par
   72     return (bool)iscntrl_l((int)character, locale);\par
   73 \}\par
}
}
{\xe \v CharIsDigit\:PosixLanguage}
{\xe \v PosixLanguage\:CharIsDigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} PosixLanguage::CharIsDigit (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKD}
{\bkmkend AAAAAAACKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 75 of file language_posix.cpp.}\par
{
References locale.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    76 \{\par
   77     return (bool)isdigit_l((int)character, locale);\par
   78 \}\par
}
}
{\xe \v CharIsPunct\:PosixLanguage}
{\xe \v PosixLanguage\:CharIsPunct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} PosixLanguage::CharIsPunct (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKF}
{\bkmkend AAAAAAACKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 80 of file language_posix.cpp.}\par
{
References locale.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    81 \{\par
   82     return (bool)ispunct_l((int)character, locale);\par
   83 \}\par
}
}
{\xe \v CharIsSpace\:PosixLanguage}
{\xe \v PosixLanguage\:CharIsSpace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} PosixLanguage::CharIsSpace (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKH}
{\bkmkend AAAAAAACKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 85 of file language_posix.cpp.}\par
{
References locale.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    86 \{\par
   87     return (bool)isspace_l((int)character, locale);\par
   88 \}\par
}
}
{\xe \v GetFractionPoint\:PosixLanguage}
{\xe \v PosixLanguage\:GetFractionPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char PosixLanguage::GetFractionPoint (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKL}
{\bkmkend AAAAAAACKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 90 of file language_posix.cpp.}\par
{
References conv.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    91 \{\par
   92     return *(conv->decimal_point);\par
   93 \}\par
}
}
{\xe \v StrIsEqualLoc\:PosixLanguage}
{\xe \v PosixLanguage\:StrIsEqualLoc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} PosixLanguage::StrIsEqualLoc (const char *  {\i s1}, const char *  {\i s2}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 95 of file language_posix.cpp.}\par
{
References StrIsEqual().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    96 \{\par
   97     size_t len = StrLen(s2) * 2;\par
   98     char *tmp = new char[len];\par
   99     strxfrm(tmp, s2, len);\par
  100     bool res = StrIsEqual(s1, tmp);\par
  101     delete [] tmp;\par
  102     return res;\par
  103 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPosixLanguage_a5d9a71c26234345a5266314efbeaba6f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Translate\:PosixLanguage}
{\xe \v PosixLanguage\:Translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * PosixLanguage::Translate ({\b textdef} *  {\i def}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 115 of file language_posix.cpp.}\par
{
References textdef::text.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   116 \{\par
  117     return (char*)def->text;\par
  118 \}\par
}
}
{\xe \v Translate\:PosixLanguage}
{\xe \v PosixLanguage\:Translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * PosixLanguage::Translate ({\b helptextdef} *  {\i def}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 110 of file language_posix.cpp.}\par
{
References helptextdef::text.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   111 \{\par
  112     return (char*)def->text;\par
  113 \}\par
}
}
{\xe \v Translate\:PosixLanguage}
{\xe \v PosixLanguage\:Translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * PosixLanguage::Translate ({\b identhelpdef} *  {\i def}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 105 of file language_posix.cpp.}\par
{
References identhelpdef::text.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   106 \{\par
  107     return (char*)def->text;\par
  108 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v conv\:PosixLanguage}
{\xe \v PosixLanguage\:conv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct lconv* PosixLanguage::conv{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file language_posix.h.}\par
{
Referenced by GetFractionPoint(), and PosixLanguage().}\par
}
{\xe \v locale\:PosixLanguage}
{\xe \v PosixLanguage\:locale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
locale_t PosixLanguage::locale{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file language_posix.h.}\par
{
Referenced by CharIsAlNum(), CharIsAlpha(), CharIsCntrl(), CharIsDigit(), CharIsPunct(), CharIsSpace(), PosixLanguage(), and ~PosixLanguage().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b language_posix.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b language_posix.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PowerNode Class Reference\par \pard\plain 
{\tc\tcl2 \v PowerNode}
{\xe \v PowerNode}
{\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
\par
{
{\f2 #include <operators.h>}}\par
Inheritance diagram for PowerNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPowerNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for PowerNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPowerNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PowerNode} ({\b ExpressionNode} *{\b left}, {\b ExpressionNode} *{\b right})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 138 of file operators.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PowerNode\:PowerNode}
{\xe \v PowerNode\:PowerNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PowerNode::PowerNode ({\b ExpressionNode} *  {\i left}, {\b ExpressionNode} *  {\i right})}}
\par
{\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 403 of file operators.cpp.}\par
{
References NumericOperator::NumericOperator().}\par
{
Referenced by Parser::ParsePower().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   403                                                                :\par
  404     NumericOperator(left, right) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPowerNode_a55fac2d0658e6381d166c3c112a67351_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPowerNode_a55fac2d0658e6381d166c3c112a67351_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Evaluate\:PowerNode}
{\xe \v PowerNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * PowerNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBR}
{\bkmkend AAAAAAACBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 411 of file operators.cpp.}\par
{
References ExpressionNode::Evaluate(), NumericOperator::left, Number::Raise(), ExpressionNode::result, and NumericOperator::right.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   412 \{\par
  413     Number* exponent = right->Evaluate();\par
  414     result = left->Evaluate()->Raise(exponent);\par
  415     return result;\par
  416 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPowerNode_aa4cabda6c36a848f86b9af2baca6dcc6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:PowerNode}
{\xe \v PowerNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * PowerNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCW}
{\bkmkend AAAAAAACCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 418 of file operators.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   419 \{\par
  420     return (char*)"^";\par
  421 \}\par
}
}
{\xe \v GetPrecedence\:PowerNode}
{\xe \v PowerNode\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int PowerNode::GetPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDE}
{\bkmkend AAAAAAACDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 406 of file operators.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   407 \{\par
  408     return 4;\par
  409 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PreferencesBase Class Reference\par \pard\plain 
{\tc\tcl2 \v PreferencesBase}
{\xe \v PreferencesBase}
{\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
\par
{
{\f2 #include <preferences.h>}}\par
Inheritance diagram for PreferencesBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for PreferencesBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PreferencesBase} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PreferencesBase} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetDescription} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetPrompt} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetPrompt} (const char *{\b prompt})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetDigits} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetDigits} (int {\b digits})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetDefaults} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b Load} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b Keep} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b Save} ()=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetPrefs} (char *prefs)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} * {\b buf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b prompt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b digits}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 32 of file preferences.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PreferencesBase\:PreferencesBase}
{\xe \v PreferencesBase\:PreferencesBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PreferencesBase::PreferencesBase ()}}
\par
{\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file preferences.cpp.}\par
{
References buf, CharBuffer::CharBuffer(), and SetDefaults().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    38 \{\par
   39     buf = new CharBuffer();\par
   40     SetDefaults();\par
   41 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_a24ab9b2b7d30fbe0a7b3979c0191c783_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~PreferencesBase\:PreferencesBase}
{\xe \v PreferencesBase\:~PreferencesBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PreferencesBase::~PreferencesBase (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file preferences.cpp.}\par
{
References buf, and prompt.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     delete buf;\par
   46     delete prompt;\par
   47 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetDescription\:PreferencesBase}
{\xe \v PreferencesBase\:GetDescription}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * PreferencesBase::GetDescription ()}}
\par
{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file preferences.cpp.}\par
{
References CharBuffer::Append(), buf, DecimalSystem::DecimalSystem(), CharBuffer::Empty(), CharBuffer::EnsureSize(), Lexer::FindKeyword(), GetDigits(), CharBuffer::GetString(), NumeralSystem::GetText(), prompt, RealNumber::RealNumber(), StrLen(), symdelimiter, symdigits, and symprompt.}\par
{
Referenced by PrefsStatement::Execute(), and StandardPreferences::SavePrefs().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    56 \{\par
   57     static char *promptkw = Lexer::FindKeyword(symprompt);\par
   58     static char *digitkw  = Lexer::FindKeyword(symdigits);\par
   59     static char delimiter = *(Lexer::FindKeyword(symdelimiter));\par
   60     static char promptq   = '"';\par
   61 \par
   62     Number *d = new RealNumber(GetDigits());\par
   63     NumeralSystem *ns = new DecimalSystem(2);\par
   64     const char *dtext = ns->GetText(d);\par
   65     delete d;\par
   66 \par
   67     buf->Empty();\par
   68     buf->EnsureSize(\par
   69         StrLen(promptkw) + sizeof(SPACE) + sizeof(promptq) +\par
   70         StrLen(prompt) + sizeof(promptq) + sizeof(delimiter) +\par
   71         StrLen(digitkw) + sizeof(SPACE) + StrLen(dtext) + sizeof(delimiter) + sizeof(char));\par
   72 \par
   73     buf->Append(promptkw);\par
   74     buf->Append(SPACE);\par
   75     buf->Append(promptq);\par
   76     buf->Append(prompt);\par
   77     buf->Append(promptq);\par
   78     buf->Append(delimiter);\par
   79     buf->Append(digitkw);\par
   80     buf->Append(SPACE);\par
   81     buf->Append(dtext);\par
   82     buf->Append(delimiter);\par
   83 \par
   84     delete ns;\par
   85     return buf->GetString();\par
   86 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_a9452038c67c6592334b6f3908c86833a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_a9452038c67c6592334b6f3908c86833a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetDigits\:PreferencesBase}
{\xe \v PreferencesBase\:GetDigits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int PreferencesBase::GetDigits ()}}
\par
{\bkmkstart AAAAAAACUH}
{\bkmkend AAAAAAACUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 112 of file preferences.cpp.}\par
{
References digits.}\par
{
Referenced by PrefsStatement::Execute(), GetDescription(), and Program::Program().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   113 \{\par
  114     return digits;\par
  115 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_a8d693cb289d1f5282f13c0cfb698b8cc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetPrompt\:PreferencesBase}
{\xe \v PreferencesBase\:GetPrompt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * PreferencesBase::GetPrompt ()}}
\par
{\bkmkstart AAAAAAACUI}
{\bkmkend AAAAAAACUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file preferences.cpp.}\par
{
References prompt.}\par
{
Referenced by PrefsStatement::Execute(), and StandardProgram::Initialize().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   102 \{\par
  103     return prompt;\par
  104 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_af6a5391be98aa10d191eed80d683723d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Keep\:PreferencesBase}
{\xe \v PreferencesBase\:Keep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} PreferencesBase::Keep (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StandardPreferences} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACUJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b AmigaPreferences} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by PrefsStatement::Execute(), and Program::~Program().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_a83f5750e2780a0bf03cb7a394230637a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Load\:PreferencesBase}
{\xe \v PreferencesBase\:Load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} PreferencesBase::Load (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StandardPreferences} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACUK \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b AmigaPreferences} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by PrefsStatement::Execute(), and StandardProgram::Run().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_ab4e17e21f4377c44fa0ba16a0868a206_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Save\:PreferencesBase}
{\xe \v PreferencesBase\:Save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} PreferencesBase::Save (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StandardPreferences} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACUL \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b AmigaPreferences} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by PrefsStatement::Execute().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_af0c96d85f242caead85d92d2c68fb30b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetDefaults\:PreferencesBase}
{\xe \v PreferencesBase\:SetDefaults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PreferencesBase::SetDefaults ()}}
\par
{\bkmkstart AAAAAAACUM}
{\bkmkend AAAAAAACUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file preferences.cpp.}\par
{
References AllocAndCopy(), digits, and prompt.}\par
{
Referenced by PreferencesBase().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{\par
   51     AllocAndCopy(&this->prompt, "> ");\par
   52     digits = 9;\par
   53 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_a0b782da503c15f8f79d6ee99cb684fff_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_a0b782da503c15f8f79d6ee99cb684fff_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetDigits\:PreferencesBase}
{\xe \v PreferencesBase\:SetDigits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PreferencesBase::SetDigits (int  {\i digits})}}
\par
{\bkmkstart AAAAAAACUN}
{\bkmkend AAAAAAACUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 117 of file preferences.cpp.}\par
{
References digits.}\par
{
Referenced by DigitsStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   118 \{\par
  119     this->digits = digits;\par
  120 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_ac4bf26900de7e3aeb3af73f280781e4c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetPrefs\:PreferencesBase}
{\xe \v PreferencesBase\:SetPrefs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PreferencesBase::SetPrefs (char *  {\i prefs}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUO}
{\bkmkend AAAAAAACUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file preferences.cpp.}\par
{
References SyntaxNode::Execute(), Parser::Parse(), and Parser::Parser().}\par
{
Referenced by StandardPreferences::Load().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    89 \{\par
   90     if (prefs == NOMEM) \{\par
   91         return;\par
   92     \}\par
   93 \par
   94     Parser *parser = new Parser(prefs);\par
   95     SyntaxNode *node = parser->Parse();\par
   96     delete parser;\par
   97     node->Execute();\par
   98     delete node;\par
   99 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_a90dcd05552f94429b05df661eb72b5e2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_a90dcd05552f94429b05df661eb72b5e2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetPrompt\:PreferencesBase}
{\xe \v PreferencesBase\:SetPrompt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PreferencesBase::SetPrompt (const char *  {\i prompt})}}
\par
{\bkmkstart AAAAAAACUP}
{\bkmkend AAAAAAACUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 106 of file preferences.cpp.}\par
{
References AllocAndCopy(), and prompt.}\par
{
Referenced by Program::SetPrompt().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   107 \{\par
  108     delete this->prompt;\par
  109     AllocAndCopy(&this->prompt, prompt);\par
  110 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_a84ef7562c15ce4921ea8821e6301d302_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPreferencesBase_a84ef7562c15ce4921ea8821e6301d302_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buf\:PreferencesBase}
{\xe \v PreferencesBase\:buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CharBuffer}* PreferencesBase::buf{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUQ}
{\bkmkend AAAAAAACUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file preferences.h.}\par
{
Referenced by GetDescription(), PreferencesBase(), and ~PreferencesBase().}\par
}
{\xe \v digits\:PreferencesBase}
{\xe \v PreferencesBase\:digits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int PreferencesBase::digits{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUR}
{\bkmkend AAAAAAACUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file preferences.h.}\par
{
Referenced by GetDigits(), SetDefaults(), and SetDigits().}\par
}
{\xe \v prompt\:PreferencesBase}
{\xe \v PreferencesBase\:prompt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* PreferencesBase::prompt{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUS}
{\bkmkend AAAAAAACUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file preferences.h.}\par
{
Referenced by GetDescription(), GetPrompt(), SetDefaults(), SetPrompt(), and ~PreferencesBase().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b preferences.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b preferences.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PrefsStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v PrefsStatement}
{\xe \v PrefsStatement}
{\bkmkstart AAAAAAACUT}
{\bkmkend AAAAAAACUT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load or save preferences. }}\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for PrefsStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPrefsStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for PrefsStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPrefsStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PrefsStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PrefsStatement} ({\b Symbol} {\b argument})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Symbol} {\b argument}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load or save preferences. \par
}{
Definition at line 119 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PrefsStatement\:PrefsStatement}
{\xe \v PrefsStatement\:PrefsStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PrefsStatement::PrefsStatement ()}}
\par
{\bkmkstart AAAAAAACUU}
{\bkmkend AAAAAAACUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 122 of file statements.cpp.}\par
{
References argument.}\par
{
Referenced by Parser::ParsePrefsStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   123 \{\par
  124     argument = Symbol(0);\par
  125 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPrefsStatement_a4adba94c7162092a864997a259b69f14_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v PrefsStatement\:PrefsStatement}
{\xe \v PrefsStatement\:PrefsStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PrefsStatement::PrefsStatement ({\b Symbol}  {\i argument})}}
\par
{\bkmkstart AAAAAAACUV}
{\bkmkend AAAAAAACUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file statements.cpp.}\par
{
References argument.}\par
{
Referenced by Parser::ParsePrefsStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   128 \{\par
  129     this->argument = argument;\par
  130 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPrefsStatement_aa24161049ff45e2dadeee7ed1b4949f6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:PrefsStatement}
{\xe \v PrefsStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * PrefsStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACUW}
{\bkmkend AAAAAAACUW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 132 of file statements.cpp.}\par
{
References argument, Program::Console, PreferencesBase::GetDescription(), PreferencesBase::GetDigits(), PreferencesBase::GetPrompt(), Program::Input, PreferencesBase::Keep(), PreferencesBase::Load(), Program::Output, Program::Preferences, PreferencesBase::Save(), NumeralSystem::SetDigits(), ConsoleBase::SetPrompt(), symload, and symsave.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   133 \{\par
  134     bool success;\par
  135 \par
  136     if (argument == symsave) \{\par
  137         success = Program->Preferences->Keep();\par
  138         success &= Program->Preferences->Save();\par
  139         return (success ? HELPPREFSAVE : HELPPREFNOSA);\par
  140     \} else if (argument == symload) \{\par
  141         success = Program->Preferences->Load();\par
  142 \par
  143         if (success) \{\par
  144             Program->Console->SetPrompt(\par
  145                 Program->Preferences->GetPrompt());\par
  146             Program->Input->SetDigits(\par
  147                 Program->Preferences->GetDigits());\par
  148             Program->Output->SetDigits(\par
  149                 Program->Preferences->GetDigits());\par
  150             return(HELPPREFLOAD);\par
  151         \} else \{\par
  152             return(HELPPREFNOLO);\par
  153         \}\par
  154     \}\par
  155 \par
  156     return Program->Preferences->GetDescription();\par
  157 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPrefsStatement_ac53922eb842ba389957300fef95cd98f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v argument\:PrefsStatement}
{\xe \v PrefsStatement\:argument}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Symbol} PrefsStatement::argument{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUX}
{\bkmkend AAAAAAACUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 126 of file statements.h.}\par
{
Referenced by Execute(), and PrefsStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Program Class Reference\par \pard\plain 
{\tc\tcl2 \v Program}
{\xe \v Program}
{\bkmkstart AAAAAAACUY}
{\bkmkend AAAAAAACUY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Master control class. }}\par
{
{\f2 #include <program.h>}}\par
Inheritance diagram for Program:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Program:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Program} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Program} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Initialize} (int argc, char **argv)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Run} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Exit} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b NewPositionalInput} (short unsigned int base, short unsigned int digits)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b NewPositionalOutput} (short unsigned int base, short unsigned int digits)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetLastResult} ({\b Number} *number)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetPrompt} (const char *text)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Number} * {\b GetLastResult} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Language} * {\b Language}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ConsoleBase} * {\b Console}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PreferencesBase} * {\b Preferences}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FilesystemBase} * {\b Filesystem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NumeralSystem} * {\b Input}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NumeralSystem} * {\b Output}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b VariableList} * {\b Variables}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FunctionList} * {\b Functions}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GraphList} * {\b Graphs}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Number} * {\b ins}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Master control class. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This control class handles all processes and data in the entire program. It usually only exist as a single instance. \par
}{
Definition at line 56 of file program.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Program\:Program}
{\xe \v Program\:Program}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Program::Program ()}}
\par
{\bkmkstart AAAAAAACUZ}
{\bkmkend AAAAAAACUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file program.cpp.}\par
{
References CreateFilesystem(), CreateLanguage(), CreatePreferences(), DecimalSystem::DecimalSystem(), Filesystem, FunctionList::FunctionList(), Functions, PreferencesBase::GetDigits(), Language::GetFractionPoint(), GraphList::GraphList(), Graphs, Input, ins, Output, Preferences, RealNumber::RealNumber(), VariableList::VariableList(), and Variables.}\par
{
Referenced by StandardProgram::StandardProgram().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    36 \{\par
   37     Variables = new VariableList();\par
   38     Functions = new FunctionList();\par
   39     Graphs = new GraphList();\par
   40     ins = new RealNumber();\par
   41     Language = CreateLanguage();\par
   42     Filesystem = CreateFilesystem();\par
   43     Preferences = CreatePreferences();\par
   44     Input = new DecimalSystem(Preferences->GetDigits(), Language->GetFractionPoint());\par
   45     Output = new DecimalSystem(Preferences->GetDigits(), Language->GetFractionPoint());\par
   46 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_aaefaa0df08f3484476fc4d61e97acbdc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_aaefaa0df08f3484476fc4d61e97acbdc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~Program\:Program}
{\xe \v Program\:~Program}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Program::~Program (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVA}
{\bkmkend AAAAAAACVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file program.cpp.}\par
{
References Filesystem, Functions, Graphs, Input, ins, PreferencesBase::Keep(), Output, Preferences, and Variables.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    49 \{\par
   50     delete Variables;\par
   51     delete Functions;\par
   52     delete Graphs;\par
   53     delete Filesystem;\par
   54     delete Output;\par
   55     delete Input;\par
   56     delete Language;\par
   57     delete ins;\par
   58 \par
   59     Preferences->Keep();\par
   60     delete Preferences;\par
   61 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_a986aef1c50e1d338a3315a47ba6df549_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Exit\:Program}
{\xe \v Program\:Exit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Program::Exit (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b TestProgram} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AmigaProgram} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNA \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b StandardProgram} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by ExitStatement::Execute().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_adf53af02e6c4719ec0f019f0d305f80e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetLastResult\:Program}
{\xe \v Program\:GetLastResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * Program::GetLastResult ()}}
\par
{\bkmkstart AAAAAAACVD}
{\bkmkend AAAAAAACVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file program.cpp.}\par
{
References ins.}\par
{
Referenced by InsVariableNode::Evaluate().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    98 \{\par
   99     return ins;\par
  100 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_a17fa68f9eb4bb5d0cd72b26dc6a381f5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Initialize\:Program}
{\xe \v Program\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Program::Initialize (int  {\i argc}, char **  {\i argv}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b TestProgram} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AmigaProgram} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNC \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b StandardProgram} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by main().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_a6c8e48e064937d9c71168ed3a15ccf13_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v NewPositionalInput\:Program}
{\xe \v Program\:NewPositionalInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Program::NewPositionalInput (short unsigned int  {\i base}, short unsigned int  {\i digits})}}
\par
{\bkmkstart AAAAAAACVG}
{\bkmkend AAAAAAACVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file program.cpp.}\par
{
References DecimalSystem::DecimalSystem(), Language::GetFractionPoint(), Input, and PositionalNumeralSystem::PositionalNumeralSystem().}\par
{
Referenced by InputStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    64 \{\par
   65     delete Input;\par
   66 \par
   67     char fractionpoint = Language->GetFractionPoint();\par
   68 \par
   69     if (base == 10) \{\par
   70         Input = new DecimalSystem(digits, fractionpoint);\par
   71     \} else \{\par
   72         Input = new PositionalNumeralSystem(base, digits, fractionpoint);\par
   73     \}\par
   74 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_aef8e1c957776e550081cb2c47a11d64b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_aef8e1c957776e550081cb2c47a11d64b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v NewPositionalOutput\:Program}
{\xe \v Program\:NewPositionalOutput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Program::NewPositionalOutput (short unsigned int  {\i base}, short unsigned int  {\i digits})}}
\par
{\bkmkstart AAAAAAACVH}
{\bkmkend AAAAAAACVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file program.cpp.}\par
{
References DecimalSystem::DecimalSystem(), Language::GetFractionPoint(), Output, and PositionalNumeralSystem::PositionalNumeralSystem().}\par
{
Referenced by OutputStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    77 \{\par
   78     delete Output;\par
   79 \par
   80     char fractionpoint = Language->GetFractionPoint();\par
   81 \par
   82     if (base == 10) \{\par
   83         Output = new DecimalSystem(digits, fractionpoint);\par
   84     \} else \{\par
   85         Output = new PositionalNumeralSystem(base, digits, fractionpoint);\par
   86     \}\par
   87 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_a38a8a4a116b01a1bce417488ee235ee7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_a38a8a4a116b01a1bce417488ee235ee7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Run\:Program}
{\xe \v Program\:Run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Program::Run (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b TestProgram} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AmigaProgram} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNE \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b StandardProgram} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by main().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_a466c115e35933f7fb3a3775bc8f20ac4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetLastResult\:Program}
{\xe \v Program\:SetLastResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Program::SetLastResult ({\b Number} *  {\i number})}}
\par
{\bkmkstart AAAAAAACVK}
{\bkmkend AAAAAAACVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 102 of file program.cpp.}\par
{
References Number::Clone(), and ins.}\par
{
Referenced by EvalStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   103 \{\par
  104     delete ins;\par
  105     ins = number->Clone();\par
  106 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_ad54464237ceca1f54a46c2223cfbcda0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_ad54464237ceca1f54a46c2223cfbcda0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetPrompt\:Program}
{\xe \v Program\:SetPrompt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Program::SetPrompt (const char *  {\i text})}}
\par
{\bkmkstart AAAAAAACVL}
{\bkmkend AAAAAAACVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 89 of file program.cpp.}\par
{
References Console, Preferences, PreferencesBase::SetPrompt(), and ConsoleBase::SetPrompt().}\par
{
Referenced by PromptStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    90 \{\par
   91     if (Console != NOMEM) \{\par
   92         Console->SetPrompt(text);\par
   93     \}\par
   94     Preferences->SetPrompt(text);\par
   95 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_a517c5f08c0c0dd7f79de6fbf0e62aac6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classProgram_a517c5f08c0c0dd7f79de6fbf0e62aac6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v Console\:Program}
{\xe \v Program\:Console}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b ConsoleBase}* Program::Console}}
\par
{\bkmkstart AAAAAAACVM}
{\bkmkend AAAAAAACVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file program.h.}\par
{
Referenced by ClearStatement::Execute(), PrefsStatement::Execute(), StandardProgram::Exit(), StandardProgram::Initialize(), StandardProgram::Run(), SetPrompt(), StandardProgram::StandardProgram(), and StandardProgram::~StandardProgram().}\par
}
{\xe \v Filesystem\:Program}
{\xe \v Program\:Filesystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b FilesystemBase}* Program::Filesystem}}
\par
{\bkmkstart AAAAAAACVN}
{\bkmkend AAAAAAACVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file program.h.}\par
{
Referenced by ShowStatement::Execute(), ListStatement::Execute(), LoadStatement::Execute(), SaveStatement::Execute(), ExecuteStatement::Execute(), Program(), and ~Program().}\par
}
{\xe \v Functions\:Program}
{\xe \v Program\:Functions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b FunctionList}* Program::Functions}}
\par
{\bkmkstart AAAAAAACVO}
{\bkmkend AAAAAAACVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file program.h.}\par
{
Referenced by ListFunctionsStatement::Execute(), DeleteStatement::Execute(), SaveStatement::Execute(), PlotStatement::Execute(), DrawStatement::Execute(), Parser::ParseFunctionDef(), Parser::ParseIdent(), Program(), and ~Program().}\par
}
{\xe \v Graphs\:Program}
{\xe \v Program\:Graphs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b GraphList}* Program::Graphs}}
\par
{\bkmkstart AAAAAAACVP}
{\bkmkend AAAAAAACVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file program.h.}\par
{
Referenced by DrawStatement::Execute(), Program(), and ~Program().}\par
}
{\xe \v Input\:Program}
{\xe \v Program\:Input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b NumeralSystem}* Program::Input}}
\par
{\bkmkstart AAAAAAACVQ}
{\bkmkend AAAAAAACVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file program.h.}\par
{
Referenced by PrefsStatement::Execute(), InputStatement::Execute(), DigitsStatement::Execute(), Lexer::GetDigitValue(), NumericValueNode::GetNodeText(), NewPositionalInput(), Parser::ParseNumber(), Program(), and ~Program().}\par
}
{\xe \v ins\:Program}
{\xe \v Program\:ins}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Number}* Program::ins{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACVR}
{\bkmkend AAAAAAACVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file program.h.}\par
{
Referenced by GetLastResult(), Program(), SetLastResult(), and ~Program().}\par
}
{\xe \v Language\:Program}
{\xe \v Program\:Language}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b Language}* Program::Language}}
\par
{\bkmkstart AAAAAAACVS}
{\bkmkend AAAAAAACVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file program.h.}\par
}
{\xe \v Output\:Program}
{\xe \v Program\:Output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b NumeralSystem}* Program::Output}}
\par
{\bkmkstart AAAAAAACVT}
{\bkmkend AAAAAAACVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file program.h.}\par
{
Referenced by PrefsStatement::Execute(), EvalStatement::Execute(), OutputStatement::Execute(), DigitsStatement::Execute(), VariableList::ListContent(), NewPositionalOutput(), Program(), and ~Program().}\par
}
{\xe \v Preferences\:Program}
{\xe \v Program\:Preferences}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b PreferencesBase}* Program::Preferences}}
\par
{\bkmkstart AAAAAAACVU}
{\bkmkend AAAAAAACVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file program.h.}\par
{
Referenced by PrefsStatement::Execute(), DigitsStatement::Execute(), StandardProgram::Initialize(), Program(), StandardProgram::Run(), SetPrompt(), and ~Program().}\par
}
{\xe \v Variables\:Program}
{\xe \v Program\:Variables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b VariableList}* Program::Variables}}
\par
{\bkmkstart AAAAAAACVV}
{\bkmkend AAAAAAACVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file program.h.}\par
{
Referenced by ListVariablesStatement::Execute(), DeleteStatement::Execute(), SaveStatement::Execute(), Parser::ParseFunctionDef(), Parser::ParseIdent(), Program(), and ~Program().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b program.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b program.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PromptStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v PromptStatement}
{\xe \v PromptStatement}
{\bkmkstart AAAAAAACVW}
{\bkmkend AAAAAAACVW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set prompt string. }}\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for PromptStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPromptStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for PromptStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPromptStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PromptStatement} (char *{\b prompt})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~PromptStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b prompt}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set prompt string. \par
}{
Definition at line 105 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PromptStatement\:PromptStatement}
{\xe \v PromptStatement\:PromptStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PromptStatement::PromptStatement (char *  {\i prompt})}}
\par
{\bkmkstart AAAAAAACVX}
{\bkmkend AAAAAAACVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file statements.cpp.}\par
{
References AllocAndCopy(), and prompt.}\par
{
Referenced by Parser::ParsePromptStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    98 \{\par
   99     AllocAndCopy(&this->prompt,prompt);\par
  100 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPromptStatement_a5a84d6b630d6eec8807ddff3d3b07894_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPromptStatement_a5a84d6b630d6eec8807ddff3d3b07894_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~PromptStatement\:PromptStatement}
{\xe \v PromptStatement\:~PromptStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PromptStatement::~PromptStatement ()}}
\par
{\bkmkstart AAAAAAACVY}
{\bkmkend AAAAAAACVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 102 of file statements.cpp.}\par
{
References prompt.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   103 \{\par
  104     delete prompt;\par
  105 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:PromptStatement}
{\xe \v PromptStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * PromptStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVZ}
{\bkmkend AAAAAAACVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 107 of file statements.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::CharBuffer(), CharBuffer::ClearAndCopy(), CharBuffer::GetString(), prompt, CharBuffer::RemoveTrailing(), and Program::SetPrompt().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   108 \{\par
  109     CharBuffer *buf = new CharBuffer();\par
  110     buf->ClearAndCopy(prompt);\par
  111     while(buf->RemoveTrailing(' '));\par
  112     buf->Append(' ');\par
  113     Program->SetPrompt(buf->GetString());\par
  114     delete buf;\par
  115     return (char*)EMPTYSTRING;\par
  116 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPromptStatement_ad315c8cc58132641e9b8a62902566318_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v prompt\:PromptStatement}
{\xe \v PromptStatement\:prompt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* PromptStatement::prompt{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACWA}
{\bkmkend AAAAAAACWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 112 of file statements.h.}\par
{
Referenced by Execute(), PromptStatement(), and ~PromptStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RealNumber Struct Reference\par \pard\plain 
{\tc\tcl2 \v RealNumber}
{\xe \v RealNumber}
{\bkmkstart AAAAAAACWB}
{\bkmkend AAAAAAACWB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represent a real number with 15 siginificant digits. }}\par
{
{\f2 #include <real.h>}}\par
Inheritance diagram for RealNumber:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for RealNumber:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RealNumber} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RealNumber} (double {\b x})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RealNumber} (signed int i)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RealNumber} (unsigned int i)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~RealNumber} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b IsNaN} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b IsFinite} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Clone} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetIntegerValue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetRealValue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetRealValue} (double value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b PureComplexValue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetDefaultPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Unary} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Add} ({\b Number} *other)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Sub} ({\b Number} *other)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Mul} ({\b Number} *other)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Div} ({\b Number} *other)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Raise} ({\b Number} *exponent)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expontation function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Signum} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical sign function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Trunc} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical trunc function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Round} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical round function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Floor} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical floor function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Ceiling} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical ceiling function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Absolute} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Absolute value of number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b SquareRoot} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Square root function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b CubeRoot} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cube root function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Reciprocal} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Log} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Natural logarithm function (base e). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Log2} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary logarithm function (base 2). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Log10} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base 10 logarithm function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Sine} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric sine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Cosine} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric cosine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Tangent} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric tangent function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Cosecant} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric cosecant function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Secant} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric secant function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Cotangent} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric cotangent function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b ArcSine} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric sine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b ArcCosine} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric cosine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b ArcTangent} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric tangent function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b ArcCosecant} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric cosecant function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b ArcSecant} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric secant function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b ArcCotangent} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric cotangent function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypSine} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic sine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypCosine} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cosine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypTangent} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic tangent function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypCosecant} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cosecant function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypSecant} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic secant function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypCotangent} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cotangent function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypArcSine} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic sine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypArcCosine} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypArcTangent} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic tangent function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypArcCosecant} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosecant function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypArcSecant} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic secant function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b HypArcCotangent} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cotangent function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ComplexNumber}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represent a real number with 15 siginificant digits. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculations are done using 64 bit IEEE 754 arithmetics. \par
}{
Definition at line 44 of file real.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v RealNumber\:RealNumber}
{\xe \v RealNumber\:RealNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RealNumber::RealNumber ()}}
\par
{\bkmkstart AAAAAAACWC}
{\bkmkend AAAAAAACWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file real.cpp.}\par
{
References nsysreal, Number::Number(), and x.}\par
{
Referenced by PlotStatement::Execute(), Grid::Grid(), NumericValueNode::NumericValueNode(), PositionalNumeralSystem::Parse(), and Program::Program().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    33                        :\par
   34     Number(nsysreal) \{\par
   35     x = 0;\par
   36 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_aa61264f519c95ec9b63ab94c352bcc67_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_aa61264f519c95ec9b63ab94c352bcc67_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v RealNumber\:RealNumber}
{\xe \v RealNumber\:RealNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RealNumber::RealNumber (double  {\i x})}}
\par
{\bkmkstart AAAAAAACWD}
{\bkmkend AAAAAAACWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file real.cpp.}\par
{
References nsysreal, Number::Number(), and x.}\par
{
Referenced by ComplexNumber::Absolute(), Absolute(), Add(), ArcCosecant(), ArcCosine(), ArcCotangent(), ArcSecant(), ArcSine(), ArcTangent(), Ceiling(), Clone(), Cosecant(), Cosine(), Cotangent(), CubeRoot(), Div(), EulersNumberNode::EulersNumberNode(), Floor(), PositionalNumeralSystem::GetName(), HypArcCosecant(), HypArcCosine(), HypArcCotangent(), HypArcSecant(), HypArcSine(), HypArcTangent(), HypCosecant(), HypCosine(), HypCotangent(), HypSecant(), HypSine(), HypTangent(), Log(), Log10(), Log2(), Mul(), PositionalNumeralSystem::Parse(), PiNode::PiNode(), Raise(), Reciprocal(), Round(), Secant(), ComplexNumber::Signum(), Signum(), Sine(), SquareRoot(), Sub(), Tangent(), Trunc(), and Unary().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    38                                :\par
   39     Number(nsysreal) \{\par
   40     this->x = x;\par
   41 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a65924261adb775498f3b1b0f41f89091_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a65924261adb775498f3b1b0f41f89091_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v RealNumber\:RealNumber}
{\xe \v RealNumber\:RealNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RealNumber::RealNumber (signed int  {\i i})}}
\par
{\bkmkstart AAAAAAACWE}
{\bkmkend AAAAAAACWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file real.cpp.}\par
{
References nsysreal, Number::Number(), and x.}\par
{
Referenced by MemoryStatement::Execute(), and PreferencesBase::GetDescription().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    43                                    :\par
   44     Number(nsysreal) \{\par
   45     x = i * 1.0;\par
   46 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_ab4c47ea1155b9ee8b4a2794e7836f892_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_ab4c47ea1155b9ee8b4a2794e7836f892_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v RealNumber\:RealNumber}
{\xe \v RealNumber\:RealNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RealNumber::RealNumber (unsigned int  {\i i})}}
\par
{\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file real.cpp.}\par
{
References nsysreal, Number::Number(), and x.}\par
{
Referenced by DigitsStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48                                      :\par
   49     Number(nsysreal) \{\par
   50     x = i * 1.0;\par
   51 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a93eaa240f780acbe5e8e0eedb52483cc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a93eaa240f780acbe5e8e0eedb52483cc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~RealNumber\:RealNumber}
{\xe \v RealNumber\:~RealNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RealNumber::~RealNumber ()}}
\par
{\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file real.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    54 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Absolute\:RealNumber}
{\xe \v RealNumber\:Absolute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Absolute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNP}
{\bkmkend AAAAAAACNP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Absolute value of number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation in {\b fabs(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 224 of file real.cpp.}\par
{
References RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   225 \{\par
  226     return new RealNumber(fabs(x));\par
  227 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_aad63b9d308870c33e3a6eaefb7ceeb8f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Add\:RealNumber}
{\xe \v RealNumber\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Add ({\b Number} *  {\i other}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNQ}
{\bkmkend AAAAAAACNQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 106 of file real.cpp.}\par
{
References Number::Add(), nsysreal, RealNumber(), Number::system, and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   107 \{\par
  108     if (other->system == nsysreal) \{\par
  109         RealNumber *a = (RealNumber*)other;\par
  110         return new RealNumber(x + a->x);\par
  111     \} else \{\par
  112         return other->Add(this);\par
  113     \}\par
  114 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_aca23ac8d11fe2c35ea05bfc10ee14ebe_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcCosecant\:RealNumber}
{\xe \v RealNumber\:ArcCosecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::ArcCosecant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNR}
{\bkmkend AAAAAAACNR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric cosecant function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of inverse trigonometric sine in {\b asin(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 467 of file real.cpp.}\par
{
References asin(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   468 \{\par
  469     return new RealNumber(asin(1.0/x));\par
  470 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a852bde63b26d1281396faf8ac0ec9942_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcCosine\:RealNumber}
{\xe \v RealNumber\:ArcCosine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::ArcCosine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric cosine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of inverse trigonometric cosine in {\b acos(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 417 of file real.cpp.}\par
{
References acos(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   418 \{\par
  419     return new RealNumber(acos(x));\par
  420 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a6e03b5a208301e30e0e26099ae5787e6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcCotangent\:RealNumber}
{\xe \v RealNumber\:ArcCotangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::ArcCotangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric cotangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of inverse trigonometric tangent in {\b atan(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 447 of file real.cpp.}\par
{
References atan(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   448 \{\par
  449     return new RealNumber(atan(1.0/x));\par
  450 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_af805be2ef7c041b677160859da753893_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcSecant\:RealNumber}
{\xe \v RealNumber\:ArcSecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::ArcSecant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric secant function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of inverse trigonometric cosine in {\b acos(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 427 of file real.cpp.}\par
{
References acos(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   428 \{\par
  429     return new RealNumber(acos(1.0/x));\par
  430 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a9720848058718946a9215b66a69ea05c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcSine\:RealNumber}
{\xe \v RealNumber\:ArcSine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::ArcSine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric sine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of inverse trigonometric sine in {\b asin(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 457 of file real.cpp.}\par
{
References asin(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   458 \{\par
  459     return new RealNumber(asin(x));\par
  460 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_aff1b5b8d942f4e160dc0720e67c3765a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ArcTangent\:RealNumber}
{\xe \v RealNumber\:ArcTangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::ArcTangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric tangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of inverse trigonometric tangent in {\b atan(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 437 of file real.cpp.}\par
{
References atan(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   438 \{\par
  439     return new RealNumber(atan(x));\par
  440 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a3e1c71bcd7ec27804247d5efa538b877_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Ceiling\:RealNumber}
{\xe \v RealNumber\:Ceiling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Ceiling (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical ceiling function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation in {\b ceil(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 214 of file real.cpp.}\par
{
References RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   215 \{\par
  216     return new RealNumber(ceil(x));\par
  217 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_ad3d56323d395a89928c66c0ed4d087f8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Clone\:RealNumber}
{\xe \v RealNumber\:Clone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Clone (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 56 of file real.cpp.}\par
{
References RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    57 \{\par
   58     return new RealNumber(x);\par
   59 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a8b089754dcdf9aab37ca9451ae918a9f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Cosecant\:RealNumber}
{\xe \v RealNumber\:Cosecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Cosecant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric cosecant function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of sine function in {\b sin(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 407 of file real.cpp.}\par
{
References RealNumber(), sin(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   408 \{\par
  409     return new RealNumber(1.0/sin(x));\par
  410 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_af9b0b74fbe21e7c360d9ca13f2853c3c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Cosine\:RealNumber}
{\xe \v RealNumber\:Cosine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Cosine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric cosine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of cosine function in {\b cos(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 297 of file real.cpp.}\par
{
References cos(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   298 \{\par
  299     return new RealNumber(cos(x));\par
  300 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a29ab57ef9d5844b480574f06b83131d1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Cotangent\:RealNumber}
{\xe \v RealNumber\:Cotangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Cotangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric cotangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of tangent function in {\b tan(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 327 of file real.cpp.}\par
{
References RealNumber(), tan(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   328 \{\par
  329     return new RealNumber(1.0/tan(x));\par
  330 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a326c66036f26f4562277692d179e19a3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CubeRoot\:RealNumber}
{\xe \v RealNumber\:CubeRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::CubeRoot (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cube root function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of cube root in {\b cbrt(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 251 of file real.cpp.}\par
{
References RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   252 \{\par
  253     return new RealNumber(cbrt(x));\par
  254 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_af20c2032f5c22719a6a8358963feda9a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Div\:RealNumber}
{\xe \v RealNumber\:Div}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Div ({\b Number} *  {\i other}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 139 of file real.cpp.}\par
{
References Mul(), nsysreal, RealNumber(), Number::Reciprocal(), Number::system, and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   140 \{\par
  141     if (other->system == nsysreal) \{\par
  142         RealNumber *a = (RealNumber*)other;\par
  143         return new RealNumber(x / a->x);\par
  144     \} else \{\par
  145         Number *y = other->Reciprocal();\par
  146         Number *q = Mul(y);\par
  147         delete y;\par
  148         return q;\par
  149     \}\par
  150 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a3c9c011cae6212d4b233f4933cd81bd6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Floor\:RealNumber}
{\xe \v RealNumber\:Floor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Floor (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical floor function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation in {\b floor(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 204 of file real.cpp.}\par
{
References RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   205 \{\par
  206     return new RealNumber(floor(x));\par
  207 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a2b6019c5638bac355924e4b26d60e82a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetDefaultPrecedence\:RealNumber}
{\xe \v RealNumber\:GetDefaultPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RealNumber::GetDefaultPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 86 of file real.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    87 \{\par
   88     return 0;\par
   89 \}\par
}
}
{\xe \v GetIntegerValue\:RealNumber}
{\xe \v RealNumber\:GetIntegerValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RealNumber::GetIntegerValue (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 61 of file real.cpp.}\par
{
References x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    62 \{\par
   63     return (int) x;\par
   64 \}\par
}
}
{\xe \v GetPrecedence\:RealNumber}
{\xe \v RealNumber\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RealNumber::GetPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 81 of file real.cpp.}\par
{
References x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    82 \{\par
   83     return (x < 0.0) ? -1 : 0;\par
   84 \}\par
}
}
{\xe \v GetRealValue\:RealNumber}
{\xe \v RealNumber\:GetRealValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double RealNumber::GetRealValue (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 66 of file real.cpp.}\par
{
References x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    67 \{\par
   68     return x;\par
   69 \}\par
}
}
{\xe \v HypArcCosecant\:RealNumber}
{\xe \v RealNumber\:HypArcCosecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::HypArcCosecant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosecant function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of inverse hyperbolic sine in {\b asinh(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 507 of file real.cpp.}\par
{
References asinh(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   508 \{\par
  509     return new RealNumber(asinh(1.0/x));\par
  510 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a9012f76e46de683e6c826bcdf719ca2f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcCosine\:RealNumber}
{\xe \v RealNumber\:HypArcCosine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::HypArcCosine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of inverse hyperbolic cosine in {\b acosh(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 477 of file real.cpp.}\par
{
References acosh(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   478 \{\par
  479     return new RealNumber(acosh(x));\par
  480 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a180b1d26d19c53070014c9540ca058a9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcCotangent\:RealNumber}
{\xe \v RealNumber\:HypArcCotangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::HypArcCotangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cotangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation hyperbolic tangent in {\b atanh(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 527 of file real.cpp.}\par
{
References atanh(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   528 \{\par
  529     return new RealNumber(atanh(1.0/x));\par
  530 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_ab83d64a095c365070fe40273b0bb173c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcSecant\:RealNumber}
{\xe \v RealNumber\:HypArcSecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::HypArcSecant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic secant function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of inverse hyperbolic cosine in {\b acosh(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 487 of file real.cpp.}\par
{
References acosh(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   488 \{\par
  489     return new RealNumber(acosh(1.0/x));\par
  490 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a2c63d0e9efa401cb5ff4a459f339dfb5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcSine\:RealNumber}
{\xe \v RealNumber\:HypArcSine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::HypArcSine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic sine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of inverse hyperbolic sine in {\b asinh(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 497 of file real.cpp.}\par
{
References asinh(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   498 \{\par
  499     return new RealNumber(asinh(x));\par
  500 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a304a0afc690e5378aef03aa3d76425a2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypArcTangent\:RealNumber}
{\xe \v RealNumber\:HypArcTangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::HypArcTangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic tangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation hyperbolic tangent in {\b atanh(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 517 of file real.cpp.}\par
{
References atanh(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   518 \{\par
  519     return new RealNumber(atanh(x));\par
  520 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a62836390c7edc73ecea5c7455dd04afe_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypCosecant\:RealNumber}
{\xe \v RealNumber\:HypCosecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::HypCosecant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cosecant function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of hyperbolic sine function in {\b sinh(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 347 of file real.cpp.}\par
{
References RealNumber(), sinh(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   348 \{\par
  349     return new RealNumber(1.0/sinh(x));\par
  350 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a540b460d8e9c611b37ce00b2e32fc7f1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypCosine\:RealNumber}
{\xe \v RealNumber\:HypCosine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::HypCosine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cosine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of hyperbolic cosine function in {\b cosh(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 357 of file real.cpp.}\par
{
References cosh(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   358 \{\par
  359     return new RealNumber(cosh(x));\par
  360 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a722aa63e33b413ff59de90ed91c3f91d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypCotangent\:RealNumber}
{\xe \v RealNumber\:HypCotangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::HypCotangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cotangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of hyperbolic tangent function in {\b tanh(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 387 of file real.cpp.}\par
{
References RealNumber(), tanh(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   388 \{\par
  389     return new RealNumber(1.0/tanh(x));\par
  390 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a82ad5a573ac31bd03829ed0e39bde26d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypSecant\:RealNumber}
{\xe \v RealNumber\:HypSecant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::HypSecant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic secant function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of hyperbolic cosine function in {\b cosh(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 367 of file real.cpp.}\par
{
References cosh(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   368 \{\par
  369     return new RealNumber(1.0/cosh(x));\par
  370 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a9daeb349df78593a4747f417300cf68b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypSine\:RealNumber}
{\xe \v RealNumber\:HypSine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::HypSine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic sine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of hyperbolic sine function in {\b sinh(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 337 of file real.cpp.}\par
{
References RealNumber(), sinh(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   338 \{\par
  339     return new RealNumber(sinh(x));\par
  340 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a977265341f5496a6a44a0231bf8e2db5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v HypTangent\:RealNumber}
{\xe \v RealNumber\:HypTangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::HypTangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic tangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of hyperbolic tangent function in {\b tanh(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 377 of file real.cpp.}\par
{
References RealNumber(), tanh(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   378 \{\par
  379     return new RealNumber(tanh(x));\par
  380 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a867a59eb450583c6adf7d35206f18001_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v IsFinite\:RealNumber}
{\xe \v RealNumber\:IsFinite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RealNumber::IsFinite ()}}
\par
{\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file real.cpp.}\par
{
References finite(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    92 \{\par
   93     return finite(x);\par
   94 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a52cb76fb0b8f7a91a44172473a509656_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v IsNaN\:RealNumber}
{\xe \v RealNumber\:IsNaN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RealNumber::IsNaN ()}}
\par
{\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file real.cpp.}\par
{
References isnan(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    97 \{\par
   98     return isnan(x);\par
   99 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a250356e32a8c743cc2bc0baa73980ab4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Log\:RealNumber}
{\xe \v RealNumber\:Log}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Log (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Natural logarithm function (base e). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of natural logarithm in {\b log(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 277 of file real.cpp.}\par
{
References RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   278 \{\par
  279     return new RealNumber(log(x));\par
  280 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_aaec064f13111dac3cc8e7a33969873a1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Log10\:RealNumber}
{\xe \v RealNumber\:Log10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Log10 (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base 10 logarithm function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of base 10 logarithm in {\b log10(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 287 of file real.cpp.}\par
{
References log10(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   288 \{\par
  289     return new RealNumber(log10(x));\par
  290 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a75fa4835db911de6541e96895a02a59e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Log2\:RealNumber}
{\xe \v RealNumber\:Log2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Log2 (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary logarithm function (base 2). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of natural logarithm in {\b log(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 267 of file real.cpp.}\par
{
References RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   268 \{\par
  269     return new RealNumber(log(x)/log(2.0));\par
  270 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a8f0a5ce6092079e47d572b61a05f44f4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Mul\:RealNumber}
{\xe \v RealNumber\:Mul}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Mul ({\b Number} *  {\i other}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 129 of file real.cpp.}\par
{
References Number::Mul(), nsysreal, RealNumber(), Number::system, and x.}\par
{
Referenced by Div().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   130 \{\par
  131     if (other->system == nsysreal) \{\par
  132         RealNumber *a = (RealNumber*)other;\par
  133         return new RealNumber(x * a->x);\par
  134     \} else \{\par
  135         return other->Mul(this);\par
  136     \}\par
  137 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_af5491d836bb591e1291f4f9eee809902_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_af5491d836bb591e1291f4f9eee809902_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v PureComplexValue\:RealNumber}
{\xe \v RealNumber\:PureComplexValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} RealNumber::PureComplexValue (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 76 of file real.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    77 \{\par
   78     return false;\par
   79 \}\par
}
}
{\xe \v Raise\:RealNumber}
{\xe \v RealNumber\:Raise}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Raise ({\b Number} *  {\i exponent}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expontation function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation in {\b pow(double, double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 157 of file real.cpp.}\par
{
References ComplexNumber::ComplexNumber(), nsysreal, pow(), ComplexNumber::Raise(), RealNumber(), Number::system, and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   158 \{\par
  159     if (exponent->system == nsysreal) \{\par
  160         return new RealNumber(pow(x, ((RealNumber*)exponent)->x));\par
  161     \} else \{\par
  162         ComplexNumber *y = new ComplexNumber(x, 0.0);\par
  163         Number *q = y->Raise(exponent);\par
  164         delete y;\par
  165         return q;\par
  166     \}\par
  167 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_aaf9c066a4b9e9d845edefd40f614a517_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Reciprocal\:RealNumber}
{\xe \v RealNumber\:Reciprocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Reciprocal (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 257 of file real.cpp.}\par
{
References RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   258 \{\par
  259     return new RealNumber(1/x);\par
  260 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a0254d3b6e1e580f5e95950488c19632d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Round\:RealNumber}
{\xe \v RealNumber\:Round}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Round (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical round function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation in {\b round(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 194 of file real.cpp.}\par
{
References RealNumber(), round(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   195 \{\par
  196     return new RealNumber(round(x));\par
  197 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_ac8668b36e44ba33ba8fb986347d48bc0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Secant\:RealNumber}
{\xe \v RealNumber\:Secant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Secant (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric secant function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of cosine function in {\b cos(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 307 of file real.cpp.}\par
{
References cos(), RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   308 \{\par
  309     return new RealNumber(1.0/cos(x));\par
  310 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a9e350ff4550f86bc25b6526eb14a823a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetRealValue\:RealNumber}
{\xe \v RealNumber\:SetRealValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RealNumber::SetRealValue (double  {\i value})}}
\par
{\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file real.cpp.}\par
{
References x.}\par
{
Referenced by PlotStatement::Execute(), and Grid::FunctionValue().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    72 \{\par
   73     x = value;\par
   74 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a47b13da91334faba56ece7292f3a8566_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Signum\:RealNumber}
{\xe \v RealNumber\:Signum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Signum (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical sign function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation in {\b sgn(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 174 of file real.cpp.}\par
{
References RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   175 \{\par
  176     return new RealNumber(sgn(x));\par
  177 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a9c3f6b9bff23ed16f4fce328cd184bcd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Sine\:RealNumber}
{\xe \v RealNumber\:Sine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Sine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric sine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of sine function in {\b sin(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 397 of file real.cpp.}\par
{
References RealNumber(), sin(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   398 \{\par
  399     return new RealNumber(sin(x));\par
  400 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a7efbe5a6d43471c317d10c976e1120a5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SquareRoot\:RealNumber}
{\xe \v RealNumber\:SquareRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::SquareRoot (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Square root function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of square root in {\b sqrt(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 234 of file real.cpp.}\par
{
References ComplexNumber::ComplexNumber(), RealNumber(), sqrt(), Number::SquareRoot(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   235 \{\par
  236     if (x > 0.0) \{\par
  237         return new RealNumber(sqrt(x));\par
  238     \}\par
  239 \par
  240     Number *n = new ComplexNumber(x, 0);\par
  241     Number *r = n->SquareRoot();\par
  242     delete n;\par
  243     return r;\par
  244 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a721d2c6fb9b5f4a5a41de242909ef4da_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Sub\:RealNumber}
{\xe \v RealNumber\:Sub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Sub ({\b Number} *  {\i other}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 116 of file real.cpp.}\par
{
References Number::Add(), nsysreal, RealNumber(), Number::system, Number::Unary(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   117 \{\par
  118     if (other->system == nsysreal) \{\par
  119         RealNumber *a = (RealNumber*)other;\par
  120         return new RealNumber(x - a->x);\par
  121     \} else \{\par
  122         Number *y = other->Unary();\par
  123         Number *q = y->Add(this);\par
  124         delete y;\par
  125         return q;\par
  126     \}\par
  127 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a16eae9fed4e18d72e80d72b3b3f2ef89_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Tangent\:RealNumber}
{\xe \v RealNumber\:Tangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Tangent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric tangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation of tangent function in {\b tan(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 317 of file real.cpp.}\par
{
References RealNumber(), tan(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   318 \{\par
  319     return new RealNumber(tan(x));\par
  320 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a49a5b0cd18ee9763f89f2bc61f7d43ba_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Trunc\:RealNumber}
{\xe \v RealNumber\:Trunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Trunc (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical trunc function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See implementation in {\b trunc(double)} \par
}{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 184 of file real.cpp.}\par
{
References RealNumber(), trunc(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   185 \{\par
  186     return new RealNumber(trunc(x));\par
  187 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_aba1f2eea0099d4c1347cd97b2897c0d8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Unary\:RealNumber}
{\xe \v RealNumber\:Unary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RealNumber::Unary (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Number} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 101 of file real.cpp.}\par
{
References RealNumber(), and x.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   102 \{\par
  103     return new RealNumber(-x);\par
  104 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structRealNumber_a0370c55b92e3ec36270a894918ae53ca_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v ComplexNumber\:RealNumber}
{\xe \v RealNumber\:ComplexNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend struct {\b ComplexNumber}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 110 of file real.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v x\:RealNumber}
{\xe \v RealNumber\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double RealNumber::x{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 113 of file real.h.}\par
{
Referenced by Absolute(), ComplexNumber::Add(), Add(), ArcCosecant(), ArcCosine(), ArcCotangent(), ArcSecant(), ArcSine(), ArcTangent(), Ceiling(), Clone(), Cosecant(), Cosine(), Cotangent(), CubeRoot(), ComplexNumber::Div(), Div(), Floor(), GetIntegerValue(), GetPrecedence(), GetRealValue(), HypArcCosecant(), HypArcCosine(), HypArcCotangent(), HypArcSecant(), HypArcSine(), HypArcTangent(), HypCosecant(), HypCosine(), HypCotangent(), HypSecant(), HypSine(), HypTangent(), IsFinite(), IsNaN(), Log(), Log10(), Log2(), ComplexNumber::Mul(), Mul(), ComplexNumber::Raise(), Raise(), RealNumber(), Reciprocal(), Round(), Secant(), SetRealValue(), Signum(), Sine(), SquareRoot(), ComplexNumber::Sub(), Sub(), Tangent(), Trunc(), and Unary().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b real.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/lib/{\b real.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RoundNode Class Reference\par \pard\plain 
{\tc\tcl2 \v RoundNode}
{\xe \v RoundNode}
{\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A rounding function in a syntax tree. }}\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for RoundNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classRoundNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for RoundNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classRoundNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RoundNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A rounding function in a syntax tree. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Round to nearest integer. See {\b Number} for implementation.\par
More info on the rounding function is available at Wikipedia: {\f2 http://en.wikipedia.org/wiki/Rounding} \par
}{
Definition at line 220 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v RoundNode\:RoundNode}
{\xe \v RoundNode\:RoundNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RoundNode::RoundNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 537 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   537                                                :\par
  538     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classRoundNode_a4f9524cf769e2c45f2556dd7455eb852_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classRoundNode_a4f9524cf769e2c45f2556dd7455eb852_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:RoundNode}
{\xe \v RoundNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * RoundNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 540 of file functions.cpp.}\par
{
References RoundNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   541 \{\par
  542     return new RoundNode(expression);\par
  543 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classRoundNode_a4f767ae60f5ec52d1750a3f5a35be246_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:RoundNode}
{\xe \v RoundNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * RoundNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBN}
{\bkmkend AAAAAAACBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 545 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, ExpressionNode::result, and Number::Round().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   546 \{\par
  547     result = expression->Evaluate()->Round();\par
  548     return result;\par
  549 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classRoundNode_a128e5cfa1f3829cacb373f6740c7f193_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:RoundNode}
{\xe \v RoundNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * RoundNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCS}
{\bkmkend AAAAAAACCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 551 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   552 \{\par
  553     return (char*)"round";\par
  554 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SaveStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v SaveStatement}
{\xe \v SaveStatement}
{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for SaveStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSaveStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for SaveStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSaveStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SaveStatement} (const char *{\b file})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~SaveStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b file}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 282 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SaveStatement\:SaveStatement}
{\xe \v SaveStatement\:SaveStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SaveStatement::SaveStatement (const char *  {\i file})}}
\par
{\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 678 of file statements.cpp.}\par
{
References AllocAndCopy(), and file.}\par
{
Referenced by Parser::ParseFileStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   679 \{\par
  680     AllocAndCopy(&this->file, file);\par
  681 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSaveStatement_aa4912801d91c2e86737de79aff57471a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSaveStatement_aa4912801d91c2e86737de79aff57471a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~SaveStatement\:SaveStatement}
{\xe \v SaveStatement\:~SaveStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SaveStatement::~SaveStatement ()}}
\par
{\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 683 of file statements.cpp.}\par
{
References file.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   684 \{\par
  685     delete [] file;\par
  686 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:SaveStatement}
{\xe \v SaveStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * SaveStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 688 of file statements.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::CharBuffer(), CharBuffer::Empty(), file, Program::Filesystem, Program::Functions, CharBuffer::GetString(), VariableList::ListDefinitions(), FunctionList::ListDefinitions(), FilesystemBase::SaveTextFile(), StrLen(), and Program::Variables.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   689 \{\par
  690     const char *vars = Program->Variables->ListDefinitions();\par
  691     const char *funcs = Program->Functions->ListDefinitions();\par
  692 \par
  693     if (vars == NOMEM && funcs == NOMEM) \{\par
  694         return (char*)HELPSAVENOTH;\par
  695     \}\par
  696 \par
  697     int len = 1;\par
  698     len += vars  != NOMEM ? StrLen(vars)  : 0;\par
  699     len += funcs != NOMEM ? StrLen(funcs) : 0;\par
  700 \par
  701     CharBuffer *text = new CharBuffer(len);\par
  702     text->Empty();\par
  703 \par
  704     if (vars != NOMEM) \{\par
  705         text->Append(vars);\par
  706     \}\par
  707     if (funcs != NOMEM) \{\par
  708         text->Append(funcs);\par
  709     \}\par
  710 \par
  711     bool success = Program->Filesystem->SaveTextFile(file, text->GetString());\par
  712     delete text;\par
  713 \par
  714     return (char*)(success ? HELPSAVESUCC : HELPSAVEFAIL);\par
  715 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSaveStatement_ae94aa8533f620634f97b2835cee1eaa2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v file\:SaveStatement}
{\xe \v SaveStatement\:file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* SaveStatement::file{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 289 of file statements.h.}\par
{
Referenced by Execute(), SaveStatement(), and ~SaveStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SecantNode Class Reference\par \pard\plain 
{\tc\tcl2 \v SecantNode}
{\xe \v SecantNode}
{\bkmkstart AAAAAAACWU}
{\bkmkend AAAAAAACWU}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for SecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSecantNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for SecantNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSecantNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SecantNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 382 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SecantNode\:SecantNode}
{\xe \v SecantNode\:SecantNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SecantNode::SecantNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACWV}
{\bkmkend AAAAAAACWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 820 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   820                                                  :\par
  821     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSecantNode_a78f1fa342c03aa179720103c514d0ee7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSecantNode_a78f1fa342c03aa179720103c514d0ee7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:SecantNode}
{\xe \v SecantNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * SecantNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACWW}
{\bkmkend AAAAAAACWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 823 of file functions.cpp.}\par
{
References SecantNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   824 \{\par
  825     return new SecantNode(expression);\par
  826 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSecantNode_a8878d4c01c876fe1b9741cced07ef86b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:SecantNode}
{\xe \v SecantNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * SecantNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBF}
{\bkmkend AAAAAAACBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 828 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, ExpressionNode::result, and Number::Secant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   829 \{\par
  830     result = expression->Evaluate()->Secant();\par
  831     return result;\par
  832 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSecantNode_a114c4b9606adcf184123e7d4a6a95056_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:SecantNode}
{\xe \v SecantNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * SecantNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCK}
{\bkmkend AAAAAAACCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 834 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   835 \{\par
  836     return (char*)"sec";\par
  837 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ShowStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v ShowStatement}
{\xe \v ShowStatement}
{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for ShowStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classShowStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ShowStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classShowStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ShowStatement} (const char *{\b file})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ShowStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b file}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 251 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ShowStatement\:ShowStatement}
{\xe \v ShowStatement\:ShowStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ShowStatement::ShowStatement (const char *  {\i file})}}
\par
{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 581 of file statements.cpp.}\par
{
References AllocAndCopy(), and file.}\par
{
Referenced by Parser::ParseFileStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   582 \{\par
  583     AllocAndCopy(&this->file, file);\par
  584 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classShowStatement_aab6fd0439344f35d8af36009d994bcb4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classShowStatement_aab6fd0439344f35d8af36009d994bcb4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~ShowStatement\:ShowStatement}
{\xe \v ShowStatement\:~ShowStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ShowStatement::~ShowStatement ()}}
\par
{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 586 of file statements.cpp.}\par
{
References file.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   587 \{\par
  588     delete [] file;\par
  589 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:ShowStatement}
{\xe \v ShowStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * ShowStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 591 of file statements.cpp.}\par
{
References file, Program::Filesystem, CharBuffer::GetString(), FilesystemBase::LoadTextFile(), and SyntaxNode::output.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   592 \{\par
  593     CharBuffer *text = Program->Filesystem->LoadTextFile(file);\par
  594     if (text == NOMEM)\par
  595     \{\par
  596         return (char*)(MSGNOFILE);\par
  597     \}\par
  598 \par
  599     delete output;\par
  600     output = text;\par
  601     return text->GetString();\par
  602 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classShowStatement_a8466ad7e0e61918cda0e399713abb6a8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v file\:ShowStatement}
{\xe \v ShowStatement\:file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* ShowStatement::file{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACXB}
{\bkmkend AAAAAAACXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 258 of file statements.h.}\par
{
Referenced by Execute(), ShowStatement(), and ~ShowStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SignumNode Class Reference\par \pard\plain 
{\tc\tcl2 \v SignumNode}
{\xe \v SignumNode}
{\bkmkstart AAAAAAACXC}
{\bkmkend AAAAAAACXC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A signum function in a syntax tree. }}\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for SignumNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSignumNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for SignumNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSignumNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SignumNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A signum function in a syntax tree. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extracts the sign of a real number. See {\b Number} for implementation.\par
More info on the signum function is available at Wikipedia: {\f2 http://en.wikipedia.org/wiki/Sign_function} \par
}{
Definition at line 197 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SignumNode\:SignumNode}
{\xe \v SignumNode\:SignumNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SignumNode::SignumNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 514 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   514                                                  :\par
  515     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSignumNode_ab32cce0dffab55958f04a0e1c90c70e5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSignumNode_ab32cce0dffab55958f04a0e1c90c70e5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:SignumNode}
{\xe \v SignumNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * SignumNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 517 of file functions.cpp.}\par
{
References SignumNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   518 \{\par
  519     return new SignumNode(expression);\par
  520 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSignumNode_a7cd36999a3e5fc9ed7466632388044f1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:SignumNode}
{\xe \v SignumNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * SignumNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 522 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, ExpressionNode::result, and Number::Signum().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   523 \{\par
  524     result = expression->Evaluate()->Signum();\par
  525     return result;\par
  526 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSignumNode_a4d36a858fda9c051ecddf975bc94a62e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:SignumNode}
{\xe \v SignumNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * SignumNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCT}
{\bkmkend AAAAAAACCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 528 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   529 \{\par
  530     return (char*)"sgn";\par
  531 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SilentStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v SilentStatement}
{\xe \v SilentStatement}
{\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mutes the output of another statement. }}\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for SilentStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSilentStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for SilentStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSilentStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SilentStatement} ({\b StatementNode} *{\b statement})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~SilentStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b GetNext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Attach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Detach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Replace} ({\b SyntaxNode} *n, {\b SyntaxNode} *x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StatementNode} * {\b statement}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mutes the output of another statement. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Statement node which encapsulate another statement and mutes the output when executing the inner statement. \par
}{
Definition at line 136 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SilentStatement\:SilentStatement}
{\xe \v SilentStatement\:SilentStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SilentStatement::SilentStatement ({\b StatementNode} *  {\i statement})}}
\par
{\bkmkstart AAAAAAACXG}
{\bkmkend AAAAAAACXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 198 of file statements.cpp.}\par
{
References statement.}\par
{
Referenced by Parser::ParseEvaluation().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   198                                                          :\par
  199     statement(statement) \{ \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSilentStatement_aba2d6f5ec935ec1ecf28bed3e1d01959_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~SilentStatement\:SilentStatement}
{\xe \v SilentStatement\:~SilentStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SilentStatement::~SilentStatement ()}}
\par
{\bkmkstart AAAAAAACXH}
{\bkmkend AAAAAAACXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 201 of file statements.cpp.}\par
{
References statement.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   202 \{\par
  203     if (statement != NOMEM) \{\par
  204         delete statement;\par
  205     \}\par
  206 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Attach\:SilentStatement}
{\xe \v SilentStatement\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SilentStatement::Attach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACXI}
{\bkmkend AAAAAAACXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 224 of file statements.cpp.}\par
{
References SyntaxNode::SetParent(), and statement.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   225 \{\par
  226     if (statement == NOMEM) \{\par
  227         statement = (StatementNode*)node;\par
  228         node->SetParent(this);\par
  229     \}\par
  230 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSilentStatement_aa8aa6ca07dca7f225b45610436b1d34b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Detach\:SilentStatement}
{\xe \v SilentStatement\:Detach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SilentStatement::Detach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACXJ}
{\bkmkend AAAAAAACXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 232 of file statements.cpp.}\par
{
References statement.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   233 \{\par
  234     if (statement == node) \{\par
  235         statement = NOMEM;\par
  236     \}\par
  237 \}\par
}
}
{\xe \v Execute\:SilentStatement}
{\xe \v SilentStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * SilentStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACXK}
{\bkmkend AAAAAAACXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 208 of file statements.cpp.}\par
{
References StatementNode::Execute(), and statement.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   209 \{\par
  210     statement->Execute();\par
  211     return (char*)EMPTYSTRING;\par
  212 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSilentStatement_a8fdf9e3c83dafa43d092282db0bd47b4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNext\:SilentStatement}
{\xe \v SilentStatement\:GetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * SilentStatement::GetNext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACXL}
{\bkmkend AAAAAAACXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 214 of file statements.cpp.}\par
{
References SyntaxNode::iterator, and statement.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   215 \{\par
  216     if (iterator == NOMEM) \{\par
  217         iterator = statement;\par
  218         return iterator;\par
  219     \}\par
  220 \par
  221     return NOMEM;\par
  222 \}\par
}
}
{\xe \v Replace\:SilentStatement}
{\xe \v SilentStatement\:Replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SilentStatement::Replace ({\b SyntaxNode} *  {\i n}, {\b SyntaxNode} *  {\i x}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACXM}
{\bkmkend AAAAAAACXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 239 of file statements.cpp.}\par
{
References statement.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   240 \{\par
  241     if (statement == n) \{\par
  242         delete statement;\par
  243         statement = (StatementNode*)x;\par
  244     \}\par
  245 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v statement\:SilentStatement}
{\xe \v SilentStatement\:statement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b StatementNode}* SilentStatement::statement{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACXN}
{\bkmkend AAAAAAACXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file statements.h.}\par
{
Referenced by Attach(), Detach(), Execute(), GetNext(), Replace(), SilentStatement(), and ~SilentStatement().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SineNode Class Reference\par \pard\plain 
{\tc\tcl2 \v SineNode}
{\xe \v SineNode}
{\bkmkstart AAAAAAACXO}
{\bkmkend AAAAAAACXO}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for SineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSineNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for SineNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSineNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SineNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 332 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SineNode\:SineNode}
{\xe \v SineNode\:SineNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SineNode::SineNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACXP}
{\bkmkend AAAAAAACXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 744 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   744                                              :\par
  745     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSineNode_ab53ea597377849c487fc4e63157d4f6d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSineNode_ab53ea597377849c487fc4e63157d4f6d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:SineNode}
{\xe \v SineNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * SineNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACXQ}
{\bkmkend AAAAAAACXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 747 of file functions.cpp.}\par
{
References SineNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   748 \{\par
  749     return new SineNode(expression);\par
  750 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSineNode_ae1c55d727e6560dfc00a7c66d818c47a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:SineNode}
{\xe \v SineNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * SineNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBH}
{\bkmkend AAAAAAACBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 752 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, ExpressionNode::result, and Number::Sine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   753 \{\par
  754     result = expression->Evaluate()->Sine();\par
  755     return result;\par
  756 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSineNode_a9b1ee27ee5d63e44ce09602b91f633cc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:SineNode}
{\xe \v SineNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * SineNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCM}
{\bkmkend AAAAAAACCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 758 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   759 \{\par
  760     return (char*)"sin";\par
  761 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SquareRootNode Class Reference\par \pard\plain 
{\tc\tcl2 \v SquareRootNode}
{\xe \v SquareRootNode}
{\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for SquareRootNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSquareRootNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for SquareRootNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSquareRootNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SquareRootNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 274 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SquareRootNode\:SquareRootNode}
{\xe \v SquareRootNode\:SquareRootNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SquareRootNode::SquareRootNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAACXS}
{\bkmkend AAAAAAACXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 629 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   629                                                          :\par
  630     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSquareRootNode_a142f55df3e155f5611cf9c0c42d9312f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSquareRootNode_a142f55df3e155f5611cf9c0c42d9312f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:SquareRootNode}
{\xe \v SquareRootNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * SquareRootNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACXT}
{\bkmkend AAAAAAACXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 632 of file functions.cpp.}\par
{
References SquareRootNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   633 \{\par
  634     return new SquareRootNode(expression);\par
  635 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSquareRootNode_ad4e2da219f372ffdaddb250c9ca5d47e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:SquareRootNode}
{\xe \v SquareRootNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * SquareRootNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBK}
{\bkmkend AAAAAAACBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 637 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, ExpressionNode::result, and Number::SquareRoot().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   638 \{\par
  639     result = expression->Evaluate()->SquareRoot();\par
  640     return result;\par
  641 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSquareRootNode_a2c520265ea3c5174f5b52bba3c4e9050_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:SquareRootNode}
{\xe \v SquareRootNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * SquareRootNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCP}
{\bkmkend AAAAAAACCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 643 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   644 \{\par
  645     return (char*)"sqrt";\par
  646 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StandardConsole Class Reference\par \pard\plain 
{\tc\tcl2 \v StandardConsole}
{\xe \v StandardConsole}
{\bkmkstart AAAAAAACXU}
{\bkmkend AAAAAAACXU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates the IO of a console using Standard C and termios. }}\par
{
{\f2 #include <console_stdc.h>}}\par
Inheritance diagram for StandardConsole:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardConsole__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for StandardConsole:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardConsole__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StandardConsole} (const char *{\b prompt})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~StandardConsole} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b GetStackSize} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Run} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Exit} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b SetPrompt} (const char *string)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b WriteString} (const char *string)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReadLine} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Write} (const char *string, unsigned int length)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AnsiConoleEngine} * {\b proc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b line}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b exit}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates the IO of a console using Standard C and termios. \par
}{
Definition at line 44 of file console_stdc.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v StandardConsole\:StandardConsole}
{\xe \v StandardConsole\:StandardConsole}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
StandardConsole::StandardConsole (const char *  {\i prompt})}}
\par
{\bkmkstart AAAAAAACXV}
{\bkmkend AAAAAAACXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file console_stdc.cpp.}\par
{
References AnsiConoleEngine::AnsiConoleEngine(), ConsoleBase::ConsoleBase(), and proc.}\par
{
Referenced by StandardProgram::Initialize().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    33                                                    :\par
   34     ConsoleBase(prompt)\par
   35 \{\par
   36     proc = new AnsiConoleEngine(prompt);\par
   37 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardConsole_a8b2990d83e98f8c319894246384e71e1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardConsole_a8b2990d83e98f8c319894246384e71e1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~StandardConsole\:StandardConsole}
{\xe \v StandardConsole\:~StandardConsole}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
StandardConsole::~StandardConsole (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACXW}
{\bkmkend AAAAAAACXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file console_stdc.cpp.}\par
{
References proc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40 \{\par
   41     delete proc;\par
   42 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Exit\:StandardConsole}
{\xe \v StandardConsole\:Exit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardConsole::Exit (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ConsoleBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 65 of file console_stdc.cpp.}\par
{
References exit.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    66 \{\par
   67     exit = true;\par
   68 \}\par
}
}
{\xe \v GetStackSize\:StandardConsole}
{\xe \v StandardConsole\:GetStackSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int StandardConsole::GetStackSize (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACXX}
{\bkmkend AAAAAAACXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ThreadBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACXY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 44 of file console_stdc.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45 \{\par
   46     return 100000;\par
   47 \}\par
}
}
{\xe \v ReadLine\:StandardConsole}
{\xe \v StandardConsole\:ReadLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardConsole::ReadLine (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACXZ}
{\bkmkend AAAAAAACXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file console_stdc.cpp.}\par
{
References AnsiConoleEngine::GetLine(), AnsiConoleEngine::InputDone(), line, proc, AnsiConoleEngine::ProcessChar(), AnsiConoleEngine::StartInput(), and WriteString().}\par
{
Referenced by Run().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    71 \{\par
   72 #ifdef UNIX\par
   73     termios new_tio, old_tio;\par
   74     tcgetattr(STDIN_FILENO, &old_tio);\par
   75     new_tio = old_tio;\par
   76     new_tio.c_lflag &=(~ICANON & ~ECHO);\par
   77     tcsetattr(STDIN_FILENO, TCSANOW, &new_tio);\par
   78 #endif\par
   79 \par
   80     proc->StartInput();\par
   81 \par
   82     while (!proc->InputDone()) \{\par
   83         unsigned char c = getchar();\par
   84         //printf("%d ",c);\par
   85         const char *out = proc->ProcessChar((char)c);\par
   86         WriteString(out);\par
   87     \}\par
   88 \par
   89     line = proc->GetLine();\par
   90 \par
   91 #ifdef UNIX\par
   92     tcsetattr(STDIN_FILENO, TCSANOW, &old_tio);\par
   93 #endif\par
   94 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardConsole_a387d8a0bf9d6ec722868026f58393942_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardConsole_a387d8a0bf9d6ec722868026f58393942_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Run\:StandardConsole}
{\xe \v StandardConsole\:Run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardConsole::Run (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACYA}
{\bkmkend AAAAAAACYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ThreadBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACYB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 49 of file console_stdc.cpp.}\par
{
References Evaluator::Evaluate(), Evaluator::Evaluator(), exit, Evaluator::GetResult(), line, ConsoleBase::Prompt(), ReadLine(), ConsoleBase::StartMessage(), StrLen(), and Write().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{\par
   51     exit = false;\par
   52     StartMessage();\par
   53 \par
   54     while(!exit) \{\par
   55         Prompt();\par
   56         ReadLine();\par
   57         Evaluator *evaluator = new Evaluator(line);\par
   58         evaluator->Evaluate();\par
   59         const char *res = evaluator->GetResult();\par
   60         Write(res, StrLen(res));\par
   61         delete evaluator;\par
   62     \}\par
   63 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardConsole_a9380023bba612b816b134589130bb254_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetPrompt\:StandardConsole}
{\xe \v StandardConsole\:SetPrompt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardConsole::SetPrompt (const char *  {\i string}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b ConsoleBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABWD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 112 of file console_stdc.cpp.}\par
{
References proc, ConsoleBase::SetPrompt(), and AnsiConoleEngine::SetPrompt().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   113 \{\par
  114     ConsoleBase::SetPrompt(string);\par
  115     proc->SetPrompt(string);\par
  116 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardConsole_aa8e28b5271f982514c12bc6c66f310f9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Write\:StandardConsole}
{\xe \v StandardConsole\:Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardConsole::Write (const char *  {\i string}, unsigned int  {\i length}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYC}
{\bkmkend AAAAAAACYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file console_stdc.cpp.}\par
{
Referenced by Run(), and WriteString().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   102 \{\par
  103     unsigned int i = 0;\par
  104     while(i < length && string[i] != 0) \{\par
  105         fputc(string[i], stdout);\par
  106         i++;\par
  107     \}\par
  108 \par
  109     fflush(stdout);\par
  110 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardConsole_a43844eb181d640c0e4860ef21c2e8fa7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v WriteString\:StandardConsole}
{\xe \v StandardConsole\:WriteString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardConsole::WriteString (const char *  {\i string}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ConsoleBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABWG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 96 of file console_stdc.cpp.}\par
{
References StrLen(), and Write().}\par
{
Referenced by ReadLine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    97 \{\par
   98     Write(string, StrLen(string));\par
   99 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardConsole_a4357667b7d80d110aca730ccb1cdca13_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardConsole_a4357667b7d80d110aca730ccb1cdca13_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v exit\:StandardConsole}
{\xe \v StandardConsole\:exit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StandardConsole::exit{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYD}
{\bkmkend AAAAAAACYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file console_stdc.h.}\par
{
Referenced by Exit(), and Run().}\par
}
{\xe \v line\:StandardConsole}
{\xe \v StandardConsole\:line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* StandardConsole::line{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYE}
{\bkmkend AAAAAAACYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file console_stdc.h.}\par
{
Referenced by ReadLine(), and Run().}\par
}
{\xe \v proc\:StandardConsole}
{\xe \v StandardConsole\:proc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AnsiConoleEngine}* StandardConsole::proc{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYF}
{\bkmkend AAAAAAACYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file console_stdc.h.}\par
{
Referenced by ReadLine(), SetPrompt(), StandardConsole(), and ~StandardConsole().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b console_stdc.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b console_stdc.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StandardFilesystem Class Reference\par \pard\plain 
{\tc\tcl2 \v StandardFilesystem}
{\xe \v StandardFilesystem}
{\bkmkstart AAAAAAACYG}
{\bkmkend AAAAAAACYG}
\par
{
{\f2 #include <filesystem_stdc.h>}}\par
Inheritance diagram for StandardFilesystem:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardFilesystem__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for StandardFilesystem:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardFilesystem__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} * {\b ListDirectory} (const char *path)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} * {\b LoadTextFile} (const char *name)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b SaveTextFile} (const char *name, const char *text)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b blocksize} = 512\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 42 of file filesystem_stdc.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ListDirectory\:StandardFilesystem}
{\xe \v StandardFilesystem\:ListDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CharBuffer} * StandardFilesystem::ListDirectory (const char *  {\i path}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDV}
{\bkmkend AAAAAAACDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b FilesystemBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 39 of file filesystem_stdc.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::CharBuffer(), CharBuffer::Empty(), CharBuffer::EnsureGrowth(), CharBuffer::EnsureSize(), CharBuffer::GetString(), StrIsEqual(), and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40 \{\par
   41 #ifdef UNIX\par
   42     CharBuffer *pathbuf = new CharBuffer();\par
   43     pathbuf->Empty();\par
   44     if (path == NOMEM) \{\par
   45         pathbuf->Append(".");\par
   46     \} else \{\par
   47         pathbuf->EnsureSize(StrLen(path) + 1);\par
   48         pathbuf->Append(path);\par
   49     \}\par
   50 \par
   51     DIR *dir;\par
   52     if ((dir = opendir(pathbuf->GetString())) == NULL) \{\par
   53         CharBuffer *res = new CharBuffer();\par
   54         const char *msg = MSGNODIR;\par
   55         res->EnsureSize(StrLen(msg) + StrLen(pathbuf->GetString()) + StrLen(NEWLINE) + 1);\par
   56         res->Empty();\par
   57         res->Append(msg);\par
   58         res->Append(pathbuf->GetString());\par
   59         res->Append(NEWLINE);\par
   60 \par
   61         delete pathbuf;\par
   62         return res;\par
   63     \}\par
   64 \par
   65     CharBuffer *lines = new CharBuffer();\par
   66     lines->Empty();\par
   67 \par
   68     bool first = true;\par
   69     struct dirent *entry;\par
   70     while ((entry = readdir(dir)) != NULL) \{\par
   71         if (StrIsEqual(entry->d_name, ".") || StrIsEqual(entry->d_name, "..")) \{\par
   72             continue;\par
   73         \}\par
   74 \par
   75         if (first) \{\par
   76             const char *header = TXTLISTDIRHEADER;\par
   77             lines->EnsureSize(StrLen(header) + 1);\par
   78             lines->Empty();\par
   79             lines->Append(header);\par
   80             first = false;\par
   81         \}\par
   82 \par
   83         const char *type;\par
   84 \par
   85         switch (entry->d_type) \{\par
   86         case DT_REG:\par
   87             type = TXTLISTDIRTFILE;\par
   88             break;\par
   89         case DT_DIR:\par
   90             type = TXTLISTDIRTDIR;\par
   91             break;\par
   92         default:\par
   93             type = TXTLISTDIRTUNKNOWN;\par
   94         \}\par
   95 \par
   96         const unsigned short colsize = 12;\par
   97         unsigned int a = StrLen(type) > colsize ? colsize : StrLen(type);\par
   98         unsigned int b = colsize - a;\par
   99 \par
  100         lines->EnsureGrowth(colsize + StrLen(entry->d_name) + StrLen(NEWLINE) + 1);\par
  101         lines->Append(type);\par
  102         lines->Append(' ', b);\par
  103         lines->Append(entry->d_name);\par
  104         lines->Append(NEWLINE);\par
  105     \}\par
  106 \par
  107     closedir(dir);\par
  108     delete pathbuf;\par
  109     return lines;\par
  110 #else\par
  111     CharBuffer *lines = new CharBuffer();\par
  112     lines->Empty();\par
  113     return lines;\par
  114 #endif\par
  115 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardFilesystem_a535ef937063f59dcb61560d44ed18e81_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v LoadTextFile\:StandardFilesystem}
{\xe \v StandardFilesystem\:LoadTextFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CharBuffer} * StandardFilesystem::LoadTextFile (const char *  {\i name}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDX}
{\bkmkend AAAAAAACDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b FilesystemBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 117 of file filesystem_stdc.cpp.}\par
{
References CharBuffer::Append(), blocksize, CharBuffer::CharBuffer(), CharBuffer::Empty(), and CharBuffer::EnsureSize().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   118 \{\par
  119     FILE *file;\par
  120 \par
  121 #if !defined(_WIN32)\par
  122     file = fopen(name, "r");\par
  123 #else\par
  124     fopen_s(&file, name, "r");\par
  125 #endif\par
  126 \par
  127     if (!file) \{\par
  128         return NOMEM;\par
  129     \}\par
  130 \par
  131     CharBuffer *text = new CharBuffer();\par
  132     text->Empty();\par
  133 \par
  134     int blocks = 0;\par
  135     bool eof = false;\par
  136 \par
  137     while (!eof) \{\par
  138         blocks++;\par
  139         text->EnsureSize(blocksize, blocks);\par
  140         int count = 0;\par
  141 \par
  142         do\par
  143         \{\par
  144             int c = fgetc(file);\par
  145             eof = c == EOF;\par
  146 \par
  147             if (!eof) \{\par
  148                 text->Append((char)c);\par
  149                 count++;\par
  150             \}\par
  151         \}  while (!eof && count < blocksize);\par
  152     \}\par
  153 \par
  154     fclose(file);\par
  155     return text;\par
  156 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardFilesystem_aa01514561ced127f2453b3a913e077ef_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SaveTextFile\:StandardFilesystem}
{\xe \v StandardFilesystem\:SaveTextFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StandardFilesystem::SaveTextFile (const char *  {\i name}, const char *  {\i text}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDZ}
{\bkmkend AAAAAAACDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b FilesystemBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 158 of file filesystem_stdc.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   159 \{\par
  160     FILE *file;\par
  161 \par
  162 #if !defined(_WIN32)\par
  163     file = fopen(name, "w");\par
  164 #else\par
  165     fopen_s(&file, name, "w");\par
  166 #endif\par
  167 \par
  168     if (!file) \{\par
  169         return false;\par
  170     \}\par
  171 \par
  172     char *i = (char*)text;\par
  173     int r = EOF + 11;\par
  174     while (r != EOF && *i) \{\par
  175         r = fputc(*i++, file);\par
  176     \}\par
  177 \par
  178     fclose(file);\par
  179     return true;\par
  180 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v blocksize\:StandardFilesystem}
{\xe \v StandardFilesystem\:blocksize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int StandardFilesystem::blocksize = 512{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYH}
{\bkmkend AAAAAAACYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file filesystem_stdc.h.}\par
{
Referenced by LoadTextFile().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b filesystem_stdc.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b filesystem_stdc.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StandardLanguage Class Reference\par \pard\plain 
{\tc\tcl2 \v StandardLanguage}
{\xe \v StandardLanguage}
{\bkmkstart AAAAAAACYI}
{\bkmkend AAAAAAACYI}
\par
{
{\f2 #include <language_stdc.h>}}\par
Inheritance diagram for StandardLanguage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardLanguage__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for StandardLanguage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardLanguage__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StandardLanguage} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~StandardLanguage} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b GetFractionPoint} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsAlNum} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsAlpha} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsDigit} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsPunct} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsSpace} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b CharIsCntrl} (unsigned long character)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b StrIsEqualLoc} (const char *s1, const char *s2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Translate} ({\b textdef} *def)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Translate} ({\b helptextdef} *def)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Translate} ({\b identhelpdef} *def)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LoadCatalogs} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LoadCatalog} (char **dest, const char *file)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetNextPair} (const char **key, const char **value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetNextLine} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SkipComments} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b textbase}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b helpbase}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b identbase}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b kwordbase}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b ptr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b textdef} * {\b textcatalog}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b helptextdef} * {\b helpcatalog}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b identhelpdef} * {\b identcatalog}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 35 of file language_stdc.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v StandardLanguage\:StandardLanguage}
{\xe \v StandardLanguage\:StandardLanguage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
StandardLanguage::StandardLanguage ()}}
\par
{\bkmkstart AAAAAAACYJ}
{\bkmkend AAAAAAACYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file language_stdc.cpp.}\par
{
References Language::Language(), and LoadCatalogs().}\par
{
Referenced by CreateLanguage().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    38                                    :\par
   39     Language()\par
   40 \{\par
   41     LoadCatalogs();\par
   42 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardLanguage_a0d604e2af2f2bf4dc4abbe7b18c05cea_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardLanguage_a0d604e2af2f2bf4dc4abbe7b18c05cea_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~StandardLanguage\:StandardLanguage}
{\xe \v StandardLanguage\:~StandardLanguage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
StandardLanguage::~StandardLanguage ()}}
\par
{\bkmkstart AAAAAAACYK}
{\bkmkend AAAAAAACYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file language_stdc.cpp.}\par
{
References helpbase, identbase, kwordbase, and textbase.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45 \{\par
   46     if (textbase != NOMEM) \{\par
   47         delete textbase;\par
   48     \}\par
   49 \par
   50     if (helpbase != NOMEM) \{\par
   51         delete helpbase;\par
   52     \}\par
   53 \par
   54     if (identbase != NOMEM) \{\par
   55         delete identbase;\par
   56     \}\par
   57 \par
   58     if (kwordbase != NOMEM) \{\par
   59         delete kwordbase;\par
   60     \}\par
   61 \par
   62 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CharIsAlNum\:StandardLanguage}
{\xe \v StandardLanguage\:CharIsAlNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StandardLanguage::CharIsAlNum (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 90 of file language_stdc.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    91 \{\par
   92     return (character >= 'a' && character <= 'z') ||\par
   93            (character >= 'A' && character <= 'Z') ||\par
   94            (character >= '0' && character <= '9');\par
   95 \}\par
}
}
{\xe \v CharIsAlpha\:StandardLanguage}
{\xe \v StandardLanguage\:CharIsAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StandardLanguage::CharIsAlpha (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKA}
{\bkmkend AAAAAAACKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 97 of file language_stdc.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    98 \{\par
   99     return (character >= 'a' && character <= 'z') ||\par
  100            (character >= 'A' && character <= 'Z');\par
  101 \}\par
}
}
{\xe \v CharIsCntrl\:StandardLanguage}
{\xe \v StandardLanguage\:CharIsCntrl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StandardLanguage::CharIsCntrl (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKC}
{\bkmkend AAAAAAACKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 118 of file language_stdc.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   119 \{\par
  120     return (character < 32 || character > 125);\par
  121 \}\par
}
}
{\xe \v CharIsDigit\:StandardLanguage}
{\xe \v StandardLanguage\:CharIsDigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StandardLanguage::CharIsDigit (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKE}
{\bkmkend AAAAAAACKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 103 of file language_stdc.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   104 \{\par
  105     return (character >= '0' && character <= '9');\par
  106 \}\par
}
}
{\xe \v CharIsPunct\:StandardLanguage}
{\xe \v StandardLanguage\:CharIsPunct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StandardLanguage::CharIsPunct (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKG}
{\bkmkend AAAAAAACKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 108 of file language_stdc.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   109 \{\par
  110     return (character == '.');\par
  111 \}\par
}
}
{\xe \v CharIsSpace\:StandardLanguage}
{\xe \v StandardLanguage\:CharIsSpace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StandardLanguage::CharIsSpace (unsigned long  {\i character}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKI}
{\bkmkend AAAAAAACKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 113 of file language_stdc.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   114 \{\par
  115     return (character == 32);\par
  116 \}\par
}
}
{\xe \v GetFractionPoint\:StandardLanguage}
{\xe \v StandardLanguage\:GetFractionPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char StandardLanguage::GetFractionPoint (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKM}
{\bkmkend AAAAAAACKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 85 of file language_stdc.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    86 \{\par
   87     return '.';\par
   88 \}\par
}
}
{\xe \v GetNextLine\:StandardLanguage}
{\xe \v StandardLanguage\:GetNextLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardLanguage::GetNextLine (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYL}
{\bkmkend AAAAAAACYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 204 of file language_stdc.cpp.}\par
{
References ptr.}\par
{
Referenced by GetNextPair(), and SkipComments().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   205 \{\par
  206     while ((*ptr) != '\\0' && (*ptr) != '\\n') \{\par
  207         ptr++;\par
  208     \}\par
  209 \par
  210     if ((*ptr) == '\\n') \{\par
  211         *ptr++ = '\\0';\par
  212     \}\par
  213 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardLanguage_a8a4a4a2879f1e907c17f36dfafdebd66_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNextPair\:StandardLanguage}
{\xe \v StandardLanguage\:GetNextPair}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardLanguage::GetNextPair (const char **  {\i key}, const char **  {\i value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYM}
{\bkmkend AAAAAAACYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 194 of file language_stdc.cpp.}\par
{
References GetNextLine(), ptr, and SkipComments().}\par
{
Referenced by LoadCatalogs().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   195 \{\par
  196     SkipComments();\par
  197     *key = ptr;\par
  198     GetNextLine();\par
  199     SkipComments();\par
  200     *value = ptr;\par
  201     GetNextLine();\par
  202 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardLanguage_ab1945e2e3503ce12eac28c0d08234cfb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardLanguage_ab1945e2e3503ce12eac28c0d08234cfb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v LoadCatalog\:StandardLanguage}
{\xe \v StandardLanguage\:LoadCatalog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardLanguage::LoadCatalog (char **  {\i dest}, const char *  {\i file}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYN}
{\bkmkend AAAAAAACYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 178 of file language_stdc.cpp.}\par
{
References AllocAndCopy(), CreateFilesystem(), CharBuffer::GetString(), FilesystemBase::LoadTextFile(), and ptr.}\par
{
Referenced by LoadCatalogs().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   179 \{\par
  180     FilesystemBase *filesystem = CreateFilesystem();\par
  181     CharBuffer *cbuf = filesystem->LoadTextFile(file);\par
  182 \par
  183     if (cbuf != NOMEM) \{\par
  184         AllocAndCopy(dest, cbuf->GetString());\par
  185         ptr = *dest;\par
  186         delete cbuf;\par
  187     \} else \{\par
  188         *dest = NOMEM;\par
  189     \}\par
  190 \par
  191     delete filesystem;\par
  192 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardLanguage_a4fe22e49f3ce358690242d0b1058ccfa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardLanguage_a4fe22e49f3ce358690242d0b1058ccfa_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v LoadCatalogs\:StandardLanguage}
{\xe \v StandardLanguage\:LoadCatalogs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardLanguage::LoadCatalogs (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYO}
{\bkmkend AAAAAAACYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 129 of file language_stdc.cpp.}\par
{
References GetNextPair(), helpbase, helpcatalog, Language::helpcount, helptexts, identhelpdef::id, helptextdef::id, keyworddef::id, textdef::id, identhelpdef::ident, identbase, identcatalog, Language::identcount, Language::keywordcount, keywords, Language::keywordsloc, kwordbase, LoadCatalog(), keyworddef::name, helptextdef::symbol, keyworddef::symbol, identhelpdef::text, helptextdef::text, textdef::text, textbase, textcatalog, and Language::textcount.}\par
{
Referenced by StandardLanguage().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   130 \{\par
  131     const char* key;\par
  132     const char* value;\par
  133 \par
  134     LoadCatalog(&textbase, "utext/dk-text.dict");\par
  135     if (textbase != NOMEM) \{\par
  136         textcatalog = new textdef[textcount];\par
  137         for (unsigned int j = 0; j < textcount; j++) \{\par
  138             GetNextPair(&key, &value);\par
  139             textcatalog[j].id = j;\par
  140             textcatalog[j].text = value;\par
  141         \}\par
  142     \}\par
  143 \par
  144     LoadCatalog(&helpbase, "utext/dk-help.dict");\par
  145     if (helpbase != NOMEM) \{\par
  146         helpcatalog = new helptextdef[helpcount];\par
  147         for (unsigned int j = 0; j < helpcount; j++) \{\par
  148             GetNextPair(&key, &value);\par
  149             helpcatalog[j].id = j;\par
  150             helpcatalog[j].symbol = helptexts[j].symbol;\par
  151             helpcatalog[j].text = value;\par
  152         \}\par
  153     \}\par
  154 \par
  155     LoadCatalog(&identbase, "utext/dk-ident.dict");\par
  156     if (identbase != NOMEM) \{\par
  157         identcatalog = new identhelpdef[identcount];\par
  158         for (unsigned int j = 0; j < identcount; j++) \{\par
  159             GetNextPair(&key, &value);\par
  160             identcatalog[j].id = j;\par
  161             identcatalog[j].ident = key;\par
  162             identcatalog[j].text = value;\par
  163         \}\par
  164     \}\par
  165 \par
  166     LoadCatalog(&kwordbase, "utext/dk-keyword.dict");\par
  167     if (kwordbase != NOMEM) \{\par
  168         keywordsloc = new keyworddef[keywordcount];\par
  169         for (unsigned int j = 0; j < keywordcount; j++) \{\par
  170             GetNextPair(&key, &value);\par
  171             keywordsloc[j].id = j;\par
  172             keywordsloc[j].name = value;\par
  173             keywordsloc[j].symbol = keywords[j].symbol;\par
  174         \}\par
  175     \}\par
  176 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardLanguage_afd0037d341b94b08497842470007e59b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardLanguage_afd0037d341b94b08497842470007e59b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SkipComments\:StandardLanguage}
{\xe \v StandardLanguage\:SkipComments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardLanguage::SkipComments (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYP}
{\bkmkend AAAAAAACYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 215 of file language_stdc.cpp.}\par
{
References GetNextLine(), and ptr.}\par
{
Referenced by GetNextPair().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   216 \{\par
  217     bool skipping;\par
  218     do \{\par
  219         if ((*ptr) == ';') \{\par
  220             GetNextLine();\par
  221             skipping = true;\par
  222         \} else if ((*ptr) == '#' && *(ptr + sizeof(char)) == '#') \{\par
  223             GetNextLine();\par
  224             skipping = true;\par
  225         \} else \{\par
  226             skipping = false;\par
  227         \}\par
  228     \} while (skipping);\par
  229 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardLanguage_af0078bbe8a06f6e4fb35ddfda1170e19_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardLanguage_af0078bbe8a06f6e4fb35ddfda1170e19_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v StrIsEqualLoc\:StandardLanguage}
{\xe \v StandardLanguage\:StrIsEqualLoc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StandardLanguage::StrIsEqualLoc (const char *  {\i s1}, const char *  {\i s2}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 123 of file language_stdc.cpp.}\par
{
References StrIsEqual().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   124 \{\par
  125     return StrIsEqual(s1, s2);\par
  126 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardLanguage_ac3062fe9cb6298205f0deee955ebf36e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Translate\:StandardLanguage}
{\xe \v StandardLanguage\:Translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * StandardLanguage::Translate ({\b textdef} *  {\i def}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 64 of file language_stdc.cpp.}\par
{
References textdef::id, textdef::text, and textcatalog.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    65 \{\par
   66     return textcatalog == NOMEM ?\par
   67            (char*)def->text :\par
   68            (char*)textcatalog[def->id].text;\par
   69 \}\par
}
}
{\xe \v Translate\:StandardLanguage}
{\xe \v StandardLanguage\:Translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * StandardLanguage::Translate ({\b helptextdef} *  {\i def}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 71 of file language_stdc.cpp.}\par
{
References helpcatalog, helptextdef::id, and helptextdef::text.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    72 \{\par
   73     return helpcatalog == NOMEM ?\par
   74            (char*)def->text :\par
   75            (char*)helpcatalog[def->id].text;\par
   76 \}\par
}
}
{\xe \v Translate\:StandardLanguage}
{\xe \v StandardLanguage\:Translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * StandardLanguage::Translate ({\b identhelpdef} *  {\i def}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Language} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 78 of file language_stdc.cpp.}\par
{
References identhelpdef::id, identcatalog, and identhelpdef::text.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    79 \{\par
   80     return identcatalog == NOMEM ?\par
   81            (char*)def->text :\par
   82            (char*)identcatalog[def->id].text;\par
   83 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v helpbase\:StandardLanguage}
{\xe \v StandardLanguage\:helpbase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* StandardLanguage::helpbase{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYQ}
{\bkmkend AAAAAAACYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file language_stdc.h.}\par
{
Referenced by LoadCatalogs(), and ~StandardLanguage().}\par
}
{\xe \v helpcatalog\:StandardLanguage}
{\xe \v StandardLanguage\:helpcatalog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b helptextdef}* StandardLanguage::helpcatalog{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYR}
{\bkmkend AAAAAAACYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file language_stdc.h.}\par
{
Referenced by LoadCatalogs(), and Translate().}\par
}
{\xe \v identbase\:StandardLanguage}
{\xe \v StandardLanguage\:identbase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* StandardLanguage::identbase{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYS}
{\bkmkend AAAAAAACYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file language_stdc.h.}\par
{
Referenced by LoadCatalogs(), and ~StandardLanguage().}\par
}
{\xe \v identcatalog\:StandardLanguage}
{\xe \v StandardLanguage\:identcatalog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b identhelpdef}* StandardLanguage::identcatalog{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYT}
{\bkmkend AAAAAAACYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file language_stdc.h.}\par
{
Referenced by LoadCatalogs(), and Translate().}\par
}
{\xe \v kwordbase\:StandardLanguage}
{\xe \v StandardLanguage\:kwordbase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* StandardLanguage::kwordbase{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYU}
{\bkmkend AAAAAAACYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file language_stdc.h.}\par
{
Referenced by LoadCatalogs(), and ~StandardLanguage().}\par
}
{\xe \v ptr\:StandardLanguage}
{\xe \v StandardLanguage\:ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* StandardLanguage::ptr{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYV}
{\bkmkend AAAAAAACYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file language_stdc.h.}\par
{
Referenced by GetNextLine(), GetNextPair(), LoadCatalog(), and SkipComments().}\par
}
{\xe \v textbase\:StandardLanguage}
{\xe \v StandardLanguage\:textbase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* StandardLanguage::textbase{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYW}
{\bkmkend AAAAAAACYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file language_stdc.h.}\par
{
Referenced by LoadCatalogs(), and ~StandardLanguage().}\par
}
{\xe \v textcatalog\:StandardLanguage}
{\xe \v StandardLanguage\:textcatalog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b textdef}* StandardLanguage::textcatalog{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYX}
{\bkmkend AAAAAAACYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file language_stdc.h.}\par
{
Referenced by LoadCatalogs(), and Translate().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b language_stdc.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b language_stdc.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StandardPreferences Class Reference\par \pard\plain 
{\tc\tcl2 \v StandardPreferences}
{\xe \v StandardPreferences}
{\bkmkstart AAAAAAACYY}
{\bkmkend AAAAAAACYY}
\par
{
{\f2 #include <preferences_stdc.h>}}\par
Inheritance diagram for StandardPreferences:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardPreferences__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for StandardPreferences:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardPreferences__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b Load} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b Keep} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b Save} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b SavePrefs} (const char *file)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 32 of file preferences_stdc.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Keep\:StandardPreferences}
{\xe \v StandardPreferences\:Keep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StandardPreferences::Keep (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACUJ}
{\bkmkend AAAAAAACUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b PreferencesBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 76 of file preferences_stdc.cpp.}\par
{
References SavePrefs(), and tempname.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    77 \{\par
   78     return SavePrefs(tempname);\par
   79 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardPreferences_a98a76348fca4d6519fb851b5d8382437_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Load\:StandardPreferences}
{\xe \v StandardPreferences\:Load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StandardPreferences::Load (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACUK}
{\bkmkend AAAAAAACUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b PreferencesBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 44 of file preferences_stdc.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::CharBuffer(), CharBuffer::Empty(), CharBuffer::EnsureSize(), CharBuffer::GetString(), PreferencesBase::SetPrefs(), and tempname.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45 \{\par
   46 #ifdef UNIX\par
   47     FILE *file = fopen(tempname, "r");\par
   48     if (!file) \{\par
   49         return false;\par
   50     \}\par
   51 \par
   52     CharBuffer *text = new CharBuffer();\par
   53     text->Empty();\par
   54 \par
   55     const int bufsize = 64;\par
   56     char* buf = new char[bufsize];\par
   57     char* c;\par
   58     int s = 1;\par
   59 \par
   60     do \{\par
   61         c = fgets(buf, bufsize, file);\par
   62         if (c != NULL) \{\par
   63             text->EnsureSize(s++);\par
   64             text->Append(c);\par
   65         \}\par
   66     \} while (c != NULL);\par
   67 \par
   68     delete [] buf;\par
   69     fclose(file);\par
   70     SetPrefs(text->GetString());\par
   71     delete text;\par
   72 #endif\par
   73     return true;\par
   74 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardPreferences_a883449eac37fb47c01fa2ae23a02bdc4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Save\:StandardPreferences}
{\xe \v StandardPreferences\:Save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StandardPreferences::Save (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACUL}
{\bkmkend AAAAAAACUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b PreferencesBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABMV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 81 of file preferences_stdc.cpp.}\par
{
References permname, and SavePrefs().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    82 \{\par
   83     return SavePrefs(permname);\par
   84 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardPreferences_aa6a0a0f9746d2fba5d00cc896937b950_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SavePrefs\:StandardPreferences}
{\xe \v StandardPreferences\:SavePrefs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StandardPreferences::SavePrefs (const char *  {\i file}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYZ}
{\bkmkend AAAAAAACYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file preferences_stdc.cpp.}\par
{
References PreferencesBase::GetDescription().}\par
{
Referenced by Keep(), and Save().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    87 \{\par
   88 #ifdef UNIX\par
   89     FILE *file = fopen(name, "w");\par
   90     if (!file) \{\par
   91         return false;\par
   92     \}\par
   93 \par
   94     char *out = GetDescription();\par
   95     fputs(out, file);\par
   96     fclose(file);\par
   97 #endif\par
   98     return true;\par
   99 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardPreferences_af4d99d40f18776348f76fc0b9f5cdda4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardPreferences_af4d99d40f18776348f76fc0b9f5cdda4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b preferences_stdc.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b preferences_stdc.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StandardProgram Class Reference\par \pard\plain 
{\tc\tcl2 \v StandardProgram}
{\xe \v StandardProgram}
{\bkmkstart AAAAAAACZA}
{\bkmkend AAAAAAACZA}
\par
{
{\f2 #include <program_stdc.h>}}\par
Inheritance diagram for StandardProgram:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardProgram__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for StandardProgram:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardProgram__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StandardProgram} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~StandardProgram} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Initialize} (int argc, char **argv)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Run} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Exit} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} * {\b line}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 30 of file program_stdc.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v StandardProgram\:StandardProgram}
{\xe \v StandardProgram\:StandardProgram}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
StandardProgram::StandardProgram ()}}
\par
{\bkmkstart AAAAAAACZB}
{\bkmkend AAAAAAACZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file program_stdc.cpp.}\par
{
References Program::Console, line, and Program::Program().}\par
{
Referenced by CreateProgram().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    38     : Program()\par
   39 \{\par
   40     Console = NOMEM;\par
   41     line = NOMEM;\par
   42 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardProgram_a8f86a2eaf4593fd52dc4d13c40815f05_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardProgram_a8f86a2eaf4593fd52dc4d13c40815f05_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~StandardProgram\:StandardProgram}
{\xe \v StandardProgram\:~StandardProgram}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
StandardProgram::~StandardProgram (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZC}
{\bkmkend AAAAAAACZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file program_stdc.cpp.}\par
{
References Program::Console, and line.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45 \{\par
   46     if (Console != NULL) \{\par
   47         delete Console;\par
   48     \}\par
   49 \par
   50     if (line != NULL) \{\par
   51         delete line;\par
   52     \}\par
   53 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Exit\:StandardProgram}
{\xe \v StandardProgram\:Exit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardProgram::Exit (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVC}
{\bkmkend AAAAAAACVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Program} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 99 of file program_stdc.cpp.}\par
{
References Program::Console, and ConsoleBase::Exit().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   100 \{\par
  101     Console->Exit();\par
  102 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardProgram_a1354fa2291bf56d90b7d46d841a02b8c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Initialize\:StandardProgram}
{\xe \v StandardProgram\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardProgram::Initialize (int  {\i argc}, char **  {\i argv}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVF}
{\bkmkend AAAAAAACVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Program} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABND \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 55 of file program_stdc.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::CharBuffer(), Program::Console, CharBuffer::DeleteLastChar(), CharBuffer::Empty(), PreferencesBase::GetPrompt(), CharBuffer::Is(), line, Program::Preferences, StandardConsole::StandardConsole(), and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    56 \{\par
   57     if(argc < 2) \{\par
   58         // STDC version only has a console\par
   59         Console = new StandardConsole(Preferences->GetPrompt());\par
   60         return;\par
   61     \}\par
   62 \par
   63     unsigned int len = 1;\par
   64     for(int i = 1; i < argc; i++) \{\par
   65         len += StrLen(argv[i]) + 1;\par
   66     \}\par
   67 \par
   68     line = new CharBuffer(len);\par
   69     line->Empty();\par
   70 \par
   71     for(int i = 1; i < argc; i++) \{\par
   72         line->Append(argv[i]);\par
   73         line->Append(' ');\par
   74     \}\par
   75 \par
   76     line->DeleteLastChar();\par
   77 \par
   78     if (line->Is("shell")) \{\par
   79         Console = new StandardConsole(Preferences->GetPrompt());\par
   80     \}\par
   81 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardProgram_a9e887904df28471bc3801384e5a1f151_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Run\:StandardProgram}
{\xe \v StandardProgram\:Run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardProgram::Run (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVJ}
{\bkmkend AAAAAAACVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Program} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 83 of file program_stdc.cpp.}\par
{
References Program::Console, Evaluator::Evaluate(), Evaluator::Evaluator(), Evaluator::GetResult(), CharBuffer::GetString(), line, PreferencesBase::Load(), Program::Preferences, ThreadBase::Run(), and WriteToShell().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    84 \{\par
   85     Preferences->Load();\par
   86 \par
   87     if (Console != NOMEM) \{\par
   88         Console->Run();\par
   89         return;\par
   90     \}\par
   91 \par
   92     Evaluator *evaluator = new Evaluator(line->GetString());\par
   93     evaluator->Evaluate();\par
   94     const char *res = evaluator->GetResult();\par
   95     WriteToShell(res);\par
   96     delete evaluator;\par
   97 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardProgram_a71dce9fdccf23ac49ba2362dcae744d3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v line\:StandardProgram}
{\xe \v StandardProgram\:line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CharBuffer}* StandardProgram::line{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACZD}
{\bkmkend AAAAAAACZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file program_stdc.h.}\par
{
Referenced by Initialize(), Run(), StandardProgram(), and ~StandardProgram().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b program_stdc.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b program_stdc.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StandardTask Class Reference\par \pard\plain 
{\tc\tcl2 \v StandardTask}
{\xe \v StandardTask}
{\bkmkstart AAAAAAACZE}
{\bkmkend AAAAAAACZE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates calls to POSIX task. }}\par
{
{\f2 #include <task_stdc.h>}}\par
Inheritance diagram for StandardTask:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardTask__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for StandardTask:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardTask__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StandardTask} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~StandardTask} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ThreadBase} *thread)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WaitExit} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates calls to POSIX task. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Based on fork and wait. \par
}{
Definition at line 48 of file task_stdc.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v StandardTask\:StandardTask}
{\xe \v StandardTask\:StandardTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
StandardTask::StandardTask ()}}
\par
{\bkmkstart AAAAAAACZF}
{\bkmkend AAAAAAACZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file task_stdc.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    38 \{ \}\par
}
}
{\xe \v ~StandardTask\:StandardTask}
{\xe \v StandardTask\:~StandardTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
StandardTask::~StandardTask ()}}
\par
{\bkmkstart AAAAAAACZG}
{\bkmkend AAAAAAACZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file task_stdc.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    41 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Start\:StandardTask}
{\xe \v StandardTask\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardTask::Start ({\b ThreadBase} *  {\i thread}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZH}
{\bkmkend AAAAAAACZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b TaskBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 43 of file task_stdc.cpp.}\par
{
References ThreadBase::Run().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     pid_t childpid = fork();\par
   46 \par
   47     // fork() returns 0 to the child process\par
   48     if (childpid == 0)\par
   49     \{\par
   50         thread->Run();\par
   51         exit(0);\par
   52     \}\par
   53 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStandardTask_ab454fb19347e79aaaa85151255b630a4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v WaitExit\:StandardTask}
{\xe \v StandardTask\:WaitExit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StandardTask::WaitExit (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZJ}
{\bkmkend AAAAAAACZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b TaskBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 55 of file task_stdc.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    56 \{\par
   57     wait(NULL);\par
   58 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b task_stdc.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b task_stdc.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StatementBlockElement Struct Reference\par \pard\plain 
{\tc\tcl2 \v StatementBlockElement}
{\xe \v StatementBlockElement}
{\bkmkstart AAAAAAACZL}
{\bkmkend AAAAAAACZL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to create a linked list of statements. }}\par
{
{\f2 #include <nodes.h>}}\par
Collaboration diagram for StatementBlockElement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structStatementBlockElement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b statement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StatementBlockElement} * {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to create a linked list of statements. \par
}{
Definition at line 178 of file nodes.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v next\:StatementBlockElement}
{\xe \v StatementBlockElement\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b StatementBlockElement}* StatementBlockElement::next}}
\par
{\bkmkstart AAAAAAACZM}
{\bkmkend AAAAAAACZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 180 of file nodes.h.}\par
{
Referenced by StatementBlockNode::Add(), StatementBlockNode::Execute(), and StatementBlockNode::~StatementBlockNode().}\par
}
{\xe \v statement\:StatementBlockElement}
{\xe \v StatementBlockElement\:statement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode}* StatementBlockElement::statement}}
\par
{\bkmkstart AAAAAAACZN}
{\bkmkend AAAAAAACZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 179 of file nodes.h.}\par
{
Referenced by StatementBlockNode::Add(), StatementBlockNode::Execute(), and StatementBlockNode::~StatementBlockNode().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b nodes.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StatementBlockNode Class Reference\par \pard\plain 
{\tc\tcl2 \v StatementBlockNode}
{\xe \v StatementBlockNode}
{\bkmkstart AAAAAAACZO}
{\bkmkend AAAAAAACZO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A sequence of statements in a syntax tree. }}\par
{
{\f2 #include <nodes.h>}}\par
Inheritance diagram for StatementBlockNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStatementBlockNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for StatementBlockNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStatementBlockNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StatementBlockNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~StatementBlockNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodeType} {\b GetNodeType} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b GetNext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Add} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetTextCode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Attach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Detach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Replace} ({\b SyntaxNode} *n, {\b SyntaxNode} *x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StatementBlockElement} * {\b first}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A sequence of statements in a syntax tree. \par
}{
Definition at line 156 of file nodes.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v StatementBlockNode\:StatementBlockNode}
{\xe \v StatementBlockNode\:StatementBlockNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
StatementBlockNode::StatementBlockNode ()}}
\par
{\bkmkstart AAAAAAACZP}
{\bkmkend AAAAAAACZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 236 of file nodes.cpp.}\par
{
References first, SyntaxNode::iterator, and SyntaxNode::SyntaxNode().}\par
{
Referenced by Parser::Parse().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   236                                        :\par
  237     SyntaxNode() \{\par
  238     first = NOMEM;\par
  239     iterator = NOMEM;\par
  240 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStatementBlockNode_ab7b27f5f9fa24acc63fd588477232c0b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStatementBlockNode_ab7b27f5f9fa24acc63fd588477232c0b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~StatementBlockNode\:StatementBlockNode}
{\xe \v StatementBlockNode\:~StatementBlockNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
StatementBlockNode::~StatementBlockNode ()}}
\par
{\bkmkstart AAAAAAACZQ}
{\bkmkend AAAAAAACZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 242 of file nodes.cpp.}\par
{
References first, StatementBlockElement::next, and StatementBlockElement::statement.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   243 \{\par
  244     StatementBlockElement *e = first;\par
  245 \par
  246     while (e != NOMEM) \{\par
  247         StatementBlockElement *next = e->next;\par
  248         delete e->statement;\par
  249         delete e;\par
  250         e = next;\par
  251     \}\par
  252 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Add\:StatementBlockNode}
{\xe \v StatementBlockNode\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StatementBlockNode::Add ({\b SyntaxNode} *  {\i node})}}
\par
{\bkmkstart AAAAAAACZR}
{\bkmkend AAAAAAACZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 259 of file nodes.cpp.}\par
{
References first, StatementBlockElement::next, and StatementBlockElement::statement.}\par
{
Referenced by Parser::Parse().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   260 \{\par
  261     if (first == NOMEM) \{\par
  262         first = new StatementBlockElement();\par
  263         first->statement = node;\par
  264         first->next = NOMEM;\par
  265         return;\par
  266     \}\par
  267 \par
  268     StatementBlockElement *last = first;\par
  269     StatementBlockElement *current = first->next;\par
  270 \par
  271     while (current != NOMEM) \{\par
  272         current = current->next;\par
  273         last = last->next;\par
  274     \}\par
  275 \par
  276     current = new StatementBlockElement();\par
  277     current->statement = node;\par
  278     current->next = NOMEM;\par
  279     last->next = current;\par
  280 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStatementBlockNode_a7cdae86c013121c1fdab0ee885c2b559_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Attach\:StatementBlockNode}
{\xe \v StatementBlockNode\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StatementBlockNode::Attach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZS}
{\bkmkend AAAAAAACZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 308 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   309 \{ \}\par
}
}
{\xe \v Detach\:StatementBlockNode}
{\xe \v StatementBlockNode\:Detach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StatementBlockNode::Detach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZT}
{\bkmkend AAAAAAACZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 311 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   312 \{\par
  313     // TODO: IMPLEMENT\par
  314 \}\par
}
}
{\xe \v Execute\:StatementBlockNode}
{\xe \v StatementBlockNode\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * StatementBlockNode::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZU}
{\bkmkend AAAAAAACZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 287 of file nodes.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::ClearBuffer(), CharBuffer::Empty(), CharBuffer::EnsureGrowth(), SyntaxNode::Execute(), first, CharBuffer::GetString(), StatementBlockElement::next, SyntaxNode::output, StatementBlockElement::statement, and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   288 \{\par
  289     output->ClearBuffer();\par
  290     output->Empty();\par
  291 \par
  292     StatementBlockElement *e = first;\par
  293     while (e != NOMEM) \{\par
  294         const char *out = e->statement->Execute();\par
  295         output->EnsureGrowth(StrLen(out) + 1);\par
  296         output->Append(out);\par
  297         e = e->next;\par
  298     \}\par
  299 \par
  300     return output->GetString();\par
  301 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStatementBlockNode_a820aeba99ce1f44084a3f07c734ea4a3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNext\:StatementBlockNode}
{\xe \v StatementBlockNode\:GetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * StatementBlockNode::GetNext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZV}
{\bkmkend AAAAAAACZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 303 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   304 \{\par
  305     return NOMEM; // TODO: Implement\par
  306 \}\par
}
}
{\xe \v GetNodeType\:StatementBlockNode}
{\xe \v StatementBlockNode\:GetNodeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NodeType} StatementBlockNode::GetNodeType (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZW}
{\bkmkend AAAAAAACZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 254 of file nodes.cpp.}\par
{
References statement.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   255 \{\par
  256     return statement;\par
  257 \}\par
}
}
{\xe \v GetTextCode\:StatementBlockNode}
{\xe \v StatementBlockNode\:GetTextCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * StatementBlockNode::GetTextCode (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZX}
{\bkmkend AAAAAAACZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 282 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   283 \{\par
  284     return (char*)"SBLCK";\par
  285 \}\par
}
}
{\xe \v Replace\:StatementBlockNode}
{\xe \v StatementBlockNode\:Replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StatementBlockNode::Replace ({\b SyntaxNode} *  {\i n}, {\b SyntaxNode} *  {\i x}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZY}
{\bkmkend AAAAAAACZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 316 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   317 \{\par
  318     // TODO: IMPLEMENT\par
  319 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v first\:StatementBlockNode}
{\xe \v StatementBlockNode\:first}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b StatementBlockElement}* StatementBlockNode::first{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACZZ}
{\bkmkend AAAAAAACZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 171 of file nodes.h.}\par
{
Referenced by Add(), Execute(), StatementBlockNode(), and ~StatementBlockNode().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b nodes.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b nodes.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StatementNode Class Reference\par \pard\plain 
{\tc\tcl2 \v StatementNode}
{\xe \v StatementNode}
{\bkmkstart AAAAAAADAA}
{\bkmkend AAAAAAADAA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all statements in a syntax tree. }}\par
{
{\f2 #include <nodes.h>}}\par
Inheritance diagram for StatementNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStatementNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for StatementNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStatementNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StatementNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~StatementNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodeType} {\b GetNodeType} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b SyntaxNode} * {\b GetNext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual char * {\b GetTextCode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual char * {\b Execute} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Attach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Detach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Replace} ({\b SyntaxNode} *n, {\b SyntaxNode} *x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all statements in a syntax tree. \par
}{
Definition at line 111 of file nodes.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v StatementNode\:StatementNode}
{\xe \v StatementNode\:StatementNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
StatementNode::StatementNode ()}}
\par
{\bkmkstart AAAAAAADAB}
{\bkmkend AAAAAAADAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file nodes.cpp.}\par
{
References SyntaxNode::SyntaxNode().}\par
{
Referenced by DeleteStatement::DeleteStatement(), EvalStatement::EvalStatement(), FunctionDefinitionNode::FunctionDefinitionNode(), HelpStatement::HelpStatement(), InputStatement::InputStatement(), ListFunctionsStatement::ListFunctionsStatement(), ListStatement::ListStatement(), ListVariablesStatement::ListVariablesStatement(), OutputStatement::OutputStatement(), and PlotStatement::PlotStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    85                              :\par
   86     SyntaxNode() \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStatementNode_a586026d6009a39d087792d621de86360_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStatementNode_a586026d6009a39d087792d621de86360_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~StatementNode\:StatementNode}
{\xe \v StatementNode\:~StatementNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual StatementNode::~StatementNode (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAC}
{\bkmkend AAAAAAADAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 114 of file nodes.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   114 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Attach\:StatementNode}
{\xe \v StatementNode\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StatementNode::Attach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZQ}
{\bkmkend AAAAAAABZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b EvalStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZP \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SilentStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACXI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 103 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   104 \{ \}\par
}
}
{\xe \v Detach\:StatementNode}
{\xe \v StatementNode\:Detach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StatementNode::Detach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b EvalStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZR \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SilentStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACXJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 106 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   107 \{ \}\par
}
}
{\xe \v Execute\:StatementNode}
{\xe \v StatementNode\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual char* StatementNode::Execute (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implemented in {\b DrawStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b PlotStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ExecuteStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SaveStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACWS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b LoadStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACMR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ListStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACMG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ShowStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACXA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b DigitsStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABXY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b OutputStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b InputStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b DeleteStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABXQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HelpStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACHH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b EvalStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b FunctionDefinitionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACEI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SilentStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACXK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ListFunctionsStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACMB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b PrefsStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACUW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b PromptStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MemoryStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ListVariablesStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACMK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b VersionStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b EmptyStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ExitStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAO \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ClearStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by SilentStatement::Execute().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStatementNode_a721589622c930c010927b9a9c55b173e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNext\:StatementNode}
{\xe \v StatementNode\:GetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * StatementNode::GetNext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZV}
{\bkmkend AAAAAAABZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b EvalStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZU \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SilentStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACXL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 98 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    99 \{\par
  100     return NOMEM;\par
  101 \}\par
}
}
{\xe \v GetNodeType\:StatementNode}
{\xe \v StatementNode\:GetNodeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NodeType} StatementNode::GetNodeType (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAE}
{\bkmkend AAAAAAADAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 88 of file nodes.cpp.}\par
{
References statement.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    89 \{\par
   90     return statement;\par
   91 \}\par
}
}
{\xe \v GetTextCode\:StatementNode}
{\xe \v StatementNode\:GetTextCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * StatementNode::GetTextCode (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAF}
{\bkmkend AAAAAAADAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 93 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    94 \{\par
   95     return (char*)"STA";\par
   96 \}\par
}
}
{\xe \v Replace\:StatementNode}
{\xe \v StatementNode\:Replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StatementNode::Replace ({\b SyntaxNode} *  {\i n}, {\b SyntaxNode} *  {\i x}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZX}
{\bkmkend AAAAAAABZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b EvalStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZW \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SilentStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACXM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 109 of file nodes.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   110 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b nodes.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b nodes.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SubtractionNode Class Reference\par \pard\plain 
{\tc\tcl2 \v SubtractionNode}
{\xe \v SubtractionNode}
{\bkmkstart AAAAAAADAG}
{\bkmkend AAAAAAADAG}
\par
{
{\f2 #include <operators.h>}}\par
Inheritance diagram for SubtractionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSubtractionNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for SubtractionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSubtractionNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SubtractionNode} ({\b ExpressionNode} *{\b left}, {\b ExpressionNode} *{\b right})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ReductionType} {\b GetReductionType} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 107 of file operators.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SubtractionNode\:SubtractionNode}
{\xe \v SubtractionNode\:SubtractionNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SubtractionNode::SubtractionNode ({\b ExpressionNode} *  {\i left}, {\b ExpressionNode} *  {\i right})}}
\par
{\bkmkstart AAAAAAADAH}
{\bkmkend AAAAAAADAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 329 of file operators.cpp.}\par
{
References NumericOperator::NumericOperator().}\par
{
Referenced by Parser::ParseAddSubstract().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   329                                                                             :\par
  330     NumericOperator(left, right) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSubtractionNode_a1c08339ecfc99430eec6db0b7687c716_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSubtractionNode_a1c08339ecfc99430eec6db0b7687c716_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Evaluate\:SubtractionNode}
{\xe \v SubtractionNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * SubtractionNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBU}
{\bkmkend AAAAAAACBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 342 of file operators.cpp.}\par
{
References ExpressionNode::Evaluate(), NumericOperator::left, ExpressionNode::result, NumericOperator::right, and Number::Sub().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   343 \{\par
  344     result = left->Evaluate()->Sub(right->Evaluate());\par
  345     return result;\par
  346 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSubtractionNode_a6ab885bb5ab826b5d0c70a63e753f5e3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:SubtractionNode}
{\xe \v SubtractionNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * SubtractionNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDA}
{\bkmkend AAAAAAACDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 348 of file operators.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   349 \{\par
  350     return (char*)"-";\par
  351 \}\par
}
}
{\xe \v GetPrecedence\:SubtractionNode}
{\xe \v SubtractionNode\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SubtractionNode::GetPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDG}
{\bkmkend AAAAAAACDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 337 of file operators.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   338 \{\par
  339     return 2;\par
  340 \}\par
}
}
{\xe \v GetReductionType\:SubtractionNode}
{\xe \v SubtractionNode\:GetReductionType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ReductionType} SubtractionNode::GetReductionType (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAI}
{\bkmkend AAAAAAADAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 332 of file operators.cpp.}\par
{
References complsubreduc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   333 \{\par
  334     return complsubreduc;\par
  335 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SyntaxNode Class Reference\par \pard\plain 
{\tc\tcl2 \v SyntaxNode}
{\xe \v SyntaxNode}
{\bkmkstart AAAAAAADAJ}
{\bkmkend AAAAAAADAJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all nodes in a syntax tree. }}\par
{
{\f2 #include <nodes.h>}}\par
Inheritance diagram for SyntaxNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for SyntaxNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~SyntaxNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetFirstNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b GetFirstNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b GetParent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetParent} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b NodeType} {\b GetNodeType} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ReductionType} {\b GetReductionType} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ResetIterator} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b SyntaxNode} * {\b GetNext} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual char * {\b GetTextCode} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual char * {\b Execute} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Attach} ({\b SyntaxNode} *node)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Detach} ({\b SyntaxNode} *node)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Replace} ({\b SyntaxNode} *n, {\b SyntaxNode} *x)=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} * {\b output}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b parent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b iterator}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b leftBottom}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all nodes in a syntax tree. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
More info is available at Wikipedia: {\f2 http://en.wikipedia.org/wiki/Abstract_syntax_tree} \par
}{
Definition at line 55 of file nodes.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SyntaxNode\:SyntaxNode}
{\xe \v SyntaxNode\:SyntaxNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SyntaxNode::SyntaxNode ()}}
\par
{\bkmkstart AAAAAAADAK}
{\bkmkend AAAAAAADAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file nodes.cpp.}\par
{
References CharBuffer::CharBuffer(), iterator, leftBottom, output, and parent.}\par
{
Referenced by ErrorNode::ErrorNode(), ExpressionNode::ExpressionNode(), StatementBlockNode::StatementBlockNode(), and StatementNode::StatementNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    39 \{\par
   40     output = new CharBuffer();\par
   41     parent = NOMEM;\par
   42     iterator = NOMEM;\par
   43     leftBottom = false;\par
   44 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode_ac94372d402f38a118b4e8cd20ba7e520_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode_ac94372d402f38a118b4e8cd20ba7e520_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~SyntaxNode\:SyntaxNode}
{\xe \v SyntaxNode\:~SyntaxNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SyntaxNode::~SyntaxNode (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAL}
{\bkmkend AAAAAAADAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file nodes.cpp.}\par
{
References output.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    47 \{\par
   48     delete output;\par
   49 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Attach\:SyntaxNode}
{\xe \v SyntaxNode\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void SyntaxNode::Attach ({\b SyntaxNode} *  {\i node}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StatementBlockNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b UserFunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b EvalStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SilentStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACXI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ErrorNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b VariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b NumericOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AbsoluteNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b FunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFD \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b UnaryNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Optimizer::BalanceTree().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode_af25fd5963125bb2d6b9a1864b9ff79c8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Detach\:SyntaxNode}
{\xe \v SyntaxNode\:Detach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void SyntaxNode::Detach ({\b SyntaxNode} *  {\i node}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StatementBlockNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b UserFunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b EvalStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SilentStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACXJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ErrorNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b VariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b NumericOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AbsoluteNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b FunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFF \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b UnaryNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Optimizer::BalanceTree(), and Optimizer::ReduceUnaryNodes().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode_ae57f629a5c5fa0994f036c105396da69_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Execute\:SyntaxNode}
{\xe \v SyntaxNode\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual char* SyntaxNode::Execute (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABYX}
{\bkmkend AAAAAAABYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b DrawStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b PlotStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ExecuteStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SaveStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACWS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b LoadStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACMR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ListStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACMG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ShowStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACXA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b DigitsStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABXY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b OutputStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b InputStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b DeleteStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABXQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b HelpStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACHH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b StatementBlockNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b EvalStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b FunctionDefinitionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACEI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SilentStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACXK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ListFunctionsStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACMB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ErrorNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b PrefsStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACUW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b PromptStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MemoryStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ListVariablesStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACMK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b VersionStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b EmptyStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ExitStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAO \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ClearStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Evaluator::Evaluate(), StatementBlockNode::Execute(), LoadStatement::Execute(), ExecuteStatement::Execute(), and PreferencesBase::SetPrefs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode_ad8418608fa224536b48a590c87f0a509_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetFirstNode\:SyntaxNode}
{\xe \v SyntaxNode\:GetFirstNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} SyntaxNode::GetFirstNode ()}}
\par
{\bkmkstart AAAAAAADAQ}
{\bkmkend AAAAAAADAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file nodes.cpp.}\par
{
References leftBottom.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    57 \{\par
   58     return leftBottom;\par
   59 \}\par
}
}
{\xe \v GetNext\:SyntaxNode}
{\xe \v SyntaxNode\:GetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b SyntaxNode}* SyntaxNode::GetNext (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b UserFunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b StatementBlockNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b EvalStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SilentStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACXL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ErrorNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b VariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b NumericOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AbsoluteNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b FunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFH \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b UnaryNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Optimizer::BalanceTree(), Optimizer::GetTreeDepth(), Optimizer::ReduceUnaryNodes(), Optimizer::ReduceValueNodes(), Optimizer::TagChildren(), and Optimizer::TagStartNode().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode_af1fa46ba30aa4f2affa2d4e96a4be010_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeType\:SyntaxNode}
{\xe \v SyntaxNode\:GetNodeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b NodeType} SyntaxNode::GetNodeType (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABZA}
{\bkmkend AAAAAAABZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StatementBlockNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ErrorNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAE \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Optimizer::BalanceTree(), and Optimizer::ReduceValueNodes().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode_aef71a18975535d050393f0541b3cdc6a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetParent\:SyntaxNode}
{\xe \v SyntaxNode\:GetParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * SyntaxNode::GetParent ()}}
\par
{\bkmkstart AAAAAAADAT}
{\bkmkend AAAAAAADAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file nodes.cpp.}\par
{
References parent.}\par
{
Referenced by Optimizer::BalanceTree(), Optimizer::ReduceUnaryNodes(), and Optimizer::ReduceValueNodes().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    67 \{\par
   68     return parent;\par
   69 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode_a4a85fd710ad44edbc5b3ac625c10cd08_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetReductionType\:SyntaxNode}
{\xe \v SyntaxNode\:GetReductionType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ReductionType} SyntaxNode::GetReductionType (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b ComplexiNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b PiNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b EulersNumberNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SubtractionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AdditionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLG \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b UnaryNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 51 of file nodes.cpp.}\par
{
References nonereduc.}\par
{
Referenced by Optimizer::ReduceUnaryNodes(), and Optimizer::ReduceValueNodes().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    52 \{\par
   53     return nonereduc;\par
   54 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode_a5384fc779eee947b5e09bf2adb6cc606_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetTextCode\:SyntaxNode}
{\xe \v SyntaxNode\:GetTextCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual char* SyntaxNode::GetTextCode (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABZC}
{\bkmkend AAAAAAABZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StatementBlockNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ErrorNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAF \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Replace\:SyntaxNode}
{\xe \v SyntaxNode\:Replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void SyntaxNode::Replace ({\b SyntaxNode} *  {\i n}, {\b SyntaxNode} *  {\i x}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StatementBlockNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b UserFunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b EvalStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b NumericValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SilentStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACXM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ErrorNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b VariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b NumericOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACQQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AbsoluteNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b FunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b UnaryNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Optimizer::ReduceUnaryNodes(), and Optimizer::ReduceValueNodes().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode_a2797ff5eb05f3a36ae1be41b70105e05_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ResetIterator\:SyntaxNode}
{\xe \v SyntaxNode\:ResetIterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SyntaxNode::ResetIterator (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAX}
{\bkmkend AAAAAAADAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file nodes.cpp.}\par
{
References iterator.}\par
{
Referenced by Optimizer::BalanceTree(), Optimizer::GetTreeDepth(), Optimizer::ReduceUnaryNodes(), Optimizer::ReduceValueNodes(), Optimizer::TagChildren(), and Optimizer::TagStartNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    77 \{\par
   78     iterator = NOMEM;\par
   79 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode_ac51307368fb255aa760b99e137178c89_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetFirstNode\:SyntaxNode}
{\xe \v SyntaxNode\:SetFirstNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SyntaxNode::SetFirstNode ()}}
\par
{\bkmkstart AAAAAAADAY}
{\bkmkend AAAAAAADAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file nodes.cpp.}\par
{
References leftBottom.}\par
{
Referenced by Optimizer::TagStartNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    62 \{\par
   63     leftBottom = true;\par
   64 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode_a24e2d5b5e94a67ce55cea52cd48212e6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetParent\:SyntaxNode}
{\xe \v SyntaxNode\:SetParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SyntaxNode::SetParent ({\b SyntaxNode} *  {\i node})}}
\par
{\bkmkstart AAAAAAADAZ}
{\bkmkend AAAAAAADAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file nodes.cpp.}\par
{
References parent.}\par
{
Referenced by UnaryNode::Attach(), FunctionNode::Attach(), AbsoluteNode::Attach(), NumericOperator::Attach(), SilentStatement::Attach(), EvalStatement::Attach(), and Optimizer::TagChildren().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    72 \{\par
   73     parent = node;\par
   74 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSyntaxNode_a7902bb2c389a784c11c2b649a84824e9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v iterator\:SyntaxNode}
{\xe \v SyntaxNode\:iterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode}* SyntaxNode::iterator{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADBA}
{\bkmkend AAAAAAADBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file nodes.h.}\par
{
Referenced by UnaryNode::GetNext(), FunctionNode::GetNext(), AbsoluteNode::GetNext(), NumericOperator::GetNext(), SilentStatement::GetNext(), EvalStatement::GetNext(), UserFunctionNode::GetNext(), NumericOperator::Replace(), ResetIterator(), StatementBlockNode::StatementBlockNode(), and SyntaxNode().}\par
}
{\xe \v leftBottom\:SyntaxNode}
{\xe \v SyntaxNode\:leftBottom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} SyntaxNode::leftBottom{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADBB}
{\bkmkend AAAAAAADBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file nodes.h.}\par
{
Referenced by GetFirstNode(), NumericValueNode::GetPrecedence(), SetFirstNode(), and SyntaxNode().}\par
}
{\xe \v output\:SyntaxNode}
{\xe \v SyntaxNode\:output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CharBuffer}* SyntaxNode::output{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADBC}
{\bkmkend AAAAAAADBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file nodes.h.}\par
{
Referenced by VersionStatement::Execute(), MemoryStatement::Execute(), ErrorNode::Execute(), FunctionDefinitionNode::Execute(), EvalStatement::Execute(), StatementBlockNode::Execute(), HelpStatement::Execute(), DeleteStatement::Execute(), InputStatement::Execute(), OutputStatement::Execute(), DigitsStatement::Execute(), ShowStatement::Execute(), ListStatement::Execute(), ExecuteStatement::Execute(), PlotStatement::Execute(), FunctionDefinitionNode::FunctionDefinitionNode(), NumericValueNode::GetNodeText(), UnaryNode::GetText(), FunctionNode::GetText(), AbsoluteNode::GetText(), NumericOperator::GetText(), FunctionDefinitionNode::GetText(), SyntaxNode(), and ~SyntaxNode().}\par
}
{\xe \v parent\:SyntaxNode}
{\xe \v SyntaxNode\:parent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode}* SyntaxNode::parent{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADBD}
{\bkmkend AAAAAAADBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file nodes.h.}\par
{
Referenced by GetParent(), SetParent(), and SyntaxNode().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b nodes.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b nodes.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TangentNode Class Reference\par \pard\plain 
{\tc\tcl2 \v TangentNode}
{\xe \v TangentNode}
{\bkmkstart AAAAAAADBE}
{\bkmkend AAAAAAADBE}
\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for TangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTangentNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for TangentNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTangentNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TangentNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 352 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TangentNode\:TangentNode}
{\xe \v TangentNode\:TangentNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TangentNode::TangentNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAADBF}
{\bkmkend AAAAAAADBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 782 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   782                                                    :\par
  783     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTangentNode_a6feab62e09d65651a67a11e691afd9c0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTangentNode_a6feab62e09d65651a67a11e691afd9c0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:TangentNode}
{\xe \v TangentNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * TangentNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBG}
{\bkmkend AAAAAAADBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 785 of file functions.cpp.}\par
{
References TangentNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   786 \{\par
  787     return new TangentNode(expression);\par
  788 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTangentNode_ae71e32f065988aa0536e2d5420b23b52_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:TangentNode}
{\xe \v TangentNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * TangentNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBG}
{\bkmkend AAAAAAACBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 790 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, ExpressionNode::result, and Number::Tangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   791 \{\par
  792     result = expression->Evaluate()->Tangent();\par
  793     return result;\par
  794 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTangentNode_a1ec2c48b6f174080a3f121773cf86237_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:TangentNode}
{\xe \v TangentNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * TangentNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCL}
{\bkmkend AAAAAAACCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 796 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   797 \{\par
  798     return (char*)"tan";\par
  799 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TaskBase Class Reference\par \pard\plain 
{\tc\tcl2 \v TaskBase}
{\xe \v TaskBase}
{\bkmkstart AAAAAAADBH}
{\bkmkend AAAAAAADBH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating a system thread. }}\par
{
{\f2 #include <task.h>}}\par
Inheritance diagram for TaskBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTaskBase__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TaskBase} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TaskBase} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Start} ({\b ThreadBase} *thread)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b WaitExit} ()=0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating a system thread. \par
}{
Definition at line 42 of file task.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TaskBase\:TaskBase}
{\xe \v TaskBase\:TaskBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TaskBase::TaskBase (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADBI}
{\bkmkend AAAAAAADBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file task.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{ \}\par
}
}
{\xe \v ~TaskBase\:TaskBase}
{\xe \v TaskBase\:~TaskBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual TaskBase::~TaskBase (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBJ}
{\bkmkend AAAAAAADBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file task.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Start\:TaskBase}
{\xe \v TaskBase\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void TaskBase::Start ({\b ThreadBase} *  {\i thread}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACZI}
{\bkmkend AAAAAAACZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StandardTask} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v WaitExit\:TaskBase}
{\xe \v TaskBase\:WaitExit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void TaskBase::WaitExit (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACZK}
{\bkmkend AAAAAAACZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StandardTask} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b task.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tBigInt Struct Reference\par \pard\plain 
{\tc\tcl2 \v tBigInt}
{\xe \v tBigInt}
{\bkmkstart AAAAAAADBK}
{\bkmkend AAAAAAADBK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tBigInt} & {\b operator=} (const {\b tBigInt} &rhs)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b GetLength} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b GetBlock} ({\b tU32} idx) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetZero} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tB} {\b IsZero} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetU64} ({\b tU64} val)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetU32} ({\b tU32} val)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b GetU32} () const \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b m_length}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b m_blocks} [{\b c_BigInt_MaxBlocks}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 70 of file dragon4.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetBlock\:tBigInt}
{\xe \v tBigInt\:GetBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} tBigInt::GetBlock ({\b tU32}  {\i idx}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADBL}
{\bkmkend AAAAAAADBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file dragon4.cpp.}\par
{
References m_blocks.}\par
{
Referenced by Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    91                                   \{\par
   92         return m_blocks[idx];\par
   93     \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtBigInt_a22350ff8e7010047b7ac5be70e8906bd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetLength\:tBigInt}
{\xe \v tBigInt\:GetLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} tBigInt::GetLength () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADBM}
{\bkmkend AAAAAAADBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file dragon4.cpp.}\par
{
References m_length.}\par
{
Referenced by Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    88                                   \{\par
   89         return m_length;\par
   90     \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtBigInt_aee567e4c77187577f77fc1643dc427ba_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetU32\:tBigInt}
{\xe \v tBigInt\:GetU32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} tBigInt::GetU32 () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADBN}
{\bkmkend AAAAAAADBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 136 of file dragon4.cpp.}\par
{
References m_blocks, and m_length.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   136                         \{\par
  137         return (m_length == 0) ? 0 : m_blocks[0];\par
  138     \}\par
}
}
{\xe \v IsZero\:tBigInt}
{\xe \v tBigInt\:IsZero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tB} tBigInt::IsZero () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADBO}
{\bkmkend AAAAAAADBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file dragon4.cpp.}\par
{
References m_length.}\par
{
Referenced by Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    99                             \{\par
  100         return m_length == 0;\par
  101     \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtBigInt_a4e0c59f15fcb292ea4ec5d448fa10b58_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v operator=\:tBigInt}
{\xe \v tBigInt\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tBigInt}& tBigInt::operator= (const {\b tBigInt} &  {\i rhs}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADBP}
{\bkmkend AAAAAAADBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file dragon4.cpp.}\par
{
References m_blocks, and m_length.}\par
{
Referenced by BigInt_MultiplyPow10(), BigInt_Pow10(), and Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    74     \{\par
   75         tU32 length = rhs.m_length;\par
   76         tU32 * pLhsCur = m_blocks;\par
   77         for (const tU32 *pRhsCur = rhs.m_blocks, *pRhsEnd = pRhsCur + length;\par
   78                 pRhsCur != pRhsEnd;\par
   79                 ++pLhsCur, ++pRhsCur)\par
   80         \{\par
   81             *pLhsCur = *pRhsCur;\par
   82         \}\par
   83         m_length = length;\par
   84         return *this;\par
   85     \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtBigInt_a6527277620819a6ff4f9386ad2ad0a41_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetU32\:tBigInt}
{\xe \v tBigInt\:SetU32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tBigInt::SetU32 ({\b tU32}  {\i val}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADBQ}
{\bkmkend AAAAAAADBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 123 of file dragon4.cpp.}\par
{
References m_blocks, and m_length.}\par
{
Referenced by BigInt_Pow10(), and Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   124     \{\par
  125         if (val != 0)\par
  126         \{\par
  127             m_blocks[0] = val;\par
  128             m_length    = (val != 0);\par
  129         \}\par
  130         else\par
  131         \{\par
  132             m_length = 0;\par
  133         \}\par
  134     \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtBigInt_a1aec50a9a3a9129b283c43eecc6df8c3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetU64\:tBigInt}
{\xe \v tBigInt\:SetU64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tBigInt::SetU64 ({\b tU64}  {\i val}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADBR}
{\bkmkend AAAAAAADBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file dragon4.cpp.}\par
{
References m_blocks, and m_length.}\par
{
Referenced by Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   105     \{\par
  106         if (val > 0xFFFFFFFF)\par
  107         \{\par
  108             m_blocks[0] = val & 0xFFFFFFFF;\par
  109             m_blocks[1] = (val >> 32) & 0xFFFFFFFF;\par
  110             m_length    = 2;\par
  111         \}\par
  112         else if (val != 0)\par
  113         \{\par
  114             m_blocks[0] = val & 0xFFFFFFFF;\par
  115             m_length    = 1;\par
  116         \}\par
  117         else\par
  118         \{\par
  119             m_length = 0;\par
  120         \}\par
  121     \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtBigInt_ab25f77e908d231d8836355cf4586f983_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetZero\:tBigInt}
{\xe \v tBigInt\:SetZero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tBigInt::SetZero (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADBS}
{\bkmkend AAAAAAADBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file dragon4.cpp.}\par
{
References m_length.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    96                             \{\par
   97         m_length = 0;\par
   98     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_blocks\:tBigInt}
{\xe \v tBigInt\:m_blocks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} tBigInt::m_blocks[{\b c_BigInt_MaxBlocks}]}}
\par
{\bkmkstart AAAAAAADBT}
{\bkmkend AAAAAAADBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 142 of file dragon4.cpp.}\par
{
Referenced by BigInt_Add(), BigInt_Compare(), BigInt_DivideWithRemainder_MaxQuotient9(), BigInt_Multiply(), BigInt_Multiply10(), BigInt_Multiply2(), BigInt_Pow2(), BigInt_ShiftLeft(), GetBlock(), GetU32(), operator=(), SetU32(), and SetU64().}\par
}
{\xe \v m_length\:tBigInt}
{\xe \v tBigInt\:m_length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} tBigInt::m_length}}
\par
{\bkmkstart AAAAAAADBU}
{\bkmkend AAAAAAADBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 141 of file dragon4.cpp.}\par
{
Referenced by BigInt_Add(), BigInt_Compare(), BigInt_DivideWithRemainder_MaxQuotient9(), BigInt_Multiply(), BigInt_Multiply10(), BigInt_Multiply2(), BigInt_Pow2(), BigInt_ShiftLeft(), GetLength(), GetU32(), IsZero(), operator=(), SetU32(), SetU64(), and SetZero().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
lib/dconv/{\b dragon4.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TestProgram Class Reference\par \pard\plain 
{\tc\tcl2 \v TestProgram}
{\xe \v TestProgram}
{\bkmkstart AAAAAAADBV}
{\bkmkend AAAAAAADBV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test control class. }}\par
{
{\f2 #include <program_test.h>}}\par
Inheritance diagram for TestProgram:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTestProgram__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for TestProgram:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTestProgram__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestProgram} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TestProgram} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Initialize} (int argc, char **argv)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Run} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Exit} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunTests} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunTestset1} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunTestset2} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunTestset3} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunTestset4} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunTestset5} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestExpression} (const char *{\b expression}, const char *result)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestStatement} (const char *{\b statement}, const char *result)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PerformTest} (const char *input, const char *result, {\b bool} show)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b fail}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test control class. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This control class handle the execution of tests. \par
}{
Definition at line 42 of file program_test.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TestProgram\:TestProgram}
{\xe \v TestProgram\:TestProgram}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TestProgram::TestProgram ()}}
\par
{\bkmkstart AAAAAAADBW}
{\bkmkend AAAAAAADBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~TestProgram\:TestProgram}
{\xe \v TestProgram\:~TestProgram}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual TestProgram::~TestProgram (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBX}
{\bkmkend AAAAAAADBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Exit\:TestProgram}
{\xe \v TestProgram\:Exit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void TestProgram::Exit (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVB}
{\bkmkend AAAAAAACVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Program} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Initialize\:TestProgram}
{\xe \v TestProgram\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void TestProgram::Initialize (int  {\i argc}, char **  {\i argv}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVE}
{\bkmkend AAAAAAACVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Program} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABND \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v PerformTest\:TestProgram}
{\xe \v TestProgram\:PerformTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TestProgram::PerformTest (const char *  {\i input}, const char *  {\i result}, {\b bool}  {\i show}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBY}
{\bkmkend AAAAAAADBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Run\:TestProgram}
{\xe \v TestProgram\:Run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void TestProgram::Run (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVI}
{\bkmkend AAAAAAACVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Program} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v RunTests\:TestProgram}
{\xe \v TestProgram\:RunTests}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TestProgram::RunTests (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBZ}
{\bkmkend AAAAAAADBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RunTestset1\:TestProgram}
{\xe \v TestProgram\:RunTestset1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TestProgram::RunTestset1 (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCA}
{\bkmkend AAAAAAADCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RunTestset2\:TestProgram}
{\xe \v TestProgram\:RunTestset2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TestProgram::RunTestset2 (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCB}
{\bkmkend AAAAAAADCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RunTestset3\:TestProgram}
{\xe \v TestProgram\:RunTestset3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TestProgram::RunTestset3 (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCC}
{\bkmkend AAAAAAADCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RunTestset4\:TestProgram}
{\xe \v TestProgram\:RunTestset4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TestProgram::RunTestset4 (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCD}
{\bkmkend AAAAAAADCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RunTestset5\:TestProgram}
{\xe \v TestProgram\:RunTestset5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TestProgram::RunTestset5 (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCE}
{\bkmkend AAAAAAADCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TestExpression\:TestProgram}
{\xe \v TestProgram\:TestExpression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TestProgram::TestExpression (const char *  {\i expression}, const char *  {\i result}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCF}
{\bkmkend AAAAAAADCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TestStatement\:TestProgram}
{\xe \v TestProgram\:TestStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TestProgram::TestStatement (const char *  {\i statement}, const char *  {\i result}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCG}
{\bkmkend AAAAAAADCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v fail\:TestProgram}
{\xe \v TestProgram\:fail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int TestProgram::fail{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCH}
{\bkmkend AAAAAAADCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file program_test.h.}\par
}
{\xe \v pass\:TestProgram}
{\xe \v TestProgram\:pass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int TestProgram::pass{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCI}
{\bkmkend AAAAAAADCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file program_test.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/{\b program_test.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
textdef Struct Reference\par \pard\plain 
{\tc\tcl2 \v textdef}
{\xe \v textdef}
{\bkmkstart AAAAAAADCJ}
{\bkmkend AAAAAAADCJ}
\par
{
{\f2 #include <text.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b text}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 76 of file text.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v id\:textdef}
{\xe \v textdef\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int textdef::id}}
\par
{\bkmkstart AAAAAAADCK}
{\bkmkend AAAAAAADCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file text.h.}\par
{
Referenced by Language::GetText(), StandardLanguage::LoadCatalogs(), and StandardLanguage::Translate().}\par
}
{\xe \v text\:textdef}
{\xe \v textdef\:text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* textdef::text}}
\par
{\bkmkstart AAAAAAADCL}
{\bkmkend AAAAAAADCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file text.h.}\par
{
Referenced by StandardLanguage::LoadCatalogs(), StandardLanguage::Translate(), and PosixLanguage::Translate().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/localize/{\b text.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
texttag Struct Reference\par \pard\plain 
{\tc\tcl2 \v texttag}
{\xe \v texttag}
{\bkmkstart AAAAAAADCM}
{\bkmkend AAAAAAADCM}
\par
{
{\f2 #include <clib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b tag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b text}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 42 of file clib.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v tag\:texttag}
{\xe \v texttag\:tag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* texttag::tag}}
\par
{\bkmkstart AAAAAAADCN}
{\bkmkend AAAAAAADCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file clib.h.}\par
{
Referenced by Untag().}\par
}
{\xe \v text\:texttag}
{\xe \v texttag\:text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* texttag::text}}
\par
{\bkmkstart AAAAAAADCO}
{\bkmkend AAAAAAADCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file clib.h.}\par
{
Referenced by Untag().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
lib/{\b clib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tFloatUnion32 Union Reference\par \pard\plain 
{\tc\tcl2 \v tFloatUnion32}
{\xe \v tFloatUnion32}
{\bkmkstart AAAAAAADCP}
{\bkmkend AAAAAAADCP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tB} {\b IsNegative} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b GetExponent} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b GetMantissa} () const \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tF32} {\b m_floatingPoint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b m_integer}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 68 of file dprint.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetExponent\:tFloatUnion32}
{\xe \v tFloatUnion32\:GetExponent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} tFloatUnion32::GetExponent () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADCQ}
{\bkmkend AAAAAAADCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file dprint.cpp.}\par
{
References m_integer.}\par
{
Referenced by PrintFloat32().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    73                              \{\par
   74         return (m_integer >> 23) & 0xFF;\par
   75     \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "uniontFloatUnion32_a5fdea8e6c84f336aa35050476f3cd776_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetMantissa\:tFloatUnion32}
{\xe \v tFloatUnion32\:GetMantissa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} tFloatUnion32::GetMantissa () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADCR}
{\bkmkend AAAAAAADCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file dprint.cpp.}\par
{
References m_integer.}\par
{
Referenced by PrintFloat32().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    76                              \{\par
   77         return m_integer & 0x7FFFFF;\par
   78     \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "uniontFloatUnion32_a09e9d4d1db976209ea3a5720ae55b373_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v IsNegative\:tFloatUnion32}
{\xe \v tFloatUnion32\:IsNegative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tB} tFloatUnion32::IsNegative () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADCS}
{\bkmkend AAAAAAADCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file dprint.cpp.}\par
{
References m_integer.}\par
{
Referenced by PrintFloat32().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    70                              \{\par
   71         return (m_integer >> 31) != 0;\par
   72     \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "uniontFloatUnion32_a712fc8a147092d725afef356b58e222d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_floatingPoint\:tFloatUnion32}
{\xe \v tFloatUnion32\:m_floatingPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tF32} tFloatUnion32::m_floatingPoint}}
\par
{\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 80 of file dprint.cpp.}\par
{
Referenced by PrintFloat32().}\par
}
{\xe \v m_integer\:tFloatUnion32}
{\xe \v tFloatUnion32\:m_integer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} tFloatUnion32::m_integer}}
\par
{\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file dprint.cpp.}\par
{
Referenced by GetExponent(), GetMantissa(), and IsNegative().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this union was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
lib/dconv/{\b dprint.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tFloatUnion64 Union Reference\par \pard\plain 
{\tc\tcl2 \v tFloatUnion64}
{\xe \v tFloatUnion64}
{\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tB} {\b IsNegative} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b GetExponent} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU64} {\b GetMantissa} () const \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tF64} {\b m_floatingPoint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU64} {\b m_integer}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 90 of file dprint.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetExponent\:tFloatUnion64}
{\xe \v tFloatUnion64\:GetExponent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} tFloatUnion64::GetExponent () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file dprint.cpp.}\par
{
References m_integer.}\par
{
Referenced by PrintFloat64().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    95                              \{\par
   96         return (m_integer >> 52) & 0x7FF;\par
   97     \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "uniontFloatUnion64_a9a52499d5e9a41152da0368522121dd9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetMantissa\:tFloatUnion64}
{\xe \v tFloatUnion64\:GetMantissa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU64} tFloatUnion64::GetMantissa () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 98 of file dprint.cpp.}\par
{
References m_integer.}\par
{
Referenced by PrintFloat64().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    98                              \{\par
   99         return m_integer & 0xFFFFFFFFFFFFFull;\par
  100     \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "uniontFloatUnion64_ac19d91a8d0950d68fb2610925e2fe43e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v IsNegative\:tFloatUnion64}
{\xe \v tFloatUnion64\:IsNegative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tB} tFloatUnion64::IsNegative () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file dprint.cpp.}\par
{
References m_integer.}\par
{
Referenced by PrintFloat64().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    92                              \{\par
   93         return (m_integer >> 63) != 0;\par
   94     \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "uniontFloatUnion64_acef6b9abed06d568b90ed31592e13242_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_floatingPoint\:tFloatUnion64}
{\xe \v tFloatUnion64\:m_floatingPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tF64} tFloatUnion64::m_floatingPoint}}
\par
{\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 102 of file dprint.cpp.}\par
{
Referenced by PrintFloat64().}\par
}
{\xe \v m_integer\:tFloatUnion64}
{\xe \v tFloatUnion64\:m_integer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU64} tFloatUnion64::m_integer}}
\par
{\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 103 of file dprint.cpp.}\par
{
Referenced by GetExponent(), GetMantissa(), and IsNegative().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this union was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
lib/dconv/{\b dprint.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ThreadBase Class Reference\par \pard\plain 
{\tc\tcl2 \v ThreadBase}
{\xe \v ThreadBase}
{\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating runable component. }}\par
{
{\f2 #include <thread.h>}}\par
Inheritance diagram for ThreadBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classThreadBase__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ThreadBase} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ThreadBase} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Run} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const char * {\b GetName} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b GetStackSize} ()=0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating runable component. \par
}{
Definition at line 40 of file thread.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ThreadBase\:ThreadBase}
{\xe \v ThreadBase\:ThreadBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ThreadBase::ThreadBase (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file thread.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    42 \{ \}\par
}
}
{\xe \v ~ThreadBase\:ThreadBase}
{\xe \v ThreadBase\:~ThreadBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual ThreadBase::~ThreadBase (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file thread.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    43 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetName\:ThreadBase}
{\xe \v ThreadBase\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual const char* ThreadBase::GetName (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b ConsoleBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABWA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetStackSize\:ThreadBase}
{\xe \v ThreadBase\:GetStackSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int ThreadBase::GetStackSize (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACXY}
{\bkmkend AAAAAAACXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StandardConsole} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACXX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Run\:ThreadBase}
{\xe \v ThreadBase\:Run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void ThreadBase::Run (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACYB}
{\bkmkend AAAAAAACYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b StandardConsole} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACYA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by StandardProgram::Run(), and StandardTask::Start().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classThreadBase_a795d258c1f40c123859d0e83dce6a0ad_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/system/base/{\b thread.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Token Struct Reference\par \pard\plain 
{\tc\tcl2 \v Token}
{\xe \v Token}
{\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tokens are created by the Lexical Analyzer and provides an intermediate state for input consumed by the parser. }}\par
{
{\f2 #include <token.h>}}\par
Collaboration diagram for Token:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structToken__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} ({\b Token} *{\b last}, {\b Symbol} {\b symbol}, int {\b pos})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} ({\b Token} *{\b last}, {\b Symbol} {\b symbol}, const char *{\b text}, int {\b pos})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Token} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetPos} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetText} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} * {\b GetLastToken} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} * {\b GetNextToken} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Symbol} {\b symbol}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pos}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b text}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} * {\b last}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} * {\b next}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Lexer}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tokens are created by the Lexical Analyzer and provides an intermediate state for input consumed by the parser. \par
}{
Definition at line 43 of file token.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Token\:Token}
{\xe \v Token\:Token}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Token::Token ({\b Token} *  {\i last}, {\b Symbol}  {\i symbol}, int  {\i pos})}}
\par
{\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file token.cpp.}\par
{
References last, next, pos, symbol, and text.}\par
{
Referenced by Lexer::GetLitteral(), GetNextToken(), Lexer::GetNextToken(), and Lexer::GetOperator().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    35 \{\par
   36     this->last = last;\par
   37     this->symbol = symbol;\par
   38     this->pos = pos;\par
   39     this->text = NOMEM;\par
   40     this->next = NOMEM;\par
   41 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structToken_a6331b847b4dc8cebe0e0a79c4de63204_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Token\:Token}
{\xe \v Token\:Token}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Token::Token ({\b Token} *  {\i last}, {\b Symbol}  {\i symbol}, const char *  {\i text}, int  {\i pos})}}
\par
{\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file token.cpp.}\par
{
References AllocAndCopy(), last, next, pos, symbol, and text.}\par
{
Referenced by Lexer::GetDigitValue(), Lexer::GetLitteral(), and Lexer::GetQuotedIdent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     this->last = last;\par
   46     this->symbol = symbol;\par
   47     this->pos = pos;\par
   48     this->next = NOMEM;\par
   49     AllocAndCopy(&this->text, text);\par
   50 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structToken_a5c78001ebd223017c11e5327667d458a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structToken_a5c78001ebd223017c11e5327667d458a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~Token\:Token}
{\xe \v Token\:~Token}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Token::~Token ()}}
\par
{\bkmkstart AAAAAAADDH}
{\bkmkend AAAAAAADDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file token.cpp.}\par
{
References next, and text.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    53 \{\par
   54     if (text != NOMEM) \{\par
   55         delete [] text;\par
   56     \}\par
   57 \par
   58     if (next != NOMEM) \{\par
   59         delete next;\par
   60     \}\par
   61 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetLastToken\:Token}
{\xe \v Token\:GetLastToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Token} * Token::GetLastToken ()}}
\par
{\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file token.cpp.}\par
{
References last.}\par
{
Referenced by Parser::PutToken().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    64 \{\par
   65     return last;\par
   66 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structToken_af5213b25192a01f526143461ab47e6af_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNextToken\:Token}
{\xe \v Token\:GetNextToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Token} * Token::GetNextToken ()}}
\par
{\bkmkstart AAAAAAADDJ}
{\bkmkend AAAAAAADDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file token.cpp.}\par
{
References next, pos, symend, and Token().}\par
{
Referenced by Parser::GetToken().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    69 \{\par
   70     // Always return a token if requested\par
   71     if (next == NOMEM) \{\par
   72         next = new Token(this, symend, pos);\par
   73     \}\par
   74 \par
   75     return next;\par
   76 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structToken_ac7eb963d5eff544dd48ffc23aa274356_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structToken_ac7eb963d5eff544dd48ffc23aa274356_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetPos\:Token}
{\xe \v Token\:GetPos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Token::GetPos ()}}
\par
{\bkmkstart AAAAAAADDK}
{\bkmkend AAAAAAADDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file token.cpp.}\par
{
References pos.}\par
{
Referenced by Parser::Expect(), Parser::Parse(), Parser::ParseAtomic(), Parser::ParseDeleteStatement(), Parser::ParseDigistStatement(), Parser::ParseFileStatement(), Parser::ParseFunctionDef(), Parser::ParseIdent(), Parser::ParseListStatement(), and Parser::ParseNumeralStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    84 \{\par
   85     return pos;\par
   86 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structToken_a5f93ea94940a6eeb060507e1da594599_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetText\:Token}
{\xe \v Token\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * Token::GetText ()}}
\par
{\bkmkstart AAAAAAADDL}
{\bkmkend AAAAAAADDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file token.cpp.}\par
{
References text.}\par
{
Referenced by Parser::ParseDeleteStatement(), Parser::ParseDigistStatement(), Parser::ParseDrawStatement(), Parser::ParseFileStatement(), Parser::ParseFunctionDef(), Parser::ParseHelpStatement(), Parser::ParseIdent(), Parser::ParseListStatement(), Parser::ParseNumber(), Parser::ParseNumeralStatement(), and Parser::ParsePromptStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    79 \{\par
   80     return text;\par
   81 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structToken_a15f1043de07ce8e452fbf115b85def71_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v Lexer\:Token}
{\xe \v Token\:Lexer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b Lexer}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADDM}
{\bkmkend AAAAAAADDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file token.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v last\:Token}
{\xe \v Token\:last}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Token}* Token::last{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDN}
{\bkmkend AAAAAAADDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file token.h.}\par
{
Referenced by GetLastToken(), and Token().}\par
}
{\xe \v next\:Token}
{\xe \v Token\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Token}* Token::next{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDO}
{\bkmkend AAAAAAADDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file token.h.}\par
{
Referenced by GetNextToken(), Token(), Lexer::Tokenize(), and ~Token().}\par
}
{\xe \v pos\:Token}
{\xe \v Token\:pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Token::pos{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file token.h.}\par
{
Referenced by GetNextToken(), GetPos(), and Token().}\par
}
{\xe \v symbol\:Token}
{\xe \v Token\:symbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Symbol} Token::symbol}}
\par
{\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file token.h.}\par
{
Referenced by Parser::Expect(), Parser::Parse(), Parser::ParseAddSubstract(), Parser::ParseAtomic(), Parser::ParseDeleteStatement(), Parser::ParseDigistStatement(), Parser::ParseDrawStatement(), Parser::ParseFactor(), Parser::ParseFileStatement(), Parser::ParseHelpStatement(), Parser::ParseIdent(), Parser::ParseListStatement(), Parser::ParseNumber(), Parser::ParseNumeralStatement(), Parser::ParsePower(), Parser::ParsePrefsStatement(), Parser::ParsePromptStatement(), Parser::ParseStatement(), Parser::ParseUnary(), Token(), Lexer::Tokenize(), and Parser::TryParseStatement().}\par
}
{\xe \v text\:Token}
{\xe \v Token\:text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* Token::text{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file token.h.}\par
{
Referenced by GetText(), Token(), and ~Token().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b token.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b token.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TruncNode Class Reference\par \pard\plain 
{\tc\tcl2 \v TruncNode}
{\xe \v TruncNode}
{\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A truncation function in a syntax tree. }}\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for TruncNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTruncNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for TruncNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTruncNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TruncNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b FunctionNode} * {\b Create} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A truncation function in a syntax tree. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Discard the number of digits right of the decimal point. See {\b Number} for implementation.\par
More info on the truncation function is available at Wikipedia: {\f2 http://en.wikipedia.org/wiki/Truncation} \par
}{
Definition at line 240 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TruncNode\:TruncNode}
{\xe \v TruncNode\:TruncNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TruncNode::TruncNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 560 of file functions.cpp.}\par
{
References FunctionNode::FunctionNode().}\par
{
Referenced by Create().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   560                                                :\par
  561     FunctionNode(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTruncNode_a32e8df2efc73ec374f93e3b60fd8c756_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTruncNode_a32e8df2efc73ec374f93e3b60fd8c756_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:TruncNode}
{\xe \v TruncNode\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionNode} * TruncNode::Create ({\b ExpressionNode} *  {\i expression}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 563 of file functions.cpp.}\par
{
References TruncNode().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   564 \{\par
  565     return new TruncNode(expression);\par
  566 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTruncNode_ac3abdd88221a6ced88a01bd95eff258e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Evaluate\:TruncNode}
{\xe \v TruncNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * TruncNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBM}
{\bkmkend AAAAAAACBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 568 of file functions.cpp.}\par
{
References ExpressionNode::Evaluate(), FunctionNode::expression, ExpressionNode::result, and Number::Trunc().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   569 \{\par
  570     result = expression->Evaluate()->Trunc();\par
  571     return result;\par
  572 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTruncNode_a6d999ff093e9e92e3aa288b04ba99fb2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:TruncNode}
{\xe \v TruncNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * TruncNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCR}
{\bkmkend AAAAAAACCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 574 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   575 \{\par
  576     return (char*)"trunc";\par
  577 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UnaryNode Class Reference\par \pard\plain 
{\tc\tcl2 \v UnaryNode}
{\xe \v UnaryNode}
{\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
\par
{
{\f2 #include <operators.h>}}\par
Inheritance diagram for UnaryNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUnaryNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for UnaryNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUnaryNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UnaryNode} ({\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~UnaryNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ReductionType} {\b GetReductionType} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b GetNext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetText} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Attach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Detach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Replace} ({\b SyntaxNode} *n, {\b SyntaxNode} *x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b expression}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 39 of file operators.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v UnaryNode\:UnaryNode}
{\xe \v UnaryNode\:UnaryNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UnaryNode::UnaryNode ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file operators.cpp.}\par
{
References expression, and ExpressionNode::ExpressionNode().}\par
{
Referenced by Parser::ParseUnary().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    36                                                :\par
   37     ExpressionNode(), expression(expression) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUnaryNode_a6d08d4e122b413b28e5163900800ff66_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUnaryNode_a6d08d4e122b413b28e5163900800ff66_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~UnaryNode\:UnaryNode}
{\xe \v UnaryNode\:~UnaryNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UnaryNode::~UnaryNode ()}}
\par
{\bkmkstart AAAAAAADDX}
{\bkmkend AAAAAAADDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file operators.cpp.}\par
{
References expression.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40 \{\par
   41     if (expression != NOMEM) \{\par
   42         delete expression;\par
   43     \}\par
   44 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Attach\:UnaryNode}
{\xe \v UnaryNode\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UnaryNode::Attach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAN}
{\bkmkend AAAAAAADAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 98 of file operators.cpp.}\par
{
References expression, and SyntaxNode::SetParent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    99 \{\par
  100     if (expression == NOMEM) \{\par
  101         expression = (ExpressionNode*)node;\par
  102         node->SetParent(this);\par
  103     \}\par
  104 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUnaryNode_ab3290a52eba94622c917f0f701883aad_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Detach\:UnaryNode}
{\xe \v UnaryNode\:Detach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UnaryNode::Detach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAP}
{\bkmkend AAAAAAADAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 106 of file operators.cpp.}\par
{
References expression.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   107 \{\par
  108     if (expression == node) \{\par
  109         expression = NOMEM;\par
  110     \}\par
  111 \}\par
}
}
{\xe \v Evaluate\:UnaryNode}
{\xe \v UnaryNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * UnaryNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 82 of file operators.cpp.}\par
{
References ExpressionNode::Evaluate(), expression, ExpressionNode::result, and Number::Unary().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    83 \{\par
   84     result = expression->Evaluate()->Unary();\par
   85     return result;\par
   86 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUnaryNode_af78161ffb449b18c406c46defe6fa9b3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNext\:UnaryNode}
{\xe \v UnaryNode\:GetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * UnaryNode::GetNext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAS}
{\bkmkend AAAAAAADAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 88 of file operators.cpp.}\par
{
References expression, and SyntaxNode::iterator.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    89 \{\par
   90     if (iterator == NOMEM) \{\par
   91         iterator = expression;\par
   92         return iterator;\par
   93     \}\par
   94 \par
   95     return NOMEM;\par
   96 \}\par
}
}
{\xe \v GetNodeText\:UnaryNode}
{\xe \v UnaryNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * UnaryNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDB}
{\bkmkend AAAAAAACDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 56 of file operators.cpp.}\par
{
Referenced by GetText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    57 \{\par
   58     return (char*)"-";\par
   59 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUnaryNode_ac3a91d51907bdc5a1cc781d8b0d0c0c2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetPrecedence\:UnaryNode}
{\xe \v UnaryNode\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int UnaryNode::GetPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDJ}
{\bkmkend AAAAAAACDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 51 of file operators.cpp.}\par
{
Referenced by GetText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    52 \{\par
   53     return 7;\par
   54 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUnaryNode_a6717d15d53d59718c772dab8f8393f13_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetReductionType\:UnaryNode}
{\xe \v UnaryNode\:GetReductionType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ReductionType} UnaryNode::GetReductionType (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAU}
{\bkmkend AAAAAAADAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 46 of file operators.cpp.}\par
{
References unaryreduc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    47 \{\par
   48     return unaryreduc;\par
   49 \}\par
}
}
{\xe \v GetText\:UnaryNode}
{\xe \v UnaryNode\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * UnaryNode::GetText (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 61 of file operators.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::Empty(), CharBuffer::EnsureSize(), expression, GetNodeText(), GetPrecedence(), ExpressionNode::GetPrecedence(), CharBuffer::GetString(), ExpressionNode::GetText(), SyntaxNode::output, and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    62 \{\par
   63     const char *expText = expression->GetText();\par
   64     const char *nodeText = GetNodeText();\par
   65 \par
   66     output->Empty();\par
   67     output->EnsureSize(StrLen(expText) + StrLen(nodeText) + 2 + 1);\par
   68 \par
   69     if (expression->GetPrecedence() != 0 && expression->GetPrecedence() != 5 && expression->GetPrecedence() <= GetPrecedence()) \{\par
   70         output->Append(nodeText);\par
   71         output->Append("(");\par
   72         output->Append(expText);\par
   73         output->Append(")");\par
   74     \} else \{\par
   75         output->Append(nodeText);\par
   76         output->Append(expText);\par
   77     \}\par
   78 \par
   79     return output->GetString();\par
   80 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUnaryNode_ad753fe89681dca1cf2d9ee840aedf86b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Replace\:UnaryNode}
{\xe \v UnaryNode\:Replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UnaryNode::Replace ({\b SyntaxNode} *  {\i n}, {\b SyntaxNode} *  {\i x}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAW}
{\bkmkend AAAAAAADAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 113 of file operators.cpp.}\par
{
References expression.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   114 \{\par
  115     if (expression == n) \{\par
  116         delete expression;\par
  117         expression = (ExpressionNode*)x;\par
  118     \}\par
  119 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v expression\:UnaryNode}
{\xe \v UnaryNode\:expression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode}* UnaryNode::expression{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDY}
{\bkmkend AAAAAAADDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file operators.h.}\par
{
Referenced by Attach(), Detach(), Evaluate(), GetNext(), GetText(), Replace(), UnaryNode(), and ~UnaryNode().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b operators.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UserFunction Class Reference\par \pard\plain 
{\tc\tcl2 \v UserFunction}
{\xe \v UserFunction}
{\bkmkstart AAAAAAADDZ}
{\bkmkend AAAAAAADDZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user defined function. }}\par
{
{\f2 #include <functions.h>}}\par
Collaboration diagram for UserFunction:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UserFunction} (const char *{\b name}, const char *{\b variable}, {\b ExpressionNode} *{\b expression})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UserFunction} (const char *{\b name})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~UserFunction} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetName} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetDefitionName} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetDefitionText} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Variable} * {\b GetVariable} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Variable} * {\b CreateVariable} (const char *{\b name})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b GetExpression} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetExpression} ({\b ExpressionNode} *{\b expression})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UserFunction} * {\b Next}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b InitializeTexts} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Variable} * {\b variable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionNode} * {\b expression}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b chainDelete}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} * {\b defname}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} * {\b defition}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b FunctionList::Delete} (const char *{\b name}, const char *argument)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user defined function. \par
}{
Definition at line 105 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v UserFunction\:UserFunction}
{\xe \v UserFunction\:UserFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UserFunction::UserFunction (const char *  {\i name}, const char *  {\i variable}, {\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAADEA}
{\bkmkend AAAAAAADEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 106 of file functions.cpp.}\par
{
References AllocAndCopy(), chainDelete, CharBuffer::CharBuffer(), defition, defname, expression, InitializeTexts(), name, Next, Variable::Variable(), and variable.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   107 \{\par
  108     AllocAndCopy(&this->name, name);\par
  109     this->variable = new Variable(variable);\par
  110     this->expression = expression;\par
  111     this->Next = NOMEM;\par
  112 \par
  113     defname = new CharBuffer();\par
  114     defition = new CharBuffer();\par
  115     InitializeTexts();\par
  116 \par
  117     chainDelete = true;\par
  118 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction_a2a97a3aea348cdf553fe73add0f6926e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v UserFunction\:UserFunction}
{\xe \v UserFunction\:UserFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UserFunction::UserFunction (const char *  {\i name})}}
\par
{\bkmkstart AAAAAAADEB}
{\bkmkend AAAAAAADEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 120 of file functions.cpp.}\par
{
References AllocAndCopy(), chainDelete, CharBuffer::CharBuffer(), defition, defname, expression, name, Next, and variable.}\par
{
Referenced by FunctionList::GetFunctionDef().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   121 \{\par
  122     AllocAndCopy(&this->name, name);\par
  123     this->variable = NOMEM;\par
  124     this->expression = NOMEM;\par
  125     this->Next = NOMEM;\par
  126 \par
  127     defname = new CharBuffer();\par
  128     defition = new CharBuffer();\par
  129 \par
  130     chainDelete = true;\par
  131 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction_a9e07b00bd2ff918fd11767cb627ad7df_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction_a9e07b00bd2ff918fd11767cb627ad7df_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~UserFunction\:UserFunction}
{\xe \v UserFunction\:~UserFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UserFunction::~UserFunction ()}}
\par
{\bkmkstart AAAAAAADEC}
{\bkmkend AAAAAAADEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 133 of file functions.cpp.}\par
{
References chainDelete, defition, defname, expression, name, Next, and variable.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   134 \{\par
  135     delete [] name;\par
  136     delete defname;\par
  137     delete defition;\par
  138 \par
  139     if (variable != NOMEM) \{\par
  140         delete variable;\par
  141     \}\par
  142 \par
  143     if (expression != NOMEM) \{\par
  144         delete expression;\par
  145     \}\par
  146 \par
  147     if (chainDelete && Next != NOMEM) \{\par
  148         delete Next;\par
  149     \}\par
  150 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateVariable\:UserFunction}
{\xe \v UserFunction\:CreateVariable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Variable} * UserFunction::CreateVariable (const char *  {\i name})}}
\par
{\bkmkstart AAAAAAADED}
{\bkmkend AAAAAAADED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 186 of file functions.cpp.}\par
{
References InitializeTexts(), Variable::Variable(), and variable.}\par
{
Referenced by Parser::ParseFunctionDef().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   187 \{\par
  188     if(variable != NOMEM) \{\par
  189         delete variable;\par
  190     \}\par
  191 \par
  192     variable = new Variable(name);\par
  193     InitializeTexts();\par
  194 \par
  195     return variable;\par
  196 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction_a9273684dd9351e945a10799ac6eb7038_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction_a9273684dd9351e945a10799ac6eb7038_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetDefitionName\:UserFunction}
{\xe \v UserFunction\:GetDefitionName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * UserFunction::GetDefitionName ()}}
\par
{\bkmkstart AAAAAAADEE}
{\bkmkend AAAAAAADEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 171 of file functions.cpp.}\par
{
References defname, and CharBuffer::GetString().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   172 \{\par
  173     return defname->GetString();\par
  174 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction_ae75c29d08b4cb351b8d7e19a5e4045d0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetDefitionText\:UserFunction}
{\xe \v UserFunction\:GetDefitionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * UserFunction::GetDefitionText ()}}
\par
{\bkmkstart AAAAAAADEF}
{\bkmkend AAAAAAADEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 176 of file functions.cpp.}\par
{
References defition, and CharBuffer::GetString().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   177 \{\par
  178     return defition->GetString();\par
  179 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction_ae729fe8b29728831f6a7872931b4d2e7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetExpression\:UserFunction}
{\xe \v UserFunction\:GetExpression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode} * UserFunction::GetExpression ()}}
\par
{\bkmkstart AAAAAAADEG}
{\bkmkend AAAAAAADEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 198 of file functions.cpp.}\par
{
References expression.}\par
{
Referenced by UserFunctionNode::Evaluate(), Grid::FunctionValue(), UserFunctionNode::GetNext(), and FunctionList::ListContent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   199 \{\par
  200     return expression;\par
  201 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction_a41abe1afc9d481786b78ce7d7ffbde80_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetName\:UserFunction}
{\xe \v UserFunction\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * UserFunction::GetName ()}}
\par
{\bkmkstart AAAAAAADEH}
{\bkmkend AAAAAAADEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 166 of file functions.cpp.}\par
{
References name.}\par
{
Referenced by FunctionList::Delete(), FunctionList::GetFunctionCall(), FunctionList::GetFunctionDef(), UserFunctionNode::GetNodeText(), and FunctionList::ListContent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   167 \{\par
  168     return name;\par
  169 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction_a59c59ebf5b45c5bb4aaa200a1218549d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetVariable\:UserFunction}
{\xe \v UserFunction\:GetVariable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Variable} * UserFunction::GetVariable ()}}
\par
{\bkmkstart AAAAAAADEI}
{\bkmkend AAAAAAADEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 181 of file functions.cpp.}\par
{
References variable.}\par
{
Referenced by FunctionList::Delete(), UserFunctionNode::Evaluate(), Grid::FunctionValue(), FunctionList::GetFunctionDef(), and FunctionList::ListContent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   182 \{\par
  183     return variable;\par
  184 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction_a4580afdaa5124951a523de07f3c454a6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v InitializeTexts\:UserFunction}
{\xe \v UserFunction\:InitializeTexts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UserFunction::InitializeTexts (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADEJ}
{\bkmkend AAAAAAADEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 152 of file functions.cpp.}\par
{
References CharBuffer::Append(), defition, defname, CharBuffer::Empty(), expression, Variable::GetName(), CharBuffer::GetString(), ExpressionNode::GetText(), name, and variable.}\par
{
Referenced by CreateVariable(), SetExpression(), and UserFunction().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   153 \{\par
  154     defname->Empty();\par
  155     defname->Append(name);\par
  156     defname->Append('(');\par
  157     defname->Append(variable != NOMEM ? variable->GetName() : EMPTYSTRING);\par
  158     defname->Append(')');\par
  159 \par
  160     defition->Empty();\par
  161     defition->Append(defname->GetString());\par
  162     defition->Append('=');\par
  163     defition->Append(expression != NOMEM ? expression->GetText() : EMPTYSTRING);\par
  164 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction_a5f22a558f8418f2ef6df952d88c7029b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction_a5f22a558f8418f2ef6df952d88c7029b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetExpression\:UserFunction}
{\xe \v UserFunction\:SetExpression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UserFunction::SetExpression ({\b ExpressionNode} *  {\i expression})}}
\par
{\bkmkstart AAAAAAADEK}
{\bkmkend AAAAAAADEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 203 of file functions.cpp.}\par
{
References expression, and InitializeTexts().}\par
{
Referenced by Parser::ParseFunctionDef().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   204 \{\par
  205     delete this->expression;\par
  206     this->expression = expression;\par
  207     InitializeTexts();\par
  208 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction_ab033663735b65ce885eefd63e6208c24_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunction_ab033663735b65ce885eefd63e6208c24_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v FunctionList::Delete\:UserFunction}
{\xe \v UserFunction\:FunctionList::Delete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} {\b FunctionList::Delete} (const char *  {\i name}, const char *  {\i argument}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADEL}
{\bkmkend AAAAAAADEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v chainDelete\:UserFunction}
{\xe \v UserFunction\:chainDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} UserFunction::chainDelete{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADEM}
{\bkmkend AAAAAAADEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file functions.h.}\par
{
Referenced by FunctionList::Delete(), UserFunction(), and ~UserFunction().}\par
}
{\xe \v defition\:UserFunction}
{\xe \v UserFunction\:defition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CharBuffer}* UserFunction::defition{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADEN}
{\bkmkend AAAAAAADEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 130 of file functions.h.}\par
{
Referenced by GetDefitionText(), InitializeTexts(), UserFunction(), and ~UserFunction().}\par
}
{\xe \v defname\:UserFunction}
{\xe \v UserFunction\:defname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CharBuffer}* UserFunction::defname{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADEO}
{\bkmkend AAAAAAADEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 129 of file functions.h.}\par
{
Referenced by GetDefitionName(), InitializeTexts(), UserFunction(), and ~UserFunction().}\par
}
{\xe \v expression\:UserFunction}
{\xe \v UserFunction\:expression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExpressionNode}* UserFunction::expression{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADEP}
{\bkmkend AAAAAAADEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 124 of file functions.h.}\par
{
Referenced by GetExpression(), InitializeTexts(), SetExpression(), UserFunction(), and ~UserFunction().}\par
}
{\xe \v name\:UserFunction}
{\xe \v UserFunction\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* UserFunction::name{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADEQ}
{\bkmkend AAAAAAADEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 122 of file functions.h.}\par
{
Referenced by GetName(), InitializeTexts(), UserFunction(), and ~UserFunction().}\par
}
{\xe \v Next\:UserFunction}
{\xe \v UserFunction\:Next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UserFunction}* UserFunction::Next}}
\par
{\bkmkstart AAAAAAADER}
{\bkmkend AAAAAAADER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 111 of file functions.h.}\par
{
Referenced by FunctionList::Delete(), FunctionList::GetFunctionCall(), FunctionList::GetFunctionDef(), FunctionList::ListContent(), UserFunction(), and ~UserFunction().}\par
}
{\xe \v variable\:UserFunction}
{\xe \v UserFunction\:variable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Variable}* UserFunction::variable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADES}
{\bkmkend AAAAAAADES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 123 of file functions.h.}\par
{
Referenced by CreateVariable(), GetVariable(), InitializeTexts(), UserFunction(), and ~UserFunction().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UserFunctionNode Class Reference\par \pard\plain 
{\tc\tcl2 \v UserFunctionNode}
{\xe \v UserFunctionNode}
{\bkmkstart AAAAAAADET}
{\bkmkend AAAAAAADET}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An expression node able to compute a function value. }}\par
{
{\f2 #include <functions.h>}}\par
Inheritance diagram for UserFunctionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunctionNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for UserFunctionNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunctionNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UserFunctionNode} ({\b UserFunction} *{\b function}, {\b ExpressionNode} *parameter)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b GetNext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Attach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Detach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Replace} ({\b SyntaxNode} *n, {\b SyntaxNode} *x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UserFunction} * {\b function}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An expression node able to compute a function value. \par
}{
Definition at line 158 of file functions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v UserFunctionNode\:UserFunctionNode}
{\xe \v UserFunctionNode\:UserFunctionNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UserFunctionNode::UserFunctionNode ({\b UserFunction} *  {\i function}, {\b ExpressionNode} *  {\i parameter})}}
\par
{\bkmkstart AAAAAAADEU}
{\bkmkend AAAAAAADEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 214 of file functions.cpp.}\par
{
References function, and FunctionNode::FunctionNode().}\par
{
Referenced by FunctionList::GetFunctionCall().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   214                                                                                     :\par
  215     FunctionNode(parameter), function(function) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunctionNode_af7a261eca3785022389cd02d36fa33d5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunctionNode_af7a261eca3785022389cd02d36fa33d5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Attach\:UserFunctionNode}
{\xe \v UserFunctionNode\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UserFunctionNode::Attach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACFE}
{\bkmkend AAAAAAACFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b FunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 239 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   240 \{\par
  241     // TODO: Implement\par
  242 \}\par
}
}
{\xe \v Detach\:UserFunctionNode}
{\xe \v UserFunctionNode\:Detach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UserFunctionNode::Detach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACFG}
{\bkmkend AAAAAAACFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b FunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 244 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   245 \{\par
  246     // TODO: Implement\par
  247 \}\par
}
}
{\xe \v Evaluate\:UserFunctionNode}
{\xe \v UserFunctionNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * UserFunctionNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 222 of file functions.cpp.}\par
{
References Variable::AssignValue(), ExpressionNode::Evaluate(), FunctionNode::expression, function, UserFunction::GetExpression(), and UserFunction::GetVariable().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   223 \{\par
  224     // Set value of function parameter and then evaluate function.\par
  225     function->GetVariable()->AssignValue(expression->Evaluate());\par
  226     return function->GetExpression()->Evaluate();\par
  227 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunctionNode_a2efcbf95707c44463017973693c891db_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNext\:UserFunctionNode}
{\xe \v UserFunctionNode\:GetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * UserFunctionNode::GetNext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACFI}
{\bkmkend AAAAAAACFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b FunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 229 of file functions.cpp.}\par
{
References function, UserFunction::GetExpression(), and SyntaxNode::iterator.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   230 \{\par
  231     if (iterator == NOMEM) \{\par
  232         iterator = function->GetExpression();\par
  233         return iterator;\par
  234     \}\par
  235 \par
  236     return NOMEM;\par
  237 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunctionNode_acc4c2efb6727a6aa8d216556434c8a27_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNodeText\:UserFunctionNode}
{\xe \v UserFunctionNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * UserFunctionNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCV}
{\bkmkend AAAAAAACCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 217 of file functions.cpp.}\par
{
References function, and UserFunction::GetName().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   218 \{\par
  219     return function->GetName();\par
  220 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUserFunctionNode_a89ead37ddfb2fcd44ba3dd7cc2157838_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Replace\:UserFunctionNode}
{\xe \v UserFunctionNode\:Replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UserFunctionNode::Replace ({\b SyntaxNode} *  {\i n}, {\b SyntaxNode} *  {\i x}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACFK}
{\bkmkend AAAAAAACFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b FunctionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 249 of file functions.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   250 \{\par
  251     // TODO: Implement\par
  252 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v function\:UserFunctionNode}
{\xe \v UserFunctionNode\:function}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UserFunction}* UserFunctionNode::function{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADEV}
{\bkmkend AAAAAAADEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 171 of file functions.h.}\par
{
Referenced by Evaluate(), GetNext(), GetNodeText(), and UserFunctionNode().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b functions.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Variable Class Reference\par \pard\plain 
{\tc\tcl2 \v Variable}
{\xe \v Variable}
{\bkmkstart AAAAAAADEW}
{\bkmkend AAAAAAADEW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user defined variable. }}\par
{
{\f2 #include <values.h>}}\par
Collaboration diagram for Variable:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariable__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Variable} (const char *{\b name})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Variable} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetName} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b GetValue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AssignValue} ({\b Number} *{\b value})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Variable} * {\b Next}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b value}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b chainDelete}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b VariableList::Delete} (const char *{\b name})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user defined variable. \par
}{
Definition at line 72 of file values.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Variable\:Variable}
{\xe \v Variable\:Variable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Variable::Variable (const char *  {\i name})}}
\par
{\bkmkstart AAAAAAADEX}
{\bkmkend AAAAAAADEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file values.cpp.}\par
{
References AllocAndCopy(), chainDelete, name, Next, and value.}\par
{
Referenced by VariableList::CreateVariable(), UserFunction::CreateVariable(), and UserFunction::UserFunction().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    43 \{\par
   44     AllocAndCopy(&this->name, name);\par
   45     value = NOMEM;\par
   46     Next = NOMEM;\par
   47     chainDelete = true;\par
   48 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariable_a230014211eb4309bcec965df5799a7eb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariable_a230014211eb4309bcec965df5799a7eb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~Variable\:Variable}
{\xe \v Variable\:~Variable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Variable::~Variable ()}}
\par
{\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file values.cpp.}\par
{
References chainDelete, name, Next, and value.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    51 \{\par
   52     delete [] name;\par
   53 \par
   54     if (value != NOMEM) \{\par
   55         delete value;\par
   56     \}\par
   57 \par
   58     if (chainDelete && Next != NOMEM) \{\par
   59         delete Next;\par
   60     \}\par
   61 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AssignValue\:Variable}
{\xe \v Variable\:AssignValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Variable::AssignValue ({\b Number} *  {\i value})}}
\par
{\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file values.cpp.}\par
{
References Number::Clone(), and value.}\par
{
Referenced by VariableNode::AssignValue(), UserFunctionNode::Evaluate(), and Grid::FunctionValue().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    74 \{\par
   75     if (this->value != NOMEM) \{\par
   76         delete this->value;\par
   77     \}\par
   78 \par
   79     this->value = value->Clone();\par
   80 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariable_ad8c997ea0edab8bf72ada85963800211_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariable_ad8c997ea0edab8bf72ada85963800211_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetName\:Variable}
{\xe \v Variable\:GetName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * Variable::GetName ()}}
\par
{\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file values.cpp.}\par
{
References name.}\par
{
Referenced by VariableList::CreateVariable(), FunctionList::Delete(), FunctionList::GetFunctionDef(), VariableNode::GetNodeText(), VariableNode::GetText(), VariableList::GetVariable(), UserFunction::InitializeTexts(), VariableList::ListContent(), and FunctionList::ListContent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    64 \{\par
   65     return name;\par
   66 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariable_accf221d35cec8a9707e84891b715fb6c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetValue\:Variable}
{\xe \v Variable\:GetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * Variable::GetValue ()}}
\par
{\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file values.cpp.}\par
{
References Number::Clone(), and value.}\par
{
Referenced by VariableNode::Evaluate(), and VariableList::ListContent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    69 \{\par
   70     return value->Clone();;\par
   71 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariable_adb77b2681374245b5d606a1d149d0d91_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariable_adb77b2681374245b5d606a1d149d0d91_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v VariableList::Delete\:Variable}
{\xe \v Variable\:VariableList::Delete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} {\b VariableList::Delete} (const char *  {\i name}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v chainDelete\:Variable}
{\xe \v Variable\:chainDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Variable::chainDelete{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file values.h.}\par
{
Referenced by VariableList::Delete(), Variable(), and ~Variable().}\par
}
{\xe \v name\:Variable}
{\xe \v Variable\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* Variable::name{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFE}
{\bkmkend AAAAAAADFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 84 of file values.h.}\par
{
Referenced by GetName(), Variable(), and ~Variable().}\par
}
{\xe \v Next\:Variable}
{\xe \v Variable\:Next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Variable}* Variable::Next}}
\par
{\bkmkstart AAAAAAADFF}
{\bkmkend AAAAAAADFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file values.h.}\par
{
Referenced by VariableList::CreateVariable(), VariableList::Delete(), VariableList::GetVariable(), VariableList::InsertTemporaryVariable(), VariableList::ListContent(), VariableList::RemoveTemporaryVariable(), Variable(), and ~Variable().}\par
}
{\xe \v value\:Variable}
{\xe \v Variable\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number}* Variable::value{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFG}
{\bkmkend AAAAAAADFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file values.h.}\par
{
Referenced by AssignValue(), GetValue(), Variable(), and ~Variable().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
VariableList Class Reference\par \pard\plain 
{\tc\tcl2 \v VariableList}
{\xe \v VariableList}
{\bkmkstart AAAAAAADFH}
{\bkmkend AAAAAAADFH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of user defined variables. }}\par
{
{\f2 #include <values.h>}}\par
Collaboration diagram for VariableList:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VariableList} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~VariableList} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Clear} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b Delete} (const char *name)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Variable} * {\b GetFirstVariable} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Variable} * {\b GetVariable} (const char *name)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Variable} * {\b CreateVariable} (const char *name)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Variable} * {\b InsertTemporaryVariable} ({\b Variable} *variable)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RemoveTemporaryVariable} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b List} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b ListDefinitions} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b ListContent} ({\b bool} cmdFormat)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CharBuffer} * {\b buf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Variable} * {\b first}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of user defined variables. \par
}{
Definition at line 46 of file values.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v VariableList\:VariableList}
{\xe \v VariableList\:VariableList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VariableList::VariableList ()}}
\par
{\bkmkstart AAAAAAADFI}
{\bkmkend AAAAAAADFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file values.cpp.}\par
{
References buf, CharBuffer::CharBuffer(), and first.}\par
{
Referenced by Program::Program().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    87 \{\par
   88     first = NOMEM;\par
   89     buf = new CharBuffer();\par
   90 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_ab1d9c24d3b93598ee87bc47c9b964ec0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_ab1d9c24d3b93598ee87bc47c9b964ec0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~VariableList\:VariableList}
{\xe \v VariableList\:~VariableList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VariableList::~VariableList ()}}
\par
{\bkmkstart AAAAAAADFJ}
{\bkmkend AAAAAAADFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file values.cpp.}\par
{
References buf, and first.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    93 \{\par
   94     if (first != NOMEM) \{\par
   95         delete first;\par
   96     \}\par
   97 \par
   98     delete buf;\par
   99 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Clear\:VariableList}
{\xe \v VariableList\:Clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VariableList::Clear ()}}
\par
{\bkmkstart AAAAAAADFK}
{\bkmkend AAAAAAADFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file values.cpp.}\par
{
References buf, CharBuffer::ClearBuffer(), and first.}\par
{
Referenced by DeleteStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   102 \{\par
  103     if (first != NOMEM) \{\par
  104         delete first;\par
  105         first = NOMEM;\par
  106     \}\par
  107 \par
  108     buf->ClearBuffer();\par
  109 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_adef9da37cea5f80b9f2cdc899b3235c2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_adef9da37cea5f80b9f2cdc899b3235c2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CreateVariable\:VariableList}
{\xe \v VariableList\:CreateVariable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Variable} * VariableList::CreateVariable (const char *  {\i name})}}
\par
{\bkmkstart AAAAAAADFL}
{\bkmkend AAAAAAADFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 159 of file values.cpp.}\par
{
References first, Variable::GetName(), Variable::Next, StrIsEqual(), and Variable::Variable().}\par
{
Referenced by Parser::ParseIdent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   160 \{\par
  161     if (first == NOMEM) \{\par
  162         first = new Variable(name);\par
  163         return first;\par
  164     \}\par
  165 \par
  166     Variable* current = first;\par
  167     Variable* last = NOMEM;\par
  168 \par
  169     while (current != NOMEM) \{\par
  170         if (StrIsEqual(name, current->GetName())) \{\par
  171             return current;\par
  172         \}\par
  173 \par
  174         last = current;\par
  175         current = current->Next;\par
  176     \}\par
  177 \par
  178     current = new Variable(name);\par
  179     last->Next = current;\par
  180 \par
  181     return current;\par
  182 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_ac78b3d52283bec7cbd8e7e2d217e1608_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_ac78b3d52283bec7cbd8e7e2d217e1608_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Delete\:VariableList}
{\xe \v VariableList\:Delete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} VariableList::Delete (const char *  {\i name})}}
\par
{\bkmkstart AAAAAAADFM}
{\bkmkend AAAAAAADFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 111 of file values.cpp.}\par
{
References Variable::chainDelete, first, GetVariable(), and Variable::Next.}\par
{
Referenced by DeleteStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   112 \{\par
  113     Variable* var = GetVariable(name);\par
  114 \par
  115     if (var == NOMEM) \{\par
  116         return false;\par
  117     \}\par
  118 \par
  119     if (var == first) \{\par
  120         first = var->Next;\par
  121         var->chainDelete = false;\par
  122         delete var;\par
  123         return true;\par
  124     \}\par
  125 \par
  126     Variable *current = first->Next;\par
  127     Variable *last = first;\par
  128 \par
  129     while (current != var) \{\par
  130         current = current->Next;\par
  131         last = last->Next;\par
  132     \}\par
  133 \par
  134     last->Next = var->Next;\par
  135 \par
  136     // Only delete this variable. Not the whole chain.\par
  137     var->chainDelete = false;\par
  138     delete var;\par
  139 \par
  140     return true;\par
  141 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_a6f9e2f3a5cb1f8b4e71b0d8123e98264_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_a6f9e2f3a5cb1f8b4e71b0d8123e98264_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetFirstVariable\:VariableList}
{\xe \v VariableList\:GetFirstVariable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Variable} * VariableList::GetFirstVariable ()}}
\par
{\bkmkstart AAAAAAADFN}
{\bkmkend AAAAAAADFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 143 of file values.cpp.}\par
{
References first.}\par
{
Referenced by ListContent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   144 \{\par
  145     return first;\par
  146 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_a4b3bb4c1886ef7e0b15bfa5ecf4c52f4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetVariable\:VariableList}
{\xe \v VariableList\:GetVariable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Variable} * VariableList::GetVariable (const char *  {\i name})}}
\par
{\bkmkstart AAAAAAADFO}
{\bkmkend AAAAAAADFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file values.cpp.}\par
{
References first, Variable::GetName(), Variable::Next, and StrIsEqual().}\par
{
Referenced by Delete(), and Parser::ParseIdent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   149 \{\par
  150     Variable* current = first;\par
  151 \par
  152     while (current != NOMEM && !StrIsEqual(current->GetName(), name)) \{\par
  153         current = current->Next;\par
  154     \}\par
  155 \par
  156     return current;\par
  157 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_a2002862abdb75e088e2dd6bf1e140be6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_a2002862abdb75e088e2dd6bf1e140be6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v InsertTemporaryVariable\:VariableList}
{\xe \v VariableList\:InsertTemporaryVariable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Variable} * VariableList::InsertTemporaryVariable ({\b Variable} *  {\i variable})}}
\par
{\bkmkstart AAAAAAADFP}
{\bkmkend AAAAAAADFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 184 of file values.cpp.}\par
{
References first, and Variable::Next.}\par
{
Referenced by Parser::ParseFunctionDef().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   185 \{\par
  186     // Temporary variables are always inserted at the beginning of the list.\par
  187     Variable* oldFirst = first;\par
  188     first = variable;\par
  189     variable->Next = oldFirst;\par
  190 \par
  191     return variable;\par
  192 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_a4e8c2b729d346ff56cf01c5349931c62_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v List\:VariableList}
{\xe \v VariableList\:List}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * VariableList::List ()}}
\par
{\bkmkstart AAAAAAADFQ}
{\bkmkend AAAAAAADFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 202 of file values.cpp.}\par
{
References ListContent().}\par
{
Referenced by ListVariablesStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   203 \{\par
  204     return ListContent(false);\par
  205 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_a8ddefb92c0c2f18f096f0fc4363d5af6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_a8ddefb92c0c2f18f096f0fc4363d5af6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ListContent\:VariableList}
{\xe \v VariableList\:ListContent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * VariableList::ListContent ({\b bool}  {\i cmdFormat}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFR}
{\bkmkend AAAAAAADFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 212 of file values.cpp.}\par
{
References CharBuffer::Append(), buf, CharBuffer::Empty(), CharBuffer::EnsureSize(), GetFirstVariable(), Variable::GetName(), CharBuffer::GetString(), NumeralSystem::GetText(), Variable::GetValue(), Variable::Next, Program::Output, and StrLen().}\par
{
Referenced by List(), and ListDefinitions().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   213 \{\par
  214     buf->Empty();\par
  215 \par
  216     if (GetFirstVariable() == NOMEM) \{\par
  217         return (char*)(cmdFormat ? NOMEM : HELPVARSNDEF);\par
  218     \}\par
  219 \par
  220     int len = 0;\par
  221     Variable* current = GetFirstVariable();\par
  222 \par
  223     while (current != NOMEM) \{\par
  224         len += StrLen(current->GetName());\par
  225         len += 3;\par
  226         len += 32; // Max length of value\par
  227         len += cmdFormat ? 2 : 1;\par
  228         current = current->Next;\par
  229     \}\par
  230 \par
  231     current = GetFirstVariable();\par
  232 \par
  233     buf->EnsureSize(len);\par
  234 \par
  235     while (current != NOMEM) \{\par
  236         buf->Append(current->GetName());\par
  237         buf->Append(" = ");\par
  238 \par
  239         Number *num = current->GetValue();\par
  240         const char *val = Program->Output->GetText(num);\par
  241         buf->Append(val);\par
  242         delete num;\par
  243 \par
  244         if (cmdFormat) \{\par
  245             buf->Append(';');\par
  246         \}\par
  247 \par
  248         buf->Append(NEWLINE);\par
  249         current = current->Next;\par
  250     \}\par
  251 \par
  252     return buf->GetString();\par
  253 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_a2898791757231a476a994741a0f8ab94_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_a2898791757231a476a994741a0f8ab94_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ListDefinitions\:VariableList}
{\xe \v VariableList\:ListDefinitions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * VariableList::ListDefinitions ()}}
\par
{\bkmkstart AAAAAAADFS}
{\bkmkend AAAAAAADFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 207 of file values.cpp.}\par
{
References ListContent().}\par
{
Referenced by SaveStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   208 \{\par
  209     return ListContent(true);\par
  210 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_aa2726674491d8cd5625859f79df39c9d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_aa2726674491d8cd5625859f79df39c9d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v RemoveTemporaryVariable\:VariableList}
{\xe \v VariableList\:RemoveTemporaryVariable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VariableList::RemoveTemporaryVariable ()}}
\par
{\bkmkstart AAAAAAADFT}
{\bkmkend AAAAAAADFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 194 of file values.cpp.}\par
{
References first, and Variable::Next.}\par
{
Referenced by Parser::ParseFunctionDef().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   195 \{\par
  196     // Temporary variables are not owned by the variable list. Do not free memory.\par
  197     Variable *newFirst = first->Next;\par
  198     first->Next = NOMEM;\par
  199     first = newFirst;\par
  200 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableList_a489608dbcd6989a9ffd4092234a8052c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buf\:VariableList}
{\xe \v VariableList\:buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CharBuffer}* VariableList::buf{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFU}
{\bkmkend AAAAAAADFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file values.h.}\par
{
Referenced by Clear(), ListContent(), VariableList(), and ~VariableList().}\par
}
{\xe \v first\:VariableList}
{\xe \v VariableList\:first}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Variable}* VariableList::first{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFV}
{\bkmkend AAAAAAADFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file values.h.}\par
{
Referenced by Clear(), CreateVariable(), Delete(), GetFirstVariable(), GetVariable(), InsertTemporaryVariable(), RemoveTemporaryVariable(), VariableList(), and ~VariableList().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
VariableNode Class Reference\par \pard\plain 
{\tc\tcl2 \v VariableNode}
{\xe \v VariableNode}
{\bkmkstart AAAAAAADFW}
{\bkmkend AAAAAAADFW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of a variable in a syntax tree. }}\par
{
{\f2 #include <values.h>}}\par
Inheritance diagram for VariableNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableNode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for VariableNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableNode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VariableNode} ({\b Variable} *{\b variable})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetText} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Number} * {\b Evaluate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AssignValue} ({\b Number} *value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetPrecedence} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SyntaxNode} * {\b GetNext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Attach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Detach} ({\b SyntaxNode} *node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Replace} ({\b SyntaxNode} *n, {\b SyntaxNode} *x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b GetNodeText} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Variable} * {\b variable}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of a variable in a syntax tree. \par
}{
Definition at line 104 of file values.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v VariableNode\:VariableNode}
{\xe \v VariableNode\:VariableNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VariableNode::VariableNode ({\b Variable} *  {\i variable})}}
\par
{\bkmkstart AAAAAAADFX}
{\bkmkend AAAAAAADFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 271 of file values.cpp.}\par
{
References ExpressionNode::ExpressionNode(), and variable.}\par
{
Referenced by InsVariableNode::InsVariableNode(), and Parser::ParseIdent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   271                                             :\par
  272     ExpressionNode(), variable(variable) \{ \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableNode_a0d3189fa49fab4ac738f114b6a696fd7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableNode_a0d3189fa49fab4ac738f114b6a696fd7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AssignValue\:VariableNode}
{\xe \v VariableNode\:AssignValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VariableNode::AssignValue ({\b Number} *  {\i value})}}
\par
{\bkmkstart AAAAAAADFY}
{\bkmkend AAAAAAADFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 285 of file values.cpp.}\par
{
References Variable::AssignValue(), and variable.}\par
{
Referenced by AssignmentNode::Evaluate().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   286 \{\par
  287     variable->AssignValue(value);\par
  288 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableNode_a8134cc1627925a0327e6c62eef810cdc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableNode_a8134cc1627925a0327e6c62eef810cdc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Attach\:VariableNode}
{\xe \v VariableNode\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VariableNode::Attach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAM}
{\bkmkend AAAAAAADAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 305 of file values.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   306 \{ \}\par
}
}
{\xe \v Detach\:VariableNode}
{\xe \v VariableNode\:Detach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VariableNode::Detach ({\b SyntaxNode} *  {\i node}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAO}
{\bkmkend AAAAAAADAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 308 of file values.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   309 \{ \}\par
}
}
{\xe \v Evaluate\:VariableNode}
{\xe \v VariableNode\:Evaluate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Number} * VariableNode::Evaluate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBV}
{\bkmkend AAAAAAACBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b InsVariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACBS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 279 of file values.cpp.}\par
{
References Variable::GetValue(), ExpressionNode::result, and variable.}\par
{
Referenced by AssignmentNode::Evaluate().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   280 \{\par
  281     result = variable->GetValue();\par
  282     return result;\par
  283 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableNode_a7ebbe9072eb78b5790befed3a42b2dc2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableNode_a7ebbe9072eb78b5790befed3a42b2dc2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetNext\:VariableNode}
{\xe \v VariableNode\:GetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SyntaxNode} * VariableNode::GetNext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAR}
{\bkmkend AAAAAAADAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 300 of file values.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   301 \{\par
  302     return NOMEM;\par
  303 \}\par
}
}
{\xe \v GetNodeText\:VariableNode}
{\xe \v VariableNode\:GetNodeText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * VariableNode::GetNodeText (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACCZ}
{\bkmkend AAAAAAACCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b InsVariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACCX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 295 of file values.cpp.}\par
{
References Variable::GetName(), and variable.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   296 \{\par
  297     return variable->GetName();\par
  298 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableNode_ab76eda982f1625774b982fd148462102_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetPrecedence\:VariableNode}
{\xe \v VariableNode\:GetPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int VariableNode::GetPrecedence (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDH}
{\bkmkend AAAAAAACDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 274 of file values.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   275 \{\par
  276     return 0;\par
  277 \}\par
}
}
{\xe \v GetText\:VariableNode}
{\xe \v VariableNode\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * VariableNode::GetText (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b ExpressionNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b InsVariableNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 290 of file values.cpp.}\par
{
References Variable::GetName(), and variable.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   291 \{\par
  292     return variable->GetName();\par
  293 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVariableNode_ae1ebd067d7cb5f996fe629d06db5ec77_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Replace\:VariableNode}
{\xe \v VariableNode\:Replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VariableNode::Replace ({\b SyntaxNode} *  {\i n}, {\b SyntaxNode} *  {\i x}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAV}
{\bkmkend AAAAAAADAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b SyntaxNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 311 of file values.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   312 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v variable\:VariableNode}
{\xe \v VariableNode\:variable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Variable}* VariableNode::variable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFZ}
{\bkmkend AAAAAAADFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 120 of file values.h.}\par
{
Referenced by AssignValue(), Evaluate(), GetNodeText(), GetText(), and VariableNode().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b values.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
VersionStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v VersionStatement}
{\xe \v VersionStatement}
{\bkmkstart AAAAAAADGA}
{\bkmkend AAAAAAADGA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Show version string. }}\par
{
{\f2 #include <statements.h>}}\par
Inheritance diagram for VersionStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVersionStatement__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for VersionStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVersionStatement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VersionStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~VersionStatement} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Show version string. \par
}{
Definition at line 83 of file statements.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v VersionStatement\:VersionStatement}
{\xe \v VersionStatement\:VersionStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VersionStatement::VersionStatement (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGB}
{\bkmkend AAAAAAADGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file statements.h.}\par
{
Referenced by Parser::ParseStatement().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    85 \{ \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVersionStatement_a3df915fa8eccedc266750224ff297716_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ~VersionStatement\:VersionStatement}
{\xe \v VersionStatement\:~VersionStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VersionStatement::~VersionStatement (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGC}
{\bkmkend AAAAAAADGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file statements.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    86 \{ \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:VersionStatement}
{\xe \v VersionStatement\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * VersionStatement::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAD}
{\bkmkend AAAAAAADAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b StatementNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 73 of file statements.cpp.}\par
{
References CharBuffer::Append(), CharBuffer::Empty(), CharBuffer::EnsureSize(), CharBuffer::GetString(), SyntaxNode::output, and StrLen().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    74 \{\par
   75     output->Empty();\par
   76     output->EnsureSize(\par
   77         StrLen(BOLD) +\par
   78         StrLen(TXTVERSMSG) +\par
   79         StrLen(NEWLINE) * 2 +\par
   80         StrLen(NORMALTEXT) +\par
   81         StrLen(TXTCOMPMSG));\par
   82 \par
   83     output->Append(BOLD);\par
   84     output->Append(TXTVERSMSG);\par
   85     output->Append(NORMALTEXT);\par
   86     output->Append(NEWLINE);\par
   87     output->Append(TXTCOMPMSG);\par
   88     output->Append(NEWLINE);\par
   89 \par
   90     return output->GetString();\par
   91 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classVersionStatement_a0601a810472862583ef4c702c6f1fd0a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
app/main/{\b statements.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/lib/aengine.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/lib/aengine.cpp}
{\xe \v app/lib/aengine.cpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/charbuf.h"}\par
{\f2 #include "lib/aengine.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for aengine.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "aengine_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/lib/aengine.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/lib/aengine.h}
{\xe \v app/lib/aengine.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI Conole Engine. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "aengine_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AnsiConoleEngine}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI console controller. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI Conole Engine. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/lib/charbuf.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/lib/charbuf.cpp}
{\xe \v app/lib/charbuf.cpp}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/charbuf.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for charbuf.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "charbuf_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/lib/charbuf.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/lib/charbuf.h}
{\xe \v app/lib/charbuf.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
String and character array logic. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lib/aengine.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for charbuf.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "charbuf_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "charbuf_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CharBuffer}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulate an character array which can be used as a string. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
String and character array logic. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/lib/cplex.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/lib/cplex.cpp}
{\xe \v app/lib/cplex.cpp}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
{\f2 #include "lib/real.h"}\par
{\f2 #include "lib/cplex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cplex.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cplex_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/lib/cplex.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/lib/cplex.h}
{\xe \v app/lib/cplex.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classbased handling of complex numbers. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "complex.h"}\par
{\f2 #include "lib/numb.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cplex.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cplex_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cplex_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ComplexNumber}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represent a complex number with 2 componts of 15 siginificant digits. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classbased handling of complex numbers. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/lib/fgrid.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/lib/fgrid.cpp}
{\xe \v app/lib/fgrid.cpp}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lib/fgrid.h"}\par
{\f2 #include "lib/real.h"}\par
{\f2 #include "main/functions.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for fgrid.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "fgrid_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/lib/fgrid.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/lib/fgrid.h}
{\xe \v app/lib/fgrid.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function grid used with graphs. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lib/real.h"}\par
{\f2 #include "main/functions.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for fgrid.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "fgrid_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "fgrid_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Grid}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function grid used with graphs. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/lib/ntext.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/lib/ntext.cpp}
{\xe \v app/lib/ntext.cpp}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "dprint.h"}\par
{\f2 #include "complex.h"}\par
{\f2 #include "lib/real.h"}\par
{\f2 #include "lib/cplex.h"}\par
{\f2 #include "lib/ntext.h"}\par
{\f2 #include "lib/charbuf.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ntext.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ntext_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/lib/ntext.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/lib/ntext.h}
{\xe \v app/lib/ntext.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Text to numbers handling. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lib/numb.h"}\par
{\f2 #include "lib/charbuf.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ntext.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ntext_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ntext_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NumeralSystem}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all numeral systems. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PositionalNumeralSystem}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all numeral systems with a positional notation. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DecimalSystem}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Text to numbers handling. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts both between text and numbers AND between numbers and text. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/lib/numb.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/lib/numb.h}
{\xe \v app/lib/numb.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classbase handling of numbers. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "numb_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Number}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b NumberSystem} \{ {\b nsysnatural}, 
{\b nsysintegers}, 
{\b nsysrational}, 
{\b nsysreal}, 
{\b nsyscomplex}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classbase handling of numbers. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v NumberSystem\:numb.h}
{\xe \v numb.h\:NumberSystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b NumberSystem}}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v nsysnatural\:numb.h}
{\xe \v numb.h\:nsysnatural}
{\b {\i nsysnatural{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
}}  \par
{\xe \v nsysintegers\:numb.h}
{\xe \v numb.h\:nsysintegers}
{\b {\i nsysintegers{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
}}  \par
{\xe \v nsysrational\:numb.h}
{\xe \v numb.h\:nsysrational}
{\b {\i nsysrational{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
}}  \par
{\xe \v nsysreal\:numb.h}
{\xe \v numb.h\:nsysreal}
{\b {\i nsysreal{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
}}  \par
{\xe \v nsyscomplex\:numb.h}
{\xe \v numb.h\:nsyscomplex}
{\b {\i nsyscomplex{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
}}  \par
\par
}{
Definition at line 40 of file numb.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40              \{\par
   41     nsysnatural,\par
   42     nsysintegers,\par
   43     nsysrational,\par
   44     nsysreal,\par
   45     nsyscomplex\par
   46 \} NumberSystem;\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/lib/real.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/lib/real.cpp}
{\xe \v app/lib/real.cpp}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "lib/numb.h"}\par
{\f2 #include "lib/real.h"}\par
{\f2 #include "lib/cplex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for real.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "real_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/lib/real.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/lib/real.h}
{\xe \v app/lib/real.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classbased handling of complex numbers. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lib/numb.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for real.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "real_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "real_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RealNumber}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represent a real number with 15 siginificant digits. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classbased handling of complex numbers. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/localize/help.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/localize/help.h}
{\xe \v app/localize/help.h}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Help texts for statement. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "localize/lex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for help.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "help_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "help_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b helptextdef}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b symzero}\~ {\b Symbol}(0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b helptextdef} {\b helptexts} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Help texts for statement. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v symzero\:help.h}
{\xe \v help.h\:symzero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define symzero\~ {\b Symbol}(0)}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file help.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v helptexts\:help.h}
{\xe \v help.h\:helptexts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b helptextdef} helptexts[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file help.h.}\par
{
Referenced by Language::GetHelpText(), Language::Language(), and StandardLanguage::LoadCatalogs().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/localize/ialias.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/localize/ialias.h}
{\xe \v app/localize/ialias.h}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ialias_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b identalias}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b identalias} {\b identaliases} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v identaliases\:ialias.h}
{\xe \v ialias.h\:identaliases}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b identalias} identaliases[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file ialias.h.}\par
{
Referenced by Language::FindAlias(), and Language::Language().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/localize/ident.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/localize/ident.h}
{\xe \v app/localize/ident.h}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Help texts for built-in functions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ident.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ident_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ident_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b identhelpdef}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b identhelpdef} {\b identtexts} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Help texts for built-in functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v identtexts\:ident.h}
{\xe \v ident.h\:identtexts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b identhelpdef} identtexts[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file ident.h.}\par
{
Referenced by Language::GetHelpText(), and Language::Language().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/localize/kword.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/localize/kword.h}
{\xe \v app/localize/kword.h}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Keywords used by lexer. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "localize/lex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for kword.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "kword_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "kword_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b keyworddef}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Character representation of keyword tied with its symbol. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b keyworddef} {\b keywords} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Keywords used by lexer. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v keywords\:kword.h}
{\xe \v kword.h\:keywords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b keyworddef} keywords[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file kword.h.}\par
{
Referenced by Language::FindKeyword(), Lexer::FindKeyword(), Language::Language(), and StandardLanguage::LoadCatalogs().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/localize/lex.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/localize/lex.h}
{\xe \v app/localize/lex.h}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Lexer} defitions used by other classes. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "lex_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b operatordef}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Character representation of operator tied with its symbol. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Symbol} \{ {\b symunknown}, 
{\b symident}, 
{\b symqident}, 
{\b symnumber}, 
{\b symplus}, 
{\b symminus}, 
{\b symtimes}, 
{\b symslash}, 
{\b sympower}, 
{\b symabsolute}, 
{\b symassign}, 
{\b symlparen}, 
{\b symrparen}, 
{\b symfuncsqrt}, 
{\b symfunccbrt}, 
{\b symfunclog}, 
{\b symfuncln}, 
{\b symhelp}, 
{\b symeval}, 
{\b symdelete}, 
{\b symall}, 
{\b symclear}, 
{\b symdef}, 
{\b symexit}, 
{\b symoperator}, 
{\b symstatement}, 
{\b symfunction}, 
{\b symvariable}, 
{\b symtrigon}, 
{\b symhyper}, 
{\b symcomplex}, 
{\b syme}, 
{\b sympi}, 
{\b symi}, 
{\b symins}, 
{\b symdelimiter}, 
{\b symend}, 
{\b symshow}, 
{\b symlist}, 
{\b symload}, 
{\b symsave}, 
{\b symexecute}, 
{\b syminput}, 
{\b symoutput}, 
{\b symdigits}, 
{\b symdec}, 
{\b symhex}, 
{\b symbin}, 
{\b symoct}, 
{\b symmem}, 
{\b symprefs}, 
{\b symprompt}, 
{\b symversion}, 
{\b symplot}, 
{\b symdraw}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbols generated by the {\b Lexer}. }}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b operatordef} {\b operators} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Lexer} defitions used by other classes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v Symbol\:lex.h}
{\xe \v lex.h\:Symbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Symbol}}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbols generated by the {\b Lexer}. }}\par
{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v symunknown\:lex.h}
{\xe \v lex.h\:symunknown}
{\b {\i symunknown{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
}}  \par
{\xe \v symident\:lex.h}
{\xe \v lex.h\:symident}
{\b {\i symident{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
}}  \par
{\xe \v symqident\:lex.h}
{\xe \v lex.h\:symqident}
{\b {\i symqident{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
}}  \par
{\xe \v symnumber\:lex.h}
{\xe \v lex.h\:symnumber}
{\b {\i symnumber{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
}}  \par
{\xe \v symplus\:lex.h}
{\xe \v lex.h\:symplus}
{\b {\i symplus{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
}}  \par
{\xe \v symminus\:lex.h}
{\xe \v lex.h\:symminus}
{\b {\i symminus{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
}}  \par
{\xe \v symtimes\:lex.h}
{\xe \v lex.h\:symtimes}
{\b {\i symtimes{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
}}  \par
{\xe \v symslash\:lex.h}
{\xe \v lex.h\:symslash}
{\b {\i symslash{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
}}  \par
{\xe \v sympower\:lex.h}
{\xe \v lex.h\:sympower}
{\b {\i sympower{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
}}  \par
{\xe \v symabsolute\:lex.h}
{\xe \v lex.h\:symabsolute}
{\b {\i symabsolute{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
}}  \par
{\xe \v symassign\:lex.h}
{\xe \v lex.h\:symassign}
{\b {\i symassign{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
}}  \par
{\xe \v symlparen\:lex.h}
{\xe \v lex.h\:symlparen}
{\b {\i symlparen{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
}}  \par
{\xe \v symrparen\:lex.h}
{\xe \v lex.h\:symrparen}
{\b {\i symrparen{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
}}  \par
{\xe \v symfuncsqrt\:lex.h}
{\xe \v lex.h\:symfuncsqrt}
{\b {\i symfuncsqrt{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
}}  \par
{\xe \v symfunccbrt\:lex.h}
{\xe \v lex.h\:symfunccbrt}
{\b {\i symfunccbrt{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
}}  \par
{\xe \v symfunclog\:lex.h}
{\xe \v lex.h\:symfunclog}
{\b {\i symfunclog{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
}}  \par
{\xe \v symfuncln\:lex.h}
{\xe \v lex.h\:symfuncln}
{\b {\i symfuncln{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
}}  \par
{\xe \v symhelp\:lex.h}
{\xe \v lex.h\:symhelp}
{\b {\i symhelp{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
}}  \par
{\xe \v symeval\:lex.h}
{\xe \v lex.h\:symeval}
{\b {\i symeval{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
}}  \par
{\xe \v symdelete\:lex.h}
{\xe \v lex.h\:symdelete}
{\b {\i symdelete{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
}}  \par
{\xe \v symall\:lex.h}
{\xe \v lex.h\:symall}
{\b {\i symall{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
}}  \par
{\xe \v symclear\:lex.h}
{\xe \v lex.h\:symclear}
{\b {\i symclear{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
}}  \par
{\xe \v symdef\:lex.h}
{\xe \v lex.h\:symdef}
{\b {\i symdef{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
}}  \par
{\xe \v symexit\:lex.h}
{\xe \v lex.h\:symexit}
{\b {\i symexit{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
}}  \par
{\xe \v symoperator\:lex.h}
{\xe \v lex.h\:symoperator}
{\b {\i symoperator{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
}}  \par
{\xe \v symstatement\:lex.h}
{\xe \v lex.h\:symstatement}
{\b {\i symstatement{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
}}  \par
{\xe \v symfunction\:lex.h}
{\xe \v lex.h\:symfunction}
{\b {\i symfunction{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
}}  \par
{\xe \v symvariable\:lex.h}
{\xe \v lex.h\:symvariable}
{\b {\i symvariable{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
}}  \par
{\xe \v symtrigon\:lex.h}
{\xe \v lex.h\:symtrigon}
{\b {\i symtrigon{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
}}  \par
{\xe \v symhyper\:lex.h}
{\xe \v lex.h\:symhyper}
{\b {\i symhyper{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
}}  \par
{\xe \v symcomplex\:lex.h}
{\xe \v lex.h\:symcomplex}
{\b {\i symcomplex{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
}}  \par
{\xe \v syme\:lex.h}
{\xe \v lex.h\:syme}
{\b {\i syme{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
}}  \par
{\xe \v sympi\:lex.h}
{\xe \v lex.h\:sympi}
{\b {\i sympi{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
}}  \par
{\xe \v symi\:lex.h}
{\xe \v lex.h\:symi}
{\b {\i symi{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
}}  \par
{\xe \v symins\:lex.h}
{\xe \v lex.h\:symins}
{\b {\i symins{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
}}  \par
{\xe \v symdelimiter\:lex.h}
{\xe \v lex.h\:symdelimiter}
{\b {\i symdelimiter{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
}}  \par
{\xe \v symend\:lex.h}
{\xe \v lex.h\:symend}
{\b {\i symend{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
}}  \par
{\xe \v symshow\:lex.h}
{\xe \v lex.h\:symshow}
{\b {\i symshow{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
}}  \par
{\xe \v symlist\:lex.h}
{\xe \v lex.h\:symlist}
{\b {\i symlist{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
}}  \par
{\xe \v symload\:lex.h}
{\xe \v lex.h\:symload}
{\b {\i symload{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
}}  \par
{\xe \v symsave\:lex.h}
{\xe \v lex.h\:symsave}
{\b {\i symsave{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
}}  \par
{\xe \v symexecute\:lex.h}
{\xe \v lex.h\:symexecute}
{\b {\i symexecute{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
}}  \par
{\xe \v syminput\:lex.h}
{\xe \v lex.h\:syminput}
{\b {\i syminput{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
}}  \par
{\xe \v symoutput\:lex.h}
{\xe \v lex.h\:symoutput}
{\b {\i symoutput{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
}}  \par
{\xe \v symdigits\:lex.h}
{\xe \v lex.h\:symdigits}
{\b {\i symdigits{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
}}  \par
{\xe \v symdec\:lex.h}
{\xe \v lex.h\:symdec}
{\b {\i symdec{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
}}  \par
{\xe \v symhex\:lex.h}
{\xe \v lex.h\:symhex}
{\b {\i symhex{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
}}  \par
{\xe \v symbin\:lex.h}
{\xe \v lex.h\:symbin}
{\b {\i symbin{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
}}  \par
{\xe \v symoct\:lex.h}
{\xe \v lex.h\:symoct}
{\b {\i symoct{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
}}  \par
{\xe \v symmem\:lex.h}
{\xe \v lex.h\:symmem}
{\b {\i symmem{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
}}  \par
{\xe \v symprefs\:lex.h}
{\xe \v lex.h\:symprefs}
{\b {\i symprefs{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
}}  \par
{\xe \v symprompt\:lex.h}
{\xe \v lex.h\:symprompt}
{\b {\i symprompt{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
}}  \par
{\xe \v symversion\:lex.h}
{\xe \v lex.h\:symversion}
{\b {\i symversion{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
}}  \par
{\xe \v symplot\:lex.h}
{\xe \v lex.h\:symplot}
{\b {\i symplot{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
}}  \par
{\xe \v symdraw\:lex.h}
{\xe \v lex.h\:symdraw}
{\b {\i symdraw{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
}}  \par
\par
}{
Definition at line 40 of file lex.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40              \{\par
   41     symunknown, symident, symqident, symnumber,\par
   42     symplus, symminus, symtimes, symslash, sympower,\par
   43     symabsolute, symassign, symlparen, symrparen,\par
   44     symfuncsqrt, symfunccbrt, symfunclog, symfuncln,\par
   45     symhelp, symeval, symdelete, symall, symclear, symdef, symexit,\par
   46     symoperator, symstatement, symfunction, symvariable,\par
   47     symtrigon, symhyper, symcomplex,\par
   48     syme, sympi, symi,symins, symdelimiter, symend,\par
   49     symshow, symlist, symload, symsave, symexecute,\par
   50     syminput, symoutput, symdigits,\par
   51     symdec, symhex, symbin, symoct,\par
   52     symmem, symprefs, symprompt, symversion,\par
   53     symplot, symdraw\par
   54 \} Symbol;\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v operators\:lex.h}
{\xe \v lex.h\:operators}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b operatordef} operators[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    \{ '+', symplus\},\par
    \{ '-', symminus\},\par
    \{ '/', symslash\},\par
    \{ '*', symtimes\},\par
    \{ '^', sympower\},\par
    \{ '(', symlparen\},\par
    \{ ')', symrparen\},\par
    \{ '|', symabsolute\},\par
    \{ '=', symassign\},\par
    \{ '\\n', symdelimiter\},\par
    \{ ';', symdelimiter\}\par
\}\par
}
{
Definition at line 65 of file lex.h.}\par
{
Referenced by Lexer::FindKeyword(), and Lexer::GetOperator().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/localize/start.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/localize/start.h}
{\xe \v app/localize/start.h}
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start message and version text. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for start.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "start_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "start_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTTEST}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTFPU}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTARCH}\~ TXTCPU {\b TXTFPU} {\b TXTTEST}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RELDATESTAMP}\~ "(10-01-2017)"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTDOSVERSION}\~ "\\0$VER: amath 1.61" SPACE {\b RELDATESTAMP} {\b SPACE} {\b TXTARCH}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTTITLE}\~ "amath version 1.6.1"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTCOPYRIGHT}\~ "(c) 2017 Carsten Sonne Larsen"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTSTARTMSG}\~ {\b TXTTITLE} {\b SPACE} {\b TXTCOPYRIGHT}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTVERSMSG}\~ {\b TXTTITLE} {\b SPACE} {\b RELDATESTAMP} {\b SPACE} {\b TXTARCH}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTCOMPMSG}\~ "Compiled with " COMP_NAME {\b SPACE} COMP_VERS\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTEXTCOPYRIGHT}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start message and version text. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v RELDATESTAMP\:start.h}
{\xe \v start.h\:RELDATESTAMP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RELDATESTAMP\~ "(10-01-2017)"}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file start.h.}\par
}
{\xe \v TXTARCH\:start.h}
{\xe \v start.h\:TXTARCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTARCH\~ TXTCPU {\b TXTFPU} {\b TXTTEST}}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file start.h.}\par
}
{\xe \v TXTCOMPMSG\:start.h}
{\xe \v start.h\:TXTCOMPMSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTCOMPMSG\~ "Compiled with " COMP_NAME {\b SPACE} COMP_VERS}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file start.h.}\par
}
{\xe \v TXTCOPYRIGHT\:start.h}
{\xe \v start.h\:TXTCOPYRIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTCOPYRIGHT\~ "(c) 2017 Carsten Sonne Larsen"}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 100 of file start.h.}\par
}
{\xe \v TXTDOSVERSION\:start.h}
{\xe \v start.h\:TXTDOSVERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTDOSVERSION\~ "\\0$VER: amath 1.61" SPACE {\b RELDATESTAMP} {\b SPACE} {\b TXTARCH}}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 98 of file start.h.}\par
}
{\xe \v TXTEXTCOPYRIGHT\:start.h}
{\xe \v start.h\:TXTEXTCOPYRIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTEXTCOPYRIGHT}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid "This software contains copyrighted material by:" NEWLINE \\\par
    "The Regents of the University of California" NEWLINE \\\par
    "The NetBSD Foundation, Inc." NEWLINE \\\par
    "Sun Microsystems, Inc." NEWLINE "Ryan Juckett" NEWLINE NEWLINE \\\par
    "Portions of the code have been contributed by:" NEWLINE \\\par
    "Stephen L. Moshier" NEWLINE "Stefan Haubenthal" NEWLINE \\\par
    "Ryan Juckett" NEWLINE "Chris Torek" NEWLINE "Mike Hibler"\par
}
{
Definition at line 106 of file start.h.}\par
}
{\xe \v TXTFPU\:start.h}
{\xe \v start.h\:TXTFPU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTFPU\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file start.h.}\par
}
{\xe \v TXTSTARTMSG\:start.h}
{\xe \v start.h\:TXTSTARTMSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTSTARTMSG\~ {\b TXTTITLE} {\b SPACE} {\b TXTCOPYRIGHT}}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file start.h.}\par
}
{\xe \v TXTTEST\:start.h}
{\xe \v start.h\:TXTTEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTTEST\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file start.h.}\par
}
{\xe \v TXTTITLE\:start.h}
{\xe \v start.h\:TXTTITLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTTITLE\~ "amath version 1.6.1"}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file start.h.}\par
}
{\xe \v TXTVERSMSG\:start.h}
{\xe \v start.h\:TXTVERSMSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTVERSMSG\~ {\b TXTTITLE} {\b SPACE} {\b RELDATESTAMP} {\b SPACE} {\b TXTARCH}}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 103 of file start.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/localize/tags.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/localize/tags.h}
{\xe \v app/localize/tags.h}
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "localize/start.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for tags.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tags_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tags_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b texttag} {\b texttags} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v texttags\:tags.h}
{\xe \v tags.h\:texttags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b texttag} texttags[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    \{ "#HEADLINE#", HEADLINE \},\par
    \{ "#SYNTAXHIGHLIGHT#", SYNTAXHIGHLIGHT \},\par
    \{ "#NORMALTEXT#", NORMALTEXT \},\par
    \{ "#BOLD#", BOLD\},\par
    \{ "#ITALICS#", ITALICS\},\par
    \{ "#UNDERLINE#", UNDERLINE\},\par
    \{ "#COLOR01#", COLOR01\},\par
    \{ "#COLOR02#", COLOR02\},\par
    \{ "#COLOR03#", COLOR03\},\par
    \{ "#SPACE#", SPACE\},\par
    \{ "#NEWLINE#", NEWLINE\},\par
    \{ "#STARTMSG#", TXTSTARTMSG\}\par
\}\par
}
{
Definition at line 33 of file tags.h.}\par
{
Referenced by Language::UntagText().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/localize/text.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/localize/text.h}
{\xe \v app/localize/text.h}
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static texts in amath. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for text.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "text_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "text_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b textdef}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INTROMSG}\~ {\b Program}->{\b Language}->GetText(0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTLISTDIRHEADER}\~ {\b Program}->{\b Language}->GetText(1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTLISTDIRTFILE}\~ {\b Program}->{\b Language}->GetText(2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTLISTDIRTDIR}\~ {\b Program}->{\b Language}->GetText(3)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTLISTDIRTUNKNOWN}\~ {\b Program}->{\b Language}->GetText(4)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTMEMBLOCKS}\~ {\b Program}->{\b Language}->GetText(5)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTMEMSIZE}\~ {\b Program}->{\b Language}->GetText(6)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXTMEMMAXSIZE}\~ {\b Program}->{\b Language}->GetText(7)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPNOHELP}\~ {\b Program}->{\b Language}->GetText(8)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPSYNTAX}\~ {\b Program}->{\b Language}->GetText(9)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPUERROR}\~ {\b Program}->{\b Language}->GetText(10)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPVARNDEF}\~ {\b Program}->{\b Language}->GetText(11)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPFUNNDEF}\~ {\b Program}->{\b Language}->GetText(12)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPFUNRDEF}\~ {\b Program}->{\b Language}->GetText(13)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPPNUMERA}\~ {\b Program}->{\b Language}->GetText(14)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPPDIGITS}\~ {\b Program}->{\b Language}->GetText(15)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPINPUSHOW}\~ {\b Program}->{\b Language}->GetText(16)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPOUTPSHOW}\~ {\b Program}->{\b Language}->GetText(17)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPINPUSETT}\~ {\b Program}->{\b Language}->GetText(18)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPOUTPSETT}\~ {\b Program}->{\b Language}->GetText(19)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPDIGISETT}\~ {\b Program}->{\b Language}->GetText(20)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPDIGISHOW}\~ {\b Program}->{\b Language}->GetText(21)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPVARSNDEF}\~ {\b Program}->{\b Language}->GetText(22)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPFUNCNDEF}\~ {\b Program}->{\b Language}->GetText(23)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPLOADSUCC}\~ {\b Program}->{\b Language}->GetText(24)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPSAVESUCC}\~ {\b Program}->{\b Language}->GetText(25)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPSAVEFAIL}\~ {\b Program}->{\b Language}->GetText(26)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPSAVENOTH}\~ {\b Program}->{\b Language}->GetText(27)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPPREFLOAD}\~ {\b Program}->{\b Language}->GetText(28)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPPREFNOLO}\~ {\b Program}->{\b Language}->GetText(29)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPPREFSAVE}\~ {\b Program}->{\b Language}->GetText(30)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HELPPREFNOSA}\~ {\b Program}->{\b Language}->GetText(31)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MSGNODIR}\~ {\b Program}->{\b Language}->GetText(32)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MSGNOFILE}\~ {\b Program}->{\b Language}->GetText(33)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b textdef} {\b textdefs} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static texts in amath. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v HELPDIGISETT\:text.h}
{\xe \v text.h\:HELPDIGISETT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPDIGISETT\~ {\b Program}->{\b Language}->GetText(20)}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file text.h.}\par
}
{\xe \v HELPDIGISHOW\:text.h}
{\xe \v text.h\:HELPDIGISHOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPDIGISHOW\~ {\b Program}->{\b Language}->GetText(21)}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file text.h.}\par
}
{\xe \v HELPFUNCNDEF\:text.h}
{\xe \v text.h\:HELPFUNCNDEF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPFUNCNDEF\~ {\b Program}->{\b Language}->GetText(23)}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file text.h.}\par
}
{\xe \v HELPFUNNDEF\:text.h}
{\xe \v text.h\:HELPFUNNDEF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPFUNNDEF\~ {\b Program}->{\b Language}->GetText(12)}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file text.h.}\par
}
{\xe \v HELPFUNRDEF\:text.h}
{\xe \v text.h\:HELPFUNRDEF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPFUNRDEF\~ {\b Program}->{\b Language}->GetText(13)}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file text.h.}\par
}
{\xe \v HELPINPUSETT\:text.h}
{\xe \v text.h\:HELPINPUSETT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPINPUSETT\~ {\b Program}->{\b Language}->GetText(18)}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file text.h.}\par
}
{\xe \v HELPINPUSHOW\:text.h}
{\xe \v text.h\:HELPINPUSHOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPINPUSHOW\~ {\b Program}->{\b Language}->GetText(16)}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file text.h.}\par
}
{\xe \v HELPLOADSUCC\:text.h}
{\xe \v text.h\:HELPLOADSUCC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPLOADSUCC\~ {\b Program}->{\b Language}->GetText(24)}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file text.h.}\par
}
{\xe \v HELPNOHELP\:text.h}
{\xe \v text.h\:HELPNOHELP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPNOHELP\~ {\b Program}->{\b Language}->GetText(8)}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file text.h.}\par
}
{\xe \v HELPOUTPSETT\:text.h}
{\xe \v text.h\:HELPOUTPSETT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPOUTPSETT\~ {\b Program}->{\b Language}->GetText(19)}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file text.h.}\par
}
{\xe \v HELPOUTPSHOW\:text.h}
{\xe \v text.h\:HELPOUTPSHOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPOUTPSHOW\~ {\b Program}->{\b Language}->GetText(17)}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file text.h.}\par
}
{\xe \v HELPPDIGITS\:text.h}
{\xe \v text.h\:HELPPDIGITS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPPDIGITS\~ {\b Program}->{\b Language}->GetText(15)}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file text.h.}\par
}
{\xe \v HELPPNUMERA\:text.h}
{\xe \v text.h\:HELPPNUMERA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPPNUMERA\~ {\b Program}->{\b Language}->GetText(14)}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file text.h.}\par
}
{\xe \v HELPPREFLOAD\:text.h}
{\xe \v text.h\:HELPPREFLOAD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPPREFLOAD\~ {\b Program}->{\b Language}->GetText(28)}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file text.h.}\par
}
{\xe \v HELPPREFNOLO\:text.h}
{\xe \v text.h\:HELPPREFNOLO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPPREFNOLO\~ {\b Program}->{\b Language}->GetText(29)}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file text.h.}\par
}
{\xe \v HELPPREFNOSA\:text.h}
{\xe \v text.h\:HELPPREFNOSA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPPREFNOSA\~ {\b Program}->{\b Language}->GetText(31)}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file text.h.}\par
}
{\xe \v HELPPREFSAVE\:text.h}
{\xe \v text.h\:HELPPREFSAVE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPPREFSAVE\~ {\b Program}->{\b Language}->GetText(30)}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file text.h.}\par
}
{\xe \v HELPSAVEFAIL\:text.h}
{\xe \v text.h\:HELPSAVEFAIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPSAVEFAIL\~ {\b Program}->{\b Language}->GetText(26)}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file text.h.}\par
}
{\xe \v HELPSAVENOTH\:text.h}
{\xe \v text.h\:HELPSAVENOTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPSAVENOTH\~ {\b Program}->{\b Language}->GetText(27)}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file text.h.}\par
}
{\xe \v HELPSAVESUCC\:text.h}
{\xe \v text.h\:HELPSAVESUCC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPSAVESUCC\~ {\b Program}->{\b Language}->GetText(25)}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file text.h.}\par
}
{\xe \v HELPSYNTAX\:text.h}
{\xe \v text.h\:HELPSYNTAX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPSYNTAX\~ {\b Program}->{\b Language}->GetText(9)}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file text.h.}\par
}
{\xe \v HELPUERROR\:text.h}
{\xe \v text.h\:HELPUERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPUERROR\~ {\b Program}->{\b Language}->GetText(10)}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file text.h.}\par
}
{\xe \v HELPVARNDEF\:text.h}
{\xe \v text.h\:HELPVARNDEF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPVARNDEF\~ {\b Program}->{\b Language}->GetText(11)}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file text.h.}\par
}
{\xe \v HELPVARSNDEF\:text.h}
{\xe \v text.h\:HELPVARSNDEF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HELPVARSNDEF\~ {\b Program}->{\b Language}->GetText(22)}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file text.h.}\par
}
{\xe \v INTROMSG\:text.h}
{\xe \v text.h\:INTROMSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INTROMSG\~ {\b Program}->{\b Language}->GetText(0)}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file text.h.}\par
}
{\xe \v MSGNODIR\:text.h}
{\xe \v text.h\:MSGNODIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MSGNODIR\~ {\b Program}->{\b Language}->GetText(32)}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file text.h.}\par
}
{\xe \v MSGNOFILE\:text.h}
{\xe \v text.h\:MSGNOFILE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MSGNOFILE\~ {\b Program}->{\b Language}->GetText(33)}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file text.h.}\par
}
{\xe \v TXTLISTDIRHEADER\:text.h}
{\xe \v text.h\:TXTLISTDIRHEADER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTLISTDIRHEADER\~ {\b Program}->{\b Language}->GetText(1)}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file text.h.}\par
}
{\xe \v TXTLISTDIRTDIR\:text.h}
{\xe \v text.h\:TXTLISTDIRTDIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTLISTDIRTDIR\~ {\b Program}->{\b Language}->GetText(3)}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file text.h.}\par
}
{\xe \v TXTLISTDIRTFILE\:text.h}
{\xe \v text.h\:TXTLISTDIRTFILE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTLISTDIRTFILE\~ {\b Program}->{\b Language}->GetText(2)}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file text.h.}\par
}
{\xe \v TXTLISTDIRTUNKNOWN\:text.h}
{\xe \v text.h\:TXTLISTDIRTUNKNOWN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTLISTDIRTUNKNOWN\~ {\b Program}->{\b Language}->GetText(4)}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file text.h.}\par
}
{\xe \v TXTMEMBLOCKS\:text.h}
{\xe \v text.h\:TXTMEMBLOCKS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTMEMBLOCKS\~ {\b Program}->{\b Language}->GetText(5)}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file text.h.}\par
}
{\xe \v TXTMEMMAXSIZE\:text.h}
{\xe \v text.h\:TXTMEMMAXSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTMEMMAXSIZE\~ {\b Program}->{\b Language}->GetText(7)}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file text.h.}\par
}
{\xe \v TXTMEMSIZE\:text.h}
{\xe \v text.h\:TXTMEMSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXTMEMSIZE\~ {\b Program}->{\b Language}->GetText(6)}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file text.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v textdefs\:text.h}
{\xe \v text.h\:textdefs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b textdef} textdefs[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file text.h.}\par
{
Referenced by Language::GetText(), and Language::Language().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/main.cpp}
{\xe \v app/main.cpp}
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "system/program.h"}\par
{\f2 #include "system/base/io.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for main.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file main.cpp.}\par
{
References Cleanup(), CreateProgram(), Program::Initialize(), and Program::Run().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    31 \{\par
   32     Program = CreateProgram(argc, argv);\par
   33     Program->Initialize(argc, argv);\par
   34     Program->Run();\par
   35     Cleanup();\par
   36     return 0;\par
   37 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8cpp_a3c04138a5bfe5d72780bb7e82a18e627_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/evaluator.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/evaluator.cpp}
{\xe \v app/main/evaluator.cpp}
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "main/parser.h"}\par
{\f2 #include "main/viewer.h"}\par
{\f2 #include "main/optimizer.h"}\par
{\f2 #include "main/evaluator.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for evaluator.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "evaluator_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/evaluator.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/evaluator.h}
{\xe \v app/main/evaluator.h}
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO: Comment. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lib/charbuf.h"}\par
{\f2 #include "main/token.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for evaluator.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "evaluator_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "evaluator_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Evaluator}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO: Comment. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO: Comment. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/functiondefs.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/functiondefs.h}
{\xe \v app/main/functiondefs.h}
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function defitions for math logic. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main/nodes.h"}\par
{\f2 #include "main/functions.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for functiondefs.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functiondefs_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functiondefs_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b functiondef}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function defitions of known mathematical functions. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b FunctionNode} *(* {\b CreateFunctionNode}) ({\b ExpressionNode} *)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b functiondef} {\b functiondefs} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function defitions for math logic. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v CreateFunctionNode\:functiondefs.h}
{\xe \v functiondefs.h\:CreateFunctionNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b FunctionNode}*(* CreateFunctionNode) ({\b ExpressionNode} *)}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file functiondefs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v functiondefs\:functiondefs.h}
{\xe \v functiondefs.h\:functiondefs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b functiondef} functiondefs[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file functiondefs.h.}\par
{
Referenced by FunctionList::GetSystemFunction().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/functions.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/functions.cpp}
{\xe \v app/main/functions.cpp}
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/numb.h"}\par
{\f2 #include "main/values.h"}\par
{\f2 #include "main/functions.h"}\par
{\f2 #include "main/functiondefs.h"}\par
{\f2 #include "system/program.h"}\par
{\f2 #include "localize/text.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for functions.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/functions.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/functions.h}
{\xe \v app/main/functions.h}
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to functions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main/nodes.h"}\par
{\f2 #include "main/values.h"}\par
{\f2 #include "main/statements.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for functions.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FunctionNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a mathematical function in a syntax tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FunctionList}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of user defined functions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UserFunction}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user defined function. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListFunctionsStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A syntax node able to list all user defined functions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FunctionDefinitionNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A syntax node able to define a user defined function. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UserFunctionNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An expression node able to compute a function value. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AbsoluteFunctionNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SignumNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A signum function in a syntax tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RoundNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A rounding function in a syntax tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TruncNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A truncation function in a syntax tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FloorNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CeilingNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SquareRootNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CubeRootNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LogNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LnRootNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BinaryLogNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SineNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CosineNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TangentNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CotangentNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CosecantNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SecantNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ArcSineNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ArcCosineNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ArcTangentNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ArcCotangentNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ArcCosecantNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ArcSecantNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HyperbolicSineNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HyperbolicCosineNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HyperbolicTangentNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HyperbolicCotangentNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HyperbolicSecantNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HyperbolicCosecantNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HyperbolicArccosineNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HyperbolicArcsineNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HyperbolicArctangentNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HyperbolicArcCotangentNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HyperbolicArcCosecantNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HyperbolicArcSecantNode}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/graphlist.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/graphlist.cpp}
{\xe \v app/main/graphlist.cpp}
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/numb.h"}\par
{\f2 #include "main/graphlist.h"}\par
{\f2 #include "system/base/io.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for graphlist.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "graphlist_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/graphlist.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/graphlist.h}
{\xe \v app/main/graphlist.h}
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory maintainance for function of graphs. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "system/graph.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for graphlist.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "graphlist_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "graphlist_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GraphList}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of open graph windows. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory maintainance for function of graphs. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/lexer.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/lexer.cpp}
{\xe \v app/main/lexer.cpp}
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "main/lexer.h"}\par
{\f2 #include "main/token.h"}\par
{\f2 #include "localize/lex.h"}\par
{\f2 #include "localize/kword.h"}\par
{\f2 #include "system/program.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for lexer.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "lexer_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/lexer.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/lexer.h}
{\xe \v app/main/lexer.h}
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to {\b Lexer}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main/token.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for lexer.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "lexer_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "lexer_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Lexer}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates an lexical analyzer. Provides token for the parser. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to {\b Lexer}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/nodes.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/nodes.cpp}
{\xe \v app/main/nodes.cpp}
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/numb.h"}\par
{\f2 #include "lib/charbuf.h"}\par
{\f2 #include "main/nodes.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "system/program.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for nodes.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "nodes_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/nodes.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/nodes.h}
{\xe \v app/main/nodes.h}
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Top nodes in syntax trees. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/numb.h"}\par
{\f2 #include "lib/charbuf.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for nodes.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "nodes_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "nodes_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SyntaxNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all nodes in a syntax tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExpressionNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all nodes related to mathematical expressions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StatementNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all statements in a syntax tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ErrorNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an error message encapsulated in a syntax tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StatementBlockNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A sequence of statements in a syntax tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b StatementBlockElement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to create a linked list of statements. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b NodeType} \{ {\b othernodetype}, 
{\b statement}, 
{\b expression}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ReductionType} \{ {\b nonereduc}, 
{\b unaryreduc}, 
{\b valuereduc}, 
{\b compladdreduc}, 
{\b complsubreduc}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Top nodes in syntax trees. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v NodeType\:nodes.h}
{\xe \v nodes.h\:NodeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b NodeType}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v othernodetype\:nodes.h}
{\xe \v nodes.h\:othernodetype}
{\b {\i othernodetype{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
}}  \par
{\xe \v statement\:nodes.h}
{\xe \v nodes.h\:statement}
{\b {\i statement{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
}}  \par
{\xe \v expression\:nodes.h}
{\xe \v nodes.h\:expression}
{\b {\i expression{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
}}  \par
\par
}{
Definition at line 40 of file nodes.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40              \{\par
   41     othernodetype, statement, expression\par
   42 \} NodeType;\par
}
}
{\xe \v ReductionType\:nodes.h}
{\xe \v nodes.h\:ReductionType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b ReductionType}}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v nonereduc\:nodes.h}
{\xe \v nodes.h\:nonereduc}
{\b {\i nonereduc{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
}}  \par
{\xe \v unaryreduc\:nodes.h}
{\xe \v nodes.h\:unaryreduc}
{\b {\i unaryreduc{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
}}  \par
{\xe \v valuereduc\:nodes.h}
{\xe \v nodes.h\:valuereduc}
{\b {\i valuereduc{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
}}  \par
{\xe \v compladdreduc\:nodes.h}
{\xe \v nodes.h\:compladdreduc}
{\b {\i compladdreduc{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
}}  \par
{\xe \v complsubreduc\:nodes.h}
{\xe \v nodes.h\:complsubreduc}
{\b {\i complsubreduc{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
}}  \par
\par
}{
Definition at line 44 of file nodes.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44              \{\par
   45     nonereduc, unaryreduc, valuereduc, compladdreduc, complsubreduc\par
   46 \} ReductionType;\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/operators.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/operators.cpp}
{\xe \v app/main/operators.cpp}
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/numb.h"}\par
{\f2 #include "lib/charbuf.h"}\par
{\f2 #include "main/operators.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for operators.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "operators_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/operators.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/operators.h}
{\xe \v app/main/operators.h}
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to arithmetic operators. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main/nodes.h"}\par
{\f2 #include "main/values.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for operators.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "operators_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "operators_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UnaryNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AbsoluteNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NumericOperator}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AdditionNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SubtractionNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MultiplicationNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DivisionNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PowerNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AssignmentNode}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to arithmetic operators. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/optimizer.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/optimizer.cpp}
{\xe \v app/main/optimizer.cpp}
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main/nodes.h"}\par
{\f2 #include "main/values.h"}\par
{\f2 #include "main/optimizer.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for optimizer.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "optimizer_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/optimizer.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/optimizer.h}
{\xe \v app/main/optimizer.h}
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main/nodes.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for optimizer.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "optimizer_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "optimizer_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Optimizer}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/parser.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/parser.cpp}
{\xe \v app/main/parser.cpp}
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/numb.h"}\par
{\f2 #include "lib/real.h"}\par
{\f2 #include "lib/cplex.h"}\par
{\f2 #include "main/parser.h"}\par
{\f2 #include "main/values.h"}\par
{\f2 #include "main/operators.h"}\par
{\f2 #include "main/functions.h"}\par
{\f2 #include "main/statements.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "system/program.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for parser.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "parser_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/parser.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/parser.h}
{\xe \v app/main/parser.h}
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to {\b Parser}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main/nodes.h"}\par
{\f2 #include "main/lexer.h"}\par
{\f2 #include "main/values.h"}\par
{\f2 #include "main/functions.h"}\par
{\f2 #include "main/statements.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for parser.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "parser_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "parser_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Parser}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates a recursive descent parser. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to {\b Parser}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/statements.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/statements.cpp}
{\xe \v app/main/statements.cpp}
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "mem.h"}\par
{\f2 #include "clib.h"}\par
{\f2 #include "lib/real.h"}\par
{\f2 #include "lib/charbuf.h"}\par
{\f2 #include "localize/help.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "localize/start.h"}\par
{\f2 #include "main/parser.h"}\par
{\f2 #include "main/graphlist.h"}\par
{\f2 #include "main/statements.h"}\par
{\f2 #include "system/console.h"}\par
{\f2 #include "system/program.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for statements.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "statements_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/statements.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/statements.h}
{\xe \v app/main/statements.h}
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General statement nodes. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main/nodes.h"}\par
{\f2 #include "main/token.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for statements.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "statements_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "statements_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ClearStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the console window. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExitStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exit program. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EmptyStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An empty statement. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b VersionStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Show version string. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MemoryStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Show memory usage. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PromptStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set prompt string. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PrefsStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load or save preferences. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SilentStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mutes the output of another statement. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EvalStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluate arithmetic expression. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HelpStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logic related to the help statement. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DeleteStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete variable or function. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InputStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change numeral input system. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OutputStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change numeral output system. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DigitsStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set number of significant digits to show. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ShowStatement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListStatement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LoadStatement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SaveStatement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExecuteStatement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PlotStatement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DrawStatement}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General statement nodes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains classes implementing statements in a syntax tree. All statements inherit from the {\b StatementNode} base class. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/token.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/token.cpp}
{\xe \v app/main/token.cpp}
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "main/token.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for token.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "token_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/token.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/token.h}
{\xe \v app/main/token.h}
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to {\b Token}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "localize/lex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for token.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "token_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "token_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Token}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tokens are created by the Lexical Analyzer and provides an intermediate state for input consumed by the parser. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to {\b Token}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/values.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/values.cpp}
{\xe \v app/main/values.cpp}
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "lib/numb.h"}\par
{\f2 #include "lib/real.h"}\par
{\f2 #include "lib/cplex.h"}\par
{\f2 #include "lib/charbuf.h"}\par
{\f2 #include "main/nodes.h"}\par
{\f2 #include "main/values.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "system/program.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for values.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "values_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/values.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/values.h}
{\xe \v app/main/values.h}
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to numbers and values. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/numb.h"}\par
{\f2 #include "main/nodes.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for values.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "values_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "values_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b VariableList}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of user defined variables. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Variable}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user defined variable. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListVariablesStatement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Statement to list all user defined variables. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b VariableNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of a variable in a syntax tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InsVariableNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of last result in a syntax tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NumericValueNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of a numeric value in a syntax tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EulersNumberNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of Eulers number in a syntax tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PiNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of PI in a syntax tree. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ComplexiNode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use of the square root of -2 in a syntax tree. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application logic tied to numbers and values. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/viewer.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/viewer.cpp}
{\xe \v app/main/viewer.cpp}
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/charbuf.h"}\par
{\f2 #include "main/viewer.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for viewer.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "viewer_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/main/viewer.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/main/viewer.h}
{\xe \v app/main/viewer.h}
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug class to view a syntax tree. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lib/charbuf.h"}\par
{\f2 #include "main/nodes.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for viewer.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "viewer_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "viewer_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug class to view a syntax tree. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/base/io.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/base/io.cpp}
{\xe \v app/system/base/io.cpp}
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "mem.h"}\par
{\f2 #include "clib.h"}\par
{\f2 #include "localize/start.h"}\par
{\f2 #include "system/program.h"}\par
{\f2 #include "system/program_stdc.h"}\par
{\f2 #include "system/program_amiga.h"}\par
{\f2 #include "system/program_test.h"}\par
{\f2 #include "system/console.h"}\par
{\f2 #include "system/console_stdc.h"}\par
{\f2 #include "system/console_amiga.h"}\par
{\f2 #include "system/language.h"}\par
{\f2 #include "system/language_stdc.h"}\par
{\f2 #include "system/language_amiga.h"}\par
{\f2 #include "system/language_posix.h"}\par
{\f2 #include "system/filesystem.h"}\par
{\f2 #include "system/filesystem_stdc.h"}\par
{\f2 #include "system/filesystem_amiga.h"}\par
{\f2 #include "system/preferences.h"}\par
{\f2 #include "system/preferences_stdc.h"}\par
{\f2 #include "system/preferences_amiga.h"}\par
{\f2 #include "system/window_amiga.h"}\par
{\f2 #include "system/graph_amiga.h"}\par
{\f2 #include "system/base/io.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for io.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Program} * {\b CreateProgram} (int argc, char **argv)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Language} * {\b CreateLanguage} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PreferencesBase} * {\b CreatePreferences} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FilesystemBase} * {\b CreateFilesystem} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GraphWindow} * {\b CreateGraphWindow} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WriteToShell} (const char *out)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Cleanup} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b vers} = {\b TXTDOSVERSION}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Program} * {\b Program} = NULL\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Cleanup\:io.cpp}
{\xe \v io.cpp\:Cleanup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Cleanup ()}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 155 of file io.cpp.}\par
{
References FreeAllSafe().}\par
{
Referenced by main().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   156 \{\par
  157 #ifdef AMIGA\par
  158     if (DosBase != NULL) \{\par
  159         CloseLibrary((struct Library*)DosBase);\par
  160     \}\par
  161 \par
  162     if (LocaleBase != NULL) \{\par
  163         CloseLibrary((struct Library*)LocaleBase);\par
  164     \}\par
  165 \par
  166     if (GfxBase != NULL) \{\par
  167         CloseLibrary((struct Library*)GfxBase);\par
  168     \}\par
  169 \par
  170     if (IntuitionBase != NULL) \{\par
  171         CloseLibrary((struct Library*)IntuitionBase);\par
  172     \}\par
  173 #endif\par
  174     delete Program;\par
  175     FreeAllSafe();\par
  176 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8cpp_ae89a123aad1c66a76c398b7af216aae4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8cpp_ae89a123aad1c66a76c398b7af216aae4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CreateFilesystem\:io.cpp}
{\xe \v io.cpp\:CreateFilesystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b FilesystemBase}* CreateFilesystem ()}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file io.cpp.}\par
{
Referenced by StandardLanguage::LoadCatalog(), and Program::Program().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   126 \{\par
  127 #ifdef AMIGA\par
  128     DosBase = (struct DosBase*)OpenLibrary(AMIGADOS_NAME, AMIGADOS_REV);\par
  129     if (DosBase == NULL) \{\par
  130         return NULL;\par
  131     \}\par
  132     return new AmigaFilesystem();\par
  133 #else\par
  134     return new StandardFilesystem();\par
  135 #endif\par
  136 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8cpp_aaf891622b11e0bb888ebf08612884aa8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CreateGraphWindow\:io.cpp}
{\xe \v io.cpp\:CreateGraphWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GraphWindow}* CreateGraphWindow ()}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 138 of file io.cpp.}\par
{
Referenced by GraphList::CreateNewWindow().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   138                                  \{\par
  139 #ifdef AMIGA\par
  140     return new AmigaGraphWindow();\par
  141 #else\par
  142     return NOMEM;\par
  143 #endif\par
  144 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8cpp_a9814577593e2afd5b40651d217a80bae_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CreateLanguage\:io.cpp}
{\xe \v io.cpp\:CreateLanguage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b Language}* CreateLanguage ()}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 100 of file io.cpp.}\par
{
References PosixLanguage::PosixLanguage(), and StandardLanguage::StandardLanguage().}\par
{
Referenced by Program::Program().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   101 \{\par
  102 #ifdef UNIX\par
  103     return new PosixLanguage();\par
  104 #endif\par
  105 #ifdef AMIGA\par
  106     LocaleBase = (struct LocaleBase*)OpenLibrary(LOCALE_NAME, LOCALE_REV);\par
  107     if (LocaleBase != NULL) \{\par
  108         return new AmigaLanguage();\par
  109     \} else\par
  110 #endif\par
  111     \{\par
  112         return new StandardLanguage();\par
  113     \}\par
  114 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8cpp_a28bdfc208e3840f49d1af4a4196013e1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8cpp_a28bdfc208e3840f49d1af4a4196013e1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CreatePreferences\:io.cpp}
{\xe \v io.cpp\:CreatePreferences}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b PreferencesBase}* CreatePreferences ()}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 116 of file io.cpp.}\par
{
Referenced by Program::Program().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   117 \{\par
  118 #ifdef AMIGA\par
  119     return new AmigaPreferences();\par
  120 #else\par
  121     return new StandardPreferences();\par
  122 #endif\par
  123 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8cpp_ae6bd8b440ad1736316165c2f8aac43bf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CreateProgram\:io.cpp}
{\xe \v io.cpp\:CreateProgram}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b Program}* CreateProgram (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file io.cpp.}\par
{
References StandardProgram::StandardProgram().}\par
{
Referenced by main().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    77                                                     \{\par
   78 #ifdef WITHTEST\par
   79     if (argc == 2 && StrIsEqual(argv[1], "test")) \{\par
   80         return new TestProgram();\par
   81     \} else\par
   82 #endif\par
   83     \{\par
   84 #ifdef AMIGA\par
   85         IntuitionBase = (struct IntuitionBase*)OpenLibrary(INTUITION_NAME, INTUITION_REV);\par
   86         GfxBase = (struct GfxBase*)OpenLibrary(GRAPHICS_NAME, GRAPHICS_REV);\par
   87 \par
   88         if (IntuitionBase != NULL && GfxBase != NULL) \{\par
   89             return new AmigaProgram();\par
   90         \} else \{\par
   91             return new StandardProgram();\par
   92         \}\par
   93 #else\par
   94         return new StandardProgram();\par
   95 #endif\par
   96     \}\par
   97     return NULL;\par
   98 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8cpp_ab181236fa77671f15d24155b5655ef78_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8cpp_ab181236fa77671f15d24155b5655ef78_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v WriteToShell\:io.cpp}
{\xe \v io.cpp\:WriteToShell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WriteToShell (const char *  {\i out})}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 146 of file io.cpp.}\par
{
Referenced by StandardProgram::Run().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   146                                    \{\par
  147 #ifdef AMIGA\par
  148     Write(Output(), (APTR)out, StrLen(out));\par
  149     Write(Output(), (APTR)NORMALTEXT, StrLen(NORMALTEXT));\par
  150 #else\par
  151     printf("%s%s", out, NORMALTEXT);\par
  152 #endif\par
  153 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8cpp_a9690ccc658730fde8b2b4102372b8860_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v Program\:io.cpp}
{\xe \v io.cpp\:Program}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b Program}* {\b Program} = NULL}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file io.cpp.}\par
}
{\xe \v vers\:io.cpp}
{\xe \v io.cpp\:vers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* vers = {\b TXTDOSVERSION}}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file io.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/base/io.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/base/io.h}
{\xe \v app/system/base/io.h}
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System dependent I/O. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "platform.h"}\par
{\f2 #include "system/program.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for io.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CPROCNAME}\~ "amath_console"\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Program} * {\b CreateProgram} (int, char **)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Language} * {\b CreateLanguage} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PreferencesBase} * {\b CreatePreferences} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FilesystemBase} * {\b CreateFilesystem} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GraphWindow} * {\b CreateGraphWindow} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WriteToShell} (const char *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Cleanup} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b vers}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Program} * {\b Program}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System dependent I/O. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v CPROCNAME\:io.h}
{\xe \v io.h\:CPROCNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CPROCNAME\~ "amath_console"}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file io.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Cleanup\:io.h}
{\xe \v io.h\:Cleanup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Cleanup ()}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 155 of file io.cpp.}\par
{
References FreeAllSafe().}\par
{
Referenced by main().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   156 \{\par
  157 #ifdef AMIGA\par
  158     if (DosBase != NULL) \{\par
  159         CloseLibrary((struct Library*)DosBase);\par
  160     \}\par
  161 \par
  162     if (LocaleBase != NULL) \{\par
  163         CloseLibrary((struct Library*)LocaleBase);\par
  164     \}\par
  165 \par
  166     if (GfxBase != NULL) \{\par
  167         CloseLibrary((struct Library*)GfxBase);\par
  168     \}\par
  169 \par
  170     if (IntuitionBase != NULL) \{\par
  171         CloseLibrary((struct Library*)IntuitionBase);\par
  172     \}\par
  173 #endif\par
  174     delete Program;\par
  175     FreeAllSafe();\par
  176 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8h_ae89a123aad1c66a76c398b7af216aae4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8h_ae89a123aad1c66a76c398b7af216aae4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CreateFilesystem\:io.h}
{\xe \v io.h\:CreateFilesystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b FilesystemBase}* CreateFilesystem ()}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file io.cpp.}\par
{
Referenced by StandardLanguage::LoadCatalog(), and Program::Program().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   126 \{\par
  127 #ifdef AMIGA\par
  128     DosBase = (struct DosBase*)OpenLibrary(AMIGADOS_NAME, AMIGADOS_REV);\par
  129     if (DosBase == NULL) \{\par
  130         return NULL;\par
  131     \}\par
  132     return new AmigaFilesystem();\par
  133 #else\par
  134     return new StandardFilesystem();\par
  135 #endif\par
  136 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8h_aaf891622b11e0bb888ebf08612884aa8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CreateGraphWindow\:io.h}
{\xe \v io.h\:CreateGraphWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b GraphWindow}* CreateGraphWindow ()}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 138 of file io.cpp.}\par
{
Referenced by GraphList::CreateNewWindow().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   138                                  \{\par
  139 #ifdef AMIGA\par
  140     return new AmigaGraphWindow();\par
  141 #else\par
  142     return NOMEM;\par
  143 #endif\par
  144 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8h_a99482ffbe19cd5e821359f26620cd89f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CreateLanguage\:io.h}
{\xe \v io.h\:CreateLanguage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b Language}* CreateLanguage ()}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 100 of file io.cpp.}\par
{
References PosixLanguage::PosixLanguage(), and StandardLanguage::StandardLanguage().}\par
{
Referenced by Program::Program().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   101 \{\par
  102 #ifdef UNIX\par
  103     return new PosixLanguage();\par
  104 #endif\par
  105 #ifdef AMIGA\par
  106     LocaleBase = (struct LocaleBase*)OpenLibrary(LOCALE_NAME, LOCALE_REV);\par
  107     if (LocaleBase != NULL) \{\par
  108         return new AmigaLanguage();\par
  109     \} else\par
  110 #endif\par
  111     \{\par
  112         return new StandardLanguage();\par
  113     \}\par
  114 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8h_a28bdfc208e3840f49d1af4a4196013e1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8h_a28bdfc208e3840f49d1af4a4196013e1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CreatePreferences\:io.h}
{\xe \v io.h\:CreatePreferences}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b PreferencesBase}* CreatePreferences ()}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 116 of file io.cpp.}\par
{
Referenced by Program::Program().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   117 \{\par
  118 #ifdef AMIGA\par
  119     return new AmigaPreferences();\par
  120 #else\par
  121     return new StandardPreferences();\par
  122 #endif\par
  123 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8h_ae6bd8b440ad1736316165c2f8aac43bf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v CreateProgram\:io.h}
{\xe \v io.h\:CreateProgram}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b Program}* CreateProgram (int , char ** )}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file io.cpp.}\par
{
References StandardProgram::StandardProgram().}\par
{
Referenced by main().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    77                                                     \{\par
   78 #ifdef WITHTEST\par
   79     if (argc == 2 && StrIsEqual(argv[1], "test")) \{\par
   80         return new TestProgram();\par
   81     \} else\par
   82 #endif\par
   83     \{\par
   84 #ifdef AMIGA\par
   85         IntuitionBase = (struct IntuitionBase*)OpenLibrary(INTUITION_NAME, INTUITION_REV);\par
   86         GfxBase = (struct GfxBase*)OpenLibrary(GRAPHICS_NAME, GRAPHICS_REV);\par
   87 \par
   88         if (IntuitionBase != NULL && GfxBase != NULL) \{\par
   89             return new AmigaProgram();\par
   90         \} else \{\par
   91             return new StandardProgram();\par
   92         \}\par
   93 #else\par
   94         return new StandardProgram();\par
   95 #endif\par
   96     \}\par
   97     return NULL;\par
   98 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8h_acbfdc579e98a99dc390e2ed87a8db15d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8h_acbfdc579e98a99dc390e2ed87a8db15d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v WriteToShell\:io.h}
{\xe \v io.h\:WriteToShell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WriteToShell (const char * )}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 146 of file io.cpp.}\par
{
Referenced by StandardProgram::Run().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   146                                    \{\par
  147 #ifdef AMIGA\par
  148     Write(Output(), (APTR)out, StrLen(out));\par
  149     Write(Output(), (APTR)NORMALTEXT, StrLen(NORMALTEXT));\par
  150 #else\par
  151     printf("%s%s", out, NORMALTEXT);\par
  152 #endif\par
  153 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "io_8h_afabbf967db247cad6ad9a6f416e99e12_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v Program\:io.h}
{\xe \v io.h\:Program}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b Program}* {\b Program}}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file io.cpp.}\par
}
{\xe \v vers\:io.h}
{\xe \v io.h\:vers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* vers}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file io.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/base/thread.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/base/thread.h}
{\xe \v app/system/base/thread.h}
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic thread logic. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "thread_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ThreadBase}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating runable component. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic thread logic. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/console.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/console.cpp}
{\xe \v app/system/console.cpp}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "system/console.h"}\par
{\f2 #include "system/base/io.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for console.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "console_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/console.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/console.h}
{\xe \v app/system/console.h}
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic console system calls. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "system/base/thread.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for console.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "console_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "console_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ConsoleBase}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating console logic. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic console system calls. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/console_amiga.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/console_amiga.cpp}
{\xe \v app/system/console_amiga.cpp}
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "main/nodes.h"}\par
{\f2 #include "main/evaluator.h"}\par
{\f2 #include "system/console_amiga.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for console_amiga.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "console__amiga_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/console_amiga.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/console_amiga.h}
{\xe \v app/system/console_amiga.h}
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "system/console.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for console_amiga.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "console__amiga_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "console__amiga_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/console_stdc.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/console_stdc.cpp}
{\xe \v app/system/console_stdc.cpp}
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include "main/nodes.h"}\par
{\f2 #include "main/evaluator.h"}\par
{\f2 #include "system/console_stdc.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for console_stdc.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "console__stdc_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/console_stdc.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/console_stdc.h}
{\xe \v app/system/console_stdc.h}
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/aengine.h"}\par
{\f2 #include "system/console.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for console_stdc.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "console__stdc_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "console__stdc_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StandardConsole}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates the IO of a console using Standard C and termios. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/filesystem.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/filesystem.h}
{\xe \v app/system/filesystem.h}
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic file system calls. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lib/charbuf.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for filesystem.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "filesystem_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "filesystem_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FilesystemBase}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating file system calls. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic file system calls. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/filesystem_amiga.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/filesystem_amiga.cpp}
{\xe \v app/system/filesystem_amiga.cpp}
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/charbuf.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "system/program.h"}\par
{\f2 #include "system/filesystem_amiga.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for filesystem_amiga.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "filesystem__amiga_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/filesystem_amiga.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/filesystem_amiga.h}
{\xe \v app/system/filesystem_amiga.h}
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "system/filesystem.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for filesystem_amiga.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "filesystem__amiga_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "filesystem__amiga_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/filesystem_stdc.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/filesystem_stdc.cpp}
{\xe \v app/system/filesystem_stdc.cpp}
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/charbuf.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "system/program.h"}\par
{\f2 #include "system/filesystem.h"}\par
{\f2 #include "system/filesystem_stdc.h"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for filesystem_stdc.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "filesystem__stdc_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/filesystem_stdc.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/filesystem_stdc.h}
{\xe \v app/system/filesystem_stdc.h}
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/charbuf.h"}\par
{\f2 #include "system/filesystem.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for filesystem_stdc.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "filesystem__stdc_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "filesystem__stdc_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StandardFilesystem}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/graph.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/graph.cpp}
{\xe \v app/system/graph.cpp}
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "system/graph.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for graph.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "graph_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/graph.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/graph.h}
{\xe \v app/system/graph.h}
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logic related to graph of functions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/fgrid.h"}\par
{\f2 #include "main/functions.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for graph.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "graph_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "graph_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GraphWindow}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logic related to graph of functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/graph_amiga.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/graph_amiga.cpp}
{\xe \v app/system/graph_amiga.cpp}
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/real.h"}\par
{\f2 #include "lib/fgrid.h"}\par
{\f2 #include "main/functions.h"}\par
{\f2 #include "system/graph_amiga.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for graph_amiga.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "graph__amiga_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/graph_amiga.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/graph_amiga.h}
{\xe \v app/system/graph_amiga.h}
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/real.h"}\par
{\f2 #include "lib/fgrid.h"}\par
{\f2 #include "main/functions.h"}\par
{\f2 #include "system/graph.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for graph_amiga.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "graph__amiga_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "graph__amiga_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/graph_gtk.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/graph_gtk.cpp}
{\xe \v app/system/graph_gtk.cpp}
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/graph_gtk.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/graph_gtk.h}
{\xe \v app/system/graph_gtk.h}
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/language.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/language.cpp}
{\xe \v app/system/language.cpp}
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "localize/lex.h"}\par
{\f2 #include "localize/help.h"}\par
{\f2 #include "localize/kword.h"}\par
{\f2 #include "localize/ident.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "localize/tags.h"}\par
{\f2 #include "localize/ialias.h"}\par
{\f2 #include "system/language.h"}\par
{\f2 #include "system/program.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for language.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "language_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/language.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/language.h}
{\xe \v app/system/language.h}
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "localize/lex.h"}\par
{\f2 #include "localize/help.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "localize/ident.h"}\par
{\f2 #include "localize/kword.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for language.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "language_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "language_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Language}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/language_amiga.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/language_amiga.cpp}
{\xe \v app/system/language_amiga.cpp}
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "localize/lex.h"}\par
{\f2 #include "localize/help.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "localize/ident.h"}\par
{\f2 #include "localize/kword.h"}\par
{\f2 #include "localize/tags.h"}\par
{\f2 #include "system/program.h"}\par
{\f2 #include "system/base/io.h"}\par
{\f2 #include "system/language_amiga.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for language_amiga.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "language__amiga_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/language_amiga.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/language_amiga.h}
{\xe \v app/system/language_amiga.h}
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "localize/lex.h"}\par
{\f2 #include "localize/help.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "localize/kword.h"}\par
{\f2 #include "system/language.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for language_amiga.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "language__amiga_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "language__amiga_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AmigaLanguage}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/language_posix.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/language_posix.cpp}
{\xe \v app/system/language_posix.cpp}
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "localize/lex.h"}\par
{\f2 #include "localize/tags.h"}\par
{\f2 #include "localize/help.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "localize/ident.h"}\par
{\f2 #include "localize/kword.h"}\par
{\f2 #include "system/base/io.h"}\par
{\f2 #include "system/program.h"}\par
{\f2 #include "system/language_posix.h"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <ctype.h>}\par
{\f2 #include <locale.h>}\par
{\f2 #include <nl_types.h>}\par
{\f2 #include <string.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for language_posix.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "language__posix_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/language_posix.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/language_posix.h}
{\xe \v app/system/language_posix.h}
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "localize/lex.h"}\par
{\f2 #include "localize/help.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "localize/kword.h"}\par
{\f2 #include "system/language.h"}\par
{\f2 #include <ctype.h>}\par
{\f2 #include <locale.h>}\par
{\f2 #include <nl_types.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for language_posix.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "language__posix_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "language__posix_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PosixLanguage}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/language_stdc.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/language_stdc.cpp}
{\xe \v app/system/language_stdc.cpp}
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "localize/lex.h"}\par
{\f2 #include "localize/tags.h"}\par
{\f2 #include "localize/help.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "localize/ident.h"}\par
{\f2 #include "localize/kword.h"}\par
{\f2 #include "system/base/io.h"}\par
{\f2 #include "system/program.h"}\par
{\f2 #include "system/language_stdc.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for language_stdc.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "language__stdc_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/language_stdc.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/language_stdc.h}
{\xe \v app/system/language_stdc.h}
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "localize/lex.h"}\par
{\f2 #include "localize/help.h"}\par
{\f2 #include "localize/text.h"}\par
{\f2 #include "system/language.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for language_stdc.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "language__stdc_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "language__stdc_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StandardLanguage}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/preferences.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/preferences.cpp}
{\xe \v app/system/preferences.cpp}
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/numb.h"}\par
{\f2 #include "lib/real.h"}\par
{\f2 #include "lib/ntext.h"}\par
{\f2 #include "lib/charbuf.h"}\par
{\f2 #include "main/lexer.h"}\par
{\f2 #include "main/nodes.h"}\par
{\f2 #include "main/parser.h"}\par
{\f2 #include "system/preferences.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for preferences.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "preferences_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/preferences.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/preferences.h}
{\xe \v app/system/preferences.h}
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lib/charbuf.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for preferences.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "preferences_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "preferences_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PreferencesBase}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/preferences_amiga.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/preferences_amiga.cpp}
{\xe \v app/system/preferences_amiga.cpp}
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/charbuf.h"}\par
{\f2 #include "system/preferences.h"}\par
{\f2 #include "system/preferences_amiga.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for preferences_amiga.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "preferences__amiga_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/preferences_amiga.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/preferences_amiga.h}
{\xe \v app/system/preferences_amiga.h}
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "system/preferences.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for preferences_amiga.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "preferences__amiga_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "preferences__amiga_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AmigaPreferences}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/preferences_stdc.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/preferences_stdc.cpp}
{\xe \v app/system/preferences_stdc.cpp}
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/charbuf.h"}\par
{\f2 #include "system/preferences.h"}\par
{\f2 #include "system/preferences_stdc.h"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for preferences_stdc.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "preferences__stdc_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b tempname} = "/tmp/amath.prefs"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b permname} = "/usr/local/etc/amath.conf"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v permname\:preferences_stdc.cpp}
{\xe \v preferences_stdc.cpp\:permname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* permname = "/usr/local/etc/amath.conf"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file preferences_stdc.cpp.}\par
{
Referenced by StandardPreferences::Save().}\par
}
{\xe \v tempname\:preferences_stdc.cpp}
{\xe \v preferences_stdc.cpp\:tempname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* tempname = "/tmp/amath.prefs"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file preferences_stdc.cpp.}\par
{
Referenced by StandardPreferences::Keep(), and StandardPreferences::Load().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/preferences_stdc.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/preferences_stdc.h}
{\xe \v app/system/preferences_stdc.h}
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "system/preferences.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for preferences_stdc.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "preferences__stdc_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "preferences__stdc_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StandardPreferences}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/proc_amiga.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/proc_amiga.cpp}
{\xe \v app/system/proc_amiga.cpp}
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "system/task.h"}\par
{\f2 #include "system/proc_amiga.h"}\par
{\f2 #include "system/base/thread.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for proc_amiga.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "proc__amiga_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/proc_amiga.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/proc_amiga.h}
{\xe \v app/system/proc_amiga.h}
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "system/task.h"}\par
{\f2 #include "system/base/thread.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for proc_amiga.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "proc__amiga_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "proc__amiga_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/program.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/program.cpp}
{\xe \v app/system/program.cpp}
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/numb.h"}\par
{\f2 #include "lib/ntext.h"}\par
{\f2 #include "main/values.h"}\par
{\f2 #include "main/functions.h"}\par
{\f2 #include "system/program.h"}\par
{\f2 #include "system/base/io.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for program.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "program_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/program.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/program.h}
{\xe \v app/system/program.h}
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Program} flow and global states. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lib/numb.h"}\par
{\f2 #include "lib/ntext.h"}\par
{\f2 #include "main/values.h"}\par
{\f2 #include "main/graphlist.h"}\par
{\f2 #include "main/functions.h"}\par
{\f2 #include "system/console.h"}\par
{\f2 #include "system/language.h"}\par
{\f2 #include "system/filesystem.h"}\par
{\f2 #include "system/preferences.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for program.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "program_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "program_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Program}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Master control class. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Program} * {\b Program}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Program} flow and global states. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v Program\:program.h}
{\xe \v program.h\:Program}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b Program}* {\b Program}}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file io.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/program_amiga.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/program_amiga.cpp}
{\xe \v app/system/program_amiga.cpp}
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/charbuf.h"}\par
{\f2 #include "main/graphlist.h"}\par
{\f2 #include "main/evaluator.h"}\par
{\f2 #include "system/console.h"}\par
{\f2 #include "system/filesystem.h"}\par
{\f2 #include "system/program_amiga.h"}\par
{\f2 #include "system/console_amiga.h"}\par
{\f2 #include "system/window_amiga.h"}\par
{\f2 #include "system/language_amiga.h"}\par
{\f2 #include "system/filesystem_amiga.h"}\par
{\f2 #include "system/preferences_amiga.h"}\par
{\f2 #include "system/base/io.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for program_amiga.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "program__amiga_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/program_amiga.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/program_amiga.h}
{\xe \v app/system/program_amiga.h}
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "system/program.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for program_amiga.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "program__amiga_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "program__amiga_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b amathargs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AmigaProgram}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/program_stdc.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/program_stdc.cpp}
{\xe \v app/system/program_stdc.cpp}
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/charbuf.h"}\par
{\f2 #include "main/evaluator.h"}\par
{\f2 #include "system/program_stdc.h"}\par
{\f2 #include "system/console_stdc.h"}\par
{\f2 #include "system/language_stdc.h"}\par
{\f2 #include "system/filesystem_stdc.h"}\par
{\f2 #include "system/preferences_stdc.h"}\par
{\f2 #include "system/base/io.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for program_stdc.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "program__stdc_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/program_stdc.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/program_stdc.h}
{\xe \v app/system/program_stdc.h}
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lib/charbuf.h"}\par
{\f2 #include "system/program.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for program_stdc.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "program__stdc_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "program__stdc_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StandardProgram}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/program_test.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/program_test.cpp}
{\xe \v app/system/program_test.cpp}
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/program_test.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/program_test.h}
{\xe \v app/system/program_test.h}
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tests for arithmetic logic. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lib/charbuf.h"}\par
{\f2 #include "system/program.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for program_test.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "program__test_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "program__test_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestProgram}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test control class. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tests for arithmetic logic. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/task.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/task.h}
{\xe \v app/system/task.h}
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic task/process logic. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "system/base/thread.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for task.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "task_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "task_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TaskBase}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract base class encapsulating a system thread. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic task/process logic. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/task_amiga.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/task_amiga.cpp}
{\xe \v app/system/task_amiga.cpp}
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "system/base/thread.h"}\par
{\f2 #include "system/task_amiga.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for task_amiga.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "task__amiga_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/task_amiga.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/task_amiga.h}
{\xe \v app/system/task_amiga.h}
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "system/task.h"}\par
{\f2 #include "system/task_amiga.h"}\par
{\f2 #include "system/base/thread.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for task_amiga.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "task__amiga_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "task__amiga_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/task_stdc.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/task_stdc.cpp}
{\xe \v app/system/task_stdc.cpp}
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "system/task_stdc.h"}\par
{\f2 #include "system/base/thread.h"}\par
{\f2 #include <unistd.h>}\par
{\f2 #include <sys/types.h>}\par
{\f2 #include <sys/wait.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for task_stdc.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "task__stdc_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/task_stdc.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/task_stdc.h}
{\xe \v app/system/task_stdc.h}
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "system/task.h"}\par
{\f2 #include "system/base/thread.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for task_stdc.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "task__stdc_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "task__stdc_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StandardTask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encapsulates calls to POSIX task. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/window_amiga.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/window_amiga.cpp}
{\xe \v app/system/window_amiga.cpp}
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/aengine.h"}\par
{\f2 #include "localize/start.h"}\par
{\f2 #include "main/evaluator.h"}\par
{\f2 #include "system/window_amiga.h"}\par
{\f2 #include "system/base/io.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for window_amiga.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "window__amiga_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
app/system/window_amiga.h File Reference\par \pard\plain 
{\tc\tcl2 \v app/system/window_amiga.h}
{\xe \v app/system/window_amiga.h}
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "lib/aengine.h"}\par
{\f2 #include "system/console.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for window_amiga.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "window__amiga_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "window__amiga_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/clib.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/clib.h}
{\xe \v lib/clib.h}
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C functions for manipulating strings and memory. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "platform.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for clib.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clib_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b texttag}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b StrLen} (const char *string)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the length of a null terminated string. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b StrIsEqual} (const char *s1, const char *s2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare two null terminated strings to each other. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MemSet} (void *destination, int c0, unsigned int length)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MemCopy} (void *destination, const void *source, unsigned int length)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy a block of memory, handling overlap. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b AllocAndCopy} (char **destination, const char *source)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocate memory and copy a string into the array. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Untag} (char *destination, const char *source, {\b texttag} tags[], unsigned int tagcount)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C functions for manipulating strings and memory. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AllocAndCopy\:clib.h}
{\xe \v clib.h\:AllocAndCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int AllocAndCopy (char **  {\i destination}, const char *  {\i source})}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocate memory and copy a string into the array. }}\par
{
Definition at line 34 of file alloccpy.c.}\par
{
Referenced by AnsiConoleEngine::AnsiConoleEngine(), CharBuffer::ClearAndCopy(), ConsoleBase::ConsoleBase(), AnsiConoleEngine::CopyLine(), DeleteStatement::DeleteStatement(), DrawStatement::DrawStatement(), ErrorNode::ErrorNode(), ExecuteStatement::ExecuteStatement(), HelpStatement::HelpStatement(), Lexer::Lexer(), ListStatement::ListStatement(), StandardLanguage::LoadCatalog(), LoadStatement::LoadStatement(), PlotStatement::PlotStatement(), PromptStatement::PromptStatement(), SaveStatement::SaveStatement(), PreferencesBase::SetDefaults(), PreferencesBase::SetPrompt(), ConsoleBase::SetPrompt(), AnsiConoleEngine::SetPrompt(), AnsiConoleEngine::ShowLast(), ShowStatement::ShowStatement(), Token::Token(), UserFunction::UserFunction(), and Variable::Variable().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    35 \{\par
   36     char *i, *s, *d;\par
   37     unsigned int n, size;\par
   38 \par
   39     if (source == NOMEM) \{\par
   40         *destination = NOMEM;\par
   41         return 0;\par
   42     \}\par
   43 \par
   44     i = (char*)source;\par
   45     s = (char*)source;\par
   46     while (*i)\par
   47         i++;\par
   48 \par
   49     n = i - s + 1;\par
   50     size = n;\par
   51     *destination = AllocMemSafe(size);\par
   52     d = *destination;\par
   53 \par
   54     while (n--)\par
   55         *d++ = *s++;\par
   56 \par
   57     return size;\par
   58 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clib_8h_a5bed05c70cb17e541fee570b5dc32e1a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v MemCopy\:clib.h}
{\xe \v clib.h\:MemCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MemCopy (void *  {\i destination}, const void *  {\i source}, unsigned int  {\i length})}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy a block of memory, handling overlap. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Original file can be found at: {\f2 https://svnweb.freebsd.org/base/release/9.0.0/lib/libc/string/bcopy.c?revision=229286} \par
}{
Definition at line 60 of file memcpy.c.}\par
{
Referenced by CharBuffer::EnsureSize(), FormatPositional(), FormatScientific(), Lexer::GetDigitValue(), Lexer::GetLitteral(), Lexer::GetQuotedIdent(), PrintInfNan(), and Language::UntagText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    61 \{\par
   62     char *dst = (char*) destination;\par
   63     const char *src = (const char*) source;\par
   64     unsigned int t;\par
   65 \par
   66     if (length == 0 || dst == src) // nothing to do\par
   67         return;\par
   68 \par
   69     if ((unsigned long)dst < (unsigned long)src) \{\par
   70         // Copy forward\par
   71         t = (unsigned long)src; // only need low bits\par
   72         if ((t | (unsigned long)dst) & wmask) \{\par
   73 \par
   74             // Try to align operands.  This cannot be done unless the low bits match.\par
   75             if ((t ^ (unsigned long)dst) & wmask || length < wsize)\par
   76                 t = length;\par
   77             else\par
   78                 t = wsize - (t & wmask);\par
   79             length -= t;\par
   80 \par
   81             TLOOP1(*dst++ = *src++);\par
   82         \}\par
   83 \par
   84         // Copy whole words, then mop up any trailing bytes.\par
   85         t = length / wsize;\par
   86         TLOOP(*(word *)dst = *(word *)src; src += wsize; dst += wsize);\par
   87 \par
   88         t = length & wmask;\par
   89         TLOOP(*dst++ = *src++);\par
   90 \par
   91     \} else \{\par
   92         // Copy backwards.  Otherwise essentially the same.\par
   93         // Alignment works as before, except that it takes\par
   94         // (t&wmask) bytes to align, not wsize-(t&wmask).\par
   95         src += length;\par
   96         dst += length;\par
   97         t = (unsigned long)src;\par
   98         if ((t | (unsigned long)dst) & wmask) \{\par
   99 \par
  100             if ((t ^ (unsigned long)dst) & wmask || length <= wsize)\par
  101                 t = length;\par
  102             else\par
  103                 t &= wmask;\par
  104             length -= t;\par
  105 \par
  106             TLOOP1(*--dst = *--src);\par
  107         \}\par
  108 \par
  109         t = length / wsize;\par
  110         TLOOP(src -= wsize; dst -= wsize; *(word *)dst = *(word *)src);\par
  111 \par
  112         t = length & wmask;\par
  113         TLOOP(*--dst = *--src);\par
  114     \}\par
  115 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clib_8h_a09b7e057c69b9ddd4b481fc746997a7d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v MemSet\:clib.h}
{\xe \v clib.h\:MemSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MemSet (void *  {\i destination}, int  {\i c0}, unsigned int  {\i length})}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file memset.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    43 \{\par
   44     unsigned char *dst = (unsigned char*) dst0;\par
   45     unsigned int  t;\par
   46     unsigned int  c;\par
   47 \par
   48     /*\par
   49      * If not enough words, just fill bytes.  A length >= 2 words\par
   50      * guarantees that at least one of them is `complete' after\par
   51      * any necessary alignment.  For instance:\par
   52      *\par
   53      *  |-----------|-----------|-----------|\par
   54      *  |00|01|02|03|04|05|06|07|08|09|0A|00|\par
   55      *            ^---------------------^\par
   56      *       dst         dst+length-1\par
   57      *\par
   58      * but we use a minimum of 3 here since the overhead of the code\par
   59      * to do word writes is substantial.\par
   60      */\par
   61     if (length < 3 * wsize) \{\par
   62         while (length != 0) \{\par
   63             *dst++ = c0;\par
   64             --length;\par
   65         \}\par
   66     \}\par
   67 \par
   68     if ((c = (unsigned char)c0) != 0) \{ /* Fill the word. */\par
   69         c = (c << 8) | c;   /* u_int is 16 bits. */\par
   70 #if UINT_MAX > 0xffff\par
   71         c = (c << 16) | c;  /* u_int is 32 bits. */\par
   72 #endif\par
   73 #if UINT_MAX > 0xffffffff\par
   74         c = (c << 32) | c;  /* u_int is 64 bits. */\par
   75 #endif\par
   76     \}\par
   77 \par
   78     /* Align destination by filling in bytes. */\par
   79     if ((t = (long)dst & wmask) != 0) \{\par
   80         t = wsize - t;\par
   81         length -= t;\par
   82         do \{\par
   83             *dst++ = c0;\par
   84         \} while (--t != 0);\par
   85     \}\par
   86 \par
   87     /* Fill words.  Length was >= 2*words so we know t >= 1 here. */\par
   88     t = length / wsize;\par
   89     do \{\par
   90         *(unsigned int*)dst = c;\par
   91         dst += wsize;\par
   92     \} while (--t != 0);\par
   93 \par
   94     /* Mop up trailing bytes, if any. */\par
   95     t = length & wmask;\par
   96     if (t != 0)\par
   97         do \{\par
   98             *dst++ = c0;\par
   99         \} while (--t != 0);\par
  100 \}\par
}
}
{\xe \v StrIsEqual\:clib.h}
{\xe \v clib.h\:StrIsEqual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StrIsEqual (const char *  {\i s1}, const char *  {\i s2})}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare two null terminated strings to each other. }}\par
{
Definition at line 48 of file strcmp.c.}\par
{
Referenced by VariableList::CreateVariable(), FunctionList::Delete(), Language::FindAlias(), FunctionList::GetFunctionCall(), FunctionList::GetFunctionDef(), Language::GetHelpText(), FunctionList::GetSystemFunction(), VariableList::GetVariable(), CharBuffer::Is(), StandardFilesystem::ListDirectory(), CharBuffer::RemoveTrailing(), StandardLanguage::StrIsEqualLoc(), and PosixLanguage::StrIsEqualLoc().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    49 \{\par
   50     int r;\par
   51 \par
   52     while (*s1 == *s2++)\par
   53         if (*s1++ == '\\0')\par
   54             return true;\par
   55 \par
   56     r = (*(const unsigned char *)s1 - *(const unsigned char *)(s2 - 1));\par
   57 \par
   58     return r == 0;\par
   59 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clib_8h_a2a1f39d11cbbaac992d42e67557dac4b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v StrLen\:clib.h}
{\xe \v clib.h\:StrLen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int StrLen (const char *  {\i string})}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the length of a null terminated string. }}\par
{
Definition at line 31 of file strlen.c.}\par
{
Referenced by ErrorNode::ErrorNode(), VersionStatement::Execute(), MemoryStatement::Execute(), ErrorNode::Execute(), EvalStatement::Execute(), StatementBlockNode::Execute(), DeleteStatement::Execute(), InputStatement::Execute(), OutputStatement::Execute(), DigitsStatement::Execute(), SaveStatement::Execute(), PreferencesBase::GetDescription(), PositionalNumeralSystem::GetName(), UnaryNode::GetText(), FunctionNode::GetText(), AbsoluteNode::GetText(), NumericOperator::GetText(), StandardProgram::Initialize(), VariableList::ListContent(), FunctionList::ListContent(), StandardFilesystem::ListDirectory(), CharBuffer::RemoveTrailing(), StandardConsole::Run(), AnsiConoleEngine::ShowLast(), AnsiConoleEngine::ShowNext(), Language::UntagText(), and StandardConsole::WriteString().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    32 \{\par
   33     char *i = (char*)string;\par
   34     char *s = i;\par
   35     while (*i)\par
   36         i++;\par
   37     return i - s;\par
   38 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clib_8h_a67ec56eb98b49515d35005a5b3bf9a32_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Untag\:clib.h}
{\xe \v clib.h\:Untag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Untag (char *  {\i destination}, const char *  {\i source}, {\b texttag}  {\i tags}[], unsigned int  {\i tagcount})}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file untag.c.}\par
{
References texttag::tag, and texttag::text.}\par
{
Referenced by Language::UntagText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    30 \{\par
   31     const char *pos, *tmp, *tag;\par
   32     char *dest;\par
   33     int unsigned i, j, found;\par
   34 \par
   35     pos = source;\par
   36     dest = destination;\par
   37 \par
   38     while (*pos != '\\0') \{\par
   39         if (*pos != '#') \{\par
   40             (*dest++ = *pos++);\par
   41         \} else \{\par
   42             // Try to replace tag\par
   43             found = 0;\par
   44             for (i = 0; i < tagcount; i++) \{\par
   45                 tag = tags[i].tag;\par
   46                 tmp = pos;\par
   47                 j = 0;\par
   48                 while (*tmp != '\\0' && *tag != '\\0' && *tmp == *tag) \{\par
   49                     tmp++;\par
   50                     tag++;\par
   51                     j++;\par
   52                 \}\par
   53 \par
   54                 if (j > 1 && *(--tag) == '#') \{\par
   55                     // Tag found. Now replace.\par
   56                     tag = tags[i].text;\par
   57                     while ((*dest++ = *tag++));\par
   58                     dest--;\par
   59                     pos = tmp;\par
   60                     found = 1;\par
   61                     break;\par
   62                 \}\par
   63             \}\par
   64 \par
   65             if(!found) \{\par
   66                 (*dest++ = *pos++);\par
   67             \}\par
   68         \}\par
   69     \}\par
   70     *dest = '\\0';\par
   71 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clib_8h_a13fd37f0e8fef81a052aab4cd5588fb6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/clib/alloccpy.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/clib/alloccpy.c}
{\xe \v lib/clib/alloccpy.c}
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "mem.h"}\par
{\f2 #include "clib.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for alloccpy.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "alloccpy_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b AllocAndCopy} (char **destination, const char *source)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocate memory and copy a string into the array. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AllocAndCopy\:alloccpy.c}
{\xe \v alloccpy.c\:AllocAndCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int AllocAndCopy (char **  {\i destination}, const char *  {\i source})}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocate memory and copy a string into the array. }}\par
{
Definition at line 34 of file alloccpy.c.}\par
{
Referenced by AnsiConoleEngine::AnsiConoleEngine(), CharBuffer::ClearAndCopy(), ConsoleBase::ConsoleBase(), AnsiConoleEngine::CopyLine(), DeleteStatement::DeleteStatement(), DrawStatement::DrawStatement(), ErrorNode::ErrorNode(), ExecuteStatement::ExecuteStatement(), HelpStatement::HelpStatement(), Lexer::Lexer(), ListStatement::ListStatement(), StandardLanguage::LoadCatalog(), LoadStatement::LoadStatement(), PlotStatement::PlotStatement(), PromptStatement::PromptStatement(), SaveStatement::SaveStatement(), PreferencesBase::SetDefaults(), PreferencesBase::SetPrompt(), ConsoleBase::SetPrompt(), AnsiConoleEngine::SetPrompt(), AnsiConoleEngine::ShowLast(), ShowStatement::ShowStatement(), Token::Token(), UserFunction::UserFunction(), and Variable::Variable().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    35 \{\par
   36     char *i, *s, *d;\par
   37     unsigned int n, size;\par
   38 \par
   39     if (source == NOMEM) \{\par
   40         *destination = NOMEM;\par
   41         return 0;\par
   42     \}\par
   43 \par
   44     i = (char*)source;\par
   45     s = (char*)source;\par
   46     while (*i)\par
   47         i++;\par
   48 \par
   49     n = i - s + 1;\par
   50     size = n;\par
   51     *destination = AllocMemSafe(size);\par
   52     d = *destination;\par
   53 \par
   54     while (n--)\par
   55         *d++ = *s++;\par
   56 \par
   57     return size;\par
   58 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "alloccpy_8c_a5bed05c70cb17e541fee570b5dc32e1a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/clib/mem.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/clib/mem.c}
{\xe \v lib/clib/mem.c}
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "mem.h"}\par
{\f2 #include "clib.h"}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for mem.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mem_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MemoryBlock}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MemoryList}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ALLOC_MEM}(x)\~ calloc(1L,x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FREE_MEM}(x)\~ free(x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Debug}(x,  y,  z,  w)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b alloc_error} (char *, size_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dealloc_error} (char *, void *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b AllocMemSafe} (size_t size)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FreeMemSafe} (void *block)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FreeAllSafe} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MemUsage} (long *blocks, long *size, long *peak)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MemoryList} * {\b list} = NULL\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ALLOC_MEM\:mem.c}
{\xe \v mem.c\:ALLOC_MEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ALLOC_MEM( x)\~ calloc(1L,x)}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file mem.c.}\par
}
{\xe \v Debug\:mem.c}
{\xe \v mem.c\:Debug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Debug( x,  y,  z,  w)}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file mem.c.}\par
}
{\xe \v FREE_MEM\:mem.c}
{\xe \v mem.c\:FREE_MEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FREE_MEM( x)\~ free(x)}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file mem.c.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v alloc_error\:mem.c}
{\xe \v mem.c\:alloc_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void alloc_error (char *  {\i descr}, size_t  {\i size})}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 199 of file mem.c.}\par
{
Referenced by AllocMemSafe().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   200 \{\par
  201     Debug(NULL, "Mememory allocation error (%s) with size (%d)\\n", descr, size);\par
  202 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mem_8c_addd1a224479313960a376ac194ea467a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v AllocMemSafe\:mem.c}
{\xe \v mem.c\:AllocMemSafe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* AllocMemSafe (size_t  {\i size})}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file mem.c.}\par
{
References MemoryBlock::address, alloc_error(), MemoryList::count, MemoryList::first, MemoryList::last, list, MemoryBlock::next, MemoryList::peak, and MemoryList::size.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    68 \{\par
   69     struct MemoryBlock *newblock;\par
   70     size_t allocsize;\par
   71 \par
   72     if (list == NULL) \{\par
   73         list = (struct MemoryList*)ALLOC_MEM(sizeof(struct MemoryList));\par
   74         if (!list) \{\par
   75             alloc_error("list", sizeof(struct MemoryList));\par
   76             return 0;\par
   77         \}\par
   78 \par
   79         list->first = NULL;\par
   80         list->last = NULL;\par
   81         list->peak = 0;\par
   82         list->size = 0;\par
   83         list->count = 0;\par
   84     \}\par
   85 \par
   86     // Align to bytes of 4\par
   87     allocsize = (size + 3) & ~0x03;\par
   88 \par
   89     newblock = (struct MemoryBlock*)ALLOC_MEM(sizeof(struct MemoryBlock));\par
   90     if (!newblock) \{\par
   91         alloc_error("block", sizeof(struct MemoryBlock));\par
   92         return 0;\par
   93     \}\par
   94 \par
   95     newblock->address = (struct MemoryBlock*)ALLOC_MEM(allocsize);\par
   96     if (!newblock->address) \{\par
   97         FREE_MEM(newblock);\par
   98         alloc_error("memory", allocsize);\par
   99         return 0;\par
  100     \}\par
  101 \par
  102     newblock->size = allocsize;\par
  103     newblock->next = NULL;\par
  104 \par
  105     if(list->first == NULL) \{\par
  106         list->first = newblock;\par
  107         list->last = newblock;\par
  108     \} else \{\par
  109         list->last->next = newblock;\par
  110         list->last = newblock;\par
  111     \}\par
  112 \par
  113     list->size += allocsize;\par
  114     list->count++;\par
  115 \par
  116     if (list->size > list->peak) \{\par
  117         list->peak = list->size;\par
  118     \}\par
  119 \par
  120     // DEBUG code\par
  121     // Debug(NULL, "Mememory allocated at address (%x)\\n", newblock->address);\par
  122 \par
  123     return newblock->address;\par
  124 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mem_8c_a9bce7ee26e868552b3784e98e8a75f0b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v dealloc_error\:mem.c}
{\xe \v mem.c\:dealloc_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dealloc_error (char *  {\i descr}, void *  {\i p})}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 204 of file mem.c.}\par
{
Referenced by FreeMemSafe().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   205 \{\par
  206     Debug(NULL, "Mememory deallocation error (%s) address (%x)\\n", descr, p);\par
  207 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mem_8c_a96cb78338e02e8381392c81761887323_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v FreeAllSafe\:mem.c}
{\xe \v mem.c\:FreeAllSafe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FreeAllSafe ()}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 172 of file mem.c.}\par
{
References MemoryBlock::address, MemoryList::first, list, and MemoryBlock::next.}\par
{
Referenced by Cleanup().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   173 \{\par
  174     struct MemoryBlock *current, *next;\par
  175 \par
  176     if (list == NULL) \{\par
  177         return;\par
  178     \}\par
  179 \par
  180     current = list->first;\par
  181     while (current != NULL) \{\par
  182         next = current->next;\par
  183         FREE_MEM(current->address);\par
  184         FREE_MEM(current);\par
  185         current = next;\par
  186     \}\par
  187 \par
  188     FREE_MEM(list);\par
  189     list = NULL;\par
  190 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mem_8c_adcb19646ed930d44f25ddc9f7767a182_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v FreeMemSafe\:mem.c}
{\xe \v mem.c\:FreeMemSafe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FreeMemSafe (void *  {\i block})}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 126 of file mem.c.}\par
{
References MemoryBlock::address, MemoryList::count, dealloc_error(), MemoryList::first, MemoryList::last, list, and MemoryBlock::next.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   127 \{\par
  128     struct MemoryBlock *current, *last;\par
  129 \par
  130     if (list == NULL || block == NULL) \{\par
  131         dealloc_error("list", 0);\par
  132         return;\par
  133     \}\par
  134 \par
  135     if (block == NULL) \{\par
  136         dealloc_error("memory", 0);\par
  137         return;\par
  138     \}\par
  139 \par
  140     last = NULL;\par
  141     current = list->first;\par
  142     while (current != NULL && current->address != block) \{\par
  143         last = current;\par
  144         current = current->next;\par
  145     \}\par
  146 \par
  147     if (current == NULL) \{\par
  148         dealloc_error("address not found", block);\par
  149         return;\par
  150     \}\par
  151 \par
  152     list->size -= current->size;\par
  153     list->count--;\par
  154 \par
  155     if (list->first == current) \{\par
  156         list->first = NULL;\par
  157         list->last = NULL;\par
  158     \} else if (list->last == current) \{\par
  159         last->next = current->next;\par
  160         list->last = last;\par
  161     \} else \{\par
  162         last->next = current->next;\par
  163     \}\par
  164 \par
  165     FREE_MEM(current->address);\par
  166     FREE_MEM(current);\par
  167 \par
  168     // DEBUG code\par
  169     // Debug(NULL, "Mememory deallocated at address (%x)\\n", block);\par
  170 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mem_8c_ab4b822e060386ea562cdf7cdb94d57ea_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v MemUsage\:mem.c}
{\xe \v mem.c\:MemUsage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MemUsage (long *  {\i blocks}, long *  {\i size}, long *  {\i peak})}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 192 of file mem.c.}\par
{
References MemoryList::count, list, MemoryList::peak, and MemoryList::size.}\par
{
Referenced by MemoryStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   193 \{\par
  194     *blocks = list->count;\par
  195     *size = list->size;\par
  196     *peak = list->peak;;\par
  197 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mem_8c_ad57dfcaf475445feb7cf1274d489707d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v list\:mem.c}
{\xe \v mem.c\:list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b MemoryList}* list = NULL}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file mem.c.}\par
{
Referenced by AllocMemSafe(), FreeAllSafe(), FreeMemSafe(), and MemUsage().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/clib/memcpy.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/clib/memcpy.c}
{\xe \v lib/clib/memcpy.c}
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for memcpy.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "memcpy_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TLOOP}(s)\~ if (t) {\b TLOOP1}(s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TLOOP1}(s)\~ do \{ s; \} while (--t)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int {\b word}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MemCopy} (void *destination, const void *source, unsigned int length)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy a block of memory, handling overlap. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v TLOOP\:memcpy.c}
{\xe \v memcpy.c\:TLOOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TLOOP( s)\~ if (t) {\b TLOOP1}(s)}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macros: loop-t-times; and loop-t-times, t>0 \par
}{
Definition at line 50 of file memcpy.c.}\par
}
{\xe \v TLOOP1\:memcpy.c}
{\xe \v memcpy.c\:TLOOP1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TLOOP1( s)\~ do \{ s; \} while (--t)}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file memcpy.c.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v word\:memcpy.c}
{\xe \v memcpy.c\:word}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int {\b word}}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sizeof(word) MUST BE A POWER OF TWO SO THAT wmask BELOW IS ALL ONES \par
}{
Definition at line 44 of file memcpy.c.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v MemCopy\:memcpy.c}
{\xe \v memcpy.c\:MemCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MemCopy (void *  {\i destination}, const void *  {\i source}, unsigned int  {\i length})}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy a block of memory, handling overlap. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Original file can be found at: {\f2 https://svnweb.freebsd.org/base/release/9.0.0/lib/libc/string/bcopy.c?revision=229286} \par
}{
Definition at line 60 of file memcpy.c.}\par
{
Referenced by CharBuffer::EnsureSize(), FormatPositional(), FormatScientific(), Lexer::GetDigitValue(), Lexer::GetLitteral(), Lexer::GetQuotedIdent(), PrintInfNan(), and Language::UntagText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    61 \{\par
   62     char *dst = (char*) destination;\par
   63     const char *src = (const char*) source;\par
   64     unsigned int t;\par
   65 \par
   66     if (length == 0 || dst == src) // nothing to do\par
   67         return;\par
   68 \par
   69     if ((unsigned long)dst < (unsigned long)src) \{\par
   70         // Copy forward\par
   71         t = (unsigned long)src; // only need low bits\par
   72         if ((t | (unsigned long)dst) & wmask) \{\par
   73 \par
   74             // Try to align operands.  This cannot be done unless the low bits match.\par
   75             if ((t ^ (unsigned long)dst) & wmask || length < wsize)\par
   76                 t = length;\par
   77             else\par
   78                 t = wsize - (t & wmask);\par
   79             length -= t;\par
   80 \par
   81             TLOOP1(*dst++ = *src++);\par
   82         \}\par
   83 \par
   84         // Copy whole words, then mop up any trailing bytes.\par
   85         t = length / wsize;\par
   86         TLOOP(*(word *)dst = *(word *)src; src += wsize; dst += wsize);\par
   87 \par
   88         t = length & wmask;\par
   89         TLOOP(*dst++ = *src++);\par
   90 \par
   91     \} else \{\par
   92         // Copy backwards.  Otherwise essentially the same.\par
   93         // Alignment works as before, except that it takes\par
   94         // (t&wmask) bytes to align, not wsize-(t&wmask).\par
   95         src += length;\par
   96         dst += length;\par
   97         t = (unsigned long)src;\par
   98         if ((t | (unsigned long)dst) & wmask) \{\par
   99 \par
  100             if ((t ^ (unsigned long)dst) & wmask || length <= wsize)\par
  101                 t = length;\par
  102             else\par
  103                 t &= wmask;\par
  104             length -= t;\par
  105 \par
  106             TLOOP1(*--dst = *--src);\par
  107         \}\par
  108 \par
  109         t = length / wsize;\par
  110         TLOOP(src -= wsize; dst -= wsize; *(word *)dst = *(word *)src);\par
  111 \par
  112         t = length & wmask;\par
  113         TLOOP(*--dst = *--src);\par
  114     \}\par
  115 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "memcpy_8c_a09b7e057c69b9ddd4b481fc746997a7d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/clib/memset.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/clib/memset.c}
{\xe \v lib/clib/memset.c}
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for memset.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "memset_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MemSet} (void *dst0, int c0, unsigned int length)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v MemSet\:memset.c}
{\xe \v memset.c\:MemSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MemSet (void *  {\i dst0}, int  {\i c0}, unsigned int  {\i length})}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file memset.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    43 \{\par
   44     unsigned char *dst = (unsigned char*) dst0;\par
   45     unsigned int  t;\par
   46     unsigned int  c;\par
   47 \par
   48     /*\par
   49      * If not enough words, just fill bytes.  A length >= 2 words\par
   50      * guarantees that at least one of them is `complete' after\par
   51      * any necessary alignment.  For instance:\par
   52      *\par
   53      *  |-----------|-----------|-----------|\par
   54      *  |00|01|02|03|04|05|06|07|08|09|0A|00|\par
   55      *            ^---------------------^\par
   56      *       dst         dst+length-1\par
   57      *\par
   58      * but we use a minimum of 3 here since the overhead of the code\par
   59      * to do word writes is substantial.\par
   60      */\par
   61     if (length < 3 * wsize) \{\par
   62         while (length != 0) \{\par
   63             *dst++ = c0;\par
   64             --length;\par
   65         \}\par
   66     \}\par
   67 \par
   68     if ((c = (unsigned char)c0) != 0) \{ /* Fill the word. */\par
   69         c = (c << 8) | c;   /* u_int is 16 bits. */\par
   70 #if UINT_MAX > 0xffff\par
   71         c = (c << 16) | c;  /* u_int is 32 bits. */\par
   72 #endif\par
   73 #if UINT_MAX > 0xffffffff\par
   74         c = (c << 32) | c;  /* u_int is 64 bits. */\par
   75 #endif\par
   76     \}\par
   77 \par
   78     /* Align destination by filling in bytes. */\par
   79     if ((t = (long)dst & wmask) != 0) \{\par
   80         t = wsize - t;\par
   81         length -= t;\par
   82         do \{\par
   83             *dst++ = c0;\par
   84         \} while (--t != 0);\par
   85     \}\par
   86 \par
   87     /* Fill words.  Length was >= 2*words so we know t >= 1 here. */\par
   88     t = length / wsize;\par
   89     do \{\par
   90         *(unsigned int*)dst = c;\par
   91         dst += wsize;\par
   92     \} while (--t != 0);\par
   93 \par
   94     /* Mop up trailing bytes, if any. */\par
   95     t = length & wmask;\par
   96     if (t != 0)\par
   97         do \{\par
   98             *dst++ = c0;\par
   99         \} while (--t != 0);\par
  100 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/clib/strcmp.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/clib/strcmp.c}
{\xe \v lib/clib/strcmp.c}
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for strcmp.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "strcmp_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b StrIsEqual} (const char *s1, const char *s2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare two null terminated strings to each other. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v StrIsEqual\:strcmp.c}
{\xe \v strcmp.c\:StrIsEqual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} StrIsEqual (const char *  {\i s1}, const char *  {\i s2})}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare two null terminated strings to each other. }}\par
{
Definition at line 48 of file strcmp.c.}\par
{
Referenced by VariableList::CreateVariable(), FunctionList::Delete(), Language::FindAlias(), FunctionList::GetFunctionCall(), FunctionList::GetFunctionDef(), Language::GetHelpText(), FunctionList::GetSystemFunction(), VariableList::GetVariable(), CharBuffer::Is(), StandardFilesystem::ListDirectory(), CharBuffer::RemoveTrailing(), StandardLanguage::StrIsEqualLoc(), and PosixLanguage::StrIsEqualLoc().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    49 \{\par
   50     int r;\par
   51 \par
   52     while (*s1 == *s2++)\par
   53         if (*s1++ == '\\0')\par
   54             return true;\par
   55 \par
   56     r = (*(const unsigned char *)s1 - *(const unsigned char *)(s2 - 1));\par
   57 \par
   58     return r == 0;\par
   59 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "strcmp_8c_a2a1f39d11cbbaac992d42e67557dac4b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/clib/strlen.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/clib/strlen.c}
{\xe \v lib/clib/strlen.c}
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b StrLen} (const char *string)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the length of a null terminated string. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v StrLen\:strlen.c}
{\xe \v strlen.c\:StrLen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int StrLen (const char *  {\i string})}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the length of a null terminated string. }}\par
{
Definition at line 31 of file strlen.c.}\par
{
Referenced by ErrorNode::ErrorNode(), VersionStatement::Execute(), MemoryStatement::Execute(), ErrorNode::Execute(), EvalStatement::Execute(), StatementBlockNode::Execute(), DeleteStatement::Execute(), InputStatement::Execute(), OutputStatement::Execute(), DigitsStatement::Execute(), SaveStatement::Execute(), PreferencesBase::GetDescription(), PositionalNumeralSystem::GetName(), UnaryNode::GetText(), FunctionNode::GetText(), AbsoluteNode::GetText(), NumericOperator::GetText(), StandardProgram::Initialize(), VariableList::ListContent(), FunctionList::ListContent(), StandardFilesystem::ListDirectory(), CharBuffer::RemoveTrailing(), StandardConsole::Run(), AnsiConoleEngine::ShowLast(), AnsiConoleEngine::ShowNext(), Language::UntagText(), and StandardConsole::WriteString().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    32 \{\par
   33     char *i = (char*)string;\par
   34     char *s = i;\par
   35     while (*i)\par
   36         i++;\par
   37     return i - s;\par
   38 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "strlen_8c_a67ec56eb98b49515d35005a5b3bf9a32_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/clib/untag.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/clib/untag.c}
{\xe \v lib/clib/untag.c}
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for untag.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "untag_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Untag} (char *destination, const char *source, {\b texttag} tags[], unsigned int tagcount)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Untag\:untag.c}
{\xe \v untag.c\:Untag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Untag (char *  {\i destination}, const char *  {\i source}, {\b texttag}  {\i tags}[], unsigned int  {\i tagcount})}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file untag.c.}\par
{
References texttag::tag, and texttag::text.}\par
{
Referenced by Language::UntagText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    30 \{\par
   31     const char *pos, *tmp, *tag;\par
   32     char *dest;\par
   33     int unsigned i, j, found;\par
   34 \par
   35     pos = source;\par
   36     dest = destination;\par
   37 \par
   38     while (*pos != '\\0') \{\par
   39         if (*pos != '#') \{\par
   40             (*dest++ = *pos++);\par
   41         \} else \{\par
   42             // Try to replace tag\par
   43             found = 0;\par
   44             for (i = 0; i < tagcount; i++) \{\par
   45                 tag = tags[i].tag;\par
   46                 tmp = pos;\par
   47                 j = 0;\par
   48                 while (*tmp != '\\0' && *tag != '\\0' && *tmp == *tag) \{\par
   49                     tmp++;\par
   50                     tag++;\par
   51                     j++;\par
   52                 \}\par
   53 \par
   54                 if (j > 1 && *(--tag) == '#') \{\par
   55                     // Tag found. Now replace.\par
   56                     tag = tags[i].text;\par
   57                     while ((*dest++ = *tag++));\par
   58                     dest--;\par
   59                     pos = tmp;\par
   60                     found = 1;\par
   61                     break;\par
   62                 \}\par
   63             \}\par
   64 \par
   65             if(!found) \{\par
   66                 (*dest++ = *pos++);\par
   67             \}\par
   68         \}\par
   69     \}\par
   70     *dest = '\\0';\par
   71 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "untag_8c_a13fd37f0e8fef81a052aab4cd5588fb6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/complex.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/complex.h}
{\xe \v lib/complex.h}
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions in math library for handling complex numbers. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b complex}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b csgn} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complex signum. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cabs} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Absolute value of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b creal} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Real part of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cimag} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imaginary part of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b carg} ({\b complex} z)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cexp} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns e to the power of a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b clog} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Natural logarithm of a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b conj} ({\b complex} z)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cproj} ({\b complex} z)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b csqrt} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Square root of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cpow} ({\b complex} x, {\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complex number raised to a power. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cpack} (double x, double y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pack two real numbers into a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cadd} ({\b complex} a, {\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Addition of two complex numbers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b csub} ({\b complex} a, {\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subtraction of two complex numbers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cmul} ({\b complex} a, {\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiplication of two complex numbers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cdiv} ({\b complex} a, {\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Division of two complex numbers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cceil} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ceiling value of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cfloor} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Floor value of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ctrunc} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Truncated value of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cround} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Division of two complex numbers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b creci} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reciprocal value of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ccbrt} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cube root of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b clogb} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base 2 logarithmic value of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b clog10} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base 10 logarithmic value of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ccos} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cosine of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b csin} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sine of a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ctan} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tangent of a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b csec} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secant of a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ccsc} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cosecant of a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ccot} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cotangent of a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cacos} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse cosine of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b casin} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse sine of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b catan} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse tangent of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b casec} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse secant expressed using complex logarithms: }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cacsc} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse cosecant of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cacot} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse cotangent of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ccosh} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cosine of a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b csinh} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic sine of a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ctanh} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic tangent of a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b csech} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic secant of a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ccsch} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic secant of a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ccoth} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cotangent of a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cacosh} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosine of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b casinh} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic sine of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b catanh} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic tangent of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b casech} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic secant of complex numbers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cacsch} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosecant of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cacoth} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cotangent of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions in math library for handling complex numbers. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cabs\:complex.h}
{\xe \v complex.h\:cabs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double cabs ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Absolute value of complex number. }}\par
{
Definition at line 56 of file prim.c.}\par
{
References cimag(), creal(), and hypot().}\par
{
Referenced by ComplexNumber::Absolute(), clog(), cpow(), and csqrt().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    57 \{\par
   58     return hypot(creal(z), cimag(z));\par
   59 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_af6e02ba9d2566b52e3b0faf2d4ed973a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_af6e02ba9d2566b52e3b0faf2d4ed973a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cacos\:complex.h}
{\xe \v complex.h\:cacos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cacos ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse cosine of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/09/15\par
}Inverse cosine expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
arccos z = -i * log(z + i * sqrt(1 - z * z))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_trigonometric_functions#Logarithmic_forms} \par
}{
Definition at line 43 of file cacos.c.}\par
{
References cadd(), clog(), cmul(), cpack(), csqrt(), and csub().}\par
{
Referenced by ComplexNumber::ArcCosine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex a = cpack(1.0, 0.0);\par
   46     complex i = cpack(0.0, 1.0);\par
   47     complex j = cpack(0.0, -1.0);\par
   48     complex p = csub(a, cmul(z, z));\par
   49     complex q = clog(cadd(z, cmul(i, csqrt(p))));\par
   50     complex w = cmul(j, q);\par
   51     return w;\par
   52 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_ac182d6022bdabf7f2b6eccb6a0ea497b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_ac182d6022bdabf7f2b6eccb6a0ea497b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cacosh\:complex.h}
{\xe \v complex.h\:cacosh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cacosh ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosine of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 15/03/03\par
}Inverse hyperbolic cosine expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
acosh(z) = log(z + sqrt(z*z - 1))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_hyperbolic_function#Logarithmic_representation} \par
}{
Definition at line 43 of file cacosh.c.}\par
{
References cadd(), clog(), cmul(), cpack(), csqrt(), and csub().}\par
{
Referenced by ComplexNumber::HypArcCosine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex one = cpack(1.0, 0.0);\par
   46     complex a = csub(cmul(z, z) , one);\par
   47     complex b = cadd(z, csqrt(a));\par
   48     complex w = clog(b);\par
   49     return w;\par
   50 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a451ef5c81d4091e547e52a9a03af260d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a451ef5c81d4091e547e52a9a03af260d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cacot\:complex.h}
{\xe \v complex.h\:cacot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cacot ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse cotangent of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/10/01\par
}Inverse cotangent expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
arccot z = i/2 * (log(1 - i/z) - log(1 + i/z))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_trigonometric_functions#Logarithmic_forms} \par
}{
Definition at line 43 of file cacot.c.}\par
{
References cadd(), cdiv(), clog(), cmul(), cpack(), and csub().}\par
{
Referenced by ComplexNumber::ArcCotangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex one = cpack(1.0, 0.0);\par
   46     complex two = cpack(2.0, 0.0);\par
   47     complex i = cpack(0.0, 1.0);\par
   48     complex iz = cdiv(i, z);\par
   49     complex p = clog(csub(one, iz));\par
   50     complex q = clog(cadd(one, iz));\par
   51     complex w = cmul(cdiv(i, two), csub(p, q));\par
   52     return w;\par
   53 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a9fe610b52824ffaa0764c77e462c9815_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a9fe610b52824ffaa0764c77e462c9815_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cacoth\:complex.h}
{\xe \v complex.h\:cacoth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cacoth ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cotangent of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/09/15\par
}Inverse hyperbolic cotangent expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
acoth(z) = 1/2 * ((log(z + 1) - log(z - 1))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_hyperbolic_function#Logarithmic_representation} \par
}{
Definition at line 43 of file cacoth.c.}\par
{
References cadd(), clog(), cmul(), cpack(), and csub().}\par
{
Referenced by ComplexNumber::HypArcCotangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex half = cpack(0.5, 0.0);\par
   46     complex one = cpack(1.0, 0.0);\par
   47     complex a = clog(cadd(z, one));\par
   48     complex b = clog(csub(z, one));\par
   49     complex c = csub(a, b);\par
   50     complex w = cmul(half, c);\par
   51     return w;\par
   52 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_ab9d5fbd365098aa6a35e8599e13d7adb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_ab9d5fbd365098aa6a35e8599e13d7adb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cacsc\:complex.h}
{\xe \v complex.h\:cacsc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cacsc ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse cosecant of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/10/01\par
}Inverse cosecant expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
arccsc z = -i * log(sqr(1 - 1/(z*z)) + i/z)
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_trigonometric_functions#Logarithmic_forms} \par
}{
Definition at line 43 of file cacsc.c.}\par
{
References cadd(), cdiv(), clog(), cmul(), cpack(), csqrt(), and csub().}\par
{
Referenced by ComplexNumber::ArcCosecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex one = cpack(1.0, 0.0);\par
   46     complex i = cpack(0.0, 1.0);\par
   47     complex j = cpack(0.0, -1.0);\par
   48     complex iz = cdiv(i, z);\par
   49     complex z2 = cmul(z, z);\par
   50     complex p = cdiv(one, z2);\par
   51     complex q = csqrt(csub(one, p));\par
   52     complex w = cmul(j, clog(cadd(q, iz)));\par
   53     return w;\par
   54 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_aa8a49b2418f7bbcf0a8f72a15fbb4984_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_aa8a49b2418f7bbcf0a8f72a15fbb4984_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cacsch\:complex.h}
{\xe \v complex.h\:cacsch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cacsch ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosecant of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/09/15\par
}Inverse hyperbolic cosecant expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
acsch(z) = log(sqrt(1 + 1 / (z * z)) + 1/z)
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_hyperbolic_function#Logarithmic_representation} \par
}{
Definition at line 43 of file cacsch.c.}\par
{
References cadd(), clog(), cmul(), cpack(), creci(), and csqrt().}\par
{
Referenced by ComplexNumber::HypArcCosecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex one = cpack(1.0, 0.0);\par
   46     complex a = creci(cmul(z, z));\par
   47     complex b = csqrt(cadd(one, a));\par
   48     complex c = cadd(b, creci(z));\par
   49     complex w = clog(c);\par
   50     return w;\par
   51 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a1a3241a96a0225c9ef3113f5e5c48acf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a1a3241a96a0225c9ef3113f5e5c48acf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cadd\:complex.h}
{\xe \v complex.h\:cadd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cadd ({\b complex}  {\i a}, {\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Addition of two complex numbers. }}\par
{
Definition at line 128 of file prim.c.}\par
{
References cimag(), cpack(), and creal().}\par
{
Referenced by ComplexNumber::Add(), cacos(), cacosh(), cacot(), cacoth(), cacsc(), cacsch(), casec(), casech(), casin(), casinh(), catan(), and catanh().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   129 \{\par
  130     complex w;\par
  131     w = cpack(creal(y) + creal(z), cimag(y) + cimag(z));\par
  132     return w;\par
  133 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a02d8fd1ce9c4fa4e25b1fa676ca96d4e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a02d8fd1ce9c4fa4e25b1fa676ca96d4e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v carg\:complex.h}
{\xe \v complex.h\:carg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double carg ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v casec\:complex.h}
{\xe \v complex.h\:casec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} casec ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse secant expressed using complex logarithms: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/10/01\par
}Inverse secant expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
arcsec z = -i * log(i * sqr(1 - 1/(z*z)) + 1/z)
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_trigonometric_functions#Logarithmic_forms} \par
}{
Definition at line 43 of file casec.c.}\par
{
References cadd(), cdiv(), clog(), cmul(), cpack(), creci(), csqrt(), and csub().}\par
{
Referenced by ComplexNumber::ArcSecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex one = cpack(1.0, 0.0);\par
   46     complex i = cpack(0.0, 1.0);\par
   47     complex j = cpack(0.0, -1.0);\par
   48     complex rz = creci(z);\par
   49     complex z2 = cmul(z, z);\par
   50     complex p = cdiv(one, z2);\par
   51     complex q = csqrt(csub(one, p));\par
   52     complex w = cmul(j, clog(cadd(cmul(i, q), rz)));\par
   53     return w;\par
   54 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_ae509596503bb6ea1142d470882e074a7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_ae509596503bb6ea1142d470882e074a7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v casech\:complex.h}
{\xe \v complex.h\:casech}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} casech ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic secant of complex numbers. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 15/03/03\par
}Inverse hyperbolic secant expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
asech(z) = log(sqrt(1 / (z * z) - 1) + 1/z)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_hyperbolic_function#Logarithmic_representation} \par
}{
Definition at line 44 of file casech.c.}\par
{
References cadd(), clog(), cmul(), cpack(), creci(), csqrt(), and csub().}\par
{
Referenced by ComplexNumber::HypArcSecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45 \{\par
   46     complex one = cpack(1.0, 0.0);\par
   47     complex a = creci(cmul(z, z));\par
   48     complex b = csqrt(csub(a, one));\par
   49     complex c = cadd(b, creci(z));\par
   50     complex w = clog(c);\par
   51     return w;\par
   52 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_ad47f8259620b339981f876087f195cb4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_ad47f8259620b339981f876087f195cb4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v casin\:complex.h}
{\xe \v complex.h\:casin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} casin ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse sine of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/10/01\par
}Inverse sine expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
arcsin z = -i * log(iz + sqrt(1 - z*z))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_trigonometric_functions#Logarithmic_forms} \par
}{
Definition at line 43 of file casin.c.}\par
{
References cadd(), clog(), cmul(), cpack(), csqrt(), and csub().}\par
{
Referenced by ComplexNumber::ArcSine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex one = cpack(1.0, 0.0);\par
   46     complex i = cpack(0.0, 1.0);\par
   47     complex j = cpack(0.0, -1.0);\par
   48     complex iz = cmul(i, z);\par
   49     complex z2 = cmul(z, z);\par
   50     complex p = csqrt(csub(one, z2));\par
   51     complex q = clog(cadd(iz, p));\par
   52     complex w = cmul(j, q);\par
   53     return w;\par
   54 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a411c00ad70bc1b91a5de261b64d0f131_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a411c00ad70bc1b91a5de261b64d0f131_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v casinh\:complex.h}
{\xe \v complex.h\:casinh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} casinh ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic sine of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/09/15\par
}Inverse hyperbolic sine expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
asinh(z) = log(z + sqrt(z*z + 1))\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid With branch cuts: -i INF to -i and i to i INF\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Domain: -INF to INF
Range:  -INF to INF
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_hyperbolic_function#Logarithmic_representation} \par
}{
Definition at line 48 of file casinh.c.}\par
{
References cadd(), clog(), cmul(), cpack(), and csqrt().}\par
{
Referenced by ComplexNumber::HypArcSine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    49 \{\par
   50     complex one = cpack(1.0, 0.0);\par
   51     complex a = cadd(cmul(z, z), one);\par
   52     complex b = cadd(z, csqrt(a));\par
   53     complex w = clog(b);\par
   54     return w;\par
   55 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a333c9aa02a58163693f67e1d47aa9887_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a333c9aa02a58163693f67e1d47aa9887_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v catan\:complex.h}
{\xe \v complex.h\:catan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} catan ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse tangent of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/10/01\par
}Inverse tangent expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
atan(z) = i/2 * (log(1 - i * z) - log(1 + i * z))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_trigonometric_functions#Logarithmic_forms} \par
}{
Definition at line 43 of file catan.c.}\par
{
References cadd(), cdiv(), clog(), cmul(), cpack(), and csub().}\par
{
Referenced by ComplexNumber::ArcTangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex one = cpack(1.0, 0.0);\par
   46     complex two = cpack(2.0, 0.0);\par
   47     complex i = cpack(0.0, 1.0);\par
   48     complex iz = cmul(i, z);\par
   49     complex p = clog(csub(one, iz));\par
   50     complex q = clog(cadd(one, iz));\par
   51     complex w = cmul(cdiv(i, two), csub(p, q));\par
   52     return w;\par
   53 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_aa4ec5b4617afd43de3b6c7a11e850f04_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_aa4ec5b4617afd43de3b6c7a11e850f04_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v catanh\:complex.h}
{\xe \v complex.h\:catanh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} catanh ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic tangent of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/09/15\par
}Inverse hyperbolic tangent expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
atanh(z) = 1/2 * ((log(1 + z) - log(1 - z))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_hyperbolic_function#Logarithmic_representation} \par
}{
Definition at line 43 of file catanh.c.}\par
{
References cadd(), clog(), cmul(), cpack(), and csub().}\par
{
Referenced by ComplexNumber::HypArcTangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex half = cpack(0.5, 0.0);\par
   46     complex one = cpack(1.0, 0.0);\par
   47     complex a = clog(cadd(one, z));\par
   48     complex b = clog(csub(one, z));\par
   49     complex c = csub(a, b);\par
   50     complex w = cmul(half, c);\par
   51     return w;\par
   52 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a0808614b4e465dc4b4827382a9f77447_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a0808614b4e465dc4b4827382a9f77447_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ccbrt\:complex.h}
{\xe \v complex.h\:ccbrt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ccbrt ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cube root of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
cbrt z = exp(1/3 * log(z))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Cube_root} \par
}{
Definition at line 40 of file ccbrt.c.}\par
{
References cexp(), clog(), cmul(), and cpack().}\par
{
Referenced by ComplexNumber::CubeRoot().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    41 \{\par
   42     complex onethird = cpack(1.0 / 3.0, 0.0);\par
   43     complex a = cmul(onethird, clog(z));\par
   44     complex w = cexp(a);\par
   45     return w;\par
   46 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a9411d07785a32ac077d24d6c8a5c5554_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a9411d07785a32ac077d24d6c8a5c5554_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cceil\:complex.h}
{\xe \v complex.h\:cceil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cceil ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ceiling value of complex number. }}\par
{
Definition at line 106 of file prim.c.}\par
{
References cimag(), cpack(), and creal().}\par
{
Referenced by ComplexNumber::Ceiling().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   107 \{\par
  108     complex w;\par
  109     w = cpack(ceil(creal(z)), ceil(cimag(z)));\par
  110     return w;\par
  111 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a48443015efbd58ce5da6d64d9858f168_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a48443015efbd58ce5da6d64d9858f168_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ccos\:complex.h}
{\xe \v complex.h\:ccos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ccos ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cosine of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
real =  cos(a) * cosh(b)
imag = -sin(a) * sinh(b)
\par}
 \par
}{
Definition at line 51 of file ccos.c.}\par
{
References cchsh(), cimag(), cos(), cpack(), creal(), and sin().}\par
{
Referenced by ComplexNumber::Cosine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    52 \{\par
   53     complex w;\par
   54     double a, b;\par
   55     double ch, sh;\par
   56 \par
   57     a = creal(z);\par
   58     b = cimag(z);\par
   59     cchsh(b, &ch, &sh);\par
   60     w = cpack((cos(a) * ch), (-sin(a) * sh));\par
   61 \par
   62     return w;\par
   63 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a68da54d02ea0d55bb90dcb06f56d10f5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a68da54d02ea0d55bb90dcb06f56d10f5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ccosh\:complex.h}
{\xe \v complex.h\:ccosh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ccosh ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cosine of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
real = cosh(a) * cos(b)
imag = sinh(a) * sin(b)
\par}
 \par
}{
Definition at line 51 of file ccosh.c.}\par
{
References cchsh(), cimag(), cos(), cpack(), creal(), and sin().}\par
{
Referenced by ComplexNumber::HypCosine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    52 \{\par
   53     complex w;\par
   54     double a, b;\par
   55     double ch, sh;\par
   56 \par
   57     a = creal(z);\par
   58     b = cimag(z);\par
   59     cchsh(a, &ch, &sh);\par
   60     w = cpack(cos(b) * ch, sin(b) * sh);\par
   61 \par
   62     return w;\par
   63 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_aa90df67e0430d042887fa77812458f47_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_aa90df67e0430d042887fa77812458f47_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ccot\:complex.h}
{\xe \v complex.h\:ccot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ccot ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cotangent of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculated as in Open Office: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
                sin(2.0 * a)
real  = ------------------------------
         cosh(2.0 * b) - cos(2.0 * a)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                -sinh(2.0 * b)
imag  = ------------------------------
         cosh(2.0 * b) - cos(2.0 * a)
\par}
 {\f2 https://wiki.openoffice.org/wiki/Documentation/How_Tos/Calc:_IMCOT_function} \par
}{
Definition at line 47 of file ccot.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::Cotangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48 \{\par
   49     complex w;\par
   50     double a, b;\par
   51     double d;\par
   52 \par
   53     a = creal(z);\par
   54     b = cimag(z);\par
   55     d = cosh(2.0 * b) - cos(2.0 * a);\par
   56 \par
   57     if (d == 0.0) \{\par
   58         w = cpack(HUGE, HUGE); // TODO: INF, INF\par
   59     \} else \{\par
   60         w = cpack((sin(2.0 * a) / d), (-sinh(2.0 * b) / d));\par
   61     \}\par
   62 \par
   63     return w;\par
   64 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_af55c6dec4ec4d7992aea8418480c221c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_af55c6dec4ec4d7992aea8418480c221c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ccoth\:complex.h}
{\xe \v complex.h\:ccoth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ccoth ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cotangent of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
acoth(z) = 0.5 * (log(1 + 1/z) - log(1 - 1/z))
\par}
 or {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
               sinh(2.0 * a)
real  = ---------------------------\'97
         cosh(2.0 * a) - cos(2.0 * b)
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   -sin(2.0 * b)\par
}

imag  = ---------------------------\'97
         cosh(2.0 * a) - cos(2.0 * b)
\par}
 \par
}{
Definition at line 49 of file ccoth.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::HypCotangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{\par
   51     complex w;\par
   52     double a, b;\par
   53     double d;\par
   54 \par
   55     a = creal(z);\par
   56     b = cimag(z);\par
   57     d = cosh(2.0 * a) - cos(2.0 * b);\par
   58     w = cpack(sinh(2.0 * a) / d, -sin(2.0 * b) / d);\par
   59 \par
   60     return w;\par
   61 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_abcc180facc4c06148ed64b7bd028e643_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_abcc180facc4c06148ed64b7bd028e643_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ccsc\:complex.h}
{\xe \v complex.h\:ccsc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ccsc ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cosecant of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculated as in Open Office: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
            2.0 * sin(a) * cosh(b)
real  = ------------------------------
         cosh(2.0 * b) - cos(2.0 * a)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid            -2.0 * cos(a) * sinh(b)
imag  = ------------------------------
         cosh(2.0 * b) - cos(2.0 * a)
\par}
 {\f2 https://wiki.openoffice.org/wiki/Documentation/How_Tos/Calc:_IMCSC_function} \par
}{
Definition at line 47 of file ccsc.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::Cosecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48 \{\par
   49     complex w;\par
   50     double a, b;\par
   51     double d;\par
   52 \par
   53     a = creal(z);\par
   54     b = cimag(z);\par
   55     d = cosh(2.0 * b) - cos(2.0 * a);\par
   56 \par
   57     if (d == 0.0) \{\par
   58         w = cpack(HUGE, HUGE); // TODO: INF, INF\par
   59     \} else \{\par
   60         w = cpack((2.0 * sin(a) * cosh(b) / d), (-2.0 * cos(a) * sinh(b) / d));\par
   61     \}\par
   62 \par
   63     return w;\par
   64 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a1a06d41ae4e946bed755fe51ffb6ed24_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a1a06d41ae4e946bed755fe51ffb6ed24_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ccsch\:complex.h}
{\xe \v complex.h\:ccsch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ccsch ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic secant of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculated as in Open Office: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
            2.0 * sinh(a) * cos(b)
real  = ------------------------------
         cosh(2.0 * a) - cos(2.0 * b)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         -2.0 * cosh(2.0 * a) * sin(b)
imag  = ------------------------------
         cosh(2.0 * a) - cos(2.0 * b)
\par}
 {\f2 https://wiki.openoffice.org/wiki/Documentation/How_Tos/Calc:_IMCSCH_function} \par
}{
Definition at line 47 of file ccsch.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::HypCosecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48 \{\par
   49     complex w;\par
   50     double a, b;\par
   51     double d;\par
   52 \par
   53     a = creal(z);\par
   54     b = cimag(z);\par
   55     d = cosh(2.0 * a) - cos(2.0 * b);\par
   56     w = cpack((2.0 * sinh(a) * cos(b) / d), (-2.0 * cosh(a) * sin(b) / d));\par
   57 \par
   58     return w;\par
   59 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a57a12e1badffcb670631844ad876ceba_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a57a12e1badffcb670631844ad876ceba_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cdiv\:complex.h}
{\xe \v complex.h\:cdiv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cdiv ({\b complex}  {\i a}, {\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Division of two complex numbers. }}\par
{
Definition at line 170 of file prim.c.}\par
{
References cimag(), cpack(), and creal().}\par
{
Referenced by cacot(), cacsc(), casec(), catan(), clog10(), clogb(), and ComplexNumber::Div().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   171 \{\par
  172     complex w;\par
  173     double a, b, c, d;\par
  174     double q, v, x;\par
  175 \par
  176     a = creal(y);\par
  177     b = cimag(y);\par
  178     c = creal(z);\par
  179     d = cimag(z);\par
  180 \par
  181     q = c * c + d * d;\par
  182     v = a * c + b * d;\par
  183     x = b * c - a * d;\par
  184 \par
  185     w = cpack(v / q, x / q);\par
  186     return w;\par
  187 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_ace985b5f12a681b496bd3ae5f8a966b4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_ace985b5f12a681b496bd3ae5f8a966b4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cexp\:complex.h}
{\xe \v complex.h\:cexp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cexp ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns e to the power of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20 \par
}}{
Definition at line 46 of file cexp.c.}\par
{
References cimag(), cos(), cpack(), creal(), exp(), and sin().}\par
{
Referenced by ccbrt().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    47 \{\par
   48     complex w;\par
   49     double r, x, y;\par
   50     x = creal(z);\par
   51     y = cimag(z);\par
   52     r = exp(x);\par
   53     w = cpack(r * cos(y), r * sin(y));\par
   54     return w;\par
   55 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_abf3bfbb727779504c9ddb7023d14fed0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_abf3bfbb727779504c9ddb7023d14fed0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cfloor\:complex.h}
{\xe \v complex.h\:cfloor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cfloor ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Floor value of complex number. }}\par
{
Definition at line 95 of file prim.c.}\par
{
References cimag(), cpack(), and creal().}\par
{
Referenced by ComplexNumber::Floor().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    96 \{\par
   97     complex w;\par
   98     w = cpack(floor(creal(z)), floor(cimag(z)));\par
   99     return w;\par
  100 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a12886361ac7d752a46ec5cf3bdd0687e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a12886361ac7d752a46ec5cf3bdd0687e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cimag\:complex.h}
{\xe \v complex.h\:cimag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double cimag ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imaginary part of complex number. }}\par
{
Definition at line 47 of file prim.c.}\par
{
Referenced by cabs(), cadd(), cceil(), ccos(), ccosh(), ccot(), ccoth(), ccsc(), ccsch(), cdiv(), cexp(), cfloor(), clog(), cmul(), cpow(), creci(), cround(), csec(), csech(), csgn(), csin(), csinh(), csqrt(), csub(), ctan(), ctanh(), ctrunc(), ComplexNumber::GetDefaultPrecedence(), ComplexNumber::GetImagValue(), ComplexNumber::GetPrecedence(), PositionalNumeralSystem::GetText(), DecimalSystem::GetText(), and ComplexNumber::Unary().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48 \{\par
   49     return (IMAG_PART(z));\par
   50 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_aa1fe0b9371befabef6c41ba73470774a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v clog\:complex.h}
{\xe \v complex.h\:clog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} clog ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Natural logarithm of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20 \par
}}{
Definition at line 46 of file clog.c.}\par
{
References atan2(), cabs(), cimag(), cpack(), and creal().}\par
{
Referenced by cacos(), cacosh(), cacot(), cacoth(), cacsc(), cacsch(), casec(), casech(), casin(), casinh(), catan(), catanh(), ccbrt(), clog10(), clogb(), and ComplexNumber::Log().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    47 \{\par
   48     complex w;\par
   49     double p, q;\par
   50     p = log(cabs(z));\par
   51     q = atan2(cimag(z), creal(z));\par
   52     w = cpack(p, q);\par
   53     return w;\par
   54 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a888b8eb5ccc46411e68f6d7b99035888_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a888b8eb5ccc46411e68f6d7b99035888_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v clog10\:complex.h}
{\xe \v complex.h\:clog10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} clog10 ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base 10 logarithmic value of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
log z = log(z) / log(10)
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Complex_logarithm} \par
}{
Definition at line 39 of file clog10.c.}\par
{
References cdiv(), clog(), and cpack().}\par
{
Referenced by ComplexNumber::Log10().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40 \{\par
   41     complex teen = cpack(10.0, 0.0);\par
   42     complex w = cdiv(clog(z), clog(teen));\par
   43     return w;\par
   44 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a5e20d88f7f7f17d510ddf62f269c8343_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a5e20d88f7f7f17d510ddf62f269c8343_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v clogb\:complex.h}
{\xe \v complex.h\:clogb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} clogb ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base 2 logarithmic value of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
lb z = log(z) / log(2)
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Complex_logarithm} \par
}{
Definition at line 39 of file clogb.c.}\par
{
References cdiv(), clog(), and cpack().}\par
{
Referenced by ComplexNumber::Log2().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40 \{\par
   41     complex two = cpack(2.0, 0.0);\par
   42     complex w = cdiv(clog(z), clog(two));\par
   43     return w;\par
   44 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a3951e04bc6370fb9fd7b0ff2c2558d7b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a3951e04bc6370fb9fd7b0ff2c2558d7b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cmul\:complex.h}
{\xe \v complex.h\:cmul}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cmul ({\b complex}  {\i a}, {\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiplication of two complex numbers. }}\par
{
Definition at line 150 of file prim.c.}\par
{
References cimag(), cpack(), and creal().}\par
{
Referenced by cacos(), cacosh(), cacot(), cacoth(), cacsc(), cacsch(), casec(), casech(), casin(), casinh(), catan(), catanh(), ccbrt(), and ComplexNumber::Mul().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   151 \{\par
  152     complex w;\par
  153     double a, b, c, d;\par
  154 \par
  155     // (a+bi)(c+di)\par
  156     a = creal(y);\par
  157     b = cimag(y);\par
  158     c = creal(z);\par
  159     d = cimag(z);\par
  160 \par
  161     // (ac -bd) + (ad + bc)i\par
  162     w = cpack(a * c - b * d, a * d + b * c);\par
  163     return w;\par
  164 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a340ad83d03bcc727538d25dcf6dd26e9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a340ad83d03bcc727538d25dcf6dd26e9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v conj\:complex.h}
{\xe \v complex.h\:conj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} conj ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file prim.c.}\par
{
References cpack().}\par
{
Referenced by creci().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    62 \{\par
   63     IMAG_PART(z) = -IMAG_PART(z);\par
   64     return cpack(REAL_PART(z), IMAG_PART(z));\par
   65 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a8d08797ad03191874e9943144da189be_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a8d08797ad03191874e9943144da189be_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cpack\:complex.h}
{\xe \v complex.h\:cpack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cpack (double  {\i x}, double  {\i y})}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pack two real numbers into a complex number. }}\par
{
Definition at line 71 of file prim.c.}\par
{
Referenced by ComplexNumber::Add(), cacos(), cacosh(), cacot(), cacoth(), cacsc(), cacsch(), cadd(), casec(), casech(), casin(), casinh(), catan(), catanh(), ccbrt(), cceil(), ccos(), ccosh(), ccot(), ccoth(), ccsc(), ccsch(), cdiv(), cexp(), cfloor(), clog(), clog10(), clogb(), cmul(), ComplexNumber::ComplexNumber(), conj(), cpow(), creci(), cround(), csec(), csech(), csin(), csinh(), csqrt(), csub(), ctan(), ctanh(), ctrunc(), ComplexNumber::Div(), ComplexNumber::Mul(), ComplexNumber::Raise(), ComplexNumber::Sub(), and ComplexNumber::Unary().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    72 \{\par
   73     complex z;\par
   74 \par
   75     REAL_PART(z) = x;\par
   76     IMAG_PART(z) = y;\par
   77     return (z);\par
   78 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a980e6e049f7902b05fc9eb5614b07a5c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cpow\:complex.h}
{\xe \v complex.h\:cpow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cpow ({\b complex}  {\i a}, {\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complex number raised to a power. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20 \par
}}{
Definition at line 46 of file cpow.c.}\par
{
References atan2(), cabs(), cimag(), cos(), cpack(), creal(), exp(), pow(), and sin().}\par
{
Referenced by ComplexNumber::Raise().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    47 \{\par
   48     complex w;\par
   49     double x, y, r, theta, absa, arga;\par
   50 \par
   51     x = creal(z);\par
   52     y = cimag(z);\par
   53     absa = cabs(a);\par
   54     if (absa == 0.0) \{\par
   55         return cpack(0.0, + 0.0);\par
   56     \}\par
   57     arga = atan2(cimag(a), creal(a));\par
   58 \par
   59     r = pow(absa, x);\par
   60     theta = x * arga;\par
   61     if (y != 0.0) \{\par
   62         r = r * exp(-y * arga);\par
   63         theta = theta + y * log(absa);\par
   64     \}\par
   65 \par
   66     w = cpack(r * cos(theta), r * sin(theta));\par
   67     return w;\par
   68 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a8d165b5dcf96f12ff8de000474dd020e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a8d165b5dcf96f12ff8de000474dd020e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cproj\:complex.h}
{\xe \v complex.h\:cproj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cproj ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v creal\:complex.h}
{\xe \v complex.h\:creal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double creal ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Real part of complex number. }}\par
{
Definition at line 38 of file prim.c.}\par
{
Referenced by cabs(), cadd(), cceil(), ccos(), ccosh(), ccot(), ccoth(), ccsc(), ccsch(), cdiv(), cexp(), cfloor(), clog(), cmul(), cpow(), creci(), cround(), csec(), csech(), csgn(), csin(), csinh(), csqrt(), csub(), ctan(), ctanh(), ctrunc(), ComplexNumber::GetDefaultPrecedence(), ComplexNumber::GetIntegerValue(), ComplexNumber::GetPrecedence(), ComplexNumber::GetRealValue(), PositionalNumeralSystem::GetText(), DecimalSystem::GetText(), ComplexNumber::PureComplexValue(), and ComplexNumber::Unary().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    39 \{\par
   40     return (REAL_PART(z));\par
   41 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a4a236b24c0197821e3489a35a72079ab_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v creci\:complex.h}
{\xe \v complex.h\:creci}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} creci ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reciprocal value of complex number. }}\par
{
Definition at line 193 of file prim.c.}\par
{
References cimag(), conj(), cpack(), and creal().}\par
{
Referenced by cacsch(), casec(), casech(), and ComplexNumber::Reciprocal().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   194 \{\par
  195     complex w;\par
  196     double q, a, b;\par
  197 \par
  198     a = creal(z);\par
  199     b = cimag(conj(z));\par
  200     q = a * a + b * b;\par
  201     w = cpack(a / q, b / q);\par
  202 \par
  203     return w;\par
  204 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a78cdeb0bf6f229c2be3065fc697dac68_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a78cdeb0bf6f229c2be3065fc697dac68_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cround\:complex.h}
{\xe \v complex.h\:cround}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cround ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Division of two complex numbers. }}\par
{
Definition at line 117 of file prim.c.}\par
{
References cimag(), cpack(), creal(), and round().}\par
{
Referenced by ComplexNumber::Round().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   118 \{\par
  119     complex w;\par
  120     w = cpack(round(creal(z)), round(cimag(z)));\par
  121     return w;\par
  122 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a83b50ec7fc882d884c8b740026ab3ef5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a83b50ec7fc882d884c8b740026ab3ef5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v csec\:complex.h}
{\xe \v complex.h\:csec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} csec ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secant of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculated as in Open Office:\par
 {\f2 https://wiki.openoffice.org/wiki/Documentation/How_Tos/Calc:_IMSEC_function} {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
            2.0 * cos(a) * cosh(b)
real  = ---------------------------\'97
         cosh(2.0 * b) + cos(2.0 * a)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             2.0 * sin(a) * sinh(b)
imag  = ---------------------------\'97
         cosh(2.0 * b) + cos(2.0 * a)
\par}
 \par
}{
Definition at line 47 of file csec.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::Secant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48 \{\par
   49     complex w;\par
   50     double a, b;\par
   51     double d;\par
   52 \par
   53     a = creal(z);\par
   54     b = cimag(z);\par
   55     d = cosh(2.0 * b) + cos(2.0 * a);\par
   56 \par
   57     if (d == 0.0) \{\par
   58         w = cpack(HUGE, HUGE); // TODO: INF, INF\par
   59     \} else \{\par
   60         w = cpack((2.0 * cos(a) * cosh(b) / d), (2.0 * sin(a) * sinh(b) / d));\par
   61     \}\par
   62 \par
   63     return w;\par
   64 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a1bbe43785d2b3cc364e50153f203c50d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a1bbe43785d2b3cc364e50153f203c50d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v csech\:complex.h}
{\xe \v complex.h\:csech}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} csech ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic secant of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculated as in Open Office:\par
 {\f2 https://wiki.openoffice.org/wiki/Documentation/How_Tos/Calc:_IMSECH_function} {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
            2.0 * cosh(a) * cos(b)
real  = ---------------------------\'97
         cosh(2.0 * a) + cos(2.0 * b)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         -2.0 * sinh(2.0 * a) * sin(b)
imag  = ---------------------------\'97
         cosh(2.0 * a) + cos(2.0 * b)
\par}
 \par
}{
Definition at line 47 of file csech.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::HypSecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48 \{\par
   49     complex w;\par
   50     double a, b;\par
   51     double d;\par
   52 \par
   53     a = creal(z);\par
   54     b = cimag(z);\par
   55     d = cosh(2.0 * a) + cos(2.0 * b);\par
   56     w = cpack((2.0 * cosh(a) * cos(b) / d), (-2.0 * sinh(a) * sin(b) / d));\par
   57 \par
   58     return w;\par
   59 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_aa639638fbf6b2c819fd8fb3c093ca012_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_aa639638fbf6b2c819fd8fb3c093ca012_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v csgn\:complex.h}
{\xe \v complex.h\:csgn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double csgn ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complex signum. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostly as specified in IEEE Std 1003.1, 2013 Edition {\f2 http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/complex.h.html}\par
More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Sign_function#Complex_signum} \par
}{
Definition at line 36 of file csgn.c.}\par
{
References cimag(), and creal().}\par
{
Referenced by ComplexNumber::Signum().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    37 \{\par
   38     double a = creal(z);\par
   39 \par
   40     if (a > 0.0) \{\par
   41         return 1.0;\par
   42     \} else if (a < 0.0) \{\par
   43         return -1.0;\par
   44     \} else \{\par
   45         double b = cimag(z);\par
   46         return b > 0.0 ? 1.0 : b < 0.0 ? -1.0 : 0.0;\par
   47     \}\par
   48 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_aaab921fc8e26fcfee85a89e662e41a74_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_aaab921fc8e26fcfee85a89e662e41a74_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v csin\:complex.h}
{\xe \v complex.h\:csin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} csin ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sine of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20\par
}Calculated according to description at wikipedia:\par
 {\f2 http://en.wikipedia.org/wiki/Sine#Sine_with_a_complex_argument} {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
real = sin(a) * cosh(b)
imag = cos(a) * sinh(b)
\par}
 \par
}{
Definition at line 53 of file csin.c.}\par
{
References cchsh(), cimag(), cos(), cpack(), creal(), and sin().}\par
{
Referenced by ComplexNumber::Sine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    54 \{\par
   55     complex w;\par
   56     double a, b;\par
   57     double ch, sh;\par
   58 \par
   59     a = creal(z);\par
   60     b = cimag(z);\par
   61     cchsh(b, &ch, &sh);\par
   62     w = cpack((sin(a) * ch), (cos(a) * sh));\par
   63 \par
   64     return w;\par
   65 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_ae17495bc828b9bea6f64da3c21fe0fc7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_ae17495bc828b9bea6f64da3c21fe0fc7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v csinh\:complex.h}
{\xe \v complex.h\:csinh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} csinh ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic sine of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20\par
}Calculated as in Open Office:\par
 {\f2 https://wiki.openoffice.org/wiki/Documentation/How_Tos/Calc:_IMSINH_function} {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
real = sinh(a) * cos(b)
imag = cosh(a) * sin(b)
\par}
 \par
}{
Definition at line 53 of file csinh.c.}\par
{
References cchsh(), cimag(), cos(), cpack(), creal(), and sin().}\par
{
Referenced by ComplexNumber::HypSine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    54 \{\par
   55     complex w;\par
   56     double a, b;\par
   57     double ch, sh;\par
   58 \par
   59     a = creal(z);\par
   60     b = cimag(z);\par
   61     cchsh(a, &ch, &sh);\par
   62     w = cpack(cos(b) * sh, sin(b) * ch);\par
   63 \par
   64     return w;\par
   65 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a5a9923cad15c34351bb15bd46d5d6331_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a5a9923cad15c34351bb15bd46d5d6331_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v csqrt\:complex.h}
{\xe \v complex.h\:csqrt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} csqrt ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Square root of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20 \par
}}{
Definition at line 46 of file csqrt.c.}\par
{
References cabs(), cimag(), cpack(), creal(), and sqrt().}\par
{
Referenced by cacos(), cacosh(), cacsc(), cacsch(), casec(), casech(), casin(), casinh(), and ComplexNumber::SquareRoot().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    47 \{\par
   48     complex w;\par
   49     double x, y, r, t, scale;\par
   50 \par
   51     x = creal (z);\par
   52     y = cimag (z);\par
   53 \par
   54     if (y == 0.0) \{\par
   55         if (x == 0.0) \{\par
   56             w = cpack(0.0, y);\par
   57         \} else \{\par
   58             r = fabs(x);\par
   59             r = sqrt(r);\par
   60             if (x < 0.0) \{\par
   61                 w = cpack(0.0, r);\par
   62             \} else \{\par
   63                 w = cpack(r, y);\par
   64             \}\par
   65         \}\par
   66         return w;\par
   67     \}\par
   68     if (x == 0.0) \{\par
   69         r = fabs(y);\par
   70         r = sqrt(0.5 * r);\par
   71         if (y > 0)\par
   72             w =  cpack(r, r);\par
   73         else\par
   74             w = cpack(r, -r);\par
   75         return w;\par
   76     \}\par
   77     /* Rescale to avoid internal overflow or underflow.  */\par
   78     if ((fabs(x) > 4.0) || (fabs(y) > 4.0)) \{\par
   79         x *= 0.25;\par
   80         y *= 0.25;\par
   81         scale = 2.0;\par
   82     \} else \{\par
   83 #if 1\par
   84         x *= 1.8014398509481984e16;  /* 2^54 */\par
   85         y *= 1.8014398509481984e16;\par
   86         scale = 7.450580596923828125e-9; /* 2^-27 */\par
   87 #else\par
   88         x *= 4.0;\par
   89         y *= 4.0;\par
   90         scale = 0.5;\par
   91 #endif\par
   92     \}\par
   93     w = cpack(x, y);\par
   94     r = cabs(w);\par
   95     if (x > 0) \{\par
   96         t = sqrt(0.5 * r + 0.5 * x);\par
   97         r = scale * fabs((0.5 * y) / t );\par
   98         t *= scale;\par
   99     \} else \{\par
  100         r = sqrt(0.5 * r - 0.5 * x);\par
  101         t = scale * fabs((0.5 * y) / r);\par
  102         r *= scale;\par
  103     \}\par
  104     if (y < 0)\par
  105         w = cpack(t, -r);\par
  106     else\par
  107         w = cpack(t, r);\par
  108     return w;\par
  109 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_afe5b814a44414f20d0f98fe974737edd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_afe5b814a44414f20d0f98fe974737edd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v csub\:complex.h}
{\xe \v complex.h\:csub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} csub ({\b complex}  {\i a}, {\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subtraction of two complex numbers. }}\par
{
Definition at line 139 of file prim.c.}\par
{
References cimag(), cpack(), and creal().}\par
{
Referenced by cacos(), cacosh(), cacot(), cacoth(), cacsc(), casec(), casech(), casin(), catan(), catanh(), and ComplexNumber::Sub().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   140 \{\par
  141     complex w;\par
  142     w = cpack(creal(y) - creal(z), cimag(y) - cimag(z));\par
  143     return w;\par
  144 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a46bb0dd64d87c3aeb85417d1dadf6ddd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a46bb0dd64d87c3aeb85417d1dadf6ddd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ctan\:complex.h}
{\xe \v complex.h\:ctan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ctan ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tangent of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20\par
}Calculated as in Open Office:\par
 {\f2 https://wiki.openoffice.org/wiki/Documentation/How_Tos/Calc:_IMTAN_function} {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
               sin(2.0 * a)
real  = ---------------------------\'97
         cos(2.0 * a) + cosh(2.0 * b)
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   sinh(2.0 * b)\par
}

imag  = ---------------------------\'97
         cos(2.0 * a) + cosh(2.0 * b)
\par}
 \par
}{
Definition at line 58 of file ctan.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::Tangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    59 \{\par
   60     complex w;\par
   61     double a, b;\par
   62     double d;\par
   63 \par
   64     a = creal(z);\par
   65     b = cimag(z);\par
   66     d = cos(2.0 * a) + cosh(2.0 * b);\par
   67 \par
   68     if (d == 0.0) \{\par
   69         w = cpack(HUGE, HUGE); // TODO: INF, INF\par
   70     \} else \{\par
   71         w = cpack((sin(2.0 * a) / d), (sinh(2.0 * b) / d));\par
   72     \}\par
   73 \par
   74     return w;\par
   75 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a2bd0de3a2299ec26164641bc8f6e117f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_a2bd0de3a2299ec26164641bc8f6e117f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ctanh\:complex.h}
{\xe \v complex.h\:ctanh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ctanh ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic tangent of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
               sinh(2.0 * a)
real  = ---------------------------\'97
         cosh(2.0 * a) + cos(2.0 * b)
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   sin(2.0 * b)\par
}

imag  = ---------------------------\'97
         cosh(2.0 * a) + cos(2.0 * b)
\par}
 \par
}{
Definition at line 56 of file ctanh.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::HypTangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    57 \{\par
   58     complex w;\par
   59     double a, b;\par
   60     double d;\par
   61 \par
   62     a = creal(z);\par
   63     b = cimag(z);\par
   64     d = cosh(2.0 * a) + cos(2.0 * b);\par
   65     w = cpack((sinh(2.0 * a) / d), (sin(2.0 * b) / d));\par
   66 \par
   67     return w;\par
   68 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_ad8db0bdd6fef8ff43876c845dc1cfb47_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_ad8db0bdd6fef8ff43876c845dc1cfb47_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ctrunc\:complex.h}
{\xe \v complex.h\:ctrunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ctrunc ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Truncated value of complex number. }}\par
{
Definition at line 84 of file prim.c.}\par
{
References cimag(), cpack(), creal(), and trunc().}\par
{
Referenced by ComplexNumber::Trunc().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    85 \{\par
   86     complex w;\par
   87     w = cpack(trunc(creal(z)), trunc(cimag(z)));\par
   88     return w;\par
   89 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_aa760bac9acf6c215294e10188f3c9eb2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "complex_8h_aa760bac9acf6c215294e10188f3c9eb2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/cacos.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/cacos.c}
{\xe \v lib/cplex/cacos.c}
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cacos.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacos_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cacos} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse cosine of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cacos\:cacos.c}
{\xe \v cacos.c\:cacos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cacos ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse cosine of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/09/15\par
}Inverse cosine expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
arccos z = -i * log(z + i * sqrt(1 - z * z))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_trigonometric_functions#Logarithmic_forms} \par
}{
Definition at line 43 of file cacos.c.}\par
{
References cadd(), clog(), cmul(), cpack(), csqrt(), and csub().}\par
{
Referenced by ComplexNumber::ArcCosine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex a = cpack(1.0, 0.0);\par
   46     complex i = cpack(0.0, 1.0);\par
   47     complex j = cpack(0.0, -1.0);\par
   48     complex p = csub(a, cmul(z, z));\par
   49     complex q = clog(cadd(z, cmul(i, csqrt(p))));\par
   50     complex w = cmul(j, q);\par
   51     return w;\par
   52 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacos_8c_ac182d6022bdabf7f2b6eccb6a0ea497b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacos_8c_ac182d6022bdabf7f2b6eccb6a0ea497b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/cacosh.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/cacosh.c}
{\xe \v lib/cplex/cacosh.c}
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cacosh.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacosh_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cacosh} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosine of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cacosh\:cacosh.c}
{\xe \v cacosh.c\:cacosh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cacosh ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosine of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 15/03/03\par
}Inverse hyperbolic cosine expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
acosh(z) = log(z + sqrt(z*z - 1))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_hyperbolic_function#Logarithmic_representation} \par
}{
Definition at line 43 of file cacosh.c.}\par
{
References cadd(), clog(), cmul(), cpack(), csqrt(), and csub().}\par
{
Referenced by ComplexNumber::HypArcCosine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex one = cpack(1.0, 0.0);\par
   46     complex a = csub(cmul(z, z) , one);\par
   47     complex b = cadd(z, csqrt(a));\par
   48     complex w = clog(b);\par
   49     return w;\par
   50 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacosh_8c_a451ef5c81d4091e547e52a9a03af260d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacosh_8c_a451ef5c81d4091e547e52a9a03af260d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/cacot.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/cacot.c}
{\xe \v lib/cplex/cacot.c}
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cacot.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacot_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cacot} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse cotangent of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cacot\:cacot.c}
{\xe \v cacot.c\:cacot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cacot ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse cotangent of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/10/01\par
}Inverse cotangent expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
arccot z = i/2 * (log(1 - i/z) - log(1 + i/z))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_trigonometric_functions#Logarithmic_forms} \par
}{
Definition at line 43 of file cacot.c.}\par
{
References cadd(), cdiv(), clog(), cmul(), cpack(), and csub().}\par
{
Referenced by ComplexNumber::ArcCotangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex one = cpack(1.0, 0.0);\par
   46     complex two = cpack(2.0, 0.0);\par
   47     complex i = cpack(0.0, 1.0);\par
   48     complex iz = cdiv(i, z);\par
   49     complex p = clog(csub(one, iz));\par
   50     complex q = clog(cadd(one, iz));\par
   51     complex w = cmul(cdiv(i, two), csub(p, q));\par
   52     return w;\par
   53 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacot_8c_a9fe610b52824ffaa0764c77e462c9815_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacot_8c_a9fe610b52824ffaa0764c77e462c9815_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/cacoth.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/cacoth.c}
{\xe \v lib/cplex/cacoth.c}
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cacoth.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacoth_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cacoth} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cotangent of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cacoth\:cacoth.c}
{\xe \v cacoth.c\:cacoth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cacoth ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cotangent of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/09/15\par
}Inverse hyperbolic cotangent expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
acoth(z) = 1/2 * ((log(z + 1) - log(z - 1))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_hyperbolic_function#Logarithmic_representation} \par
}{
Definition at line 43 of file cacoth.c.}\par
{
References cadd(), clog(), cmul(), cpack(), and csub().}\par
{
Referenced by ComplexNumber::HypArcCotangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex half = cpack(0.5, 0.0);\par
   46     complex one = cpack(1.0, 0.0);\par
   47     complex a = clog(cadd(z, one));\par
   48     complex b = clog(csub(z, one));\par
   49     complex c = csub(a, b);\par
   50     complex w = cmul(half, c);\par
   51     return w;\par
   52 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacoth_8c_ab9d5fbd365098aa6a35e8599e13d7adb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacoth_8c_ab9d5fbd365098aa6a35e8599e13d7adb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/cacsc.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/cacsc.c}
{\xe \v lib/cplex/cacsc.c}
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cacsc.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacsc_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cacsc} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse cosecant of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cacsc\:cacsc.c}
{\xe \v cacsc.c\:cacsc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cacsc ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse cosecant of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/10/01\par
}Inverse cosecant expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
arccsc z = -i * log(sqr(1 - 1/(z*z)) + i/z)
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_trigonometric_functions#Logarithmic_forms} \par
}{
Definition at line 43 of file cacsc.c.}\par
{
References cadd(), cdiv(), clog(), cmul(), cpack(), csqrt(), and csub().}\par
{
Referenced by ComplexNumber::ArcCosecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex one = cpack(1.0, 0.0);\par
   46     complex i = cpack(0.0, 1.0);\par
   47     complex j = cpack(0.0, -1.0);\par
   48     complex iz = cdiv(i, z);\par
   49     complex z2 = cmul(z, z);\par
   50     complex p = cdiv(one, z2);\par
   51     complex q = csqrt(csub(one, p));\par
   52     complex w = cmul(j, clog(cadd(q, iz)));\par
   53     return w;\par
   54 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacsc_8c_aa8a49b2418f7bbcf0a8f72a15fbb4984_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacsc_8c_aa8a49b2418f7bbcf0a8f72a15fbb4984_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/cacsch.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/cacsch.c}
{\xe \v lib/cplex/cacsch.c}
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cacsch.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacsch_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cacsch} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosecant of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cacsch\:cacsch.c}
{\xe \v cacsch.c\:cacsch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cacsch ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosecant of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/09/15\par
}Inverse hyperbolic cosecant expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
acsch(z) = log(sqrt(1 + 1 / (z * z)) + 1/z)
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_hyperbolic_function#Logarithmic_representation} \par
}{
Definition at line 43 of file cacsch.c.}\par
{
References cadd(), clog(), cmul(), cpack(), creci(), and csqrt().}\par
{
Referenced by ComplexNumber::HypArcCosecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex one = cpack(1.0, 0.0);\par
   46     complex a = creci(cmul(z, z));\par
   47     complex b = csqrt(cadd(one, a));\par
   48     complex c = cadd(b, creci(z));\par
   49     complex w = clog(c);\par
   50     return w;\par
   51 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacsch_8c_a1a3241a96a0225c9ef3113f5e5c48acf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cacsch_8c_a1a3241a96a0225c9ef3113f5e5c48acf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/casec.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/casec.c}
{\xe \v lib/cplex/casec.c}
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for casec.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "casec_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b casec} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse secant expressed using complex logarithms: }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v casec\:casec.c}
{\xe \v casec.c\:casec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} casec ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse secant expressed using complex logarithms: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/10/01\par
}Inverse secant expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
arcsec z = -i * log(i * sqr(1 - 1/(z*z)) + 1/z)
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_trigonometric_functions#Logarithmic_forms} \par
}{
Definition at line 43 of file casec.c.}\par
{
References cadd(), cdiv(), clog(), cmul(), cpack(), creci(), csqrt(), and csub().}\par
{
Referenced by ComplexNumber::ArcSecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex one = cpack(1.0, 0.0);\par
   46     complex i = cpack(0.0, 1.0);\par
   47     complex j = cpack(0.0, -1.0);\par
   48     complex rz = creci(z);\par
   49     complex z2 = cmul(z, z);\par
   50     complex p = cdiv(one, z2);\par
   51     complex q = csqrt(csub(one, p));\par
   52     complex w = cmul(j, clog(cadd(cmul(i, q), rz)));\par
   53     return w;\par
   54 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "casec_8c_ae509596503bb6ea1142d470882e074a7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "casec_8c_ae509596503bb6ea1142d470882e074a7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/casech.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/casech.c}
{\xe \v lib/cplex/casech.c}
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for casech.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "casech_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b casech} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic secant of complex numbers. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v casech\:casech.c}
{\xe \v casech.c\:casech}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} casech ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic secant of complex numbers. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 15/03/03\par
}Inverse hyperbolic secant expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
asech(z) = log(sqrt(1 / (z * z) - 1) + 1/z)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_hyperbolic_function#Logarithmic_representation} \par
}{
Definition at line 44 of file casech.c.}\par
{
References cadd(), clog(), cmul(), cpack(), creci(), csqrt(), and csub().}\par
{
Referenced by ComplexNumber::HypArcSecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45 \{\par
   46     complex one = cpack(1.0, 0.0);\par
   47     complex a = creci(cmul(z, z));\par
   48     complex b = csqrt(csub(a, one));\par
   49     complex c = cadd(b, creci(z));\par
   50     complex w = clog(c);\par
   51     return w;\par
   52 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "casech_8c_ad47f8259620b339981f876087f195cb4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "casech_8c_ad47f8259620b339981f876087f195cb4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/casin.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/casin.c}
{\xe \v lib/cplex/casin.c}
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for casin.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "casin_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b casin} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse sine of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v casin\:casin.c}
{\xe \v casin.c\:casin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} casin ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse sine of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/10/01\par
}Inverse sine expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
arcsin z = -i * log(iz + sqrt(1 - z*z))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_trigonometric_functions#Logarithmic_forms} \par
}{
Definition at line 43 of file casin.c.}\par
{
References cadd(), clog(), cmul(), cpack(), csqrt(), and csub().}\par
{
Referenced by ComplexNumber::ArcSine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex one = cpack(1.0, 0.0);\par
   46     complex i = cpack(0.0, 1.0);\par
   47     complex j = cpack(0.0, -1.0);\par
   48     complex iz = cmul(i, z);\par
   49     complex z2 = cmul(z, z);\par
   50     complex p = csqrt(csub(one, z2));\par
   51     complex q = clog(cadd(iz, p));\par
   52     complex w = cmul(j, q);\par
   53     return w;\par
   54 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "casin_8c_a411c00ad70bc1b91a5de261b64d0f131_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "casin_8c_a411c00ad70bc1b91a5de261b64d0f131_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/casinh.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/casinh.c}
{\xe \v lib/cplex/casinh.c}
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for casinh.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "casinh_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b casinh} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic sine of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v casinh\:casinh.c}
{\xe \v casinh.c\:casinh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} casinh ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic sine of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/09/15\par
}Inverse hyperbolic sine expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
asinh(z) = log(z + sqrt(z*z + 1))\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid With branch cuts: -i INF to -i and i to i INF\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Domain: -INF to INF
Range:  -INF to INF
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_hyperbolic_function#Logarithmic_representation} \par
}{
Definition at line 48 of file casinh.c.}\par
{
References cadd(), clog(), cmul(), cpack(), and csqrt().}\par
{
Referenced by ComplexNumber::HypArcSine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    49 \{\par
   50     complex one = cpack(1.0, 0.0);\par
   51     complex a = cadd(cmul(z, z), one);\par
   52     complex b = cadd(z, csqrt(a));\par
   53     complex w = clog(b);\par
   54     return w;\par
   55 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "casinh_8c_a333c9aa02a58163693f67e1d47aa9887_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "casinh_8c_a333c9aa02a58163693f67e1d47aa9887_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/catan.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/catan.c}
{\xe \v lib/cplex/catan.c}
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for catan.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "catan_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b catan} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse tangent of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v catan\:catan.c}
{\xe \v catan.c\:catan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} catan ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse tangent of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/10/01\par
}Inverse tangent expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
atan(z) = i/2 * (log(1 - i * z) - log(1 + i * z))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_trigonometric_functions#Logarithmic_forms} \par
}{
Definition at line 43 of file catan.c.}\par
{
References cadd(), cdiv(), clog(), cmul(), cpack(), and csub().}\par
{
Referenced by ComplexNumber::ArcTangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex one = cpack(1.0, 0.0);\par
   46     complex two = cpack(2.0, 0.0);\par
   47     complex i = cpack(0.0, 1.0);\par
   48     complex iz = cmul(i, z);\par
   49     complex p = clog(csub(one, iz));\par
   50     complex q = clog(cadd(one, iz));\par
   51     complex w = cmul(cdiv(i, two), csub(p, q));\par
   52     return w;\par
   53 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "catan_8c_aa4ec5b4617afd43de3b6c7a11e850f04_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "catan_8c_aa4ec5b4617afd43de3b6c7a11e850f04_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/catanh.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/catanh.c}
{\xe \v lib/cplex/catanh.c}
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for catanh.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "catanh_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b catanh} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic tangent of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v catanh\:catanh.c}
{\xe \v catanh.c\:catanh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} catanh ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic tangent of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 14/09/15\par
}Inverse hyperbolic tangent expressed using complex logarithms: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
atanh(z) = 1/2 * ((log(1 + z) - log(1 - z))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Inverse_hyperbolic_function#Logarithmic_representation} \par
}{
Definition at line 43 of file catanh.c.}\par
{
References cadd(), clog(), cmul(), cpack(), and csub().}\par
{
Referenced by ComplexNumber::HypArcTangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    44 \{\par
   45     complex half = cpack(0.5, 0.0);\par
   46     complex one = cpack(1.0, 0.0);\par
   47     complex a = clog(cadd(one, z));\par
   48     complex b = clog(csub(one, z));\par
   49     complex c = csub(a, b);\par
   50     complex w = cmul(half, c);\par
   51     return w;\par
   52 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "catanh_8c_a0808614b4e465dc4b4827382a9f77447_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "catanh_8c_a0808614b4e465dc4b4827382a9f77447_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/ccbrt.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/ccbrt.c}
{\xe \v lib/cplex/ccbrt.c}
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ccbrt.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccbrt_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ccbrt} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cube root of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ccbrt\:ccbrt.c}
{\xe \v ccbrt.c\:ccbrt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ccbrt ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cube root of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
cbrt z = exp(1/3 * log(z))
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Cube_root} \par
}{
Definition at line 40 of file ccbrt.c.}\par
{
References cexp(), clog(), cmul(), and cpack().}\par
{
Referenced by ComplexNumber::CubeRoot().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    41 \{\par
   42     complex onethird = cpack(1.0 / 3.0, 0.0);\par
   43     complex a = cmul(onethird, clog(z));\par
   44     complex w = cexp(a);\par
   45     return w;\par
   46 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccbrt_8c_a9411d07785a32ac077d24d6c8a5c5554_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccbrt_8c_a9411d07785a32ac077d24d6c8a5c5554_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/ccos.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/ccos.c}
{\xe \v lib/cplex/ccos.c}
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ccos.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccos_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ccos} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cosine of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ccos\:ccos.c}
{\xe \v ccos.c\:ccos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ccos ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cosine of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
real =  cos(a) * cosh(b)
imag = -sin(a) * sinh(b)
\par}
 \par
}{
Definition at line 51 of file ccos.c.}\par
{
References cchsh(), cimag(), cos(), cpack(), creal(), and sin().}\par
{
Referenced by ComplexNumber::Cosine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    52 \{\par
   53     complex w;\par
   54     double a, b;\par
   55     double ch, sh;\par
   56 \par
   57     a = creal(z);\par
   58     b = cimag(z);\par
   59     cchsh(b, &ch, &sh);\par
   60     w = cpack((cos(a) * ch), (-sin(a) * sh));\par
   61 \par
   62     return w;\par
   63 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccos_8c_a68da54d02ea0d55bb90dcb06f56d10f5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccos_8c_a68da54d02ea0d55bb90dcb06f56d10f5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/ccosh.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/ccosh.c}
{\xe \v lib/cplex/ccosh.c}
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ccosh.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccosh_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ccosh} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cosine of a complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ccosh\:ccosh.c}
{\xe \v ccosh.c\:ccosh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ccosh ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cosine of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
real = cosh(a) * cos(b)
imag = sinh(a) * sin(b)
\par}
 \par
}{
Definition at line 51 of file ccosh.c.}\par
{
References cchsh(), cimag(), cos(), cpack(), creal(), and sin().}\par
{
Referenced by ComplexNumber::HypCosine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    52 \{\par
   53     complex w;\par
   54     double a, b;\par
   55     double ch, sh;\par
   56 \par
   57     a = creal(z);\par
   58     b = cimag(z);\par
   59     cchsh(a, &ch, &sh);\par
   60     w = cpack(cos(b) * ch, sin(b) * sh);\par
   61 \par
   62     return w;\par
   63 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccosh_8c_aa90df67e0430d042887fa77812458f47_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccosh_8c_aa90df67e0430d042887fa77812458f47_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/ccot.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/ccot.c}
{\xe \v lib/cplex/ccot.c}
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ccot.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccot_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ccot} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cotangent of a complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ccot\:ccot.c}
{\xe \v ccot.c\:ccot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ccot ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cotangent of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculated as in Open Office: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
                sin(2.0 * a)
real  = ------------------------------
         cosh(2.0 * b) - cos(2.0 * a)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                -sinh(2.0 * b)
imag  = ------------------------------
         cosh(2.0 * b) - cos(2.0 * a)
\par}
 {\f2 https://wiki.openoffice.org/wiki/Documentation/How_Tos/Calc:_IMCOT_function} \par
}{
Definition at line 47 of file ccot.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::Cotangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48 \{\par
   49     complex w;\par
   50     double a, b;\par
   51     double d;\par
   52 \par
   53     a = creal(z);\par
   54     b = cimag(z);\par
   55     d = cosh(2.0 * b) - cos(2.0 * a);\par
   56 \par
   57     if (d == 0.0) \{\par
   58         w = cpack(HUGE, HUGE); // TODO: INF, INF\par
   59     \} else \{\par
   60         w = cpack((sin(2.0 * a) / d), (-sinh(2.0 * b) / d));\par
   61     \}\par
   62 \par
   63     return w;\par
   64 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccot_8c_af55c6dec4ec4d7992aea8418480c221c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccot_8c_af55c6dec4ec4d7992aea8418480c221c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/ccoth.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/ccoth.c}
{\xe \v lib/cplex/ccoth.c}
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ccoth.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccoth_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ccoth} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cotangent of a complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ccoth\:ccoth.c}
{\xe \v ccoth.c\:ccoth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ccoth ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cotangent of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
acoth(z) = 0.5 * (log(1 + 1/z) - log(1 - 1/z))
\par}
 or {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
               sinh(2.0 * a)
real  = ---------------------------\'97
         cosh(2.0 * a) - cos(2.0 * b)
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   -sin(2.0 * b)\par
}

imag  = ---------------------------\'97
         cosh(2.0 * a) - cos(2.0 * b)
\par}
 \par
}{
Definition at line 49 of file ccoth.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::HypCotangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{\par
   51     complex w;\par
   52     double a, b;\par
   53     double d;\par
   54 \par
   55     a = creal(z);\par
   56     b = cimag(z);\par
   57     d = cosh(2.0 * a) - cos(2.0 * b);\par
   58     w = cpack(sinh(2.0 * a) / d, -sin(2.0 * b) / d);\par
   59 \par
   60     return w;\par
   61 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccoth_8c_abcc180facc4c06148ed64b7bd028e643_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccoth_8c_abcc180facc4c06148ed64b7bd028e643_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/ccsc.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/ccsc.c}
{\xe \v lib/cplex/ccsc.c}
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ccsc.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccsc_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ccsc} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cosecant of a complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ccsc\:ccsc.c}
{\xe \v ccsc.c\:ccsc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ccsc ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cosecant of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculated as in Open Office: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
            2.0 * sin(a) * cosh(b)
real  = ------------------------------
         cosh(2.0 * b) - cos(2.0 * a)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid            -2.0 * cos(a) * sinh(b)
imag  = ------------------------------
         cosh(2.0 * b) - cos(2.0 * a)
\par}
 {\f2 https://wiki.openoffice.org/wiki/Documentation/How_Tos/Calc:_IMCSC_function} \par
}{
Definition at line 47 of file ccsc.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::Cosecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48 \{\par
   49     complex w;\par
   50     double a, b;\par
   51     double d;\par
   52 \par
   53     a = creal(z);\par
   54     b = cimag(z);\par
   55     d = cosh(2.0 * b) - cos(2.0 * a);\par
   56 \par
   57     if (d == 0.0) \{\par
   58         w = cpack(HUGE, HUGE); // TODO: INF, INF\par
   59     \} else \{\par
   60         w = cpack((2.0 * sin(a) * cosh(b) / d), (-2.0 * cos(a) * sinh(b) / d));\par
   61     \}\par
   62 \par
   63     return w;\par
   64 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccsc_8c_a1a06d41ae4e946bed755fe51ffb6ed24_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccsc_8c_a1a06d41ae4e946bed755fe51ffb6ed24_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/ccsch.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/ccsch.c}
{\xe \v lib/cplex/ccsch.c}
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ccsch.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccsch_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ccsch} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic secant of a complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ccsch\:ccsch.c}
{\xe \v ccsch.c\:ccsch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ccsch ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic secant of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculated as in Open Office: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
            2.0 * sinh(a) * cos(b)
real  = ------------------------------
         cosh(2.0 * a) - cos(2.0 * b)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         -2.0 * cosh(2.0 * a) * sin(b)
imag  = ------------------------------
         cosh(2.0 * a) - cos(2.0 * b)
\par}
 {\f2 https://wiki.openoffice.org/wiki/Documentation/How_Tos/Calc:_IMCSCH_function} \par
}{
Definition at line 47 of file ccsch.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::HypCosecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48 \{\par
   49     complex w;\par
   50     double a, b;\par
   51     double d;\par
   52 \par
   53     a = creal(z);\par
   54     b = cimag(z);\par
   55     d = cosh(2.0 * a) - cos(2.0 * b);\par
   56     w = cpack((2.0 * sinh(a) * cos(b) / d), (-2.0 * cosh(a) * sin(b) / d));\par
   57 \par
   58     return w;\par
   59 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccsch_8c_a57a12e1badffcb670631844ad876ceba_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ccsch_8c_a57a12e1badffcb670631844ad876ceba_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/cexp.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/cexp.c}
{\xe \v lib/cplex/cexp.c}
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cexp.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cexp_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cexp} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns e to the power of a complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cexp\:cexp.c}
{\xe \v cexp.c\:cexp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cexp ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns e to the power of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20 \par
}}{
Definition at line 46 of file cexp.c.}\par
{
References cimag(), cos(), cpack(), creal(), exp(), and sin().}\par
{
Referenced by ccbrt().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    47 \{\par
   48     complex w;\par
   49     double r, x, y;\par
   50     x = creal(z);\par
   51     y = cimag(z);\par
   52     r = exp(x);\par
   53     w = cpack(r * cos(y), r * sin(y));\par
   54     return w;\par
   55 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cexp_8c_abf3bfbb727779504c9ddb7023d14fed0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cexp_8c_abf3bfbb727779504c9ddb7023d14fed0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/clog.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/clog.c}
{\xe \v lib/cplex/clog.c}
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for clog.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clog_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b clog} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Natural logarithm of a complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v clog\:clog.c}
{\xe \v clog.c\:clog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} clog ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Natural logarithm of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20 \par
}}{
Definition at line 46 of file clog.c.}\par
{
References atan2(), cabs(), cimag(), cpack(), and creal().}\par
{
Referenced by cacos(), cacosh(), cacot(), cacoth(), cacsc(), cacsch(), casec(), casech(), casin(), casinh(), catan(), catanh(), ccbrt(), clog10(), clogb(), and ComplexNumber::Log().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    47 \{\par
   48     complex w;\par
   49     double p, q;\par
   50     p = log(cabs(z));\par
   51     q = atan2(cimag(z), creal(z));\par
   52     w = cpack(p, q);\par
   53     return w;\par
   54 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clog_8c_a888b8eb5ccc46411e68f6d7b99035888_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clog_8c_a888b8eb5ccc46411e68f6d7b99035888_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/clog10.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/clog10.c}
{\xe \v lib/cplex/clog10.c}
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for clog10.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clog10_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b clog10} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base 10 logarithmic value of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v clog10\:clog10.c}
{\xe \v clog10.c\:clog10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} clog10 ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base 10 logarithmic value of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
log z = log(z) / log(10)
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Complex_logarithm} \par
}{
Definition at line 39 of file clog10.c.}\par
{
References cdiv(), clog(), and cpack().}\par
{
Referenced by ComplexNumber::Log10().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40 \{\par
   41     complex teen = cpack(10.0, 0.0);\par
   42     complex w = cdiv(clog(z), clog(teen));\par
   43     return w;\par
   44 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clog10_8c_a5e20d88f7f7f17d510ddf62f269c8343_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clog10_8c_a5e20d88f7f7f17d510ddf62f269c8343_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/clogb.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/clogb.c}
{\xe \v lib/cplex/clogb.c}
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for clogb.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clogb_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b clogb} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base 2 logarithmic value of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v clogb\:clogb.c}
{\xe \v clogb.c\:clogb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} clogb ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base 2 logarithmic value of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
lb z = log(z) / log(2)
\par}
 More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Complex_logarithm} \par
}{
Definition at line 39 of file clogb.c.}\par
{
References cdiv(), clog(), and cpack().}\par
{
Referenced by ComplexNumber::Log2().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40 \{\par
   41     complex two = cpack(2.0, 0.0);\par
   42     complex w = cdiv(clog(z), clog(two));\par
   43     return w;\par
   44 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clogb_8c_a3951e04bc6370fb9fd7b0ff2c2558d7b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clogb_8c_a3951e04bc6370fb9fd7b0ff2c2558d7b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/cpow.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/cpow.c}
{\xe \v lib/cplex/cpow.c}
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cpow.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cpow_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cpow} ({\b complex} a, {\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complex number raised to a power. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cpow\:cpow.c}
{\xe \v cpow.c\:cpow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cpow ({\b complex}  {\i a}, {\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complex number raised to a power. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20 \par
}}{
Definition at line 46 of file cpow.c.}\par
{
References atan2(), cabs(), cimag(), cos(), cpack(), creal(), exp(), pow(), and sin().}\par
{
Referenced by ComplexNumber::Raise().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    47 \{\par
   48     complex w;\par
   49     double x, y, r, theta, absa, arga;\par
   50 \par
   51     x = creal(z);\par
   52     y = cimag(z);\par
   53     absa = cabs(a);\par
   54     if (absa == 0.0) \{\par
   55         return cpack(0.0, + 0.0);\par
   56     \}\par
   57     arga = atan2(cimag(a), creal(a));\par
   58 \par
   59     r = pow(absa, x);\par
   60     theta = x * arga;\par
   61     if (y != 0.0) \{\par
   62         r = r * exp(-y * arga);\par
   63         theta = theta + y * log(absa);\par
   64     \}\par
   65 \par
   66     w = cpack(r * cos(theta), r * sin(theta));\par
   67     return w;\par
   68 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cpow_8c_a2c8af642928f3ec79a10a52983981ffa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cpow_8c_a2c8af642928f3ec79a10a52983981ffa_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/csec.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/csec.c}
{\xe \v lib/cplex/csec.c}
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for csec.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csec_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b csec} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secant of a complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v csec\:csec.c}
{\xe \v csec.c\:csec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} csec ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secant of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculated as in Open Office:\par
 {\f2 https://wiki.openoffice.org/wiki/Documentation/How_Tos/Calc:_IMSEC_function} {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
            2.0 * cos(a) * cosh(b)
real  = ---------------------------\'97
         cosh(2.0 * b) + cos(2.0 * a)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             2.0 * sin(a) * sinh(b)
imag  = ---------------------------\'97
         cosh(2.0 * b) + cos(2.0 * a)
\par}
 \par
}{
Definition at line 47 of file csec.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::Secant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48 \{\par
   49     complex w;\par
   50     double a, b;\par
   51     double d;\par
   52 \par
   53     a = creal(z);\par
   54     b = cimag(z);\par
   55     d = cosh(2.0 * b) + cos(2.0 * a);\par
   56 \par
   57     if (d == 0.0) \{\par
   58         w = cpack(HUGE, HUGE); // TODO: INF, INF\par
   59     \} else \{\par
   60         w = cpack((2.0 * cos(a) * cosh(b) / d), (2.0 * sin(a) * sinh(b) / d));\par
   61     \}\par
   62 \par
   63     return w;\par
   64 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csec_8c_a1bbe43785d2b3cc364e50153f203c50d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csec_8c_a1bbe43785d2b3cc364e50153f203c50d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/csech.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/csech.c}
{\xe \v lib/cplex/csech.c}
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for csech.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csech_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b csech} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic secant of a complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v csech\:csech.c}
{\xe \v csech.c\:csech}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} csech ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic secant of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculated as in Open Office:\par
 {\f2 https://wiki.openoffice.org/wiki/Documentation/How_Tos/Calc:_IMSECH_function} {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
            2.0 * cosh(a) * cos(b)
real  = ---------------------------\'97
         cosh(2.0 * a) + cos(2.0 * b)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         -2.0 * sinh(2.0 * a) * sin(b)
imag  = ---------------------------\'97
         cosh(2.0 * a) + cos(2.0 * b)
\par}
 \par
}{
Definition at line 47 of file csech.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::HypSecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48 \{\par
   49     complex w;\par
   50     double a, b;\par
   51     double d;\par
   52 \par
   53     a = creal(z);\par
   54     b = cimag(z);\par
   55     d = cosh(2.0 * a) + cos(2.0 * b);\par
   56     w = cpack((2.0 * cosh(a) * cos(b) / d), (-2.0 * sinh(a) * sin(b) / d));\par
   57 \par
   58     return w;\par
   59 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csech_8c_aa639638fbf6b2c819fd8fb3c093ca012_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csech_8c_aa639638fbf6b2c819fd8fb3c093ca012_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/csgn.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/csgn.c}
{\xe \v lib/cplex/csgn.c}
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for csgn.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csgn_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b csgn} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complex signum. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v csgn\:csgn.c}
{\xe \v csgn.c\:csgn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double csgn ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complex signum. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
More info is available at Wikipedia: \par
 {\f2 http://en.wikipedia.org/wiki/Sign_function#Complex_signum} \par
}{
Definition at line 36 of file csgn.c.}\par
{
References cimag(), and creal().}\par
{
Referenced by ComplexNumber::Signum().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    37 \{\par
   38     double a = creal(z);\par
   39 \par
   40     if (a > 0.0) \{\par
   41         return 1.0;\par
   42     \} else if (a < 0.0) \{\par
   43         return -1.0;\par
   44     \} else \{\par
   45         double b = cimag(z);\par
   46         return b > 0.0 ? 1.0 : b < 0.0 ? -1.0 : 0.0;\par
   47     \}\par
   48 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csgn_8c_aaab921fc8e26fcfee85a89e662e41a74_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csgn_8c_aaab921fc8e26fcfee85a89e662e41a74_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/csin.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/csin.c}
{\xe \v lib/cplex/csin.c}
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for csin.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csin_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b csin} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sine of a complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v csin\:csin.c}
{\xe \v csin.c\:csin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} csin ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sine of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20\par
}Calculated according to description at wikipedia:\par
 {\f2 http://en.wikipedia.org/wiki/Sine#Sine_with_a_complex_argument} {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
real = sin(a) * cosh(b)
imag = cos(a) * sinh(b)
\par}
 \par
}{
Definition at line 53 of file csin.c.}\par
{
References cchsh(), cimag(), cos(), cpack(), creal(), and sin().}\par
{
Referenced by ComplexNumber::Sine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    54 \{\par
   55     complex w;\par
   56     double a, b;\par
   57     double ch, sh;\par
   58 \par
   59     a = creal(z);\par
   60     b = cimag(z);\par
   61     cchsh(b, &ch, &sh);\par
   62     w = cpack((sin(a) * ch), (cos(a) * sh));\par
   63 \par
   64     return w;\par
   65 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csin_8c_ae17495bc828b9bea6f64da3c21fe0fc7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csin_8c_ae17495bc828b9bea6f64da3c21fe0fc7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/csinh.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/csinh.c}
{\xe \v lib/cplex/csinh.c}
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for csinh.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csinh_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b csinh} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic sine of a complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v csinh\:csinh.c}
{\xe \v csinh.c\:csinh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} csinh ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic sine of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20\par
}Calculated as in Open Office:\par
 {\f2 https://wiki.openoffice.org/wiki/Documentation/How_Tos/Calc:_IMSINH_function} {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
real = sinh(a) * cos(b)
imag = cosh(a) * sin(b)
\par}
 \par
}{
Definition at line 53 of file csinh.c.}\par
{
References cchsh(), cimag(), cos(), cpack(), creal(), and sin().}\par
{
Referenced by ComplexNumber::HypSine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    54 \{\par
   55     complex w;\par
   56     double a, b;\par
   57     double ch, sh;\par
   58 \par
   59     a = creal(z);\par
   60     b = cimag(z);\par
   61     cchsh(a, &ch, &sh);\par
   62     w = cpack(cos(b) * sh, sin(b) * ch);\par
   63 \par
   64     return w;\par
   65 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csinh_8c_a5a9923cad15c34351bb15bd46d5d6331_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csinh_8c_a5a9923cad15c34351bb15bd46d5d6331_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/csqrt.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/csqrt.c}
{\xe \v lib/cplex/csqrt.c}
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for csqrt.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csqrt_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b csqrt} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Square root of complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v csqrt\:csqrt.c}
{\xe \v csqrt.c\:csqrt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} csqrt ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Square root of complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20 \par
}}{
Definition at line 46 of file csqrt.c.}\par
{
References cabs(), cimag(), cpack(), creal(), and sqrt().}\par
{
Referenced by cacos(), cacosh(), cacsc(), cacsch(), casec(), casech(), casin(), casinh(), and ComplexNumber::SquareRoot().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    47 \{\par
   48     complex w;\par
   49     double x, y, r, t, scale;\par
   50 \par
   51     x = creal (z);\par
   52     y = cimag (z);\par
   53 \par
   54     if (y == 0.0) \{\par
   55         if (x == 0.0) \{\par
   56             w = cpack(0.0, y);\par
   57         \} else \{\par
   58             r = fabs(x);\par
   59             r = sqrt(r);\par
   60             if (x < 0.0) \{\par
   61                 w = cpack(0.0, r);\par
   62             \} else \{\par
   63                 w = cpack(r, y);\par
   64             \}\par
   65         \}\par
   66         return w;\par
   67     \}\par
   68     if (x == 0.0) \{\par
   69         r = fabs(y);\par
   70         r = sqrt(0.5 * r);\par
   71         if (y > 0)\par
   72             w =  cpack(r, r);\par
   73         else\par
   74             w = cpack(r, -r);\par
   75         return w;\par
   76     \}\par
   77     /* Rescale to avoid internal overflow or underflow.  */\par
   78     if ((fabs(x) > 4.0) || (fabs(y) > 4.0)) \{\par
   79         x *= 0.25;\par
   80         y *= 0.25;\par
   81         scale = 2.0;\par
   82     \} else \{\par
   83 #if 1\par
   84         x *= 1.8014398509481984e16;  /* 2^54 */\par
   85         y *= 1.8014398509481984e16;\par
   86         scale = 7.450580596923828125e-9; /* 2^-27 */\par
   87 #else\par
   88         x *= 4.0;\par
   89         y *= 4.0;\par
   90         scale = 0.5;\par
   91 #endif\par
   92     \}\par
   93     w = cpack(x, y);\par
   94     r = cabs(w);\par
   95     if (x > 0) \{\par
   96         t = sqrt(0.5 * r + 0.5 * x);\par
   97         r = scale * fabs((0.5 * y) / t );\par
   98         t *= scale;\par
   99     \} else \{\par
  100         r = sqrt(0.5 * r - 0.5 * x);\par
  101         t = scale * fabs((0.5 * y) / r);\par
  102         r *= scale;\par
  103     \}\par
  104     if (y < 0)\par
  105         w = cpack(t, -r);\par
  106     else\par
  107         w = cpack(t, r);\par
  108     return w;\par
  109 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csqrt_8c_afe5b814a44414f20d0f98fe974737edd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "csqrt_8c_afe5b814a44414f20d0f98fe974737edd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/ctan.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/ctan.c}
{\xe \v lib/cplex/ctan.c}
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ctan.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ctan_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ctan} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tangent of a complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ctan\:ctan.c}
{\xe \v ctan.c\:ctan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ctan ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tangent of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20\par
}Calculated as in Open Office:\par
 {\f2 https://wiki.openoffice.org/wiki/Documentation/How_Tos/Calc:_IMTAN_function} {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
               sin(2.0 * a)
real  = ---------------------------\'97
         cos(2.0 * a) + cosh(2.0 * b)
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   sinh(2.0 * b)\par
}

imag  = ---------------------------\'97
         cos(2.0 * a) + cosh(2.0 * b)
\par}
 \par
}{
Definition at line 58 of file ctan.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::Tangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    59 \{\par
   60     complex w;\par
   61     double a, b;\par
   62     double d;\par
   63 \par
   64     a = creal(z);\par
   65     b = cimag(z);\par
   66     d = cos(2.0 * a) + cosh(2.0 * b);\par
   67 \par
   68     if (d == 0.0) \{\par
   69         w = cpack(HUGE, HUGE); // TODO: INF, INF\par
   70     \} else \{\par
   71         w = cpack((sin(2.0 * a) / d), (sinh(2.0 * b) / d));\par
   72     \}\par
   73 \par
   74     return w;\par
   75 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ctan_8c_a2bd0de3a2299ec26164641bc8f6e117f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ctan_8c_a2bd0de3a2299ec26164641bc8f6e117f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/ctanh.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/ctanh.c}
{\xe \v lib/cplex/ctanh.c}
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ctanh.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ctanh_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ctanh} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic tangent of a complex number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ctanh\:ctanh.c}
{\xe \v ctanh.c\:ctanh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ctanh ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic tangent of a complex number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.1 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 2007/08/20\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
a+bi
               sinh(2.0 * a)
real  = ---------------------------\'97
         cosh(2.0 * a) + cos(2.0 * b)
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   sin(2.0 * b)\par
}

imag  = ---------------------------\'97
         cosh(2.0 * a) + cos(2.0 * b)
\par}
 \par
}{
Definition at line 56 of file ctanh.c.}\par
{
References cimag(), cos(), cosh(), cpack(), creal(), sin(), and sinh().}\par
{
Referenced by ComplexNumber::HypTangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    57 \{\par
   58     complex w;\par
   59     double a, b;\par
   60     double d;\par
   61 \par
   62     a = creal(z);\par
   63     b = cimag(z);\par
   64     d = cosh(2.0 * a) + cos(2.0 * b);\par
   65     w = cpack((sinh(2.0 * a) / d), (sin(2.0 * b) / d));\par
   66 \par
   67     return w;\par
   68 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ctanh_8c_ad8db0bdd6fef8ff43876c845dc1cfb47_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ctanh_8c_ad8db0bdd6fef8ff43876c845dc1cfb47_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/prim.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/prim.c}
{\xe \v lib/cplex/prim.c}
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "math.h"}\par
{\f2 #include "prim.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for prim.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REAL_PART}(z)\~ ((z).parts[0])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IMAG_PART}(z)\~ ((z).parts[1])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b creal} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Real part of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cimag} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imaginary part of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cabs} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Absolute value of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b conj} ({\b complex} z)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cpack} (double x, double y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pack two real numbers into a complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b ctrunc} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Truncated value of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cfloor} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Floor value of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cceil} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ceiling value of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cround} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Division of two complex numbers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cadd} ({\b complex} y, {\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Addition of two complex numbers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b csub} ({\b complex} y, {\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subtraction of two complex numbers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cmul} ({\b complex} y, {\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiplication of two complex numbers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b cdiv} ({\b complex} y, {\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Division of two complex numbers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b complex} {\b creci} ({\b complex} z)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reciprocal value of complex number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cchsh} (double x, double *c, double *s)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate cosh and sinh. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cchc} (double x, double *ch, double *c)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate cosh and cos. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v IMAG_PART\:prim.c}
{\xe \v prim.c\:IMAG_PART}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IMAG_PART( z)\~ ((z).parts[1])}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file prim.c.}\par
}
{\xe \v REAL_PART\:prim.c}
{\xe \v prim.c\:REAL_PART}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REAL_PART( z)\~ ((z).parts[0])}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file prim.c.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cabs\:prim.c}
{\xe \v prim.c\:cabs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double cabs ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Absolute value of complex number. }}\par
{
Definition at line 56 of file prim.c.}\par
{
References cimag(), creal(), and hypot().}\par
{
Referenced by ComplexNumber::Absolute(), clog(), cpow(), and csqrt().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    57 \{\par
   58     return hypot(creal(z), cimag(z));\par
   59 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_af6e02ba9d2566b52e3b0faf2d4ed973a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_af6e02ba9d2566b52e3b0faf2d4ed973a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cadd\:prim.c}
{\xe \v prim.c\:cadd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cadd ({\b complex}  {\i y}, {\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Addition of two complex numbers. }}\par
{
Definition at line 128 of file prim.c.}\par
{
References cimag(), cpack(), and creal().}\par
{
Referenced by ComplexNumber::Add(), cacos(), cacosh(), cacot(), cacoth(), cacsc(), cacsch(), casec(), casech(), casin(), casinh(), catan(), and catanh().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   129 \{\par
  130     complex w;\par
  131     w = cpack(creal(y) + creal(z), cimag(y) + cimag(z));\par
  132     return w;\par
  133 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_aa334a54c40e3eeb301f2a510a7675070_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_aa334a54c40e3eeb301f2a510a7675070_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cceil\:prim.c}
{\xe \v prim.c\:cceil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cceil ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ceiling value of complex number. }}\par
{
Definition at line 106 of file prim.c.}\par
{
References cimag(), cpack(), and creal().}\par
{
Referenced by ComplexNumber::Ceiling().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   107 \{\par
  108     complex w;\par
  109     w = cpack(ceil(creal(z)), ceil(cimag(z)));\par
  110     return w;\par
  111 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a48443015efbd58ce5da6d64d9858f168_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a48443015efbd58ce5da6d64d9858f168_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cchc\:prim.c}
{\xe \v prim.c\:cchc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cchc (double  {\i x}, double *  {\i ch}, double *  {\i c})}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate cosh and cos. }}\par
{
Definition at line 230 of file prim.c.}\par
{
References cos(), and cosh().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   231 \{\par
  232     *ch = cosh(2.0 * x);\par
  233     *c = cos(2.0 * x);\par
  234 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a995788d5249547ee333b353ddf959f8b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cchsh\:prim.c}
{\xe \v prim.c\:cchsh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cchsh (double  {\i x}, double *  {\i c}, double *  {\i s})}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate cosh and sinh. }}\par
{
Definition at line 210 of file prim.c.}\par
{
References cosh(), exp(), and sinh().}\par
{
Referenced by ccos(), ccosh(), csin(), and csinh().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   211 \{\par
  212     double e, ei;\par
  213 \par
  214     if (fabs(x) <= 0.5) \{\par
  215         *c = cosh(x);\par
  216         *s = sinh(x);\par
  217     \} else \{\par
  218         e = exp(x);\par
  219         ei = 0.5 / e;\par
  220         e = 0.5 * e;\par
  221         *s = e - ei;\par
  222         *c = e + ei;\par
  223     \}\par
  224 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_aee34c227a34560e41c3b665a00f1a4f9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_aee34c227a34560e41c3b665a00f1a4f9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cdiv\:prim.c}
{\xe \v prim.c\:cdiv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cdiv ({\b complex}  {\i y}, {\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Division of two complex numbers. }}\par
{
Definition at line 170 of file prim.c.}\par
{
References cimag(), cpack(), and creal().}\par
{
Referenced by cacot(), cacsc(), casec(), catan(), clog10(), clogb(), and ComplexNumber::Div().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   171 \{\par
  172     complex w;\par
  173     double a, b, c, d;\par
  174     double q, v, x;\par
  175 \par
  176     a = creal(y);\par
  177     b = cimag(y);\par
  178     c = creal(z);\par
  179     d = cimag(z);\par
  180 \par
  181     q = c * c + d * d;\par
  182     v = a * c + b * d;\par
  183     x = b * c - a * d;\par
  184 \par
  185     w = cpack(v / q, x / q);\par
  186     return w;\par
  187 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_afeb504d8fe89e8fc7dea6e6592af70f6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_afeb504d8fe89e8fc7dea6e6592af70f6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cfloor\:prim.c}
{\xe \v prim.c\:cfloor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cfloor ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Floor value of complex number. }}\par
{
Definition at line 95 of file prim.c.}\par
{
References cimag(), cpack(), and creal().}\par
{
Referenced by ComplexNumber::Floor().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    96 \{\par
   97     complex w;\par
   98     w = cpack(floor(creal(z)), floor(cimag(z)));\par
   99     return w;\par
  100 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a12886361ac7d752a46ec5cf3bdd0687e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a12886361ac7d752a46ec5cf3bdd0687e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cimag\:prim.c}
{\xe \v prim.c\:cimag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double cimag ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imaginary part of complex number. }}\par
{
Definition at line 47 of file prim.c.}\par
{
Referenced by cabs(), cadd(), cceil(), ccos(), ccosh(), ccot(), ccoth(), ccsc(), ccsch(), cdiv(), cexp(), cfloor(), clog(), cmul(), cpow(), creci(), cround(), csec(), csech(), csgn(), csin(), csinh(), csqrt(), csub(), ctan(), ctanh(), ctrunc(), ComplexNumber::GetDefaultPrecedence(), ComplexNumber::GetImagValue(), ComplexNumber::GetPrecedence(), PositionalNumeralSystem::GetText(), DecimalSystem::GetText(), and ComplexNumber::Unary().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    48 \{\par
   49     return (IMAG_PART(z));\par
   50 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_aa1fe0b9371befabef6c41ba73470774a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cmul\:prim.c}
{\xe \v prim.c\:cmul}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cmul ({\b complex}  {\i y}, {\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiplication of two complex numbers. }}\par
{
Definition at line 150 of file prim.c.}\par
{
References cimag(), cpack(), and creal().}\par
{
Referenced by cacos(), cacosh(), cacot(), cacoth(), cacsc(), cacsch(), casec(), casech(), casin(), casinh(), catan(), catanh(), ccbrt(), and ComplexNumber::Mul().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   151 \{\par
  152     complex w;\par
  153     double a, b, c, d;\par
  154 \par
  155     // (a+bi)(c+di)\par
  156     a = creal(y);\par
  157     b = cimag(y);\par
  158     c = creal(z);\par
  159     d = cimag(z);\par
  160 \par
  161     // (ac -bd) + (ad + bc)i\par
  162     w = cpack(a * c - b * d, a * d + b * c);\par
  163     return w;\par
  164 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a71e6e973f5b98b4c9140c0d374d9223d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a71e6e973f5b98b4c9140c0d374d9223d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v conj\:prim.c}
{\xe \v prim.c\:conj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} conj ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file prim.c.}\par
{
References cpack().}\par
{
Referenced by creci().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    62 \{\par
   63     IMAG_PART(z) = -IMAG_PART(z);\par
   64     return cpack(REAL_PART(z), IMAG_PART(z));\par
   65 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a8d08797ad03191874e9943144da189be_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a8d08797ad03191874e9943144da189be_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cpack\:prim.c}
{\xe \v prim.c\:cpack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cpack (double  {\i x}, double  {\i y})}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pack two real numbers into a complex number. }}\par
{
Definition at line 71 of file prim.c.}\par
{
Referenced by ComplexNumber::Add(), cacos(), cacosh(), cacot(), cacoth(), cacsc(), cacsch(), cadd(), casec(), casech(), casin(), casinh(), catan(), catanh(), ccbrt(), cceil(), ccos(), ccosh(), ccot(), ccoth(), ccsc(), ccsch(), cdiv(), cexp(), cfloor(), clog(), clog10(), clogb(), cmul(), ComplexNumber::ComplexNumber(), conj(), cpow(), creci(), cround(), csec(), csech(), csin(), csinh(), csqrt(), csub(), ctan(), ctanh(), ctrunc(), ComplexNumber::Div(), ComplexNumber::Mul(), ComplexNumber::Raise(), ComplexNumber::Sub(), and ComplexNumber::Unary().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    72 \{\par
   73     complex z;\par
   74 \par
   75     REAL_PART(z) = x;\par
   76     IMAG_PART(z) = y;\par
   77     return (z);\par
   78 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a980e6e049f7902b05fc9eb5614b07a5c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v creal\:prim.c}
{\xe \v prim.c\:creal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double creal ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Real part of complex number. }}\par
{
Definition at line 38 of file prim.c.}\par
{
Referenced by cabs(), cadd(), cceil(), ccos(), ccosh(), ccot(), ccoth(), ccsc(), ccsch(), cdiv(), cexp(), cfloor(), clog(), cmul(), cpow(), creci(), cround(), csec(), csech(), csgn(), csin(), csinh(), csqrt(), csub(), ctan(), ctanh(), ctrunc(), ComplexNumber::GetDefaultPrecedence(), ComplexNumber::GetIntegerValue(), ComplexNumber::GetPrecedence(), ComplexNumber::GetRealValue(), PositionalNumeralSystem::GetText(), DecimalSystem::GetText(), ComplexNumber::PureComplexValue(), and ComplexNumber::Unary().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    39 \{\par
   40     return (REAL_PART(z));\par
   41 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a4a236b24c0197821e3489a35a72079ab_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v creci\:prim.c}
{\xe \v prim.c\:creci}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} creci ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reciprocal value of complex number. }}\par
{
Definition at line 193 of file prim.c.}\par
{
References cimag(), conj(), cpack(), and creal().}\par
{
Referenced by cacsch(), casec(), casech(), and ComplexNumber::Reciprocal().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   194 \{\par
  195     complex w;\par
  196     double q, a, b;\par
  197 \par
  198     a = creal(z);\par
  199     b = cimag(conj(z));\par
  200     q = a * a + b * b;\par
  201     w = cpack(a / q, b / q);\par
  202 \par
  203     return w;\par
  204 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a78cdeb0bf6f229c2be3065fc697dac68_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a78cdeb0bf6f229c2be3065fc697dac68_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cround\:prim.c}
{\xe \v prim.c\:cround}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} cround ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Division of two complex numbers. }}\par
{
Definition at line 117 of file prim.c.}\par
{
References cimag(), cpack(), creal(), and round().}\par
{
Referenced by ComplexNumber::Round().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   118 \{\par
  119     complex w;\par
  120     w = cpack(round(creal(z)), round(cimag(z)));\par
  121     return w;\par
  122 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a83b50ec7fc882d884c8b740026ab3ef5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a83b50ec7fc882d884c8b740026ab3ef5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v csub\:prim.c}
{\xe \v prim.c\:csub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} csub ({\b complex}  {\i y}, {\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subtraction of two complex numbers. }}\par
{
Definition at line 139 of file prim.c.}\par
{
References cimag(), cpack(), and creal().}\par
{
Referenced by cacos(), cacosh(), cacot(), cacoth(), cacsc(), casec(), casech(), casin(), catan(), catanh(), and ComplexNumber::Sub().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   140 \{\par
  141     complex w;\par
  142     w = cpack(creal(y) - creal(z), cimag(y) - cimag(z));\par
  143     return w;\par
  144 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a9bebe3fb8e9e03dbe04a2ecedbe4a114_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_a9bebe3fb8e9e03dbe04a2ecedbe4a114_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ctrunc\:prim.c}
{\xe \v prim.c\:ctrunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b complex} ctrunc ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Truncated value of complex number. }}\par
{
Definition at line 84 of file prim.c.}\par
{
References cimag(), cpack(), creal(), and trunc().}\par
{
Referenced by ComplexNumber::Trunc().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    85 \{\par
   86     complex w;\par
   87     w = cpack(trunc(creal(z)), trunc(cimag(z)));\par
   88     return w;\par
   89 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_aa760bac9acf6c215294e10188f3c9eb2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prim_8c_aa760bac9acf6c215294e10188f3c9eb2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/cplex/prim.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/cplex/prim.h}
{\xe \v lib/cplex/prim.h}
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "math.h"}\par
{\f2 #include "complex.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for prim.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cplex_2prim_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cplex_2prim_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HUGE}\~ 1.7976931348623157e+308\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cchsh} (double x, double *c, double *s)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate cosh and sinh. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b redupi} (double x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ctans} ({\b complex} z)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v HUGE\:cplex/prim.h}
{\xe \v cplex/prim.h\:HUGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HUGE\~ 1.7976931348623157e+308}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file prim.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cchsh\:cplex/prim.h}
{\xe \v cplex/prim.h\:cchsh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cchsh (double  {\i x}, double *  {\i c}, double *  {\i s})}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate cosh and sinh. }}\par
{
Definition at line 210 of file prim.c.}\par
{
References cosh(), exp(), and sinh().}\par
{
Referenced by ccos(), ccosh(), csin(), and csinh().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   211 \{\par
  212     double e, ei;\par
  213 \par
  214     if (fabs(x) <= 0.5) \{\par
  215         *c = cosh(x);\par
  216         *s = sinh(x);\par
  217     \} else \{\par
  218         e = exp(x);\par
  219         ei = 0.5 / e;\par
  220         e = 0.5 * e;\par
  221         *s = e - ei;\par
  222         *c = e + ei;\par
  223     \}\par
  224 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cplex_2prim_8h_aee34c227a34560e41c3b665a00f1a4f9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cplex_2prim_8h_aee34c227a34560e41c3b665a00f1a4f9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ctans\:cplex/prim.h}
{\xe \v cplex/prim.h\:ctans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ctans ({\b complex}  {\i z})}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v redupi\:cplex/prim.h}
{\xe \v cplex/prim.h\:redupi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double redupi (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/prim.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/prim.h}
{\xe \v lib/real/prim.h}
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "real_2prim_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b ieee_float_shape_type}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A union which permits us to convert between a float and a 32 bit int. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HUGE}\~ 1.7976931348623157e+308\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXTRACT_WORDS}(ix0,  ix1,  d)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get two 32 bit ints from a double. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GET_HIGH_WORD}(i,  d)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the more significant 32 bit int from a double. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GET_LOW_WORD}(i,  d)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the less significant 32 bit int from a double. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INSERT_WORDS}(d,  ix0,  ix1)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a double from two 32 bit ints. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SET_HIGH_WORD}(d,  v)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the more significant 32 bits of a double from an int. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SET_LOW_WORD}(d,  v)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the less significant 32 bits of a double from an int. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GET_FLOAT_WORD}(i,  d)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a 32 bit int from a float. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SET_FLOAT_WORD}(d,  i)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a float from a 32 bit int. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned int {\b uword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
32 bit unsigned integer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef signed int {\b sword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
32 bit signed integer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b __kernel_cos} (double x, double y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel cos function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b __kernel_sin} (double x, double y, int iy)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel sin function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b __kernel_tan} (double x, double y, int iy)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel tan function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b __kernel_rem_pio2} (double *x, double *y, int e0, int nx, int prec, const int *ipio2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel reduction function. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v EXTRACT_WORDS\:real/prim.h}
{\xe \v real/prim.h\:EXTRACT_WORDS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXTRACT_WORDS( ix0,  ix1,  d)}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid do \{                             \\\par
    ieee_double_shape_type ew_u;   \\\par
    ew_u.value = (d);              \\\par
    (ix0) = ew_u.parts.msw;        \\\par
    (ix1) = ew_u.parts.lsw;        \\\par
  \} while (0)\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get two 32 bit ints from a double. }}\par
{
Definition at line 153 of file prim.h.}\par
}
{\xe \v GET_FLOAT_WORD\:real/prim.h}
{\xe \v real/prim.h\:GET_FLOAT_WORD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GET_FLOAT_WORD( i,  d)}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid do \{                               \\\par
  ieee_float_shape_type gf_u;      \\\par
  gf_u.value = (d);                \\\par
  (i) = gf_u.word;                 \\\par
\} while (0)\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a 32 bit int from a float. }}\par
{
Definition at line 237 of file prim.h.}\par
}
{\xe \v GET_HIGH_WORD\:real/prim.h}
{\xe \v real/prim.h\:GET_HIGH_WORD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GET_HIGH_WORD( i,  d)}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid do \{                             \\\par
    ieee_double_shape_type gh_u;   \\\par
    gh_u.value = (d);              \\\par
    (i) = gh_u.parts.msw;          \\\par
  \} while (0)\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the more significant 32 bit int from a double. }}\par
{
Definition at line 165 of file prim.h.}\par
}
{\xe \v GET_LOW_WORD\:real/prim.h}
{\xe \v real/prim.h\:GET_LOW_WORD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GET_LOW_WORD( i,  d)}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid do \{                             \\\par
    ieee_double_shape_type gl_u;   \\\par
    gl_u.value = (d);              \\\par
    (i) = gl_u.parts.lsw;          \\\par
  \} while (0)\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the less significant 32 bit int from a double. }}\par
{
Definition at line 176 of file prim.h.}\par
}
{\xe \v HUGE\:real/prim.h}
{\xe \v real/prim.h\:HUGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HUGE\~ 1.7976931348623157e+308}}
\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file prim.h.}\par
}
{\xe \v INSERT_WORDS\:real/prim.h}
{\xe \v real/prim.h\:INSERT_WORDS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INSERT_WORDS( d,  ix0,  ix1)}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid do \{                             \\\par
    ieee_double_shape_type iw_u;   \\\par
    iw_u.parts.msw = (ix0);        \\\par
    iw_u.parts.lsw = (ix1);        \\\par
    (d) = iw_u.value;              \\\par
  \} while (0)\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a double from two 32 bit ints. }}\par
{
Definition at line 187 of file prim.h.}\par
}
{\xe \v SET_FLOAT_WORD\:real/prim.h}
{\xe \v real/prim.h\:SET_FLOAT_WORD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SET_FLOAT_WORD( d,  i)}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid do \{                               \\\par
  ieee_float_shape_type sf_u;      \\\par
  sf_u.word = (i);                 \\\par
  (d) = sf_u.value;                \\\par
\} while (0)\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a float from a 32 bit int. }}\par
{
Definition at line 248 of file prim.h.}\par
}
{\xe \v SET_HIGH_WORD\:real/prim.h}
{\xe \v real/prim.h\:SET_HIGH_WORD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SET_HIGH_WORD( d,  v)}}
\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid do \{                             \\\par
    ieee_double_shape_type sh_u;   \\\par
    sh_u.value = (d);              \\\par
    sh_u.parts.msw = (v);          \\\par
    (d) = sh_u.value;              \\\par
  \} while (0)\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the more significant 32 bits of a double from an int. }}\par
{
Definition at line 199 of file prim.h.}\par
}
{\xe \v SET_LOW_WORD\:real/prim.h}
{\xe \v real/prim.h\:SET_LOW_WORD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SET_LOW_WORD( d,  v)}}
\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid do \{                             \\\par
    ieee_double_shape_type sl_u;   \\\par
    sl_u.value = (d);              \\\par
    sl_u.parts.lsw = (v);          \\\par
    (d) = sl_u.value;              \\\par
  \} while (0)\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the less significant 32 bits of a double from an int. }}\par
{
Definition at line 211 of file prim.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v sword\:real/prim.h}
{\xe \v real/prim.h\:sword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef signed int {\b sword}}}
\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
32 bit signed integer. }}\par
{
Definition at line 107 of file prim.h.}\par
}
{\xe \v uword\:real/prim.h}
{\xe \v real/prim.h\:uword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned int {\b uword}}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
32 bit unsigned integer. }}\par
{
Definition at line 101 of file prim.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v __kernel_cos\:real/prim.h}
{\xe \v real/prim.h\:__kernel_cos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double __kernel_cos (double  {\i x}, double  {\i y})}}
\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel cos function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.4 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 96/03/07\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Kernel cos function on [-pi/4, pi/4], pi/4 ~ 0.785398164
Input x is assumed to be bounded by ~pi/4 in magnitude.
Input y is the tail of x.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Algorithm
 1. Since cos(-x) = cos(x), we need only to consider positive x.
 2. if x < 2^-27 (hx<0x3e400000 0), return 1 with inexact if x!=0.
 3. cos(x) is approximated by a polynomial of degree 14 on
    [0,pi/4]
                         4            14
        cos(x) ~ 1 - x*x/2 + C1*x + ... + C6*x
    where the Remes error is\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     |              2     4     6     8     10    12     14 |     -58
    |cos(x)-(1-.5*x +C1*x +C2*x +C3*x +C4*x +C5*x  +C6*x  )| <= 2
    |                                      |\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                    4     6     8     10    12     14
 4. let r = C1*x +C2*x +C3*x +C4*x +C5*x  +C6*x  , then
        cos(x) = 1 - x*x/2 + r
    since cos(x+y) ~ cos(x) - sin(x)*y
          ~ cos(x) - x*y,
    a correction term is necessary in cos(x) and hence
    cos(x+y) = 1 - (x*x/2 - (r - x*y))
    For better accuracy when x > 0.3, let qx = |x|/4 with
    the last 32 bits mask off, and if x > 0.78125, let qx = 0.28125.
    Then
    cos(x+y) = (1-qx) - ((x*x/2-qx) - (r-x*y)).
    Note that 1-qx and (x*x/2-qx) is EXACT here, and the
    magnitude of the latter is at least a quarter of x*x/2,
    thus, reducing the rounding error in the subtraction.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 100 of file kcos.c.}\par
{
References C1, C2, C3, C4, C5, C6, and one.}\par
{
Referenced by cos(), and sin().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   101 \{\par
  102     double a,hz,z,r,qx;\par
  103     sword ix;\par
  104     GET_HIGH_WORD(ix, x);\par
  105     ix &= 0x7fffffff;   /* ix = |x|'s high word*/\par
  106     if(ix<0x3e400000) \{         /* if x < 2**27 */\par
  107         if(((int)x)==0) return one;     /* generate inexact */\par
  108     \}\par
  109     z  = x*x;\par
  110     r  = z*(C1+z*(C2+z*(C3+z*(C4+z*(C5+z*C6)))));\par
  111     if(ix < 0x3FD33333)             /* if |x| < 0.3 */\par
  112         return one - (0.5*z - (z*r - x*y));\par
  113     else \{\par
  114         if(ix > 0x3fe90000) \{       /* x > 0.78125 */\par
  115             qx = 0.28125;\par
  116         \} else \{\par
  117             INSERT_WORDS(qx,ix-0x00200000,0);\par
  118         \}\par
  119         hz = 0.5*z-qx;\par
  120         a  = one-qx;\par
  121         return a - (hz - (z*r-x*y));\par
  122     \}\par
  123 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "real_2prim_8h_a5468a5a3c3d5d5e34e73fac9d6bc0122_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v __kernel_rem_pio2\:real/prim.h}
{\xe \v real/prim.h\:__kernel_rem_pio2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int __kernel_rem_pio2 (double *  {\i x}, double *  {\i y}, int  {\i e0}, int  {\i nx}, int  {\i prec}, const int *  {\i ipio2})}}
\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel reduction function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.4 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 96/03/07\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
__kernel_rem_pio2(x,y,e0,nx,prec,ipio2)
double x[],y[]; int e0,nx,prec; int ipio2[];\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid __kernel_rem_pio2 return the last three digits of N with
    y = x - N*pi/2
so that |y| < pi/2.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The method is to compute the integer (mod 8) and fraction parts of
(2/pi)*x without doing the full multiplication. In general we
skip the part of the product that are known to be a huge integer (
more accurately, = 0 mod 8 ). Thus the number of operations are
independent of the exponent of the input.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid (2/pi) is represented by an array of 24-bit integers in ipio2[].\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Input parameters:
    x[] The input value (must be positive) is broken into nx
    pieces of 24-bit integers in double precision format.
    x[i] will be the i-th 24 bit of x. The scaled exponent
    of x[0] is given in input parameter e0 (i.e., x[0]*2^e0
    match x's up to 24 bits.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     Example of breaking a double positive z into x[0]+x[1]+x[2]:
        e0 = ilogb(z)-23
        z  = scalbn(z,-e0)
    for i = 0,1,2
        x[i] = floor(z)
        z    = (z-x[i])*2**24\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  y[]    ouput result in an array of double precision numbers.
    The dimension of y[] is:
        24-bit  precision   1
        53-bit  precision   2
        64-bit  precision   2
        113-bit precision   3
    The actual value is the sum of them. Thus for 113-bit
    precison, one may have to do something like:\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     long double t,w,r_head, r_tail;
    t = (long double)y[2] + (long double)y[1];
    w = (long double)y[0];
    r_head = t+w;
    r_tail = w - (r_head - t);\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  e0 The exponent of x[0]\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  nx dimension of x[]\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     prec    an integer indicating the precision:
        0   24  bits (single)
        1   53  bits (double)
        2   64  bits (extended)
        3   113 bits (quad)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  ipio2[]
    integer array, contains the (24*i)-th to (24*i+23)-th
    bit of 2/pi after binary point. The corresponding
    floating value is\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         ipio2[i] * 2^(-24(i+1)).\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid External function:
 double {\b scalbn()}, {\b floor()};\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Here is the description of some local variables:\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     jk  jk+1 is the initial number of terms of ipio2[] needed
    in the computation. The recommended value is 2,3,4,
    6 for single, double, extended,and quad.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     jz  local integer variable indicating the number of
    terms of ipio2[] used.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  jx nx - 1\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  jv index for pointing to the suitable ipio2[] for the
    computation. In general, we want
        ( 2^e0*x[0] * ipio2[jv-1]*2^(-24jv) )/8
    is an integer. Thus
        e0-3-24*jv >= 0 or (e0-3)/24 >= jv
    Hence jv = max(0,(e0-3)/24).\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  jp jp+1 is the number of terms in PIo2[] needed, jp = jk.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     q[] double array with integral value, representing the
    24-bits chunk of the product of x and 2/pi.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  q0 the corresponding exponent of q[0]. Note that the
    exponent for q[i] would be q0-24*i.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  PIo2[] double precision array, obtained by cutting pi/2
    into 24 bits chunks.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  f[]    ipio2[] in floating point\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  iq[]   integer array by breaking up q[] in 24-bits chunk.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  fq[]   final product of x*(2/pi) in fq[0],..,fq[jk]\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  ih integer. If >0 it indicates q[] is >= 0.5, hence
    it also indicates the *sign* of the result.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 190 of file kremp2.c.}\par
{
References init_jk, one, PIo2, scalbn(), two24, twon24, and zero.}\par
{
Referenced by rempio2().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   191 \{\par
  192     int jz,jx,jv,jp,jk,carry,n,iq[20],i,j,k,m,q0,ih;\par
  193     double z,fw,f[20],fq[20],q[20];\par
  194 \par
  195     /* initialize jk*/\par
  196     jk = init_jk[prec];\par
  197     jp = jk;\par
  198 \par
  199     /* determine jx,jv,q0, note that 3>q0 */\par
  200     jx =  nx-1;\par
  201     jv = (e0-3)/24;\par
  202     if(jv<0) jv=0;\par
  203     q0 =  e0-24*(jv+1);\par
  204 \par
  205     /* set up f[0] to f[jx+jk] where f[jx+jk] = ipio2[jv+jk] */\par
  206     j = jv-jx;\par
  207     m = jx+jk;\par
  208     for(i=0; i<=m; i++,j++) f[i] = (j<0)? zero : (double) ipio2[j];\par
  209 \par
  210     /* compute q[0],q[1],...q[jk] */\par
  211     for (i=0; i<=jk; i++) \{\par
  212         for(j=0,fw=0.0; j<=jx; j++) fw += x[j]*f[jx+i-j];\par
  213         q[i] = fw;\par
  214     \}\par
  215 \par
  216     jz = jk;\par
  217 recompute:\par
  218     /* distill q[] into iq[] reversingly */\par
  219     for(i=0,j=jz,z=q[jz]; j>0; i++,j--) \{\par
  220         fw    =  (double)((int)(twon24* z));\par
  221         iq[i] =  (int)(z-two24*fw);\par
  222         z     =  q[j-1]+fw;\par
  223     \}\par
  224 \par
  225     /* compute n */\par
  226     z  = scalbn(z,q0);      /* actual value of z */\par
  227     z -= 8.0*floor(z*0.125);        /* trim off integer >= 8 */\par
  228     n  = (int) z;\par
  229     z -= (double)n;\par
  230     ih = 0;\par
  231     if(q0>0) \{  /* need iq[jz-1] to determine n */\par
  232         i  = (iq[jz-1]>>(24-q0));\par
  233         n += i;\par
  234         iq[jz-1] -= i<<(24-q0);\par
  235         ih = iq[jz-1]>>(23-q0);\par
  236     \}\par
  237     else if(q0==0) ih = iq[jz-1]>>23;\par
  238     else if(z>=0.5) ih=2;\par
  239 \par
  240     if(ih>0) \{  /* q > 0.5 */\par
  241         n += 1;\par
  242         carry = 0;\par
  243         for(i=0; i<jz ; i++) \{  /* compute 1-q */\par
  244             j = iq[i];\par
  245             if(carry==0) \{\par
  246                 if(j!=0) \{\par
  247                     carry = 1;\par
  248                     iq[i] = 0x1000000- j;\par
  249                 \}\par
  250             \} else  iq[i] = 0xffffff - j;\par
  251         \}\par
  252         if(q0>0) \{      /* rare case: chance is 1 in 12 */\par
  253             switch(q0) \{\par
  254             case 1:\par
  255                 iq[jz-1] &= 0x7fffff;\par
  256                 break;\par
  257             case 2:\par
  258                 iq[jz-1] &= 0x3fffff;\par
  259                 break;\par
  260             \}\par
  261         \}\par
  262         if(ih==2) \{\par
  263             z = one - z;\par
  264             if(carry!=0) z -= scalbn(one,q0);\par
  265         \}\par
  266     \}\par
  267 \par
  268     /* check if recomputation is needed */\par
  269     if(z==zero) \{\par
  270         j = 0;\par
  271         for (i=jz-1; i>=jk; i--) j |= iq[i];\par
  272         if(j==0) \{ /* need recomputation */\par
  273             for(k=1; iq[jk-k]==0; k++); /* k = no. of terms needed */\par
  274 \par
  275             for(i=jz+1; i<=jz+k; i++) \{ /* add q[jz+1] to q[jz+k] */\par
  276                 f[jx+i] = (double) ipio2[jv+i];\par
  277                 for(j=0,fw=0.0; j<=jx; j++) fw += x[j]*f[jx+i-j];\par
  278                 q[i] = fw;\par
  279             \}\par
  280             jz += k;\par
  281             goto recompute;\par
  282         \}\par
  283     \}\par
  284 \par
  285     /* chop off zero terms */\par
  286     if(z==0.0) \{\par
  287         jz -= 1;\par
  288         q0 -= 24;\par
  289         while(iq[jz]==0) \{\par
  290             jz--;\par
  291             q0-=24;\par
  292         \}\par
  293     \} else \{ /* break z into 24-bit if necessary */\par
  294         z = scalbn(z,-q0);\par
  295         if(z>=two24) \{\par
  296             fw = (double)((int)(twon24*z));\par
  297             iq[jz] = (int)(z-two24*fw);\par
  298             jz += 1;\par
  299             q0 += 24;\par
  300             iq[jz] = (int) fw;\par
  301         \} else iq[jz] = (int) z ;\par
  302     \}\par
  303 \par
  304     /* convert integer "bit" chunk to floating-point value */\par
  305     fw = scalbn(one,q0);\par
  306     for(i=jz; i>=0; i--) \{\par
  307         q[i] = fw*(double)iq[i];\par
  308         fw*=twon24;\par
  309     \}\par
  310 \par
  311     /* compute PIo2[0,...,jp]*q[jz,...,0] */\par
  312     for(i=jz; i>=0; i--) \{\par
  313         for(fw=0.0,k=0; k<=jp&&k<=jz-i; k++) fw += PIo2[k]*q[i+k];\par
  314         fq[jz-i] = fw;\par
  315     \}\par
  316 \par
  317     /* compress fq[] into y[] */\par
  318     switch(prec) \{\par
  319     case 0:\par
  320         fw = 0.0;\par
  321         for (i=jz; i>=0; i--) fw += fq[i];\par
  322         y[0] = (ih==0)? fw: -fw;\par
  323         break;\par
  324     case 1:\par
  325     case 2:\par
  326         fw = 0.0;\par
  327         for (i=jz; i>=0; i--) fw += fq[i];\par
  328         y[0] = (ih==0)? fw: -fw;\par
  329         fw = fq[0]-fw;\par
  330         for (i=1; i<=jz; i++) fw += fq[i];\par
  331         y[1] = (ih==0)? fw: -fw;\par
  332         break;\par
  333     case 3: /* painful */\par
  334         for (i=jz; i>0; i--) \{\par
  335             fw      = fq[i-1]+fq[i];\par
  336             fq[i]  += fq[i-1]-fw;\par
  337             fq[i-1] = fw;\par
  338         \}\par
  339         for (i=jz; i>1; i--) \{\par
  340             fw      = fq[i-1]+fq[i];\par
  341             fq[i]  += fq[i-1]-fw;\par
  342             fq[i-1] = fw;\par
  343         \}\par
  344         for (fw=0.0,i=jz; i>=2; i--) fw += fq[i];\par
  345         if(ih==0) \{\par
  346             y[0] =  fq[0];\par
  347             y[1] =  fq[1];\par
  348             y[2] =  fw;\par
  349         \} else \{\par
  350             y[0] = -fq[0];\par
  351             y[1] = -fq[1];\par
  352             y[2] = -fw;\par
  353         \}\par
  354     \}\par
  355     return n&7;\par
  356 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "real_2prim_8h_a8a5e87d33974881295c4ed0d09732f71_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "real_2prim_8h_a8a5e87d33974881295c4ed0d09732f71_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v __kernel_sin\:real/prim.h}
{\xe \v real/prim.h\:__kernel_sin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double __kernel_sin (double  {\i x}, double  {\i y}, int  {\i iy})}}
\par
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel sin function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}Kernel sin function on [-pi/4, pi/4], pi/4 ~ 0.7854 Input x is assumed to be bounded by ~pi/4 in magnitude. Input y is the tail of x. Input iy indicates whether y is 0. (if iy=0, y assume to be 0).\par
Algorithm{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Since sin(-x) = -sin(x), we need only to consider positive x.\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab if x < 2^-27 (hx<0x3e400000 0), return x with inexact if x!=0.\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab sin(x) is approximated by a polynomial of degree 13 on [0,pi/4] 3 13 sin(x) ~ x + S1*x + ... + S6*x where\par
|sin(x) 2 4 6 8 10 12 | -58 |----- - (1+S1*x +S2*x +S3*x +S4*x +S5*x +S6*x )| <= 2 | x |\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab sin(x+y) = sin(x) + sin'(x')*y ~ sin(x) + (1-x*x/2)*y For better accuracy, let 3 2 2 2 2 r = x *(S2+x *(S3+x *(S4+x *(S5+x *S6)))) then 3 2 sin(x) = x + (S1*x + (x *(r-y/2)+y))  \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}\par}
}{
Definition at line 92 of file ksin.c.}\par
{
References half, S1, S2, S3, S4, S5, and S6.}\par
{
Referenced by cos(), and sin().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    93 \{\par
   94     double z,r,v;\par
   95     sword ix;\par
   96     GET_HIGH_WORD(ix,x);\par
   97     ix &=0x7fffffff;    /* high word of x */\par
   98     if(ix<0x3e400000)           /* |x| < 2**-27 */\par
   99     \{\par
  100         if((int)x==0) return x;   /* generate inexact */\par
  101     \}\par
  102     z   =  x*x;\par
  103     v   =  z*x;\par
  104     r   =  S2+z*(S3+z*(S4+z*(S5+z*S6)));\par
  105     if(iy==0) return x+v*(S1+z*r);\par
  106     else      return x-((z*(half*y-v*r)-y)-v*S1);\par
  107 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "real_2prim_8h_adcc3cb89edf47f34f1e8058e198be293_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v __kernel_tan\:real/prim.h}
{\xe \v real/prim.h\:__kernel_tan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double __kernel_tan (double  {\i x}, double  {\i y}, int  {\i iy})}}
\par
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel tan function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.5 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 04/04/22\par
}Kernel tan function on [-pi/4, pi/4], pi/4 ~ 0.7854 Input x is assumed to be bounded by ~pi/4 in magnitude. Input y is the tail of x. Input k indicates whether tan (if k = 1) or -1/tan (if k = -1) is returned.\par
Algorithm{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Since tan(-x) = -tan(x), we need only to consider positive x.\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab if x < 2^-28 (hx<0x3e300000 0), return x with inexact if x!=0.\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab tan(x) is approximated by a odd polynomial of degree 27 on [0,0.67434] 3 27 tan(x) ~ x + T1*x + ... + T13*x where {
\par
\pard\plain \s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     |tan(x)         2     4            26   |     -59.2\par
    |----- - (1+T1*x +T2*x +.... +T13*x    )| <= 2\par
    |  x                    |\par
}
\par
Note: tan(x+y) = tan(x) + tan'(x)*y ~ tan(x) + (1+x*x)*y Therefore, for better accuracy in computing tan(x+y), let 3 2 2 2 2 r = x *(T2+x *(T3+x *(...+x *(T12+x *T13)))) then 3 2 tan(x+y) = x + (T1*x + (x *(r+y)+y)){
\par
\pard\plain \s92\fi-360\li1080\widctlpar\fs20\cgrid 
1.\tab For x in [0.67434,pi/4], let y = pi/4 - x, then tan(x) = tan(pi/4-y) = (1-tan(y))/(1+tan(y)) = 1 - 2*(tan(y) - (tan(y)^2)/(1+tan(y)))  \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s64\li1440\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}\par}
\par}
}{
Definition at line 112 of file ktan.c.}\par
{
Referenced by tan().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   112                                                 \{\par
  113     double z, r, v, w, s;\par
  114     sword ix, hx;\par
  115 \par
  116     GET_HIGH_WORD(hx,x); /* high word of x */\par
  117     ix = hx & 0x7fffffff;           /* high word of |x| */\par
  118     if (ix < 0x3e300000) \{          /* x < 2**-28 */\par
  119         if ((int) x == 0) \{     /* generate inexact */\par
  120             uword low;\par
  121             GET_LOW_WORD(low,x);\par
  122             if (((ix | low) | (iy + 1)) == 0)\par
  123                 return one / fabs(x);\par
  124             else \{\par
  125                 if (iy == 1)\par
  126                     return x;\par
  127                 else \{  /* compute -1 / (x+y) carefully */\par
  128                     double a, t;\par
  129 \par
  130                     z = w = x + y;\par
  131                     SET_LOW_WORD(z,0);\par
  132                     v = y - (z - x);\par
  133                     t = a = -one / w;\par
  134                     SET_LOW_WORD(t,0);\par
  135                     s = one + t * z;\par
  136                     return t + a * (s + t * v);\par
  137                 \}\par
  138             \}\par
  139         \}\par
  140     \}\par
  141     if (ix >= 0x3FE59428) \{ /* |x| >= 0.6744 */\par
  142         if (hx < 0) \{\par
  143             x = -x;\par
  144             y = -y;\par
  145         \}\par
  146         z = pio4 - x;\par
  147         w = pio4lo - y;\par
  148         x = z + w;\par
  149         y = 0.0;\par
  150     \}\par
  151     z = x * x;\par
  152     w = z * z;\par
  153     /*\par
  154      * Break x^5*(T[1]+x^2*T[2]+...) into\par
  155      * x^5(T[1]+x^4*T[3]+...+x^20*T[11]) +\par
  156      * x^5(x^2*(T[2]+x^4*T[4]+...+x^22*[T12]))\par
  157      */\par
  158     r = T[1] + w * (T[3] + w * (T[5] + w * (T[7] + w * (T[9] +\par
  159                                             w * T[11]))));\par
  160     v = z * (T[2] + w * (T[4] + w * (T[6] + w * (T[8] + w * (T[10] +\par
  161                                      w * T[12])))));\par
  162     s = z * x;\par
  163     r = y + z * (s * (r + v) + y);\par
  164     r += T[0] * s;\par
  165     w = x + r;\par
  166     if (ix >= 0x3FE59428) \{\par
  167         v = (double) iy;\par
  168         return (double) (1 - ((hx >> 30) & 2)) *\par
  169                (v - 2.0 * (x - (w * w / (w + v) - r)));\par
  170     \}\par
  171     if (iy == 1)\par
  172         return w;\par
  173     else \{\par
  174         /*\par
  175          * if allow error up to 2 ulp, simply return\par
  176          * -1.0 / (x+r) here\par
  177          */\par
  178         /* compute -1.0 / (x+r) accurately */\par
  179         double a, t;\par
  180         z = w;\par
  181         SET_LOW_WORD(z,0);\par
  182         v = r - (z - x);    /* z+v = r+x */\par
  183         t = a = -1.0 / w;   /* a = -1.0/w */\par
  184         SET_LOW_WORD(t,0);\par
  185         s = 1.0 + t * z;\par
  186         return t + a * (s + t * v);\par
  187     \}\par
  188 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "real_2prim_8h_a5f1c9e105e0dbca8a88407dd899043c6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/dconv/dmath.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v lib/dconv/dmath.cpp}
{\xe \v lib/dconv/dmath.cpp}
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dstandard.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for dmath.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dmath_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b LogBase2} ({\b tU32} val)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v LogBase2\:dmath.cpp}
{\xe \v dmath.cpp\:LogBase2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} LogBase2 ({\b tU32}  {\i val})}}
\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file dmath.cpp.}\par
{
Referenced by Dragon4(), LogBase2(), and PrintFloat32().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    60 \{\par
   61     static const tU8 logTable[256] =\par
   62     \{\par
   63         0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3,\par
   64         4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\par
   65         5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\par
   66         5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\par
   67         6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\par
   68         6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\par
   69         6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\par
   70         6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\par
   71         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\par
   72         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\par
   73         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\par
   74         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\par
   75         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\par
   76         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\par
   77         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\par
   78         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7\par
   79     \};\par
   80 \par
   81     tU32 temp;\par
   82 \par
   83     temp = val >> 24;\par
   84     if (temp)\par
   85         return 24 + logTable[temp];\par
   86 \par
   87     temp = val >> 16;\par
   88     if (temp)\par
   89         return 16 + logTable[temp];\par
   90 \par
   91     temp = val >> 8;\par
   92     if (temp)\par
   93         return 8 + logTable[temp];\par
   94 \par
   95     return logTable[val];\par
   96 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dmath_8cpp_a835ee0ad31a196742a7a5fd3c21a738b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/dconv/dmath.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/dconv/dmath.h}
{\xe \v lib/dconv/dmath.h}
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Math used in the Dragon4 library. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dstandard.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for dmath.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dmath_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dmath_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b LogBase2} ({\b tU32} val)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b LogBase2} ({\b tU64} val)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Math used in the Dragon4 library. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v LogBase2\:dmath.h}
{\xe \v dmath.h\:LogBase2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} LogBase2 ({\b tU32}  {\i val})}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file dmath.cpp.}\par
{
Referenced by Dragon4(), LogBase2(), and PrintFloat32().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    60 \{\par
   61     static const tU8 logTable[256] =\par
   62     \{\par
   63         0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3,\par
   64         4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\par
   65         5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\par
   66         5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\par
   67         6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\par
   68         6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\par
   69         6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\par
   70         6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\par
   71         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\par
   72         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\par
   73         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\par
   74         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\par
   75         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\par
   76         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\par
   77         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\par
   78         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7\par
   79     \};\par
   80 \par
   81     tU32 temp;\par
   82 \par
   83     temp = val >> 24;\par
   84     if (temp)\par
   85         return 24 + logTable[temp];\par
   86 \par
   87     temp = val >> 16;\par
   88     if (temp)\par
   89         return 16 + logTable[temp];\par
   90 \par
   91     temp = val >> 8;\par
   92     if (temp)\par
   93         return 8 + logTable[temp];\par
   94 \par
   95     return logTable[val];\par
   96 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dmath_8h_a835ee0ad31a196742a7a5fd3c21a738b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v LogBase2\:dmath.h}
{\xe \v dmath.h\:LogBase2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} LogBase2 ({\b tU64}  {\i val}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file dmath.h.}\par
{
References LogBase2().}\par
{
Referenced by PrintFloat64().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    74 \{\par
   75     tU64 temp;\par
   76 \par
   77     temp = val >> 32;\par
   78     if (temp)\par
   79         return 32 + LogBase2((tU32)temp);\par
   80 \par
   81     return LogBase2((tU32)val);\par
   82 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dmath_8h_a360b3d25a9aba33944a7e16f395f5a88_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dmath_8h_a360b3d25a9aba33944a7e16f395f5a88_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/dconv/dprint.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v lib/dconv/dprint.cpp}
{\xe \v lib/dconv/dprint.cpp}
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
{\f2 #include "dmath.h"}\par
{\f2 #include "dprint.h"}\par
{\f2 #include "dragon4.h"}\par
{\f2 #include <dstandard.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for dprint.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b tFloatUnion32}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b tFloatUnion64}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b memcpy}\~ {\b MemCopy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b memmove}\~ {\b MemCopy}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b FormatPositional} ({\b tC8} *pOutBuffer, {\b tU32} bufferSize, {\b tU64} mantissa, {\b tS32} exponent, {\b tU32} mantissaHighBitIdx, {\b tB} hasUnequalMargins, {\b tS32} precision, {\b tC8} decimalPoint)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b FormatScientific} ({\b tC8} *pOutBuffer, {\b tU32} bufferSize, {\b tU64} mantissa, {\b tS32} exponent, {\b tU32} mantissaHighBitIdx, {\b tB} hasUnequalMargins, {\b tS32} precision, {\b tC8} decimalPoint)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b tU32} {\b PrintHex} ({\b tC8} *pOutBuffer, {\b tU32} bufferSize, {\b tU64} value, {\b tU32} width)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b tU32} {\b PrintInfNan} ({\b tC8} *pOutBuffer, {\b tU32} bufferSize, {\b tU64} mantissa, {\b tU32} mantissaHexWidth)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b PrintFloat32} ({\b tC8} *pOutBuffer, {\b tU32} bufferSize, {\b tF32} value, {\b tPrintFloatFormat} format, {\b tS32} precision, {\b tC8} decimalPoint)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b PrintFloat64} ({\b tC8} *pOutBuffer, {\b tU32} bufferSize, {\b tF64} value, {\b tPrintFloatFormat} format, {\b tS32} precision, {\b tC8} decimalPoint)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v memcpy\:dprint.cpp}
{\xe \v dprint.cpp\:memcpy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define memcpy\~ {\b MemCopy}}}
\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file dprint.cpp.}\par
}
{\xe \v memmove\:dprint.cpp}
{\xe \v dprint.cpp\:memmove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define memmove\~ {\b MemCopy}}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file dprint.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v FormatPositional\:dprint.cpp}
{\xe \v dprint.cpp\:FormatPositional}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} FormatPositional ({\b tC8} *  {\i pOutBuffer}, {\b tU32}  {\i bufferSize}, {\b tU64}  {\i mantissa}, {\b tS32}  {\i exponent}, {\b tU32}  {\i mantissaHighBitIdx}, {\b tB}  {\i hasUnequalMargins}, {\b tS32}  {\i precision}, {\b tC8}  {\i decimalPoint})}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 112 of file dprint.cpp.}\par
{
References CutoffMode_FractionLength, CutoffMode_Unique, Dragon4(), and MemCopy().}\par
{
Referenced by PrintFloat32(), and PrintFloat64().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   124 \{\par
  125     RJ_ASSERT(bufferSize > 0);\par
  126 \par
  127     tS32 printExponent;\par
  128     tU32 numPrintDigits;\par
  129 \par
  130     tU32 maxPrintLen = bufferSize - 1;\par
  131 \par
  132     if (precision < 0)\par
  133     \{\par
  134         numPrintDigits = Dragon4(   mantissa,\par
  135                                     exponent,\par
  136                                     mantissaHighBitIdx,\par
  137                                     hasUnequalMargins,\par
  138                                     CutoffMode_Unique,\par
  139                                     0,\par
  140                                     pOutBuffer,\par
  141                                     maxPrintLen,\par
  142                                     &printExponent );\par
  143     \}\par
  144     else\par
  145     \{\par
  146         numPrintDigits = Dragon4(   mantissa,\par
  147                                     exponent,\par
  148                                     mantissaHighBitIdx,\par
  149                                     hasUnequalMargins,\par
  150                                     CutoffMode_FractionLength,\par
  151                                     precision,\par
  152                                     pOutBuffer,\par
  153                                     maxPrintLen,\par
  154                                     &printExponent );\par
  155     \}\par
  156 \par
  157     RJ_ASSERT( numPrintDigits > 0 );\par
  158     RJ_ASSERT( numPrintDigits <= bufferSize );\par
  159 \par
  160     // track the number of digits past the decimal point that have been printed\par
  161     tU32 numFractionDigits = 0;\par
  162 \par
  163     // if output has a whole number\par
  164     if (printExponent >= 0)\par
  165     \{\par
  166         // leave the whole number at the start of the buffer\par
  167         tU32 numWholeDigits = printExponent+1;\par
  168         if (numPrintDigits < numWholeDigits)\par
  169         \{\par
  170             // don't overflow the buffer\par
  171             if (numWholeDigits > maxPrintLen)\par
  172                 numWholeDigits = maxPrintLen;\par
  173 \par
  174             // add trailing zeros up to the decimal point\par
  175             for ( ; numPrintDigits < numWholeDigits; ++numPrintDigits )\par
  176                 pOutBuffer[numPrintDigits] = '0';\par
  177         \}\par
  178         // insert the decimal point prior to the fraction\par
  179         else if (numPrintDigits > (tU32)numWholeDigits)\par
  180         \{\par
  181             numFractionDigits = numPrintDigits - numWholeDigits;\par
  182             tU32 maxFractionDigits = maxPrintLen - numWholeDigits - 1;\par
  183             if (numFractionDigits > maxFractionDigits)\par
  184                 numFractionDigits = maxFractionDigits;\par
  185 \par
  186             memmove(pOutBuffer + numWholeDigits + 1, pOutBuffer + numWholeDigits, numFractionDigits);\par
  187             pOutBuffer[numWholeDigits] = decimalPoint;\par
  188             numPrintDigits = numWholeDigits + 1 + numFractionDigits;\par
  189         \}\par
  190     \}\par
  191     else\par
  192     \{\par
  193         // shift out the fraction to make room for the leading zeros\par
  194         if (maxPrintLen > 2)\par
  195         \{\par
  196             tU32 numFractionZeros = (tU32)-printExponent - 1;\par
  197             tU32 maxFractionZeros = maxPrintLen - 2;\par
  198             if (numFractionZeros > maxFractionZeros)\par
  199                 numFractionZeros = maxFractionZeros;\par
  200 \par
  201             tU32 digitsStartIdx = 2 + numFractionZeros;\par
  202 \par
  203             // shift the significant digits right such that there is room for leading zeros\par
  204             numFractionDigits = numPrintDigits;\par
  205             tU32 maxFractionDigits = maxPrintLen - digitsStartIdx;\par
  206             if (numFractionDigits > maxFractionDigits)\par
  207                 numFractionDigits = maxFractionDigits;\par
  208 \par
  209             memmove(pOutBuffer + digitsStartIdx, pOutBuffer, numFractionDigits);\par
  210 \par
  211             // insert the leading zeros\par
  212             for (tU32 i = 2; i < digitsStartIdx; ++i)\par
  213                 pOutBuffer[i] = '0';\par
  214 \par
  215             // update the counts\par
  216             numFractionDigits += numFractionZeros;\par
  217             numPrintDigits = numFractionDigits;\par
  218         \}\par
  219 \par
  220         // add the decimal point\par
  221         if (maxPrintLen > 1)\par
  222         \{\par
  223             pOutBuffer[1] = decimalPoint;\par
  224             numPrintDigits += 1;\par
  225         \}\par
  226 \par
  227         // add the initial zero\par
  228         if (maxPrintLen > 0)\par
  229         \{\par
  230             pOutBuffer[0] = '0';\par
  231             numPrintDigits += 1;\par
  232         \}\par
  233     \}\par
  234 \par
  235     // add trailing zeros up to precision length\par
  236     if (precision > (tS32)numFractionDigits && numPrintDigits < maxPrintLen)\par
  237     \{\par
  238         // add a decimal point if this is the first fractional digit we are printing\par
  239         if (numFractionDigits == 0)\par
  240         \{\par
  241             pOutBuffer[numPrintDigits++] = decimalPoint;\par
  242         \}\par
  243 \par
  244         // compute the number of trailing zeros needed\par
  245         tU32 totalDigits = numPrintDigits + (precision - numFractionDigits);\par
  246         if (totalDigits > maxPrintLen)\par
  247             totalDigits = maxPrintLen;\par
  248 \par
  249         for ( ; numPrintDigits < totalDigits; ++numPrintDigits )\par
  250             pOutBuffer[numPrintDigits] = '0';\par
  251     \}\par
  252 \par
  253     // terminate the buffer\par
  254     RJ_ASSERT( numPrintDigits <= maxPrintLen );\par
  255     pOutBuffer[numPrintDigits] = '\\0';\par
  256 \par
  257     return numPrintDigits;\par
  258 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8cpp_a73aa4cbb8052f400f03f1706a3eced16_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8cpp_a73aa4cbb8052f400f03f1706a3eced16_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v FormatScientific\:dprint.cpp}
{\xe \v dprint.cpp\:FormatScientific}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} FormatScientific ({\b tC8} *  {\i pOutBuffer}, {\b tU32}  {\i bufferSize}, {\b tU64}  {\i mantissa}, {\b tS32}  {\i exponent}, {\b tU32}  {\i mantissaHighBitIdx}, {\b tB}  {\i hasUnequalMargins}, {\b tS32}  {\i precision}, {\b tC8}  {\i decimalPoint})}}
\par
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 266 of file dprint.cpp.}\par
{
References CutoffMode_TotalLength, CutoffMode_Unique, Dragon4(), and MemCopy().}\par
{
Referenced by PrintFloat32(), and PrintFloat64().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   278 \{\par
  279     RJ_ASSERT(bufferSize > 0);\par
  280 \par
  281     tS32 printExponent;\par
  282     tU32 numPrintDigits;\par
  283 \par
  284     if (precision < 0)\par
  285     \{\par
  286         numPrintDigits = Dragon4(   mantissa,\par
  287                                     exponent,\par
  288                                     mantissaHighBitIdx,\par
  289                                     hasUnequalMargins,\par
  290                                     CutoffMode_Unique,\par
  291                                     0,\par
  292                                     pOutBuffer,\par
  293                                     bufferSize,\par
  294                                     &printExponent );\par
  295     \}\par
  296     else\par
  297     \{\par
  298         numPrintDigits = Dragon4(   mantissa,\par
  299                                     exponent,\par
  300                                     mantissaHighBitIdx,\par
  301                                     hasUnequalMargins,\par
  302                                     CutoffMode_TotalLength,\par
  303                                     precision + 1,\par
  304                                     pOutBuffer,\par
  305                                     bufferSize,\par
  306                                     &printExponent );\par
  307     \}\par
  308 \par
  309     RJ_ASSERT( numPrintDigits > 0 );\par
  310     RJ_ASSERT( numPrintDigits <= bufferSize );\par
  311 \par
  312     tC8 * pCurOut = pOutBuffer;\par
  313 \par
  314     // keep the whole number as the first digit\par
  315     if (bufferSize > 1)\par
  316     \{\par
  317         pCurOut += 1;\par
  318         bufferSize -= 1;\par
  319     \}\par
  320 \par
  321     // insert the decimal point prior to the fractional number\par
  322     tU32 numFractionDigits = numPrintDigits-1;\par
  323     if (numFractionDigits > 0 && bufferSize > 1)\par
  324     \{\par
  325         tU32 maxFractionDigits = bufferSize-2;\par
  326         if (numFractionDigits > maxFractionDigits)\par
  327             numFractionDigits =  maxFractionDigits;\par
  328 \par
  329         memmove(pCurOut + 1, pCurOut, numFractionDigits);\par
  330         pCurOut[0] = decimalPoint;\par
  331         pCurOut += (1 + numFractionDigits);\par
  332         bufferSize -= (1 + numFractionDigits);\par
  333     \}\par
  334 \par
  335     // add trailing zeros up to precision length\par
  336     if (precision > (tS32)numFractionDigits && bufferSize > 1)\par
  337     \{\par
  338         // add a decimal point if this is the first fractional digit we are printing\par
  339         if (numFractionDigits == 0)\par
  340         \{\par
  341             *pCurOut = decimalPoint;\par
  342             ++pCurOut;\par
  343             --bufferSize;\par
  344         \}\par
  345 \par
  346         // compute the number of trailing zeros needed\par
  347         tU32 numZeros = (precision - numFractionDigits);\par
  348         if (numZeros > bufferSize-1)\par
  349             numZeros = bufferSize-1;\par
  350 \par
  351         for (tC8 * pEnd = pCurOut + numZeros; pCurOut < pEnd; ++pCurOut )\par
  352             *pCurOut = '0';\par
  353     \}\par
  354 \par
  355     // print the exponent into a local buffer and copy into output buffer\par
  356     if (bufferSize > 1)\par
  357     \{\par
  358         tC8 exponentBuffer[5];\par
  359         exponentBuffer[0] = 'e';\par
  360         if (printExponent >= 0)\par
  361         \{\par
  362             exponentBuffer[1] = '+';\par
  363         \}\par
  364         else\par
  365         \{\par
  366             exponentBuffer[1] = '-';\par
  367             printExponent = -printExponent;\par
  368         \}\par
  369 \par
  370         RJ_ASSERT(printExponent < 1000);\par
  371         tU32 hundredsPlace  = printExponent / 100;\par
  372         tU32 tensPlace      = (printExponent - hundredsPlace*100) / 10;\par
  373         tU32 onesPlace      = (printExponent - hundredsPlace*100 - tensPlace*10);\par
  374 \par
  375         exponentBuffer[2] = (tC8)('0' + hundredsPlace);\par
  376         exponentBuffer[3] = (tC8)('0' + tensPlace);\par
  377         exponentBuffer[4] = (tC8)('0' + onesPlace);\par
  378 \par
  379         // copy the exponent buffer into the output\par
  380         tU32 maxExponentSize = bufferSize-1;\par
  381         tU32 exponentSize = (5 < maxExponentSize) ? 5 : maxExponentSize;\par
  382         memcpy( pCurOut, exponentBuffer, exponentSize );\par
  383 \par
  384         pCurOut += exponentSize;\par
  385         bufferSize -= exponentSize;\par
  386     \}\par
  387 \par
  388     RJ_ASSERT( bufferSize > 0 );\par
  389     pCurOut[0] = '\\0';\par
  390 \par
  391     return pCurOut - pOutBuffer;\par
  392 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8cpp_a1fce61f37a054297f0b8898d52dc9f28_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8cpp_a1fce61f37a054297f0b8898d52dc9f28_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v PrintFloat32\:dprint.cpp}
{\xe \v dprint.cpp\:PrintFloat32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} PrintFloat32 ({\b tC8} *  {\i pOutBuffer}, {\b tU32}  {\i bufferSize}, {\b tF32}  {\i value}, {\b tPrintFloatFormat}  {\i format}, {\b tS32}  {\i precision}, {\b tC8}  {\i decimalPoint})}}
\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 465 of file dprint.cpp.}\par
{
References FormatPositional(), FormatScientific(), tFloatUnion32::GetExponent(), tFloatUnion32::GetMantissa(), tFloatUnion32::IsNegative(), LogBase2(), tFloatUnion32::m_floatingPoint, PrintFloatFormat_Positional, PrintFloatFormat_Scientific, and PrintInfNan().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   475 \{\par
  476     if (bufferSize == 0)\par
  477         return 0;\par
  478 \par
  479     if (bufferSize == 1)\par
  480     \{\par
  481         pOutBuffer[0] = '\\0';\par
  482         return 1;\par
  483     \}\par
  484 \par
  485     // deconstruct the floating point value\par
  486     tFloatUnion32 floatUnion;\par
  487     floatUnion.m_floatingPoint = value;\par
  488     tU32 floatExponent = floatUnion.GetExponent();\par
  489     tU32 floatMantissa = floatUnion.GetMantissa();\par
  490 \par
  491     // output the sign\par
  492     if (floatUnion.IsNegative())\par
  493     \{\par
  494         pOutBuffer[0] = '-';\par
  495         ++pOutBuffer;\par
  496         --bufferSize;\par
  497         RJ_ASSERT(bufferSize > 0);\par
  498     \}\par
  499 \par
  500     // if this is a special value\par
  501     if (floatExponent == 0xFF)\par
  502     \{\par
  503         return PrintInfNan(pOutBuffer, bufferSize, floatMantissa, 6);\par
  504     \}\par
  505     // else this is a number\par
  506     else\par
  507     \{\par
  508         // factor the value into its parts\par
  509         tU32 mantissa;\par
  510         tS32 exponent;\par
  511         tU32 mantissaHighBitIdx;\par
  512         tB hasUnequalMargins;\par
  513         if (floatExponent != 0)\par
  514         \{\par
  515             // normalized\par
  516             // The floating point equation is:\par
  517             //  value = (1 + mantissa/2^23) * 2 ^ (exponent-127)\par
  518             // We convert the integer equation by factoring a 2^23 out of the exponent\par
  519             //  value = (1 + mantissa/2^23) * 2^23 * 2 ^ (exponent-127-23)\par
  520             //  value = (2^23 + mantissa) * 2 ^ (exponent-127-23)\par
  521             // Because of the implied 1 in front of the mantissa we have 24 bits of precision.\par
  522             //   m = (2^23 + mantissa)\par
  523             //   e = (exponent-127-23)\par
  524             mantissa            = (1UL << 23) | floatMantissa;\par
  525             exponent            = floatExponent - 127 - 23;\par
  526             mantissaHighBitIdx  = 23;\par
  527             hasUnequalMargins   = (floatExponent != 1) && (floatMantissa == 0);\par
  528         \}\par
  529         else\par
  530         \{\par
  531             // denormalized\par
  532             // The floating point equation is:\par
  533             //  value = (mantissa/2^23) * 2 ^ (1-127)\par
  534             // We convert the integer equation by factoring a 2^23 out of the exponent\par
  535             //  value = (mantissa/2^23) * 2^23 * 2 ^ (1-127-23)\par
  536             //  value = mantissa * 2 ^ (1-127-23)\par
  537             // We have up to 23 bits of precision.\par
  538             //   m = (mantissa)\par
  539             //   e = (1-127-23)\par
  540             mantissa           = floatMantissa;\par
  541             exponent           = 1 - 127 - 23;\par
  542             mantissaHighBitIdx = LogBase2(mantissa);\par
  543             hasUnequalMargins   = false;\par
  544         \}\par
  545 \par
  546         // format the value\par
  547         switch (format)\par
  548         \{\par
  549         case PrintFloatFormat_Positional:\par
  550             return FormatPositional(    pOutBuffer,\par
  551                                         bufferSize,\par
  552                                         mantissa,\par
  553                                         exponent,\par
  554                                         mantissaHighBitIdx,\par
  555                                         hasUnequalMargins,\par
  556                                         precision,\par
  557                                         decimalPoint );\par
  558 \par
  559         case PrintFloatFormat_Scientific:\par
  560             return FormatScientific(    pOutBuffer,\par
  561                                         bufferSize,\par
  562                                         mantissa,\par
  563                                         exponent,\par
  564                                         mantissaHighBitIdx,\par
  565                                         hasUnequalMargins,\par
  566                                         precision,\par
  567                                         decimalPoint );\par
  568 \par
  569         default:\par
  570             pOutBuffer[0] = '\\0';\par
  571             return 0;\par
  572         \}\par
  573     \}\par
  574 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8cpp_a83d135741203dce4201423de8063b2c2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v PrintFloat64\:dprint.cpp}
{\xe \v dprint.cpp\:PrintFloat64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} PrintFloat64 ({\b tC8} *  {\i pOutBuffer}, {\b tU32}  {\i bufferSize}, {\b tF64}  {\i value}, {\b tPrintFloatFormat}  {\i format}, {\b tS32}  {\i precision}, {\b tC8}  {\i decimalPoint})}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 582 of file dprint.cpp.}\par
{
References FormatPositional(), FormatScientific(), tFloatUnion64::GetExponent(), tFloatUnion64::GetMantissa(), tFloatUnion64::IsNegative(), LogBase2(), tFloatUnion64::m_floatingPoint, PrintFloatFormat_Positional, PrintFloatFormat_Scientific, and PrintInfNan().}\par
{
Referenced by DecimalSystem::GetRealText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   592 \{\par
  593     if (bufferSize == 0)\par
  594         return 0;\par
  595 \par
  596     if (bufferSize == 1)\par
  597     \{\par
  598         pOutBuffer[0] = '\\0';\par
  599         return 1;\par
  600     \}\par
  601 \par
  602     // deconstruct the floating point value\par
  603     tFloatUnion64 floatUnion;\par
  604     floatUnion.m_floatingPoint = value;\par
  605     tU32 floatExponent = floatUnion.GetExponent();\par
  606     tU64 floatMantissa = floatUnion.GetMantissa();\par
  607 \par
  608     // output the sign\par
  609     if (floatUnion.IsNegative())\par
  610     \{\par
  611         pOutBuffer[0] = '-';\par
  612         ++pOutBuffer;\par
  613         --bufferSize;\par
  614         RJ_ASSERT(bufferSize > 0);\par
  615     \}\par
  616 \par
  617     // if this is a special value\par
  618     if (floatExponent == 0x7FF)\par
  619     \{\par
  620         return PrintInfNan(pOutBuffer, bufferSize, floatMantissa, 13);\par
  621     \}\par
  622     // else this is a number\par
  623     else\par
  624     \{\par
  625         // factor the value into its parts\par
  626         tU64 mantissa;\par
  627         tS32 exponent;\par
  628         tU32 mantissaHighBitIdx;\par
  629         tB hasUnequalMargins;\par
  630 \par
  631         if (floatExponent != 0)\par
  632         \{\par
  633             // normal\par
  634             // The floating point equation is:\par
  635             //  value = (1 + mantissa/2^52) * 2 ^ (exponent-1023)\par
  636             // We convert the integer equation by factoring a 2^52 out of the exponent\par
  637             //  value = (1 + mantissa/2^52) * 2^52 * 2 ^ (exponent-1023-52)\par
  638             //  value = (2^52 + mantissa) * 2 ^ (exponent-1023-52)\par
  639             // Because of the implied 1 in front of the mantissa we have 53 bits of precision.\par
  640             //   m = (2^52 + mantissa)\par
  641             //   e = (exponent-1023+1-53)\par
  642             mantissa            = (1ull << 52) | floatMantissa;\par
  643             exponent            = floatExponent - 1023 - 52;\par
  644             mantissaHighBitIdx  = 52;\par
  645             hasUnequalMargins   = (floatExponent != 1) && (floatMantissa == 0);\par
  646         \}\par
  647         else\par
  648         \{\par
  649             // subnormal\par
  650             // The floating point equation is:\par
  651             //  value = (mantissa/2^52) * 2 ^ (1-1023)\par
  652             // We convert the integer equation by factoring a 2^52 out of the exponent\par
  653             //  value = (mantissa/2^52) * 2^52 * 2 ^ (1-1023-52)\par
  654             //  value = mantissa * 2 ^ (1-1023-52)\par
  655             // We have up to 52 bits of precision.\par
  656             //   m = (mantissa)\par
  657             //   e = (1-1023-52)\par
  658             mantissa            = floatMantissa;\par
  659             exponent            = 1 - 1023 - 52;\par
  660             mantissaHighBitIdx  = LogBase2(mantissa);\par
  661             hasUnequalMargins   = false;\par
  662         \}\par
  663 \par
  664         // format the value\par
  665         switch (format)\par
  666         \{\par
  667         case PrintFloatFormat_Positional:\par
  668             return FormatPositional(    pOutBuffer,\par
  669                                         bufferSize,\par
  670                                         mantissa,\par
  671                                         exponent,\par
  672                                         mantissaHighBitIdx,\par
  673                                         hasUnequalMargins,\par
  674                                         precision,\par
  675                                         decimalPoint );\par
  676 \par
  677         case PrintFloatFormat_Scientific:\par
  678             return FormatScientific(    pOutBuffer,\par
  679                                         bufferSize,\par
  680                                         mantissa,\par
  681                                         exponent,\par
  682                                         mantissaHighBitIdx,\par
  683                                         hasUnequalMargins,\par
  684                                         precision,\par
  685                                         decimalPoint );\par
  686 \par
  687         default:\par
  688             pOutBuffer[0] = '\\0';\par
  689             return 0;\par
  690         \}\par
  691     \}\par
  692 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8cpp_abd2c48bc16cbab3eb5ec361153f21cbe_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8cpp_abd2c48bc16cbab3eb5ec361153f21cbe_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v PrintHex\:dprint.cpp}
{\xe \v dprint.cpp\:PrintHex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b tU32} PrintHex ({\b tC8} *  {\i pOutBuffer}, {\b tU32}  {\i bufferSize}, {\b tU64}  {\i value}, {\b tU32}  {\i width}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 399 of file dprint.cpp.}\par
{
Referenced by PrintInfNan().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   400 \{\par
  401     const tC8 digits[] = "0123456789abcdef";\par
  402 \par
  403     RJ_ASSERT(bufferSize > 0);\par
  404 \par
  405     tU32 maxPrintLen = bufferSize-1;\par
  406     if (width > maxPrintLen)\par
  407         width = maxPrintLen;\par
  408 \par
  409     tC8 * pCurOut = pOutBuffer;\par
  410     while (width > 0)\par
  411     \{\par
  412         --width;\par
  413 \par
  414         tU8 digit = (tU8)((value >> 4ull*(tU64)width) & 0xF);\par
  415         *pCurOut = digits[digit];\par
  416 \par
  417         ++pCurOut;\par
  418     \}\par
  419 \par
  420     *pCurOut = '\\0';\par
  421     return pCurOut - pOutBuffer;\par
  422 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8cpp_ad8dae51a6e8f43f36e5c7866583f0e05_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v PrintInfNan\:dprint.cpp}
{\xe \v dprint.cpp\:PrintInfNan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b tU32} PrintInfNan ({\b tC8} *  {\i pOutBuffer}, {\b tU32}  {\i bufferSize}, {\b tU64}  {\i mantissa}, {\b tU32}  {\i mantissaHexWidth}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 429 of file dprint.cpp.}\par
{
References MemCopy(), and PrintHex().}\par
{
Referenced by PrintFloat32(), and PrintFloat64().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   430 \{\par
  431     RJ_ASSERT(bufferSize > 0);\par
  432 \par
  433     tU32 maxPrintLen = bufferSize-1;\par
  434 \par
  435     // Check for infinity\par
  436     if (mantissa == 0)\par
  437     \{\par
  438         // copy and make sure the buffer is terminated\par
  439         tU32 printLen = (3 < maxPrintLen) ? 3 : maxPrintLen;\par
  440         ::memcpy( pOutBuffer, "Inf", printLen );\par
  441         pOutBuffer[printLen] = '\\0';\par
  442         return printLen;\par
  443     \}\par
  444     else\par
  445     \{\par
  446         // copy and make sure the buffer is terminated\par
  447         tU32 printLen = (3 < maxPrintLen) ? 3 : maxPrintLen;\par
  448         ::memcpy( pOutBuffer, "NaN", printLen );\par
  449         pOutBuffer[printLen] = '\\0';\par
  450 \par
  451         // append HEX value\par
  452         if (maxPrintLen > 3)\par
  453             printLen += PrintHex(pOutBuffer+3, bufferSize-3, mantissa, mantissaHexWidth);\par
  454 \par
  455         return printLen;\par
  456     \}\par
  457 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8cpp_ac1192be7b47f41c6b593be33d0ad423f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8cpp_ac1192be7b47f41c6b593be33d0ad423f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/dconv/dragon4.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v lib/dconv/dragon4.cpp}
{\xe \v lib/dconv/dragon4.cpp}
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "math.h"}\par
{\f2 #include "dmath.h"}\par
{\f2 #include "dragon4.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for dragon4.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tBigInt}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b tS32} {\b BigInt_Compare} (const {\b tBigInt} &lhs, const {\b tBigInt} &rhs)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b BigInt_Add} ({\b tBigInt} *pResult, const {\b tBigInt} &lhs, const {\b tBigInt} &rhs)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b BigInt_Multiply} ({\b tBigInt} *pResult, const {\b tBigInt} &lhs, const {\b tBigInt} &rhs)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b BigInt_Multiply} ({\b tBigInt} *pResult, const {\b tBigInt} &lhs, {\b tU32} rhs)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b BigInt_Multiply2} ({\b tBigInt} *pResult, const {\b tBigInt} &in)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b BigInt_Multiply2} ({\b tBigInt} *pResult)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b BigInt_Multiply10} ({\b tBigInt} *pResult)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b BigInt_Pow10} ({\b tBigInt} *pResult, {\b tU32} exponent)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b BigInt_MultiplyPow10} ({\b tBigInt} *pResult, const {\b tBigInt} &in, {\b tU32} exponent)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b BigInt_Pow2} ({\b tBigInt} *pResult, {\b tU32} exponent)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b tU32} {\b BigInt_DivideWithRemainder_MaxQuotient9} ({\b tBigInt} *pDividend, const {\b tBigInt} &divisor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b BigInt_ShiftLeft} ({\b tBigInt} *pResult, {\b tU32} shift)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b Dragon4} (const {\b tU64} mantissa, const {\b tS32} exponent, const {\b tU32} mantissaHighBitIdx, const {\b tB} hasUnequalMargins, const {\b tCutoffMode} cutoffMode, {\b tU32} cutoffNumber, {\b tC8} *pOutBuffer, {\b tU32} bufferSize, {\b tS32} *pOutExponent)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dragon4 main. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b tU32} {\b c_BigInt_MaxBlocks} = 35\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b tU32} {\b g_PowerOf10_U32} []\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b tBigInt} {\b g_PowerOf10_Big} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v BigInt_Add\:dragon4.cpp}
{\xe \v dragon4.cpp\:BigInt_Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void BigInt_Add ({\b tBigInt} *  {\i pResult}, const {\b tBigInt} &  {\i lhs}, const {\b tBigInt} &  {\i rhs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 173 of file dragon4.cpp.}\par
{
References tBigInt::m_blocks, and tBigInt::m_length.}\par
{
Referenced by Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   174 \{\par
  175     // determine which operand has the smaller length\par
  176     const tBigInt * pLarge;\par
  177     const tBigInt * pSmall;\par
  178     if (lhs.m_length < rhs.m_length)\par
  179     \{\par
  180         pSmall = &lhs;\par
  181         pLarge = &rhs;\par
  182     \}\par
  183     else\par
  184     \{\par
  185         pSmall = &rhs;\par
  186         pLarge = &lhs;\par
  187     \}\par
  188 \par
  189     const tU32 largeLen = pLarge->m_length;\par
  190     const tU32 smallLen = pSmall->m_length;\par
  191 \par
  192     // The output will be at least as long as the largest input\par
  193     pResult->m_length = largeLen;\par
  194 \par
  195     // Add each block and add carry the overflow to the next block\par
  196     tU64 carry = 0;\par
  197     const tU32 * pLargeCur  = pLarge->m_blocks;\par
  198     const tU32 * pLargeEnd  = pLargeCur + largeLen;\par
  199     const tU32 * pSmallCur  = pSmall->m_blocks;\par
  200     const tU32 * pSmallEnd  = pSmallCur + smallLen;\par
  201     tU32 *       pResultCur = pResult->m_blocks;\par
  202     while (pSmallCur != pSmallEnd)\par
  203     \{\par
  204         tU64 sum = carry + (tU64)(*pLargeCur) + (tU64)(*pSmallCur);\par
  205         carry = sum >> 32;\par
  206         (*pResultCur) = sum & 0xFFFFFFFF;\par
  207         ++pLargeCur;\par
  208         ++pSmallCur;\par
  209         ++pResultCur;\par
  210     \}\par
  211 \par
  212     // Add the carry to any blocks that only exist in the large operand\par
  213     while (pLargeCur != pLargeEnd)\par
  214     \{\par
  215         tU64 sum = carry + (tU64)(*pLargeCur);\par
  216         carry = sum >> 32;\par
  217         (*pResultCur) = sum & 0xFFFFFFFF;\par
  218         ++pLargeCur;\par
  219         ++pResultCur;\par
  220     \}\par
  221 \par
  222     // If there's still a carry, append a new block\par
  223     if (carry != 0)\par
  224     \{\par
  225         RJ_ASSERT(carry == 1);\par
  226         RJ_ASSERT((tU32)(pResultCur - pResult->m_blocks) == largeLen && (largeLen < c_BigInt_MaxBlocks));\par
  227         *pResultCur = 1;\par
  228         pResult->m_length = largeLen + 1;\par
  229     \}\par
  230     else\par
  231     \{\par
  232         pResult->m_length = largeLen;\par
  233     \}\par
  234 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_a83565e877dc63daa2fbf89e2835ccc94_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v BigInt_Compare\:dragon4.cpp}
{\xe \v dragon4.cpp\:BigInt_Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b tS32} BigInt_Compare (const {\b tBigInt} &  {\i lhs}, const {\b tBigInt} &  {\i rhs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file dragon4.cpp.}\par
{
References tBigInt::m_blocks, and tBigInt::m_length.}\par
{
Referenced by BigInt_DivideWithRemainder_MaxQuotient9(), and Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   149 \{\par
  150     // A bigger length implies a bigger number.\par
  151     tS32 lengthDiff = lhs.m_length - rhs.m_length;\par
  152     if (lengthDiff != 0)\par
  153         return lengthDiff;\par
  154 \par
  155     // Compare blocks one by one from high to low.\par
  156     for (tS32 i = lhs.m_length - 1; i >= 0; --i)\par
  157     \{\par
  158         if (lhs.m_blocks[i] == rhs.m_blocks[i])\par
  159             continue;\par
  160         else if (lhs.m_blocks[i] > rhs.m_blocks[i])\par
  161             return 1;\par
  162         else\par
  163             return -1;\par
  164     \}\par
  165 \par
  166     // no blocks differed\par
  167     return 0;\par
  168 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_a1c02bba02f26528317e59d6599379d6f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v BigInt_DivideWithRemainder_MaxQuotient9\:dragon4.cpp}
{\xe \v dragon4.cpp\:BigInt_DivideWithRemainder_MaxQuotient9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b tU32} BigInt_DivideWithRemainder_MaxQuotient9 ({\b tBigInt} *  {\i pDividend}, const {\b tBigInt} &  {\i divisor}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 594 of file dragon4.cpp.}\par
{
References BigInt_Compare(), tBigInt::m_blocks, and tBigInt::m_length.}\par
{
Referenced by Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   595 \{\par
  596     // Check that the divisor has been correctly shifted into range and that it is not\par
  597     // smaller than the dividend in length.\par
  598     RJ_ASSERT(  !divisor.IsZero() &&\par
  599                 divisor.m_blocks[divisor.m_length-1] >= 8 &&\par
  600                 divisor.m_blocks[divisor.m_length-1] < 0xFFFFFFFF &&\par
  601                 pDividend->m_length <= divisor.m_length );\par
  602 \par
  603     // If the dividend is smaller than the divisor, the quotient is zero and the divisor is already\par
  604     // the remainder.\par
  605     tU32 length = divisor.m_length;\par
  606     if (pDividend->m_length < divisor.m_length)\par
  607         return 0;\par
  608 \par
  609     const tU32 * pFinalDivisorBlock  = divisor.m_blocks + length - 1;\par
  610     tU32 *       pFinalDividendBlock = pDividend->m_blocks + length - 1;\par
  611 \par
  612     // Compute an estimated quotient based on the high block value. This will either match the actual quotient or\par
  613     // undershoot by one.\par
  614     tU32  quotient = *pFinalDividendBlock / (*pFinalDivisorBlock + 1);\par
  615     RJ_ASSERT(quotient <= 9);\par
  616 \par
  617     // Divide out the estimated quotient\par
  618     if (quotient != 0)\par
  619     \{\par
  620         // dividend = dividend - divisor*quotient\par
  621         const tU32 *pDivisorCur = divisor.m_blocks;\par
  622         tU32 *pDividendCur      = pDividend->m_blocks;\par
  623 \par
  624         tU64 borrow = 0;\par
  625         tU64 carry = 0;\par
  626         do\par
  627         \{\par
  628             tU64 product = (tU64)*pDivisorCur * (tU64)quotient + carry;\par
  629             carry = product >> 32;\par
  630 \par
  631             tU64 difference = (tU64)*pDividendCur - (product & 0xFFFFFFFF) - borrow;\par
  632             borrow = (difference >> 32) & 1;\par
  633 \par
  634             *pDividendCur = difference & 0xFFFFFFFF;\par
  635 \par
  636             ++pDivisorCur;\par
  637             ++pDividendCur;\par
  638         \} while(pDivisorCur <= pFinalDivisorBlock);\par
  639 \par
  640         // remove all leading zero blocks from dividend\par
  641         while (length > 0 && pDividend->m_blocks[length - 1] == 0)\par
  642             --length;\par
  643 \par
  644         pDividend->m_length = length;\par
  645     \}\par
  646 \par
  647     // If the dividend is still larger than the divisor, we overshot our estimate quotient. To correct,\par
  648     // we increment the quotient and subtract one more divisor from the dividend.\par
  649     if ( BigInt_Compare(*pDividend, divisor) >= 0 )\par
  650     \{\par
  651         ++quotient;\par
  652 \par
  653         // dividend = dividend - divisor\par
  654         const tU32 *pDivisorCur = divisor.m_blocks;\par
  655         tU32 *pDividendCur      = pDividend->m_blocks;\par
  656 \par
  657         tU64 borrow = 0;\par
  658         do\par
  659         \{\par
  660             tU64 difference = (tU64)*pDividendCur - (tU64)*pDivisorCur - borrow;\par
  661             borrow = (difference >> 32) & 1;\par
  662 \par
  663             *pDividendCur = difference & 0xFFFFFFFF;\par
  664 \par
  665             ++pDivisorCur;\par
  666             ++pDividendCur;\par
  667         \} while(pDivisorCur <= pFinalDivisorBlock);\par
  668 \par
  669         // remove all leading zero blocks from dividend\par
  670         while (length > 0 && pDividend->m_blocks[length - 1] == 0)\par
  671             --length;\par
  672 \par
  673         pDividend->m_length = length;\par
  674     \}\par
  675 \par
  676     return quotient;\par
  677 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_a09244488f43f59ceaf0909ef9b405626_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_a09244488f43f59ceaf0909ef9b405626_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v BigInt_Multiply\:dragon4.cpp}
{\xe \v dragon4.cpp\:BigInt_Multiply}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void BigInt_Multiply ({\b tBigInt} *  {\i pResult}, const {\b tBigInt} &  {\i lhs}, const {\b tBigInt} &  {\i rhs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 239 of file dragon4.cpp.}\par
{
References tBigInt::m_blocks, and tBigInt::m_length.}\par
{
Referenced by BigInt_MultiplyPow10(), BigInt_Pow10(), and Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   240 \{\par
  241     RJ_ASSERT( pResult != &lhs && pResult != &rhs );\par
  242 \par
  243     // determine which operand has the smaller length\par
  244     const tBigInt * pLarge;\par
  245     const tBigInt * pSmall;\par
  246     if (lhs.m_length < rhs.m_length)\par
  247     \{\par
  248         pSmall = &lhs;\par
  249         pLarge = &rhs;\par
  250     \}\par
  251     else\par
  252     \{\par
  253         pSmall = &rhs;\par
  254         pLarge = &lhs;\par
  255     \}\par
  256 \par
  257     // set the maximum possible result length\par
  258     tU32 maxResultLen = pLarge->m_length + pSmall->m_length;\par
  259     RJ_ASSERT( maxResultLen <= c_BigInt_MaxBlocks );\par
  260 \par
  261     // clear the result data\par
  262     for(tU32 * pCur = pResult->m_blocks, *pEnd = pCur + maxResultLen; pCur != pEnd; ++pCur)\par
  263         *pCur = 0;\par
  264 \par
  265     // perform standard long multiplication\par
  266     const tU32 *pLargeBeg = pLarge->m_blocks;\par
  267     const tU32 *pLargeEnd = pLargeBeg + pLarge->m_length;\par
  268 \par
  269     // for each small block\par
  270     tU32 *pResultStart = pResult->m_blocks;\par
  271     for(const tU32 *pSmallCur = pSmall->m_blocks, *pSmallEnd = pSmallCur + pSmall->m_length;\par
  272             pSmallCur != pSmallEnd;\par
  273             ++pSmallCur, ++pResultStart)\par
  274     \{\par
  275         // if non-zero, multiply against all the large blocks and add into the result\par
  276         const tU32 multiplier = *pSmallCur;\par
  277         if (multiplier != 0)\par
  278         \{\par
  279             const tU32 *pLargeCur = pLargeBeg;\par
  280             tU32 *pResultCur = pResultStart;\par
  281             tU64 carry = 0;\par
  282             do\par
  283             \{\par
  284                 tU64 product = (*pResultCur) + (*pLargeCur)*(tU64)multiplier + carry;\par
  285                 carry = product >> 32;\par
  286                 *pResultCur = product & 0xFFFFFFFF;\par
  287                 ++pLargeCur;\par
  288                 ++pResultCur;\par
  289             \} while(pLargeCur != pLargeEnd);\par
  290 \par
  291             RJ_ASSERT(pResultCur < pResult->m_blocks + maxResultLen);\par
  292             *pResultCur = (tU32)(carry & 0xFFFFFFFF);\par
  293         \}\par
  294     \}\par
  295 \par
  296     // check if the terminating block has no set bits\par
  297     if (maxResultLen > 0 && pResult->m_blocks[maxResultLen - 1] == 0)\par
  298         pResult->m_length = maxResultLen-1;\par
  299     else\par
  300         pResult->m_length = maxResultLen;\par
  301 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_a706f0dc60cee9f4e28a81787aec73470_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v BigInt_Multiply\:dragon4.cpp}
{\xe \v dragon4.cpp\:BigInt_Multiply}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void BigInt_Multiply ({\b tBigInt} *  {\i pResult}, const {\b tBigInt} &  {\i lhs}, {\b tU32}  {\i rhs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 306 of file dragon4.cpp.}\par
{
References tBigInt::m_blocks, and tBigInt::m_length.}\par
{
Referenced by BigInt_MultiplyPow10().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   307 \{\par
  308     // perform long multiplication\par
  309     tU32 carry = 0;\par
  310     tU32 *pResultCur = pResult->m_blocks;\par
  311     const tU32 *pLhsCur = lhs.m_blocks;\par
  312     const tU32 *pLhsEnd = lhs.m_blocks + lhs.m_length;\par
  313     for ( ; pLhsCur != pLhsEnd; ++pLhsCur, ++pResultCur )\par
  314     \{\par
  315         tU64 product = (tU64)(*pLhsCur) * rhs + carry;\par
  316         *pResultCur = (tU32)(product & 0xFFFFFFFF);\par
  317         carry = product >> 32;\par
  318     \}\par
  319 \par
  320     // if there is a remaining carry, grow the array\par
  321     if (carry != 0)\par
  322     \{\par
  323         // grow the array\par
  324         RJ_ASSERT(lhs.m_length + 1 <= c_BigInt_MaxBlocks);\par
  325         *pResultCur = (tU32)carry;\par
  326         pResult->m_length = lhs.m_length + 1;\par
  327     \}\par
  328     else\par
  329     \{\par
  330         pResult->m_length = lhs.m_length;\par
  331     \}\par
  332 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_ad042c6d884cdf9b09f77fb537b5dcc65_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v BigInt_Multiply10\:dragon4.cpp}
{\xe \v dragon4.cpp\:BigInt_Multiply10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void BigInt_Multiply10 ({\b tBigInt} *  {\i pResult}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 394 of file dragon4.cpp.}\par
{
References tBigInt::m_blocks, and tBigInt::m_length.}\par
{
Referenced by Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   395 \{\par
  396     // multiply all the blocks\par
  397     tU64 carry = 0;\par
  398 \par
  399     tU32 *pCur = pResult->m_blocks;\par
  400     tU32 *pEnd = pResult->m_blocks + pResult->m_length;\par
  401     for ( ; pCur != pEnd; ++pCur )\par
  402     \{\par
  403         tU64 product = (tU64)(*pCur) * 10ull + carry;\par
  404         (*pCur) = (tU32)(product & 0xFFFFFFFF);\par
  405         carry = product >> 32;\par
  406     \}\par
  407 \par
  408     if (carry != 0)\par
  409     \{\par
  410         // grow the array\par
  411         RJ_ASSERT(pResult->m_length + 1 <= c_BigInt_MaxBlocks);\par
  412         *pCur = (tU32)carry;\par
  413         ++pResult->m_length;\par
  414     \}\par
  415 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_a48c80464b1664cb339c7348ef2a2771b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v BigInt_Multiply2\:dragon4.cpp}
{\xe \v dragon4.cpp\:BigInt_Multiply2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void BigInt_Multiply2 ({\b tBigInt} *  {\i pResult}, const {\b tBigInt} &  {\i in}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 337 of file dragon4.cpp.}\par
{
References tBigInt::m_blocks, and tBigInt::m_length.}\par
{
Referenced by Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   338 \{\par
  339     // shift all the blocks by one\par
  340     tU32 carry = 0;\par
  341 \par
  342     tU32 *pResultCur = pResult->m_blocks;\par
  343     const tU32 *pLhsCur = in.m_blocks;\par
  344     const tU32 *pLhsEnd = in.m_blocks + in.m_length;\par
  345     for ( ; pLhsCur != pLhsEnd; ++pLhsCur, ++pResultCur )\par
  346     \{\par
  347         tU32 cur = *pLhsCur;\par
  348         *pResultCur = (cur << 1) | carry;\par
  349         carry = cur >> 31;\par
  350     \}\par
  351 \par
  352     if (carry != 0)\par
  353     \{\par
  354         // grow the array\par
  355         RJ_ASSERT(in.m_length + 1 <= c_BigInt_MaxBlocks);\par
  356         *pResultCur = carry;\par
  357         pResult->m_length = in.m_length + 1;\par
  358     \}\par
  359     else\par
  360     \{\par
  361         pResult->m_length = in.m_length;\par
  362     \}\par
  363 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_a1772b026d1a5802fd0214db6346f0cbc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v BigInt_Multiply2\:dragon4.cpp}
{\xe \v dragon4.cpp\:BigInt_Multiply2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void BigInt_Multiply2 ({\b tBigInt} *  {\i pResult}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 368 of file dragon4.cpp.}\par
{
References tBigInt::m_blocks, and tBigInt::m_length.}\par
{
Referenced by Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   369 \{\par
  370     // shift all the blocks by one\par
  371     tU32 carry = 0;\par
  372 \par
  373     tU32 *pCur = pResult->m_blocks;\par
  374     tU32 *pEnd = pResult->m_blocks + pResult->m_length;\par
  375     for ( ; pCur != pEnd; ++pCur )\par
  376     \{\par
  377         tU32 cur = *pCur;\par
  378         *pCur = (cur << 1) | carry;\par
  379         carry = cur >> 31;\par
  380     \}\par
  381 \par
  382     if (carry != 0)\par
  383     \{\par
  384         // grow the array\par
  385         RJ_ASSERT(pResult->m_length + 1 <= c_BigInt_MaxBlocks);\par
  386         *pCur = carry;\par
  387         ++pResult->m_length;\par
  388     \}\par
  389 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_aa9a15bb474238742ede2b9bc5cce02ff_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v BigInt_MultiplyPow10\:dragon4.cpp}
{\xe \v dragon4.cpp\:BigInt_MultiplyPow10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void BigInt_MultiplyPow10 ({\b tBigInt} *  {\i pResult}, const {\b tBigInt} &  {\i in}, {\b tU32}  {\i exponent}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 511 of file dragon4.cpp.}\par
{
References BigInt_Multiply(), g_PowerOf10_Big, g_PowerOf10_U32, and tBigInt::operator=().}\par
{
Referenced by Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   512 \{\par
  513     // make sure the exponent is within the bounds of the lookup table data\par
  514     RJ_ASSERT(exponent < 512);\par
  515 \par
  516     // create two temporary values to reduce large integer copy operations\par
  517     tBigInt temp1;\par
  518     tBigInt temp2;\par
  519     tBigInt *pCurTemp = &temp1;\par
  520     tBigInt *pNextTemp = &temp2;\par
  521 \par
  522     // initialize the result by looking up a 32-bit power of 10 corresponding to the first 3 bits\par
  523     tU32 smallExponent = exponent & 0x7;\par
  524     if (smallExponent != 0)\par
  525     \{\par
  526         BigInt_Multiply( pCurTemp, in, g_PowerOf10_U32[smallExponent] );\par
  527     \}\par
  528     else\par
  529     \{\par
  530         *pCurTemp = in;\par
  531     \}\par
  532 \par
  533     // remove the low bits that we used for the 32-bit lookup table\par
  534     exponent >>= 3;\par
  535     tU32 tableIdx = 0;\par
  536 \par
  537     // while there are remaining bits in the exponent to be processed\par
  538     while (exponent != 0)\par
  539     \{\par
  540         // if the current bit is set, multiply it with the corresponding power of 10\par
  541         if(exponent & 1)\par
  542         \{\par
  543             // multiply into the next temporary\par
  544             BigInt_Multiply( pNextTemp, *pCurTemp, g_PowerOf10_Big[tableIdx] );\par
  545 \par
  546             // swap to the next temporary\par
  547             tBigInt * pSwap = pCurTemp;\par
  548             pCurTemp = pNextTemp;\par
  549             pNextTemp = pSwap;\par
  550         \}\par
  551 \par
  552         // advance to the next bit\par
  553         ++tableIdx;\par
  554         exponent >>= 1;\par
  555     \}\par
  556 \par
  557     // output the result\par
  558     *pResult = *pCurTemp;\par
  559 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_a4956a6f2bde27b9ce21f660f4f210183_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_a4956a6f2bde27b9ce21f660f4f210183_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v BigInt_Pow10\:dragon4.cpp}
{\xe \v dragon4.cpp\:BigInt_Pow10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void BigInt_Pow10 ({\b tBigInt} *  {\i pResult}, {\b tU32}  {\i exponent}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 465 of file dragon4.cpp.}\par
{
References BigInt_Multiply(), g_PowerOf10_Big, g_PowerOf10_U32, tBigInt::operator=(), and tBigInt::SetU32().}\par
{
Referenced by Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   466 \{\par
  467     // make sure the exponent is within the bounds of the lookup table data\par
  468     RJ_ASSERT(exponent < 512);\par
  469 \par
  470     // create two temporary values to reduce large integer copy operations\par
  471     tBigInt temp1;\par
  472     tBigInt temp2;\par
  473     tBigInt *pCurTemp = &temp1;\par
  474     tBigInt *pNextTemp = &temp2;\par
  475 \par
  476     // initialize the result by looking up a 32-bit power of 10 corresponding to the first 3 bits\par
  477     tU32 smallExponent = exponent & 0x7;\par
  478     pCurTemp->SetU32(g_PowerOf10_U32[smallExponent]);\par
  479 \par
  480     // remove the low bits that we used for the 32-bit lookup table\par
  481     exponent >>= 3;\par
  482     tU32 tableIdx = 0;\par
  483 \par
  484     // while there are remaining bits in the exponent to be processed\par
  485     while (exponent != 0)\par
  486     \{\par
  487         // if the current bit is set, multiply it with the corresponding power of 10\par
  488         if(exponent & 1)\par
  489         \{\par
  490             // multiply into the next temporary\par
  491             BigInt_Multiply( pNextTemp, *pCurTemp, g_PowerOf10_Big[tableIdx] );\par
  492 \par
  493             // swap to the next temporary\par
  494             tBigInt * pSwap = pCurTemp;\par
  495             pCurTemp = pNextTemp;\par
  496             pNextTemp = pSwap;\par
  497         \}\par
  498 \par
  499         // advance to the next bit\par
  500         ++tableIdx;\par
  501         exponent >>= 1;\par
  502     \}\par
  503 \par
  504     // output the result\par
  505     *pResult = *pCurTemp;\par
  506 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_a29b0dfce8001ff786da11c98281097c4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_a29b0dfce8001ff786da11c98281097c4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v BigInt_Pow2\:dragon4.cpp}
{\xe \v dragon4.cpp\:BigInt_Pow2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void BigInt_Pow2 ({\b tBigInt} *  {\i pResult}, {\b tU32}  {\i exponent}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 564 of file dragon4.cpp.}\par
{
References tBigInt::m_blocks, and tBigInt::m_length.}\par
{
Referenced by Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   565 \{\par
  566     tU32 blockIdx = exponent / 32;\par
  567     RJ_ASSERT( blockIdx < c_BigInt_MaxBlocks );\par
  568 \par
  569     for ( tU32 i = 0; i <= blockIdx; ++i)\par
  570         pResult->m_blocks[i] = 0;\par
  571 \par
  572     pResult->m_length = blockIdx + 1;\par
  573 \par
  574     tU32 bitIdx = (exponent % 32);\par
  575     pResult->m_blocks[blockIdx] |= (1 << bitIdx);\par
  576 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_aec271fe4eb1817a10d3bb20baa5e7695_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v BigInt_ShiftLeft\:dragon4.cpp}
{\xe \v dragon4.cpp\:BigInt_ShiftLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void BigInt_ShiftLeft ({\b tBigInt} *  {\i pResult}, {\b tU32}  {\i shift}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 682 of file dragon4.cpp.}\par
{
References tBigInt::m_blocks, and tBigInt::m_length.}\par
{
Referenced by Dragon4().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   683 \{\par
  684     RJ_ASSERT( shift != 0 );\par
  685 \par
  686     tU32 shiftBlocks = shift / 32;\par
  687     tU32 shiftBits = shift % 32;\par
  688 \par
  689     // process blocks high to low so that we can safely process in place\par
  690     const tU32 *    pInBlocks   = pResult->m_blocks;\par
  691     tS32            inLength    = pResult->m_length;\par
  692     RJ_ASSERT( inLength + shiftBlocks < c_BigInt_MaxBlocks );\par
  693 \par
  694     // check if the shift is block aligned\par
  695     if (shiftBits == 0)\par
  696     \{\par
  697         // copy blcoks from high to low\par
  698         for (tU32 * pInCur = pResult->m_blocks + inLength, *pOutCur = pInCur + shiftBlocks;\par
  699                 pInCur >= pInBlocks;\par
  700                 --pInCur, --pOutCur)\par
  701         \{\par
  702             *pOutCur = *pInCur;\par
  703         \}\par
  704 \par
  705         // zero the remaining low blocks\par
  706         for ( tU32 i = 0; i < shiftBlocks; ++i)\par
  707             pResult->m_blocks[i] = 0;\par
  708 \par
  709         pResult->m_length += shiftBlocks;\par
  710     \}\par
  711     // else we need to shift partial blocks\par
  712     else\par
  713     \{\par
  714         tS32 inBlockIdx  = inLength - 1;\par
  715         tU32 outBlockIdx = inLength + shiftBlocks;\par
  716 \par
  717         // set the length to hold the shifted blocks\par
  718         RJ_ASSERT( outBlockIdx < c_BigInt_MaxBlocks );\par
  719         pResult->m_length = outBlockIdx + 1;\par
  720 \par
  721         // output the initial blocks\par
  722         const tU32 lowBitsShift = (32 - shiftBits);\par
  723         tU32 highBits = 0;\par
  724         tU32 block = pResult->m_blocks[inBlockIdx];\par
  725         tU32 lowBits = block >> lowBitsShift;\par
  726         while ( inBlockIdx > 0 )\par
  727         \{\par
  728             pResult->m_blocks[outBlockIdx] = highBits | lowBits;\par
  729             highBits = block << shiftBits;\par
  730 \par
  731             --inBlockIdx;\par
  732             --outBlockIdx;\par
  733 \par
  734             block = pResult->m_blocks[inBlockIdx];\par
  735             lowBits = block >> lowBitsShift;\par
  736         \}\par
  737 \par
  738         // output the final blocks\par
  739         RJ_ASSERT( outBlockIdx == shiftBlocks + 1 );\par
  740         pResult->m_blocks[outBlockIdx] = highBits | lowBits;\par
  741         pResult->m_blocks[outBlockIdx-1] = block << shiftBits;\par
  742 \par
  743         // zero the remaining low blocks\par
  744         for ( tU32 i = 0; i < shiftBlocks; ++i)\par
  745             pResult->m_blocks[i] = 0;\par
  746 \par
  747         // check if the terminating block has no set bits\par
  748         if (pResult->m_blocks[pResult->m_length - 1] == 0)\par
  749             --pResult->m_length;\par
  750     \}\par
  751 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_ad7065d256b1e7c2b3dffe0918776f720_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Dragon4\:dragon4.cpp}
{\xe \v dragon4.cpp\:Dragon4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} Dragon4 ({\b tU64}  {\i mantissa}, {\b tS32}  {\i exponent}, {\b tU32}  {\i mantissaHighBitIdx}, {\b tB}  {\i hasUnequalMargins}, enum {\b tCutoffMode}  {\i cutoffMode}, {\b tU32}  {\i cutoffNumber}, {\b tC8} *  {\i pOutBuffer}, {\b tU32}  {\i bufferSize}, {\b tS32} *  {\i pOutExponent})}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dragon4 main. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Downloaded from:\par
 {\f2 http://www.ryanjuckett.com/}\par
This is an implementation the Dragon4 algorithm to convert a binary number in floating point format to a decimal number in string format. The function returns the number of digits written to the output buffer and the output is not NUL terminated.\par
The floating point input value is (mantissa * 2^exponent).\par
See the following papers for more information on the algorithm:\par
 "How to Print Floating-Point Numbers Accurately"\par
 Steele and White\par
 {\f2 http://kurtstephens.com/files/p372-steele.pdf}\par
 "Printing Floating-Point Numbers Quickly and Accurately"\par
 Burger and Dybvig\par
 {\f2 http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.72.4656&rep=rep1&type=pdf}\par
 \par
}{
Definition at line 770 of file dragon4.cpp.}\par
{
References BigInt_Add(), BigInt_Compare(), BigInt_DivideWithRemainder_MaxQuotient9(), BigInt_Multiply(), BigInt_Multiply10(), BigInt_Multiply2(), BigInt_MultiplyPow10(), BigInt_Pow10(), BigInt_Pow2(), BigInt_ShiftLeft(), CutoffMode_FractionLength, CutoffMode_TotalLength, CutoffMode_Unique, tBigInt::GetBlock(), tBigInt::GetLength(), tBigInt::IsZero(), LogBase2(), tBigInt::operator=(), tBigInt::SetU32(), and tBigInt::SetU64().}\par
{
Referenced by FormatPositional(), and FormatScientific().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   781 \{\par
  782     tC8 * pCurDigit = pOutBuffer;\par
  783 \par
  784     RJ_ASSERT( bufferSize > 0 );\par
  785 \par
  786     // if the mantissa is zero, the value is zero regardless of the exponent\par
  787     if (mantissa == 0)\par
  788     \{\par
  789         *pCurDigit = '0';\par
  790         *pOutExponent = 0;\par
  791         return 1;\par
  792     \}\par
  793 \par
  794     // compute the initial state in integral form such that\par
  795     //  value     = scaledValue / scale\par
  796     //  marginLow = scaledMarginLow / scale\par
  797     tBigInt scale;              // positive scale applied to value and margin such that they can be\par
  798     //  represented as whole numbers\par
  799     tBigInt scaledValue;        // scale * mantissa\par
  800     tBigInt scaledMarginLow;    // scale * 0.5 * (distance between this floating-point number and its\par
  801     //  immediate lower value)\par
  802 \par
  803     // For normalized IEEE floating point values, each time the exponent is incremented the margin also\par
  804     // doubles. That creates a subset of transition numbers where the high margin is twice the size of\par
  805     // the low margin.\par
  806     tBigInt * pScaledMarginHigh;\par
  807     tBigInt optionalMarginHigh;\par
  808 \par
  809     if ( hasUnequalMargins )\par
  810     \{\par
  811         // if we have no fractional component\par
  812         if (exponent > 0)\par
  813         \{\par
  814             // 1) Expand the input value by multiplying out the mantissa and exponent. This represents\par
  815             //    the input value in its whole number representation.\par
  816             // 2) Apply an additional scale of 2 such that later comparisons against the margin values\par
  817             //    are simplified.\par
  818             // 3) Set the margin value to the lowest mantissa bit's scale.\par
  819 \par
  820             // scaledValue      = 2 * 2 * mantissa*2^exponent\par
  821             scaledValue.SetU64( 4 * mantissa );\par
  822             BigInt_ShiftLeft( &scaledValue, exponent );\par
  823 \par
  824             // scale            = 2 * 2 * 1\par
  825             scale.SetU32( 4 );\par
  826 \par
  827             // scaledMarginLow  = 2 * 2^(exponent-1)\par
  828             BigInt_Pow2( &scaledMarginLow, exponent );\par
  829 \par
  830             // scaledMarginHigh = 2 * 2 * 2^(exponent-1)\par
  831             BigInt_Pow2( &optionalMarginHigh, exponent + 1 );\par
  832         \}\par
  833         // else we have a fractional exponent\par
  834         else\par
  835         \{\par
  836             // In order to track the mantissa data as an integer, we store it as is with a large scale\par
  837 \par
  838             // scaledValue      = 2 * 2 * mantissa\par
  839             scaledValue.SetU64( 4 * mantissa );\par
  840 \par
  841             // scale            = 2 * 2 * 2^(-exponent)\par
  842             BigInt_Pow2(&scale, -exponent + 2 );\par
  843 \par
  844             // scaledMarginLow  = 2 * 2^(-1)\par
  845             scaledMarginLow.SetU32( 1 );\par
  846 \par
  847             // scaledMarginHigh = 2 * 2 * 2^(-1)\par
  848             optionalMarginHigh.SetU32( 2 );\par
  849         \}\par
  850 \par
  851         // the high and low margins are different\par
  852         pScaledMarginHigh = &optionalMarginHigh;\par
  853     \}\par
  854     else\par
  855     \{\par
  856         // if we have no fractional component\par
  857         if (exponent > 0)\par
  858         \{\par
  859             // 1) Expand the input value by multiplying out the mantissa and exponent. This represents\par
  860             //    the input value in its whole number representation.\par
  861             // 2) Apply an additional scale of 2 such that later comparisons against the margin values\par
  862             //    are simplified.\par
  863             // 3) Set the margin value to the lowest mantissa bit's scale.\par
  864 \par
  865             // scaledValue     = 2 * mantissa*2^exponent\par
  866             scaledValue.SetU64( 2 * mantissa );\par
  867             BigInt_ShiftLeft( &scaledValue, exponent );\par
  868 \par
  869             // scale           = 2 * 1\par
  870             scale.SetU32( 2 );\par
  871 \par
  872             // scaledMarginLow = 2 * 2^(exponent-1)\par
  873             BigInt_Pow2( &scaledMarginLow, exponent );\par
  874         \}\par
  875         // else we have a fractional exponent\par
  876         else\par
  877         \{\par
  878             // In order to track the mantissa data as an integer, we store it as is with a large scale\par
  879 \par
  880             // scaledValue     = 2 * mantissa\par
  881             scaledValue.SetU64( 2 * mantissa );\par
  882 \par
  883             // scale           = 2 * 2^(-exponent)\par
  884             BigInt_Pow2(&scale, -exponent + 1 );\par
  885 \par
  886             // scaledMarginLow = 2 * 2^(-1)\par
  887             scaledMarginLow.SetU32( 1 );\par
  888         \}\par
  889 \par
  890         // the high and low margins are equal\par
  891         pScaledMarginHigh = &scaledMarginLow;\par
  892     \}\par
  893 \par
  894     // Compute an estimate for digitExponent that will be correct or undershoot by one.\par
  895     // This optimization is based on the paper "Printing Floating-Point Numbers Quickly and Accurately"\par
  896     // by Burger and Dybvig http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.72.4656&rep=rep1&type=pdf\par
  897     // We perform an additional subtraction of 0.69 to increase the frequency of a failed estimate\par
  898     // because that lets us take a faster branch in the code. 0.69 is chosen because 0.69 + log10(2) is\par
  899     // less than one by a reasonable epsilon that will account for any floating point error.\par
  900     //\par
  901     // We want to set digitExponent to floor(log10(v)) + 1\par
  902     //  v = mantissa*2^exponent\par
  903     //  log2(v) = log2(mantissa) + exponent;\par
  904     //  log10(v) = log2(v) * log10(2)\par
  905     //  floor(log2(v)) = mantissaHighBitIdx + exponent;\par
  906     //  log10(v) - log10(2) < (mantissaHighBitIdx + exponent) * log10(2) <= log10(v)\par
  907     //  log10(v) < (mantissaHighBitIdx + exponent) * log10(2) + log10(2) <= log10(v) + log10(2)\par
  908     //  floor( log10(v) ) < ceil( (mantissaHighBitIdx + exponent) * log10(2) ) <= floor( log10(v) ) + 1\par
  909     const tF64 log10_2 = 0.30102999566398119521373889472449;\par
  910     tS32 digitExponent = (tS32)(ceil(tF64((tS32)mantissaHighBitIdx + exponent) * log10_2 - 0.69));\par
  911 \par
  912     // if the digit exponent is smaller than the smallest desired digit for fractional cutoff,\par
  913     // pull the digit back into legal range at which point we will round to the appropriate value.\par
  914     // Note that while our value for digitExponent is still an estimate, this is safe because it\par
  915     // only increases the number. This will either correct digitExponent to an accurate value or it\par
  916     // will clamp it above the accurate value.\par
  917     if (cutoffMode == CutoffMode_FractionLength && digitExponent <= -(tS32)cutoffNumber)\par
  918     \{\par
  919         digitExponent = -(tS32)cutoffNumber + 1;\par
  920     \}\par
  921 \par
  922     // Divide value by 10^digitExponent.\par
  923     if (digitExponent > 0)\par
  924     \{\par
  925         // The exponent is positive creating a division so we multiply up the scale.\par
  926         tBigInt temp;\par
  927         BigInt_MultiplyPow10( &temp, scale, digitExponent );\par
  928         scale = temp;\par
  929     \}\par
  930     else if (digitExponent < 0)\par
  931     \{\par
  932         // The exponent is negative creating a multiplication so we multiply up the scaledValue,\par
  933         // scaledMarginLow and scaledMarginHigh.\par
  934         tBigInt pow10;\par
  935         BigInt_Pow10( &pow10, -digitExponent);\par
  936 \par
  937         tBigInt temp;\par
  938         BigInt_Multiply( &temp, scaledValue, pow10);\par
  939         scaledValue = temp;\par
  940 \par
  941         BigInt_Multiply( &temp, scaledMarginLow, pow10);\par
  942         scaledMarginLow = temp;\par
  943 \par
  944         if (pScaledMarginHigh != &scaledMarginLow)\par
  945             BigInt_Multiply2( pScaledMarginHigh, scaledMarginLow );\par
  946     \}\par
  947 \par
  948     // If (value + marginHigh) >= 1, our estimate for digitExponent was too low\par
  949     tBigInt scaledValueHigh;\par
  950     BigInt_Add( &scaledValueHigh, scaledValue, *pScaledMarginHigh );\par
  951     if( BigInt_Compare(scaledValueHigh,scale) >= 0 )\par
  952     \{\par
  953         // The exponent estimate was incorrect.\par
  954         // Increment the exponent and don't perform the premultiply needed\par
  955         // for the first loop iteration.\par
  956         digitExponent = digitExponent + 1;\par
  957     \}\par
  958     else\par
  959     \{\par
  960         // The exponent estimate was correct.\par
  961         // Multiply larger by the output base to prepare for the first loop iteration.\par
  962         BigInt_Multiply10( &scaledValue );\par
  963         BigInt_Multiply10( &scaledMarginLow );\par
  964         if (pScaledMarginHigh != &scaledMarginLow)\par
  965             BigInt_Multiply2( pScaledMarginHigh, scaledMarginLow );\par
  966     \}\par
  967 \par
  968     // Compute the cutoff exponent (the exponent of the final digit to print).\par
  969     // Default to the maximum size of the output buffer.\par
  970     tS32 cutoffExponent = digitExponent - bufferSize;\par
  971     switch(cutoffMode)\par
  972     \{\par
  973         // print digits until we pass the accuracy margin limits or buffer size\par
  974     case CutoffMode_Unique:\par
  975         break;\par
  976 \par
  977         // print cutoffNumber of digits or until we reach the buffer size\par
  978     case CutoffMode_TotalLength:\par
  979     \{\par
  980         tS32 desiredCutoffExponent = digitExponent - (tS32)cutoffNumber;\par
  981         if (desiredCutoffExponent > cutoffExponent)\par
  982             cutoffExponent = desiredCutoffExponent;\par
  983     \}\par
  984     break;\par
  985 \par
  986     // print cutoffNumber digits past the decimal point or until we reach the buffer size\par
  987     case CutoffMode_FractionLength:\par
  988     \{\par
  989         tS32 desiredCutoffExponent = -(tS32)cutoffNumber;\par
  990         if (desiredCutoffExponent > cutoffExponent)\par
  991             cutoffExponent = desiredCutoffExponent;\par
  992     \}\par
  993     break;\par
  994     \}\par
  995 \par
  996     // Output the exponent of the first digit we will print\par
  997     *pOutExponent = digitExponent-1;\par
  998 \par
  999     // In preparation for calling BigInt_DivideWithRemainder_MaxQuotient9(),\par
 1000     // we need to scale up our values such that the highest block of the denominator\par
 1001     // is greater than or equal to 8. We also need to guarantee that the numerator\par
 1002     // can never have a length greater than the denominator after each loop iteration.\par
 1003     // This requires the highest block of the denominator to be less than or equal to\par
 1004     // 429496729 which is the highest number that can be multiplied by 10 without\par
 1005     // overflowing to a new block.\par
 1006     RJ_ASSERT( scale.GetLength() > 0 );\par
 1007     tU32 hiBlock = scale.GetBlock( scale.GetLength() - 1 );\par
 1008     if (hiBlock < 8 || hiBlock > 429496729)\par
 1009     \{\par
 1010         // Perform a bit shift on all values to get the highest block of the denominator into\par
 1011         // the range [8,429496729]. We are more likely to make accurate quotient estimations\par
 1012         // in BigInt_DivideWithRemainder_MaxQuotient9() with higher denominator values so\par
 1013         // we shift the denominator to place the highest bit at index 27 of the highest block.\par
 1014         // This is safe because (2^28 - 1) = 268435455 which is less than 429496729. This means\par
 1015         // that all values with a highest bit at index 27 are within range.\par
 1016         tU32 hiBlockLog2 = LogBase2(hiBlock);\par
 1017         RJ_ASSERT(hiBlockLog2 < 3 || hiBlockLog2 > 27);\par
 1018         tU32 shift = (32 + 27 - hiBlockLog2) % 32;\par
 1019 \par
 1020         BigInt_ShiftLeft( &scale, shift );\par
 1021         BigInt_ShiftLeft( &scaledValue, shift);\par
 1022         BigInt_ShiftLeft( &scaledMarginLow, shift);\par
 1023         if (pScaledMarginHigh != &scaledMarginLow)\par
 1024             BigInt_Multiply2( pScaledMarginHigh, scaledMarginLow );\par
 1025     \}\par
 1026 \par
 1027     // These values are used to inspect why the print loop terminated so we can properly\par
 1028     // round the final digit.\par
 1029     tB      low;            // did the value get within marginLow distance from zero\par
 1030     tB      high;           // did the value get within marginHigh distance from one\par
 1031     tU32    outputDigit;    // current digit being output\par
 1032 \par
 1033     if (cutoffMode == CutoffMode_Unique)\par
 1034     \{\par
 1035         // For the unique cutoff mode, we will try to print until we have reached a level of\par
 1036         // precision that uniquely distinguishes this value from its neighbors. If we run\par
 1037         // out of space in the output buffer, we terminate early.\par
 1038         for (;;)\par
 1039         \{\par
 1040             digitExponent = digitExponent-1;\par
 1041 \par
 1042             // divide out the scale to extract the digit\par
 1043             outputDigit = BigInt_DivideWithRemainder_MaxQuotient9(&scaledValue, scale);\par
 1044             RJ_ASSERT( outputDigit < 10 );\par
 1045 \par
 1046             // update the high end of the value\par
 1047             BigInt_Add( &scaledValueHigh, scaledValue, *pScaledMarginHigh );\par
 1048 \par
 1049             // stop looping if we are far enough away from our neighboring values\par
 1050             // or if we have reached the cutoff digit\par
 1051             low = BigInt_Compare(scaledValue, scaledMarginLow) < 0;\par
 1052             high = BigInt_Compare(scaledValueHigh, scale) > 0;\par
 1053             if (low | high | (digitExponent == cutoffExponent))\par
 1054                 break;\par
 1055 \par
 1056             // store the output digit\par
 1057             *pCurDigit = (tC8)('0' + outputDigit);\par
 1058             ++pCurDigit;\par
 1059 \par
 1060             // multiply larger by the output base\par
 1061             BigInt_Multiply10( &scaledValue );\par
 1062             BigInt_Multiply10( &scaledMarginLow );\par
 1063             if (pScaledMarginHigh != &scaledMarginLow)\par
 1064                 BigInt_Multiply2( pScaledMarginHigh, scaledMarginLow );\par
 1065         \}\par
 1066     \}\par
 1067     else\par
 1068     \{\par
 1069         // For length based cutoff modes, we will try to print until we\par
 1070         // have exhausted all precision (i.e. all remaining digits are zeros) or\par
 1071         // until we reach the desired cutoff digit.\par
 1072         low = false;\par
 1073         high = false;\par
 1074 \par
 1075         for (;;)\par
 1076         \{\par
 1077             digitExponent = digitExponent-1;\par
 1078 \par
 1079             // divide out the scale to extract the digit\par
 1080             outputDigit = BigInt_DivideWithRemainder_MaxQuotient9(&scaledValue, scale);\par
 1081             RJ_ASSERT( outputDigit < 10 );\par
 1082 \par
 1083             if ( scaledValue.IsZero() | (digitExponent == cutoffExponent) )\par
 1084                 break;\par
 1085 \par
 1086             // store the output digit\par
 1087             *pCurDigit = (tC8)('0' + outputDigit);\par
 1088             ++pCurDigit;\par
 1089 \par
 1090             // multiply larger by the output base\par
 1091             BigInt_Multiply10(&scaledValue);\par
 1092         \}\par
 1093     \}\par
 1094 \par
 1095     // round off the final digit\par
 1096     // default to rounding down if value got too close to 0\par
 1097     tB roundDown = low;\par
 1098 \par
 1099     // if it is legal to round up and down\par
 1100     if (low == high)\par
 1101     \{\par
 1102         // round to the closest digit by comparing value with 0.5. To do this we need to convert\par
 1103         // the inequality to large integer values.\par
 1104         //  compare( value, 0.5 )\par
 1105         //  compare( scale * value, scale * 0.5 )\par
 1106         //  compare( 2 * scale * value, scale )\par
 1107         BigInt_Multiply2(&scaledValue);\par
 1108         tS32 compare = BigInt_Compare(scaledValue, scale);\par
 1109         roundDown = compare < 0;\par
 1110 \par
 1111         // if we are directly in the middle, round towards the even digit (i.e. IEEE rouding rules)\par
 1112         if (compare == 0)\par
 1113             roundDown = (outputDigit & 1) == 0;\par
 1114     \}\par
 1115 \par
 1116     // print the rounded digit\par
 1117     if (roundDown)\par
 1118     \{\par
 1119         *pCurDigit = (tC8)('0' + outputDigit);\par
 1120         ++pCurDigit;\par
 1121     \}\par
 1122     else\par
 1123     \{\par
 1124         // handle rounding up\par
 1125         if (outputDigit == 9)\par
 1126         \{\par
 1127             // find the first non-nine prior digit\par
 1128             for (;;)\par
 1129             \{\par
 1130                 // if we are at the first digit\par
 1131                 if (pCurDigit == pOutBuffer)\par
 1132                 \{\par
 1133                     // output 1 at the next highest exponent\par
 1134                     *pCurDigit = '1';\par
 1135                     ++pCurDigit;\par
 1136                     *pOutExponent += 1;\par
 1137                     break;\par
 1138                 \}\par
 1139 \par
 1140                 --pCurDigit;\par
 1141                 if (*pCurDigit != '9')\par
 1142                 \{\par
 1143                     // increment the digit\par
 1144                     *pCurDigit += 1;\par
 1145                     ++pCurDigit;\par
 1146                     break;\par
 1147                 \}\par
 1148             \}\par
 1149         \}\par
 1150         else\par
 1151         \{\par
 1152             // values in the range [0,8] can perform a simple round up\par
 1153             *pCurDigit = (tC8)('0' + outputDigit + 1);\par
 1154             ++pCurDigit;\par
 1155         \}\par
 1156     \}\par
 1157 \par
 1158     // return the number of digits output\par
 1159     RJ_ASSERT(pCurDigit - pOutBuffer <= (tPtrDiff)bufferSize);\par
 1160     return pCurDigit - pOutBuffer;\par
 1161 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_afc702da0bd9df1a3d2d5a93b5568b6db_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8cpp_afc702da0bd9df1a3d2d5a93b5568b6db_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v c_BigInt_MaxBlocks\:dragon4.cpp}
{\xe \v dragon4.cpp\:c_BigInt_MaxBlocks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b tU32} c_BigInt_MaxBlocks = 35}}
\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file dragon4.cpp.}\par
}
{\xe \v g_PowerOf10_Big\:dragon4.cpp}
{\xe \v dragon4.cpp\:g_PowerOf10_Big}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tBigInt} g_PowerOf10_Big[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
\{\par
    \par
    \{ 1, \{ 100000000 \} \},\par
    \par
    \{ 2, \{ 0x6fc10000, 0x002386f2 \} \},\par
    \par
    \{ 4, \{ 0x00000000, 0x85acef81, 0x2d6d415b, 0x000004ee, \} \},\par
    \par
    \{ 7, \{ 0x00000000, 0x00000000, 0xbf6a1f01, 0x6e38ed64, 0xdaa797ed, 0xe93ff9f4, 0x00184f03, \} \},\par
    \par
    \{   14, \{ 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x2e953e01, 0x03df9909, 0x0f1538fd,\par
            0x2374e42f, 0xd3cff5ec, 0xc404dc08, 0xbccdb0da, 0xa6337f19, 0xe91f2603, 0x0000024e,\par
        \}\par
    \},\par
    \par
    \{   27, \{ 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,\par
            0x00000000, 0x982e7c01, 0xbed3875b, 0xd8d99f72, 0x12152f87, 0x6bde50c6, 0xcf4a6e70,\par
            0xd595d80f, 0x26b2716e, 0xadc666b0, 0x1d153624, 0x3c42d35a, 0x63ff540e, 0xcc5573c0,\par
            0x65f9ef17, 0x55bc28f2, 0x80dcc7f7, 0xf46eeddc, 0x5fdcefce, 0x000553f7,\par
        \}\par
    \}\par
\}\par
}
{
Definition at line 438 of file dragon4.cpp.}\par
{
Referenced by BigInt_MultiplyPow10(), and BigInt_Pow10().}\par
}
{\xe \v g_PowerOf10_U32\:dragon4.cpp}
{\xe \v dragon4.cpp\:g_PowerOf10_U32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} g_PowerOf10_U32[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
\{\par
    1,          \par
    10,         \par
    100,        \par
    1000,       \par
    10000,      \par
    100000,     \par
    1000000,    \par
    10000000,   \par
\}\par
}
{
Definition at line 419 of file dragon4.cpp.}\par
{
Referenced by BigInt_MultiplyPow10(), and BigInt_Pow10().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/dconv/dragon4.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/dconv/dragon4.h}
{\xe \v lib/dconv/dragon4.h}
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert floating point format to a decimal number in string format. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dstandard.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for dragon4.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b tCutoffMode} \{ {\b CutoffMode_Unique}, 
{\b CutoffMode_TotalLength}, 
{\b CutoffMode_FractionLength}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b Dragon4} ({\b tU64} mantissa, {\b tS32} exponent, {\b tU32} mantissaHighBitIdx, {\b tB} hasUnequalMargins, enum {\b tCutoffMode} cutoffMode, {\b tU32} cutoffNumber, {\b tC8} *pOutBuffer, {\b tU32} bufferSize, {\b tS32} *pOutExponent)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dragon4 main. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert floating point format to a decimal number in string format. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an implementation the Dragon4 algorithm to convert a binary number in floating point format to a decimal number in string format. The function returns the number of digits written to the output buffer and the output is not NUL terminated.\par
Downloaded from:\par
 {\f2 http://www.ryanjuckett.com/} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v tCutoffMode\:dragon4.h}
{\xe \v dragon4.h\:tCutoffMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b tCutoffMode}}}
\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v CutoffMode_Unique\:dragon4.h}
{\xe \v dragon4.h\:CutoffMode_Unique}
{\b {\i CutoffMode_Unique{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
}}  \par
{\xe \v CutoffMode_TotalLength\:dragon4.h}
{\xe \v dragon4.h\:CutoffMode_TotalLength}
{\b {\i CutoffMode_TotalLength{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
}}  \par
{\xe \v CutoffMode_FractionLength\:dragon4.h}
{\xe \v dragon4.h\:CutoffMode_FractionLength}
{\b {\i CutoffMode_FractionLength{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
}}  \par
\par
}{
Definition at line 75 of file dragon4.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    76 \{\par
   77     CutoffMode_Unique,          // as many digits as necessary to print a uniquely identifiable number\par
   78     CutoffMode_TotalLength,     // up to cutoffNumber significant digits\par
   79     CutoffMode_FractionLength,  // up to cutoffNumber significant digits past the decimal point\par
   80 \};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Dragon4\:dragon4.h}
{\xe \v dragon4.h\:Dragon4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} Dragon4 ({\b tU64}  {\i mantissa}, {\b tS32}  {\i exponent}, {\b tU32}  {\i mantissaHighBitIdx}, {\b tB}  {\i hasUnequalMargins}, enum {\b tCutoffMode}  {\i cutoffMode}, {\b tU32}  {\i cutoffNumber}, {\b tC8} *  {\i pOutBuffer}, {\b tU32}  {\i bufferSize}, {\b tS32} *  {\i pOutExponent})}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dragon4 main. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Downloaded from:\par
 {\f2 http://www.ryanjuckett.com/}\par
This is an implementation the Dragon4 algorithm to convert a binary number in floating point format to a decimal number in string format. The function returns the number of digits written to the output buffer and the output is not NUL terminated.\par
The floating point input value is (mantissa * 2^exponent).\par
See the following papers for more information on the algorithm:\par
 "How to Print Floating-Point Numbers Accurately"\par
 Steele and White\par
 {\f2 http://kurtstephens.com/files/p372-steele.pdf}\par
 "Printing Floating-Point Numbers Quickly and Accurately"\par
 Burger and Dybvig\par
 {\f2 http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.72.4656&rep=rep1&type=pdf}\par
 \par
}{
Definition at line 770 of file dragon4.cpp.}\par
{
References BigInt_Add(), BigInt_Compare(), BigInt_DivideWithRemainder_MaxQuotient9(), BigInt_Multiply(), BigInt_Multiply10(), BigInt_Multiply2(), BigInt_MultiplyPow10(), BigInt_Pow10(), BigInt_Pow2(), BigInt_ShiftLeft(), CutoffMode_FractionLength, CutoffMode_TotalLength, CutoffMode_Unique, tBigInt::GetBlock(), tBigInt::GetLength(), tBigInt::IsZero(), LogBase2(), tBigInt::operator=(), tBigInt::SetU32(), and tBigInt::SetU64().}\par
{
Referenced by FormatPositional(), and FormatScientific().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   781 \{\par
  782     tC8 * pCurDigit = pOutBuffer;\par
  783 \par
  784     RJ_ASSERT( bufferSize > 0 );\par
  785 \par
  786     // if the mantissa is zero, the value is zero regardless of the exponent\par
  787     if (mantissa == 0)\par
  788     \{\par
  789         *pCurDigit = '0';\par
  790         *pOutExponent = 0;\par
  791         return 1;\par
  792     \}\par
  793 \par
  794     // compute the initial state in integral form such that\par
  795     //  value     = scaledValue / scale\par
  796     //  marginLow = scaledMarginLow / scale\par
  797     tBigInt scale;              // positive scale applied to value and margin such that they can be\par
  798     //  represented as whole numbers\par
  799     tBigInt scaledValue;        // scale * mantissa\par
  800     tBigInt scaledMarginLow;    // scale * 0.5 * (distance between this floating-point number and its\par
  801     //  immediate lower value)\par
  802 \par
  803     // For normalized IEEE floating point values, each time the exponent is incremented the margin also\par
  804     // doubles. That creates a subset of transition numbers where the high margin is twice the size of\par
  805     // the low margin.\par
  806     tBigInt * pScaledMarginHigh;\par
  807     tBigInt optionalMarginHigh;\par
  808 \par
  809     if ( hasUnequalMargins )\par
  810     \{\par
  811         // if we have no fractional component\par
  812         if (exponent > 0)\par
  813         \{\par
  814             // 1) Expand the input value by multiplying out the mantissa and exponent. This represents\par
  815             //    the input value in its whole number representation.\par
  816             // 2) Apply an additional scale of 2 such that later comparisons against the margin values\par
  817             //    are simplified.\par
  818             // 3) Set the margin value to the lowest mantissa bit's scale.\par
  819 \par
  820             // scaledValue      = 2 * 2 * mantissa*2^exponent\par
  821             scaledValue.SetU64( 4 * mantissa );\par
  822             BigInt_ShiftLeft( &scaledValue, exponent );\par
  823 \par
  824             // scale            = 2 * 2 * 1\par
  825             scale.SetU32( 4 );\par
  826 \par
  827             // scaledMarginLow  = 2 * 2^(exponent-1)\par
  828             BigInt_Pow2( &scaledMarginLow, exponent );\par
  829 \par
  830             // scaledMarginHigh = 2 * 2 * 2^(exponent-1)\par
  831             BigInt_Pow2( &optionalMarginHigh, exponent + 1 );\par
  832         \}\par
  833         // else we have a fractional exponent\par
  834         else\par
  835         \{\par
  836             // In order to track the mantissa data as an integer, we store it as is with a large scale\par
  837 \par
  838             // scaledValue      = 2 * 2 * mantissa\par
  839             scaledValue.SetU64( 4 * mantissa );\par
  840 \par
  841             // scale            = 2 * 2 * 2^(-exponent)\par
  842             BigInt_Pow2(&scale, -exponent + 2 );\par
  843 \par
  844             // scaledMarginLow  = 2 * 2^(-1)\par
  845             scaledMarginLow.SetU32( 1 );\par
  846 \par
  847             // scaledMarginHigh = 2 * 2 * 2^(-1)\par
  848             optionalMarginHigh.SetU32( 2 );\par
  849         \}\par
  850 \par
  851         // the high and low margins are different\par
  852         pScaledMarginHigh = &optionalMarginHigh;\par
  853     \}\par
  854     else\par
  855     \{\par
  856         // if we have no fractional component\par
  857         if (exponent > 0)\par
  858         \{\par
  859             // 1) Expand the input value by multiplying out the mantissa and exponent. This represents\par
  860             //    the input value in its whole number representation.\par
  861             // 2) Apply an additional scale of 2 such that later comparisons against the margin values\par
  862             //    are simplified.\par
  863             // 3) Set the margin value to the lowest mantissa bit's scale.\par
  864 \par
  865             // scaledValue     = 2 * mantissa*2^exponent\par
  866             scaledValue.SetU64( 2 * mantissa );\par
  867             BigInt_ShiftLeft( &scaledValue, exponent );\par
  868 \par
  869             // scale           = 2 * 1\par
  870             scale.SetU32( 2 );\par
  871 \par
  872             // scaledMarginLow = 2 * 2^(exponent-1)\par
  873             BigInt_Pow2( &scaledMarginLow, exponent );\par
  874         \}\par
  875         // else we have a fractional exponent\par
  876         else\par
  877         \{\par
  878             // In order to track the mantissa data as an integer, we store it as is with a large scale\par
  879 \par
  880             // scaledValue     = 2 * mantissa\par
  881             scaledValue.SetU64( 2 * mantissa );\par
  882 \par
  883             // scale           = 2 * 2^(-exponent)\par
  884             BigInt_Pow2(&scale, -exponent + 1 );\par
  885 \par
  886             // scaledMarginLow = 2 * 2^(-1)\par
  887             scaledMarginLow.SetU32( 1 );\par
  888         \}\par
  889 \par
  890         // the high and low margins are equal\par
  891         pScaledMarginHigh = &scaledMarginLow;\par
  892     \}\par
  893 \par
  894     // Compute an estimate for digitExponent that will be correct or undershoot by one.\par
  895     // This optimization is based on the paper "Printing Floating-Point Numbers Quickly and Accurately"\par
  896     // by Burger and Dybvig http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.72.4656&rep=rep1&type=pdf\par
  897     // We perform an additional subtraction of 0.69 to increase the frequency of a failed estimate\par
  898     // because that lets us take a faster branch in the code. 0.69 is chosen because 0.69 + log10(2) is\par
  899     // less than one by a reasonable epsilon that will account for any floating point error.\par
  900     //\par
  901     // We want to set digitExponent to floor(log10(v)) + 1\par
  902     //  v = mantissa*2^exponent\par
  903     //  log2(v) = log2(mantissa) + exponent;\par
  904     //  log10(v) = log2(v) * log10(2)\par
  905     //  floor(log2(v)) = mantissaHighBitIdx + exponent;\par
  906     //  log10(v) - log10(2) < (mantissaHighBitIdx + exponent) * log10(2) <= log10(v)\par
  907     //  log10(v) < (mantissaHighBitIdx + exponent) * log10(2) + log10(2) <= log10(v) + log10(2)\par
  908     //  floor( log10(v) ) < ceil( (mantissaHighBitIdx + exponent) * log10(2) ) <= floor( log10(v) ) + 1\par
  909     const tF64 log10_2 = 0.30102999566398119521373889472449;\par
  910     tS32 digitExponent = (tS32)(ceil(tF64((tS32)mantissaHighBitIdx + exponent) * log10_2 - 0.69));\par
  911 \par
  912     // if the digit exponent is smaller than the smallest desired digit for fractional cutoff,\par
  913     // pull the digit back into legal range at which point we will round to the appropriate value.\par
  914     // Note that while our value for digitExponent is still an estimate, this is safe because it\par
  915     // only increases the number. This will either correct digitExponent to an accurate value or it\par
  916     // will clamp it above the accurate value.\par
  917     if (cutoffMode == CutoffMode_FractionLength && digitExponent <= -(tS32)cutoffNumber)\par
  918     \{\par
  919         digitExponent = -(tS32)cutoffNumber + 1;\par
  920     \}\par
  921 \par
  922     // Divide value by 10^digitExponent.\par
  923     if (digitExponent > 0)\par
  924     \{\par
  925         // The exponent is positive creating a division so we multiply up the scale.\par
  926         tBigInt temp;\par
  927         BigInt_MultiplyPow10( &temp, scale, digitExponent );\par
  928         scale = temp;\par
  929     \}\par
  930     else if (digitExponent < 0)\par
  931     \{\par
  932         // The exponent is negative creating a multiplication so we multiply up the scaledValue,\par
  933         // scaledMarginLow and scaledMarginHigh.\par
  934         tBigInt pow10;\par
  935         BigInt_Pow10( &pow10, -digitExponent);\par
  936 \par
  937         tBigInt temp;\par
  938         BigInt_Multiply( &temp, scaledValue, pow10);\par
  939         scaledValue = temp;\par
  940 \par
  941         BigInt_Multiply( &temp, scaledMarginLow, pow10);\par
  942         scaledMarginLow = temp;\par
  943 \par
  944         if (pScaledMarginHigh != &scaledMarginLow)\par
  945             BigInt_Multiply2( pScaledMarginHigh, scaledMarginLow );\par
  946     \}\par
  947 \par
  948     // If (value + marginHigh) >= 1, our estimate for digitExponent was too low\par
  949     tBigInt scaledValueHigh;\par
  950     BigInt_Add( &scaledValueHigh, scaledValue, *pScaledMarginHigh );\par
  951     if( BigInt_Compare(scaledValueHigh,scale) >= 0 )\par
  952     \{\par
  953         // The exponent estimate was incorrect.\par
  954         // Increment the exponent and don't perform the premultiply needed\par
  955         // for the first loop iteration.\par
  956         digitExponent = digitExponent + 1;\par
  957     \}\par
  958     else\par
  959     \{\par
  960         // The exponent estimate was correct.\par
  961         // Multiply larger by the output base to prepare for the first loop iteration.\par
  962         BigInt_Multiply10( &scaledValue );\par
  963         BigInt_Multiply10( &scaledMarginLow );\par
  964         if (pScaledMarginHigh != &scaledMarginLow)\par
  965             BigInt_Multiply2( pScaledMarginHigh, scaledMarginLow );\par
  966     \}\par
  967 \par
  968     // Compute the cutoff exponent (the exponent of the final digit to print).\par
  969     // Default to the maximum size of the output buffer.\par
  970     tS32 cutoffExponent = digitExponent - bufferSize;\par
  971     switch(cutoffMode)\par
  972     \{\par
  973         // print digits until we pass the accuracy margin limits or buffer size\par
  974     case CutoffMode_Unique:\par
  975         break;\par
  976 \par
  977         // print cutoffNumber of digits or until we reach the buffer size\par
  978     case CutoffMode_TotalLength:\par
  979     \{\par
  980         tS32 desiredCutoffExponent = digitExponent - (tS32)cutoffNumber;\par
  981         if (desiredCutoffExponent > cutoffExponent)\par
  982             cutoffExponent = desiredCutoffExponent;\par
  983     \}\par
  984     break;\par
  985 \par
  986     // print cutoffNumber digits past the decimal point or until we reach the buffer size\par
  987     case CutoffMode_FractionLength:\par
  988     \{\par
  989         tS32 desiredCutoffExponent = -(tS32)cutoffNumber;\par
  990         if (desiredCutoffExponent > cutoffExponent)\par
  991             cutoffExponent = desiredCutoffExponent;\par
  992     \}\par
  993     break;\par
  994     \}\par
  995 \par
  996     // Output the exponent of the first digit we will print\par
  997     *pOutExponent = digitExponent-1;\par
  998 \par
  999     // In preparation for calling BigInt_DivideWithRemainder_MaxQuotient9(),\par
 1000     // we need to scale up our values such that the highest block of the denominator\par
 1001     // is greater than or equal to 8. We also need to guarantee that the numerator\par
 1002     // can never have a length greater than the denominator after each loop iteration.\par
 1003     // This requires the highest block of the denominator to be less than or equal to\par
 1004     // 429496729 which is the highest number that can be multiplied by 10 without\par
 1005     // overflowing to a new block.\par
 1006     RJ_ASSERT( scale.GetLength() > 0 );\par
 1007     tU32 hiBlock = scale.GetBlock( scale.GetLength() - 1 );\par
 1008     if (hiBlock < 8 || hiBlock > 429496729)\par
 1009     \{\par
 1010         // Perform a bit shift on all values to get the highest block of the denominator into\par
 1011         // the range [8,429496729]. We are more likely to make accurate quotient estimations\par
 1012         // in BigInt_DivideWithRemainder_MaxQuotient9() with higher denominator values so\par
 1013         // we shift the denominator to place the highest bit at index 27 of the highest block.\par
 1014         // This is safe because (2^28 - 1) = 268435455 which is less than 429496729. This means\par
 1015         // that all values with a highest bit at index 27 are within range.\par
 1016         tU32 hiBlockLog2 = LogBase2(hiBlock);\par
 1017         RJ_ASSERT(hiBlockLog2 < 3 || hiBlockLog2 > 27);\par
 1018         tU32 shift = (32 + 27 - hiBlockLog2) % 32;\par
 1019 \par
 1020         BigInt_ShiftLeft( &scale, shift );\par
 1021         BigInt_ShiftLeft( &scaledValue, shift);\par
 1022         BigInt_ShiftLeft( &scaledMarginLow, shift);\par
 1023         if (pScaledMarginHigh != &scaledMarginLow)\par
 1024             BigInt_Multiply2( pScaledMarginHigh, scaledMarginLow );\par
 1025     \}\par
 1026 \par
 1027     // These values are used to inspect why the print loop terminated so we can properly\par
 1028     // round the final digit.\par
 1029     tB      low;            // did the value get within marginLow distance from zero\par
 1030     tB      high;           // did the value get within marginHigh distance from one\par
 1031     tU32    outputDigit;    // current digit being output\par
 1032 \par
 1033     if (cutoffMode == CutoffMode_Unique)\par
 1034     \{\par
 1035         // For the unique cutoff mode, we will try to print until we have reached a level of\par
 1036         // precision that uniquely distinguishes this value from its neighbors. If we run\par
 1037         // out of space in the output buffer, we terminate early.\par
 1038         for (;;)\par
 1039         \{\par
 1040             digitExponent = digitExponent-1;\par
 1041 \par
 1042             // divide out the scale to extract the digit\par
 1043             outputDigit = BigInt_DivideWithRemainder_MaxQuotient9(&scaledValue, scale);\par
 1044             RJ_ASSERT( outputDigit < 10 );\par
 1045 \par
 1046             // update the high end of the value\par
 1047             BigInt_Add( &scaledValueHigh, scaledValue, *pScaledMarginHigh );\par
 1048 \par
 1049             // stop looping if we are far enough away from our neighboring values\par
 1050             // or if we have reached the cutoff digit\par
 1051             low = BigInt_Compare(scaledValue, scaledMarginLow) < 0;\par
 1052             high = BigInt_Compare(scaledValueHigh, scale) > 0;\par
 1053             if (low | high | (digitExponent == cutoffExponent))\par
 1054                 break;\par
 1055 \par
 1056             // store the output digit\par
 1057             *pCurDigit = (tC8)('0' + outputDigit);\par
 1058             ++pCurDigit;\par
 1059 \par
 1060             // multiply larger by the output base\par
 1061             BigInt_Multiply10( &scaledValue );\par
 1062             BigInt_Multiply10( &scaledMarginLow );\par
 1063             if (pScaledMarginHigh != &scaledMarginLow)\par
 1064                 BigInt_Multiply2( pScaledMarginHigh, scaledMarginLow );\par
 1065         \}\par
 1066     \}\par
 1067     else\par
 1068     \{\par
 1069         // For length based cutoff modes, we will try to print until we\par
 1070         // have exhausted all precision (i.e. all remaining digits are zeros) or\par
 1071         // until we reach the desired cutoff digit.\par
 1072         low = false;\par
 1073         high = false;\par
 1074 \par
 1075         for (;;)\par
 1076         \{\par
 1077             digitExponent = digitExponent-1;\par
 1078 \par
 1079             // divide out the scale to extract the digit\par
 1080             outputDigit = BigInt_DivideWithRemainder_MaxQuotient9(&scaledValue, scale);\par
 1081             RJ_ASSERT( outputDigit < 10 );\par
 1082 \par
 1083             if ( scaledValue.IsZero() | (digitExponent == cutoffExponent) )\par
 1084                 break;\par
 1085 \par
 1086             // store the output digit\par
 1087             *pCurDigit = (tC8)('0' + outputDigit);\par
 1088             ++pCurDigit;\par
 1089 \par
 1090             // multiply larger by the output base\par
 1091             BigInt_Multiply10(&scaledValue);\par
 1092         \}\par
 1093     \}\par
 1094 \par
 1095     // round off the final digit\par
 1096     // default to rounding down if value got too close to 0\par
 1097     tB roundDown = low;\par
 1098 \par
 1099     // if it is legal to round up and down\par
 1100     if (low == high)\par
 1101     \{\par
 1102         // round to the closest digit by comparing value with 0.5. To do this we need to convert\par
 1103         // the inequality to large integer values.\par
 1104         //  compare( value, 0.5 )\par
 1105         //  compare( scale * value, scale * 0.5 )\par
 1106         //  compare( 2 * scale * value, scale )\par
 1107         BigInt_Multiply2(&scaledValue);\par
 1108         tS32 compare = BigInt_Compare(scaledValue, scale);\par
 1109         roundDown = compare < 0;\par
 1110 \par
 1111         // if we are directly in the middle, round towards the even digit (i.e. IEEE rouding rules)\par
 1112         if (compare == 0)\par
 1113             roundDown = (outputDigit & 1) == 0;\par
 1114     \}\par
 1115 \par
 1116     // print the rounded digit\par
 1117     if (roundDown)\par
 1118     \{\par
 1119         *pCurDigit = (tC8)('0' + outputDigit);\par
 1120         ++pCurDigit;\par
 1121     \}\par
 1122     else\par
 1123     \{\par
 1124         // handle rounding up\par
 1125         if (outputDigit == 9)\par
 1126         \{\par
 1127             // find the first non-nine prior digit\par
 1128             for (;;)\par
 1129             \{\par
 1130                 // if we are at the first digit\par
 1131                 if (pCurDigit == pOutBuffer)\par
 1132                 \{\par
 1133                     // output 1 at the next highest exponent\par
 1134                     *pCurDigit = '1';\par
 1135                     ++pCurDigit;\par
 1136                     *pOutExponent += 1;\par
 1137                     break;\par
 1138                 \}\par
 1139 \par
 1140                 --pCurDigit;\par
 1141                 if (*pCurDigit != '9')\par
 1142                 \{\par
 1143                     // increment the digit\par
 1144                     *pCurDigit += 1;\par
 1145                     ++pCurDigit;\par
 1146                     break;\par
 1147                 \}\par
 1148             \}\par
 1149         \}\par
 1150         else\par
 1151         \{\par
 1152             // values in the range [0,8] can perform a simple round up\par
 1153             *pCurDigit = (tC8)('0' + outputDigit + 1);\par
 1154             ++pCurDigit;\par
 1155         \}\par
 1156     \}\par
 1157 \par
 1158     // return the number of digits output\par
 1159     RJ_ASSERT(pCurDigit - pOutBuffer <= (tPtrDiff)bufferSize);\par
 1160     return pCurDigit - pOutBuffer;\par
 1161 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8h_a001c1140205cd87fc22f3a9a8de7547e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dragon4_8h_a001c1140205cd87fc22f3a9a8de7547e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/doc.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/doc.h}
{\xe \v lib/doc.h}
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Documentation in doxygen format. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Documentation in doxygen format. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/dprint.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/dprint.h}
{\xe \v lib/dprint.h}
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Format defitions used in the Dragon4 library. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dstandard.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for dprint.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b tPrintFloatFormat} \{ {\b PrintFloatFormat_Positional}, 
{\b PrintFloatFormat_Scientific}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b PrintFloat32} ({\b tC8} *pOutBuffer, {\b tU32} bufferSize, {\b tF32} value, {\b tPrintFloatFormat} format, {\b tS32} precision, {\b tC8} decimalPoint)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tU32} {\b PrintFloat64} ({\b tC8} *pOutBuffer, {\b tU32} bufferSize, {\b tF64} value, {\b tPrintFloatFormat} format, {\b tS32} precision, {\b tC8} decimalPoint)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Format defitions used in the Dragon4 library. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v tPrintFloatFormat\:dprint.h}
{\xe \v dprint.h\:tPrintFloatFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b tPrintFloatFormat}}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v PrintFloatFormat_Positional\:dprint.h}
{\xe \v dprint.h\:PrintFloatFormat_Positional}
{\b {\i PrintFloatFormat_Positional{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
}}  \par
{\xe \v PrintFloatFormat_Scientific\:dprint.h}
{\xe \v dprint.h\:PrintFloatFormat_Scientific}
{\b {\i PrintFloatFormat_Scientific{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
}}  \par
\par
}{
Definition at line 70 of file dprint.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    71 \{\par
   72     PrintFloatFormat_Positional,    // [-]ddddd.dddd\par
   73     PrintFloatFormat_Scientific,    // [-]d.dddde[sign]ddd\par
   74 \};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v PrintFloat32\:dprint.h}
{\xe \v dprint.h\:PrintFloat32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} PrintFloat32 ({\b tC8} *  {\i pOutBuffer}, {\b tU32}  {\i bufferSize}, {\b tF32}  {\i value}, {\b tPrintFloatFormat}  {\i format}, {\b tS32}  {\i precision}, {\b tC8}  {\i decimalPoint})}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 465 of file dprint.cpp.}\par
{
References FormatPositional(), FormatScientific(), tFloatUnion32::GetExponent(), tFloatUnion32::GetMantissa(), tFloatUnion32::IsNegative(), LogBase2(), tFloatUnion32::m_floatingPoint, PrintFloatFormat_Positional, PrintFloatFormat_Scientific, and PrintInfNan().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   475 \{\par
  476     if (bufferSize == 0)\par
  477         return 0;\par
  478 \par
  479     if (bufferSize == 1)\par
  480     \{\par
  481         pOutBuffer[0] = '\\0';\par
  482         return 1;\par
  483     \}\par
  484 \par
  485     // deconstruct the floating point value\par
  486     tFloatUnion32 floatUnion;\par
  487     floatUnion.m_floatingPoint = value;\par
  488     tU32 floatExponent = floatUnion.GetExponent();\par
  489     tU32 floatMantissa = floatUnion.GetMantissa();\par
  490 \par
  491     // output the sign\par
  492     if (floatUnion.IsNegative())\par
  493     \{\par
  494         pOutBuffer[0] = '-';\par
  495         ++pOutBuffer;\par
  496         --bufferSize;\par
  497         RJ_ASSERT(bufferSize > 0);\par
  498     \}\par
  499 \par
  500     // if this is a special value\par
  501     if (floatExponent == 0xFF)\par
  502     \{\par
  503         return PrintInfNan(pOutBuffer, bufferSize, floatMantissa, 6);\par
  504     \}\par
  505     // else this is a number\par
  506     else\par
  507     \{\par
  508         // factor the value into its parts\par
  509         tU32 mantissa;\par
  510         tS32 exponent;\par
  511         tU32 mantissaHighBitIdx;\par
  512         tB hasUnequalMargins;\par
  513         if (floatExponent != 0)\par
  514         \{\par
  515             // normalized\par
  516             // The floating point equation is:\par
  517             //  value = (1 + mantissa/2^23) * 2 ^ (exponent-127)\par
  518             // We convert the integer equation by factoring a 2^23 out of the exponent\par
  519             //  value = (1 + mantissa/2^23) * 2^23 * 2 ^ (exponent-127-23)\par
  520             //  value = (2^23 + mantissa) * 2 ^ (exponent-127-23)\par
  521             // Because of the implied 1 in front of the mantissa we have 24 bits of precision.\par
  522             //   m = (2^23 + mantissa)\par
  523             //   e = (exponent-127-23)\par
  524             mantissa            = (1UL << 23) | floatMantissa;\par
  525             exponent            = floatExponent - 127 - 23;\par
  526             mantissaHighBitIdx  = 23;\par
  527             hasUnequalMargins   = (floatExponent != 1) && (floatMantissa == 0);\par
  528         \}\par
  529         else\par
  530         \{\par
  531             // denormalized\par
  532             // The floating point equation is:\par
  533             //  value = (mantissa/2^23) * 2 ^ (1-127)\par
  534             // We convert the integer equation by factoring a 2^23 out of the exponent\par
  535             //  value = (mantissa/2^23) * 2^23 * 2 ^ (1-127-23)\par
  536             //  value = mantissa * 2 ^ (1-127-23)\par
  537             // We have up to 23 bits of precision.\par
  538             //   m = (mantissa)\par
  539             //   e = (1-127-23)\par
  540             mantissa           = floatMantissa;\par
  541             exponent           = 1 - 127 - 23;\par
  542             mantissaHighBitIdx = LogBase2(mantissa);\par
  543             hasUnequalMargins   = false;\par
  544         \}\par
  545 \par
  546         // format the value\par
  547         switch (format)\par
  548         \{\par
  549         case PrintFloatFormat_Positional:\par
  550             return FormatPositional(    pOutBuffer,\par
  551                                         bufferSize,\par
  552                                         mantissa,\par
  553                                         exponent,\par
  554                                         mantissaHighBitIdx,\par
  555                                         hasUnequalMargins,\par
  556                                         precision,\par
  557                                         decimalPoint );\par
  558 \par
  559         case PrintFloatFormat_Scientific:\par
  560             return FormatScientific(    pOutBuffer,\par
  561                                         bufferSize,\par
  562                                         mantissa,\par
  563                                         exponent,\par
  564                                         mantissaHighBitIdx,\par
  565                                         hasUnequalMargins,\par
  566                                         precision,\par
  567                                         decimalPoint );\par
  568 \par
  569         default:\par
  570             pOutBuffer[0] = '\\0';\par
  571             return 0;\par
  572         \}\par
  573     \}\par
  574 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8h_a83d135741203dce4201423de8063b2c2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v PrintFloat64\:dprint.h}
{\xe \v dprint.h\:PrintFloat64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tU32} PrintFloat64 ({\b tC8} *  {\i pOutBuffer}, {\b tU32}  {\i bufferSize}, {\b tF64}  {\i value}, {\b tPrintFloatFormat}  {\i format}, {\b tS32}  {\i precision}, {\b tC8}  {\i decimalPoint})}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 582 of file dprint.cpp.}\par
{
References FormatPositional(), FormatScientific(), tFloatUnion64::GetExponent(), tFloatUnion64::GetMantissa(), tFloatUnion64::IsNegative(), LogBase2(), tFloatUnion64::m_floatingPoint, PrintFloatFormat_Positional, PrintFloatFormat_Scientific, and PrintInfNan().}\par
{
Referenced by DecimalSystem::GetRealText().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   592 \{\par
  593     if (bufferSize == 0)\par
  594         return 0;\par
  595 \par
  596     if (bufferSize == 1)\par
  597     \{\par
  598         pOutBuffer[0] = '\\0';\par
  599         return 1;\par
  600     \}\par
  601 \par
  602     // deconstruct the floating point value\par
  603     tFloatUnion64 floatUnion;\par
  604     floatUnion.m_floatingPoint = value;\par
  605     tU32 floatExponent = floatUnion.GetExponent();\par
  606     tU64 floatMantissa = floatUnion.GetMantissa();\par
  607 \par
  608     // output the sign\par
  609     if (floatUnion.IsNegative())\par
  610     \{\par
  611         pOutBuffer[0] = '-';\par
  612         ++pOutBuffer;\par
  613         --bufferSize;\par
  614         RJ_ASSERT(bufferSize > 0);\par
  615     \}\par
  616 \par
  617     // if this is a special value\par
  618     if (floatExponent == 0x7FF)\par
  619     \{\par
  620         return PrintInfNan(pOutBuffer, bufferSize, floatMantissa, 13);\par
  621     \}\par
  622     // else this is a number\par
  623     else\par
  624     \{\par
  625         // factor the value into its parts\par
  626         tU64 mantissa;\par
  627         tS32 exponent;\par
  628         tU32 mantissaHighBitIdx;\par
  629         tB hasUnequalMargins;\par
  630 \par
  631         if (floatExponent != 0)\par
  632         \{\par
  633             // normal\par
  634             // The floating point equation is:\par
  635             //  value = (1 + mantissa/2^52) * 2 ^ (exponent-1023)\par
  636             // We convert the integer equation by factoring a 2^52 out of the exponent\par
  637             //  value = (1 + mantissa/2^52) * 2^52 * 2 ^ (exponent-1023-52)\par
  638             //  value = (2^52 + mantissa) * 2 ^ (exponent-1023-52)\par
  639             // Because of the implied 1 in front of the mantissa we have 53 bits of precision.\par
  640             //   m = (2^52 + mantissa)\par
  641             //   e = (exponent-1023+1-53)\par
  642             mantissa            = (1ull << 52) | floatMantissa;\par
  643             exponent            = floatExponent - 1023 - 52;\par
  644             mantissaHighBitIdx  = 52;\par
  645             hasUnequalMargins   = (floatExponent != 1) && (floatMantissa == 0);\par
  646         \}\par
  647         else\par
  648         \{\par
  649             // subnormal\par
  650             // The floating point equation is:\par
  651             //  value = (mantissa/2^52) * 2 ^ (1-1023)\par
  652             // We convert the integer equation by factoring a 2^52 out of the exponent\par
  653             //  value = (mantissa/2^52) * 2^52 * 2 ^ (1-1023-52)\par
  654             //  value = mantissa * 2 ^ (1-1023-52)\par
  655             // We have up to 52 bits of precision.\par
  656             //   m = (mantissa)\par
  657             //   e = (1-1023-52)\par
  658             mantissa            = floatMantissa;\par
  659             exponent            = 1 - 1023 - 52;\par
  660             mantissaHighBitIdx  = LogBase2(mantissa);\par
  661             hasUnequalMargins   = false;\par
  662         \}\par
  663 \par
  664         // format the value\par
  665         switch (format)\par
  666         \{\par
  667         case PrintFloatFormat_Positional:\par
  668             return FormatPositional(    pOutBuffer,\par
  669                                         bufferSize,\par
  670                                         mantissa,\par
  671                                         exponent,\par
  672                                         mantissaHighBitIdx,\par
  673                                         hasUnequalMargins,\par
  674                                         precision,\par
  675                                         decimalPoint );\par
  676 \par
  677         case PrintFloatFormat_Scientific:\par
  678             return FormatScientific(    pOutBuffer,\par
  679                                         bufferSize,\par
  680                                         mantissa,\par
  681                                         exponent,\par
  682                                         mantissaHighBitIdx,\par
  683                                         hasUnequalMargins,\par
  684                                         precision,\par
  685                                         decimalPoint );\par
  686 \par
  687         default:\par
  688             pOutBuffer[0] = '\\0';\par
  689             return 0;\par
  690         \}\par
  691     \}\par
  692 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8h_abd2c48bc16cbab3eb5ec361153f21cbe_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dprint_8h_abd2c48bc16cbab3eb5ec361153f21cbe_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/dstandard.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/dstandard.h}
{\xe \v lib/dstandard.h}
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type defitions for the Dragon4 library. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "clib.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for dstandard.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dstandard_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dstandard_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RJ_ASSERT}(condition)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b bool} {\b tB}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef char {\b tC8}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b tU8}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b tU16}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b tU32}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint64_t {\b tU64}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int8_t {\b tS8}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int16_t {\b tS16}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int32_t {\b tS32}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int64_t {\b tS64}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef float {\b tF32}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef double {\b tF64}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef size_t {\b tSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef ptrdiff_t {\b tPtrDiff}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type defitions for the Dragon4 library. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v RJ_ASSERT\:dstandard.h}
{\xe \v dstandard.h\:RJ_ASSERT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RJ_ASSERT( condition)}}
\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file dstandard.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v tB\:dstandard.h}
{\xe \v dstandard.h\:tB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b bool} {\b tB}}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file dstandard.h.}\par
}
{\xe \v tC8\:dstandard.h}
{\xe \v dstandard.h\:tC8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef char {\b tC8}}}
\par
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file dstandard.h.}\par
}
{\xe \v tF32\:dstandard.h}
{\xe \v dstandard.h\:tF32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef float {\b tF32}}}
\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file dstandard.h.}\par
}
{\xe \v tF64\:dstandard.h}
{\xe \v dstandard.h\:tF64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef double {\b tF64}}}
\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 89 of file dstandard.h.}\par
}
{\xe \v tPtrDiff\:dstandard.h}
{\xe \v dstandard.h\:tPtrDiff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef ptrdiff_t {\b tPtrDiff}}}
\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file dstandard.h.}\par
}
{\xe \v tS16\:dstandard.h}
{\xe \v dstandard.h\:tS16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int16_t {\b tS16}}}
\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file dstandard.h.}\par
}
{\xe \v tS32\:dstandard.h}
{\xe \v dstandard.h\:tS32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int32_t {\b tS32}}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 84 of file dstandard.h.}\par
}
{\xe \v tS64\:dstandard.h}
{\xe \v dstandard.h\:tS64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int64_t {\b tS64}}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file dstandard.h.}\par
}
{\xe \v tS8\:dstandard.h}
{\xe \v dstandard.h\:tS8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int8_t {\b tS8}}}
\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file dstandard.h.}\par
}
{\xe \v tSize\:dstandard.h}
{\xe \v dstandard.h\:tSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef size_t {\b tSize}}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file dstandard.h.}\par
}
{\xe \v tU16\:dstandard.h}
{\xe \v dstandard.h\:tU16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint16_t {\b tU16}}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file dstandard.h.}\par
}
{\xe \v tU32\:dstandard.h}
{\xe \v dstandard.h\:tU32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b tU32}}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file dstandard.h.}\par
}
{\xe \v tU64\:dstandard.h}
{\xe \v dstandard.h\:tU64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint64_t {\b tU64}}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file dstandard.h.}\par
}
{\xe \v tU8\:dstandard.h}
{\xe \v dstandard.h\:tU8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b tU8}}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file dstandard.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/math.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/math.h}
{\xe \v lib/math.h}
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions in math library for handling real numbers. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PI}\~ 3.141592653589793238462643383279\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EULERS}\~ 2.718281828459045235360287471352\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b sgn}(x)\~ x > 0.0 ? 1.0 : x < 0.0 ? -1.0 : 0.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b log2p}(x,  y)\~ {\b log}(x)/{\b log}(y)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b isnan} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
isnan(x) returns 1 is x is nan, else 0. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b finite} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finite or infinite number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fabs} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the absolute value of x. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ceil} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical ceiling function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b floor} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical floor function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b round} (double x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b trunc} (double x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b exp} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the exponential of x. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sqrt} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Square root function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cbrt} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cube root function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b log} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Natural logarithm function (base e). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b log10} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base 10 logarithm function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cos} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric cosine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sin} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric sine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tan} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric tangent function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acos} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric cosine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b asin} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric sine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b atan} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric tangent function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cosh} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cosine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sinh} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic sine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tanh} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic tangent function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acosh} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b asinh} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic sine function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b atanh} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic tangent function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pow} (double x, double y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expontation function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fmod} (double x, double y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return x mod y in exact arithmetic. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b atan2} (double y, double x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hypot} (double x, double y)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b log1p} (double x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b expm1} (double x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scalbn} (double x, int n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b copysign} (double x, double y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a value with the magnitude of x and with the sign bit of y. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rempio2} (double x, double *y)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions in math library for handling real numbers. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The library is based on fdlib by Sun Microsystems. The original library can be downloaded at: {\f2 http://www.netlib.org/fdlibm/}\par
or from mirros site: {\f2 http://www.hensa.ac.uk/}\par
All headers and dates are preserved. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v EULERS\:math.h}
{\xe \v math.h\:EULERS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EULERS\~ 2.718281828459045235360287471352}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file math.h.}\par
}
{\xe \v log2p\:math.h}
{\xe \v math.h\:log2p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define log2p( x,  y)\~ {\b log}(x)/{\b log}(y)}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file math.h.}\par
}
{\xe \v PI\:math.h}
{\xe \v math.h\:PI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PI\~ 3.141592653589793238462643383279}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file math.h.}\par
}
{\xe \v sgn\:math.h}
{\xe \v math.h\:sgn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define sgn( x)\~ x > 0.0 ? 1.0 : x < 0.0 ? -1.0 : 0.0}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file math.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v acos\:math.h}
{\xe \v math.h\:acos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double acos (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric cosine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
 acos(x)  = pi/2 - asin(x)
 acos(-x) = pi/2 + asin(x)
For |x|<=0.5
 acos(x) = pi/2 - (x + x*x^2*R(x^2))    (see {\b asin.c})
For x>0.5
    acos(x) = pi/2 - (pi/2 - 2asin(sqrt((1-x)/2)))
    = 2asin(sqrt((1-x)/2))
    = 2s + 2s*z*R(z)    ...z=(1-x)/2, s=sqrt(z)
    = 2f + (2c + 2s*z*R(z))
    where f=hi part of s, and c = (z-f*f)/(s+f) is the correction term
    for f so that f+c ~ sqrt(z).
For x<-0.5
 acos(x) = pi - 2asin(sqrt((1-|x|)/2))
    = pi - 0.5*(s+s*z*R(z)), where z=(1-|x|)/2,s=sqrt(z)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 if x is NaN, return x itself;
 if |x|>1, return NaN with invalid signal.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Function needed: sqrt
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 96 of file acos.c.}\par
{
References one, pi, pio2_hi, pio2_lo, pS0, pS1, pS2, pS3, pS4, pS5, qS1, qS2, qS3, qS4, and sqrt().}\par
{
Referenced by RealNumber::ArcCosine(), and RealNumber::ArcSecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    97 \{\par
   98     double z,p,q,r,w,s,c,df;\par
   99     sword hx,ix;\par
  100     GET_HIGH_WORD(hx,x);\par
  101     ix = hx&0x7fffffff;\par
  102     if(ix>=0x3ff00000) \{    /* |x| >= 1 */\par
  103         sword lx;\par
  104         GET_LOW_WORD(lx,x);\par
  105         if(((ix-0x3ff00000)|lx)==0) \{   /* |x|==1 */\par
  106             if(hx>0) return 0.0;        /* acos(1) = 0  */\par
  107             else return pi+2.0*pio2_lo; /* acos(-1)= pi */\par
  108         \}\par
  109         return (x-x)/(x-x);     /* acos(|x|>1) is NaN */\par
  110     \}\par
  111     if(ix<0x3fe00000) \{ /* |x| < 0.5 */\par
  112         if(ix<=0x3c600000) return pio2_hi+pio2_lo;/*if|x|<2**-57*/\par
  113         z = x*x;\par
  114         p = z*(pS0+z*(pS1+z*(pS2+z*(pS3+z*(pS4+z*pS5)))));\par
  115         q = one+z*(qS1+z*(qS2+z*(qS3+z*qS4)));\par
  116         r = p/q;\par
  117         return pio2_hi - (x - (pio2_lo-x*r));\par
  118     \} else  if (hx<0) \{     /* x < -0.5 */\par
  119         z = (one+x)*0.5;\par
  120         p = z*(pS0+z*(pS1+z*(pS2+z*(pS3+z*(pS4+z*pS5)))));\par
  121         q = one+z*(qS1+z*(qS2+z*(qS3+z*qS4)));\par
  122         s = sqrt(z);\par
  123         r = p/q;\par
  124         w = r*s-pio2_lo;\par
  125         return pi - 2.0*(s+w);\par
  126     \} else \{            /* x > 0.5 */\par
  127         z = (one-x)*0.5;\par
  128         s = sqrt(z);\par
  129         df = s;\par
  130         SET_LOW_WORD(df,0);\par
  131         c  = (z-df*df)/(s+df);\par
  132         p = z*(pS0+z*(pS1+z*(pS2+z*(pS3+z*(pS4+z*pS5)))));\par
  133         q = one+z*(qS1+z*(qS2+z*(qS3+z*qS4)));\par
  134         r = p/q;\par
  135         w = r*s+c;\par
  136         return 2.0*(df+w);\par
  137     \}\par
  138 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_ae93afe22ff34c79ee97ea3eaf77557db_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_ae93afe22ff34c79ee97ea3eaf77557db_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v acosh\:math.h}
{\xe \v math.h\:acosh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double acosh (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
 Based on
    acosh(x) = log [ x + sqrt(x*x-1) ]
 we have
    acosh(x) := log(x)+ln2, if x is large; else
    acosh(x) := log(2x-1/(sqrt(x*x-1)+x)) if x>2; else
    acosh(x) := log1p(t+sqrt(2.0*t+t*t)); where t=x-1.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 acosh(x) is NaN with signal if x<1.
 acosh(NaN) is NaN without signal.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 75 of file acosh.c.}\par
{
References ln2, log1p(), one, and sqrt().}\par
{
Referenced by RealNumber::HypArcCosine(), and RealNumber::HypArcSecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    76 \{\par
   77     double t;\par
   78     sword hx, lx;\par
   79     GET_HIGH_WORD(hx,x);\par
   80     GET_LOW_WORD(lx,x);\par
   81 \par
   82     if(hx<0x3ff00000) \{     /* x < 1 */\par
   83         return (x-x)/(x-x);\par
   84     \} else if(hx >=0x41b00000) \{    /* x > 2**28 */\par
   85         if(hx >=0x7ff00000) \{   /* x is inf of NaN */\par
   86             return x+x;\par
   87         \} else\par
   88             return log(x)+ln2;  /* acosh(huge)=log(2x) */\par
   89     \} else if(((hx-0x3ff00000)|lx)==0) \{\par
   90         return 0.0;         /* acosh(1) = 0 */\par
   91     \} else if (hx > 0x40000000) \{   /* 2**28 > x > 2 */\par
   92         t=x*x;\par
   93         return log(2.0*x-one/(x+sqrt(t-one)));\par
   94     \} else \{            /* 1<x<2 */\par
   95         t = x-one;\par
   96         return log1p(t+sqrt(2.0*t+t*t));\par
   97     \}\par
   98 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_ac862445bcb46911b1782c284829d5e46_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_ac862445bcb46911b1782c284829d5e46_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v asin\:math.h}
{\xe \v math.h\:asin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double asin (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric sine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
 Since  asin(x) = x + x^3/6 + x^5*3/40 + x^7*15/336 + ...
 we approximate asin(x) on [0,0.5] by
    asin(x) = x + x*x^2*R(x^2)
 where
    R(x^2) is a rational approximation of (asin(x)-x)/x^3
 and its remez error is bounded by
    |(asin(x)-x)/x^3 - R(x^2)| < 2^(-58.75)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  For x in [0.5,1]
    asin(x) = pi/2-2*asin(sqrt((1-x)/2))
 Let y = (1-x), z = y/2, s := sqrt(z), and pio2_hi+pio2_lo=pi/2;
 then for x>0.98
    asin(x) = pi/2 - 2*(s+s*z*R(z))
        = pio2_hi - (2*(s+s*z*R(z)) - pio2_lo)
 For x<=0.98, let pio4_hi = pio2_hi/2, then
    f = hi part of s;
    c = sqrt(z) - f = (z-f*f)/(s+f)     ...f+c=sqrt(z)
 and
    asin(x) = pi/2 - 2*(s+s*z*R(z))
        = pio4_hi+(pio4-2s)-(2s*z*R(z)-pio2_lo)
        = pio4_hi+(pio4-2f)-(2s*z*R(z)-(pio2_lo+2c))\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 if x is NaN, return x itself;
 if |x|>1, return NaN with invalid signal.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 104 of file asin.c.}\par
{
References huge, one, pio2_hi, pio2_lo, pio4_hi, pS0, pS1, pS2, pS3, pS4, pS5, qS1, qS2, qS3, qS4, and sqrt().}\par
{
Referenced by RealNumber::ArcCosecant(), and RealNumber::ArcSine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   105 \{\par
  106     double t,w,p,q,c,r,s;\par
  107     sword hx,ix;\par
  108     GET_HIGH_WORD(hx,x);\par
  109     ix = hx&0x7fffffff;\par
  110     if(ix>= 0x3ff00000) \{       /* |x|>= 1 */\par
  111         uword lx;\par
  112         GET_LOW_WORD(lx,x);\par
  113         if(((ix-0x3ff00000)|lx)==0)\par
  114             /* asin(1)=+-pi/2 with inexact */\par
  115             return x*pio2_hi+x*pio2_lo;\par
  116         return (x-x)/(x-x);     /* asin(|x|>1) is NaN */\par
  117     \} else if (ix<0x3fe00000) \{ /* |x|<0.5 */\par
  118         if(ix<0x3e400000) \{     /* if |x| < 2**-27 */\par
  119             if(huge+x>one) \{\par
  120                 return x;/* return x with inexact if x!=0*/\par
  121             \} else \{\par
  122                 t = 0;\par
  123             \}\par
  124         \} else \{\par
  125             t = x*x;\par
  126         \}\par
  127 \par
  128         p = t*(pS0+t*(pS1+t*(pS2+t*(pS3+t*(pS4+t*pS5)))));\par
  129         q = one+t*(qS1+t*(qS2+t*(qS3+t*qS4)));\par
  130         w = p/q;\par
  131         return x+x*w;\par
  132     \}\par
  133     /* 1> |x|>= 0.5 */\par
  134     w = one-fabs(x);\par
  135     t = w*0.5;\par
  136     p = t*(pS0+t*(pS1+t*(pS2+t*(pS3+t*(pS4+t*pS5)))));\par
  137     q = one+t*(qS1+t*(qS2+t*(qS3+t*qS4)));\par
  138     s = sqrt(t);\par
  139     if(ix>=0x3FEF3333) \{    /* if |x| > 0.975 */\par
  140         w = p/q;\par
  141         t = pio2_hi-(2.0*(s+s*w)-pio2_lo);\par
  142     \} else \{\par
  143         w  = s;\par
  144         SET_LOW_WORD(w,0);\par
  145         c  = (t-w*w)/(s+w);\par
  146         r  = p/q;\par
  147         p  = 2.0*s*r-(pio2_lo-2.0*c);\par
  148         q  = pio4_hi-2.0*w;\par
  149         t  = pio4_hi-(p-q);\par
  150     \}\par
  151     if(hx>0) return t;\par
  152     else return -t;\par
  153 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_aa9528d92a3ae44ad6484da0774604454_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_aa9528d92a3ae44ad6484da0774604454_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v asinh\:math.h}
{\xe \v math.h\:asinh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double asinh (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic sine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
 Based on
    asinh(x) = sign(x) * log [ |x| + sqrt(x*x+1) ]
 we have
 asinh(x) := x  if  1+x*x=1,
     := sign(x)*(log(x)+ln2)) for large |x|, else
     := sign(x)*log(2|x|+1/(|x|+sqrt(x*x+1))) if|x|>2, else
     := sign(x)*log1p(|x| + x^2/(1 + sqrt(1+x^2)))
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 73 of file asinh.c.}\par
{
References huge, ln2, log1p(), one, and sqrt().}\par
{
Referenced by RealNumber::HypArcCosecant(), and RealNumber::HypArcSine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    74 \{\par
   75     double t,w;\par
   76     sword hx,ix;\par
   77     GET_HIGH_WORD(hx,x);\par
   78     ix = hx&0x7fffffff;\par
   79     if(ix>=0x7ff00000) return x+x;  /* x is inf or NaN */\par
   80     if(ix< 0x3e300000) \{    /* |x|<2**-28 */\par
   81         if(huge+x>one) return x;    /* return x inexact except 0 */\par
   82     \}\par
   83     if(ix>0x41b00000) \{ /* |x| > 2**28 */\par
   84         w = log(fabs(x))+ln2;\par
   85     \} else if (ix>0x40000000) \{ /* 2**28 > |x| > 2.0 */\par
   86         t = fabs(x);\par
   87         w = log(2.0*t+one/(sqrt(x*x+one)+t));\par
   88     \} else \{        /* 2.0 > |x| > 2**-28 */\par
   89         t = x*x;\par
   90         w =log1p(fabs(x)+t/(one+sqrt(one+t)));\par
   91     \}\par
   92     if(hx>0) return w;\par
   93     else return -w;\par
   94 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a907297107e93ea9c8a0c8409a8e65079_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a907297107e93ea9c8a0c8409a8e65079_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v atan\:math.h}
{\xe \v math.h\:atan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double atan (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric tangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method
  1. Reduce x to positive by atan(x) = -atan(-x).
  2. According to the integer k=4t+0.25 chopped, t=x, the argument
     is further reduced to one of the following intervals and the
     arctangent of t is evaluated by the corresponding formula:\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid      [0,7/16]      atan(x) = t-t^3*(a1+t^2*(a2+...(a10+t^2*a11)...)
     [7/16,11/16]  atan(x) = atan(1/2) + atan( (t-0.5)/(1+t/2) )
     [11/16.19/16] atan(x) = atan( 1 ) + atan( (t-1)/(1+t) )
     [19/16,39/16] atan(x) = atan(3/2) + atan( (t-1.5)/(1+1.5t) )
     [39/16,INF]   atan(x) = atan(INF) + atan( -1/t )\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constants:
The hexadecimal values are the intended ones for the following
constants. The decimal values may be used, provided that the
compiler will convert from decimal to binary accurately enough
to produce the hexadecimal values shown.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 109 of file atan.c.}\par
{
References aT, atanhi, atanlo, huge, and one.}\par
{
Referenced by RealNumber::ArcCotangent(), RealNumber::ArcTangent(), and atan2().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   110 \{\par
  111     double w,s1,s2,z;\par
  112     sword ix,hx,id;\par
  113 \par
  114     GET_HIGH_WORD(hx,x);\par
  115     ix = hx&0x7fffffff;\par
  116     if(ix>=0x44100000) \{    /* if |x| >= 2^66 */\par
  117         uword low;\par
  118 \par
  119         GET_LOW_WORD(low,x);\par
  120         if(ix>0x7ff00000||\par
  121                 (ix==0x7ff00000&&(low!=0)))\par
  122             return x+x;     /* NaN */\par
  123         if(hx>0) return  atanhi[3]+atanlo[3];\par
  124         else     return -atanhi[3]-atanlo[3];\par
  125     \}\par
  126     if (ix < 0x3fdc0000) \{  /* |x| < 0.4375 */\par
  127         if (ix < 0x3e200000) \{  /* |x| < 2^-29 */\par
  128             if(huge+x>one) return x;    /* raise inexact */\par
  129         \}\par
  130         id = -1;\par
  131     \} else \{\par
  132         x = fabs(x);\par
  133         if (ix < 0x3ff30000) \{      /* |x| < 1.1875 */\par
  134             if (ix < 0x3fe60000) \{  /* 7/16 <=|x|<11/16 */\par
  135                 id = 0;\par
  136                 x = (2.0*x-one)/(2.0+x);\par
  137             \} else \{            /* 11/16<=|x|< 19/16 */\par
  138                 id = 1;\par
  139                 x  = (x-one)/(x+one);\par
  140             \}\par
  141         \} else \{\par
  142             if (ix < 0x40038000) \{  /* |x| < 2.4375 */\par
  143                 id = 2;\par
  144                 x  = (x-1.5)/(one+1.5*x);\par
  145             \} else \{            /* 2.4375 <= |x| < 2^66 */\par
  146                 id = 3;\par
  147                 x  = -1.0/x;\par
  148             \}\par
  149         \}\par
  150     \}\par
  151     /* end of argument reduction */\par
  152     z = x*x;\par
  153     w = z*z;\par
  154     /* break sum from i=0 to 10 aT[i]z**(i+1) into odd and even poly */\par
  155     s1 = z*(aT[0]+w*(aT[2]+w*(aT[4]+w*(aT[6]+w*(aT[8]+w*aT[10])))));\par
  156     s2 = w*(aT[1]+w*(aT[3]+w*(aT[5]+w*(aT[7]+w*aT[9]))));\par
  157     if (id<0) return x - x*(s1+s2);\par
  158     else \{\par
  159         z = atanhi[id] - ((x*(s1+s2) - atanlo[id]) - x);\par
  160         return (hx<0)? -z:z;\par
  161     \}\par
  162 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a1e2f8f6d64eaa95131bc63fee34970ea_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v atan2\:math.h}
{\xe \v math.h\:atan2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double atan2 (double  {\i y}, double  {\i x})}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file atan2.c.}\par
{
References atan(), pi, pi_lo, pi_o_2, pi_o_4, tiny, and zero.}\par
{
Referenced by clog(), and cpow().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    87 \{\par
   88     double z;\par
   89     sword k,m,hx,hy,ix,iy;\par
   90     uword lx,ly;\par
   91 \par
   92     EXTRACT_WORDS(hx,lx,x);\par
   93     ix = hx&0x7fffffff;\par
   94     EXTRACT_WORDS(hy,ly,y);\par
   95     iy = hy&0x7fffffff;\par
   96     if(((ix|((lx|-lx)>>31))>0x7ff00000)||\par
   97             ((iy|((ly|-ly)>>31))>0x7ff00000))   /* x or y is NaN */\par
   98         return x+y;\par
   99     if(((hx-0x3ff00000)|lx)==0) return atan(y);   /* x=1.0 */\par
  100     m = ((hy>>31)&1)|((hx>>30)&2);  /* 2*sign(x)+sign(y) */\par
  101 \par
  102     /* when y = 0 */\par
  103     if((iy|ly)==0) \{\par
  104         switch(m) \{\par
  105         case 0:\par
  106         case 1:\par
  107             return y;   /* atan(+-0,+anything)=+-0 */\par
  108         case 2:\par
  109             return  pi+tiny;/* atan(+0,-anything) = pi */\par
  110         case 3:\par
  111             return -pi-tiny;/* atan(-0,-anything) =-pi */\par
  112         \}\par
  113     \}\par
  114     /* when x = 0 */\par
  115     if((ix|lx)==0) return (hy<0)?  -pi_o_2-tiny: pi_o_2+tiny;\par
  116 \par
  117     /* when x is INF */\par
  118     if(ix==0x7ff00000) \{\par
  119         if(iy==0x7ff00000) \{\par
  120             switch(m) \{\par
  121             case 0:\par
  122                 return  pi_o_4+tiny;/* atan(+INF,+INF) */\par
  123             case 1:\par
  124                 return -pi_o_4-tiny;/* atan(-INF,+INF) */\par
  125             case 2:\par
  126                 return  3.0*pi_o_4+tiny;/*atan(+INF,-INF)*/\par
  127             case 3:\par
  128                 return -3.0*pi_o_4-tiny;/*atan(-INF,-INF)*/\par
  129             \}\par
  130         \} else \{\par
  131             switch(m) \{\par
  132             case 0:\par
  133                 return  zero  ; /* atan(+...,+INF) */\par
  134             case 1:\par
  135                 return -zero  ; /* atan(-...,+INF) */\par
  136             case 2:\par
  137                 return  pi+tiny  ;  /* atan(+...,-INF) */\par
  138             case 3:\par
  139                 return -pi-tiny  ;  /* atan(-...,-INF) */\par
  140             \}\par
  141         \}\par
  142     \}\par
  143     /* when y is INF */\par
  144     if(iy==0x7ff00000) return (hy<0)? -pi_o_2-tiny: pi_o_2+tiny;\par
  145 \par
  146     /* compute y/x */\par
  147     k = (iy-ix)>>20;\par
  148     if(k > 60) z=pi_o_2+0.5*pi_lo;  /* |y/x| >  2**60 */\par
  149     else if(hx<0&&k<-60) z=0.0;     /* |y|/x < -2**60 */\par
  150     else z=atan(fabs(y/x));     /* safe to do y/x */\par
  151     switch (m) \{\par
  152     case 0:\par
  153         return       z  ;   /* atan(+,+) */\par
  154     case 1: \{\par
  155         uword zh;\par
  156         GET_HIGH_WORD(zh,z);\par
  157         SET_HIGH_WORD(z, zh ^ 0x80000000);\par
  158     \}\par
  159     return       z  ;   /* atan(-,+) */\par
  160     case 2:\par
  161         return  pi-(z-pi_lo);/* atan(+,-) */\par
  162     default: /* case 3 */\par
  163         return  (z-pi_lo)-pi;/* atan(-,-) */\par
  164     \}\par
  165 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a349377202ca14f79eb335b1a421fe4d8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a349377202ca14f79eb335b1a421fe4d8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v atanh\:math.h}
{\xe \v math.h\:atanh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double atanh (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic tangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
   1.Reduced x to positive by atanh(-x) = -atanh(x)
   2.For x>=0.5
                 1              2x                          x
 atanh(x) = --- * log(1 + -------) = 0.5 * log1p(2 * --------)
                 2             1 - x                      1 - x\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     For x<0.5
 atanh(x) = 0.5*log1p(2x+2x*x/(1-x))\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 atanh(x) is NaN if |x| > 1 with signal;
 atanh(NaN) is that NaN with no signal;
 atanh(+-1) is +-INF with signal.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 81 of file atanh.c.}\par
{
References huge, log1p(), one, and zero.}\par
{
Referenced by RealNumber::HypArcCotangent(), and RealNumber::HypArcTangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    82 \{\par
   83     double t;\par
   84     sword hx,ix;\par
   85     uword lx;\par
   86     GET_HIGH_WORD(hx,x);\par
   87     GET_LOW_WORD(lx,x);\par
   88     ix = hx&0x7fffffff;\par
   89     if ((ix|((lx|(-lx))>>31))>0x3ff00000) /* |x|>1 */\par
   90         return (x-x)/(x-x);\par
   91     if(ix==0x3ff00000)\par
   92         return x/zero;\par
   93     if(ix<0x3e300000&&(huge+x)>zero) return x;  /* x<2**-28 */\par
   94     SET_HIGH_WORD(x, ix);       /* x <- |x| */\par
   95     if(ix<0x3fe00000) \{     /* x < 0.5 */\par
   96         t = x+x;\par
   97         t = 0.5*log1p(t+t*x/(one-x));\par
   98     \} else\par
   99         t = 0.5*log1p((x+x)/(one-x));\par
  100     if(hx>=0) return t;\par
  101     else return -t;\par
  102 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_ac07fd7b77fa341563abccf9efcc1a711_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_ac07fd7b77fa341563abccf9efcc1a711_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cbrt\:math.h}
{\xe \v math.h\:cbrt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double cbrt (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cube root function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 67 of file cbrt.c.}\par
{
References B1, B2, C, D, E, F, and G.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    68 \{\par
   69     sword   hx, lx, ht;\par
   70     double r,s,t=0.0,w;\par
   71     uword sign;\par
   72 \par
   73     GET_HIGH_WORD(hx,x); /* high word of x */\par
   74     sign=hx&0x80000000;         /* sign= sign(x) */\par
   75     hx  ^=sign;\par
   76     if(hx>=0x7ff00000) return(x+x); /* cbrt(NaN,INF) is itself */\par
   77     GET_LOW_WORD(lx, x);\par
   78     if((hx|lx)==0)\par
   79         return(x);      /* cbrt(0) is itself */\par
   80 \par
   81     SET_HIGH_WORD(x,hx); /* x <- |x| */\par
   82     /* rough cbrt to 5 bits */\par
   83     if(hx<0x00100000)       /* subnormal number */\par
   84     \{\par
   85         SET_HIGH_WORD(t,0x43500000);        /* set t= 2**54 */\par
   86         t*=x;\par
   87         GET_HIGH_WORD(ht,t);\par
   88         SET_HIGH_WORD(t,ht/3+B2);\par
   89     \}\par
   90     else\par
   91         SET_HIGH_WORD(t,hx/3+B1);\par
   92 \par
   93     /* new cbrt to 23 bits, may be implemented in single precision */\par
   94     r=t*t/x;\par
   95     s=C+r*t;\par
   96     t*=G+F/(s+E+D/s);\par
   97 \par
   98     /* chopped to 20 bits and make it larger than cbrt(x) */\par
   99     SET_LOW_WORD(t,0);\par
  100     GET_HIGH_WORD(ht,t);\par
  101     SET_HIGH_WORD(t,ht + 0x00000001);\par
  102 \par
  103     /* one step newton iteration to 53 bits with error less than 0.667 ulps */\par
  104     s=t*t;      /* t*t is exact */\par
  105     r=x/s;\par
  106     w=t+t;\par
  107     r=(r-t)/(w+r);  /* r-s is exact */\par
  108     t=t+t*r;\par
  109 \par
  110     /* retore the sign bit */\par
  111     GET_HIGH_WORD(ht,t);\par
  112     SET_HIGH_WORD(t,ht|sign);\par
  113 \par
  114     return(t);\par
  115 \}\par
}
}
{\xe \v ceil\:math.h}
{\xe \v math.h\:ceil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ceil (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical ceiling function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Return x rounded toward -inf to integral value
Method:
 Bit twiddling.
Exception:
 Inexact flag raised if x not equal to ceil(x).
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 65 of file ceil.c.}\par
{
References huge.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    66 \{\par
   67     sword i0,i1,j0;\par
   68     uword i,j;\par
   69     EXTRACT_WORDS(i0,i1,x);\par
   70     j0 = ((i0>>20)&0x7ff)-0x3ff;\par
   71     if(j0<20) \{\par
   72         if(j0<0) \{          /* raise inexact if x != 0 */\par
   73             if(huge+x>0.0) \{        /* return 0*sign(x) if |x|<1 */\par
   74                 if(i0<0) \{\par
   75                     i0=0x80000000;\par
   76                     i1=0;\par
   77                 \}\par
   78                 else if((i0|i1)!=0) \{\par
   79                     i0=0x3ff00000;\par
   80                     i1=0;\par
   81                 \}\par
   82             \}\par
   83         \} else \{\par
   84             i = (0x000fffff)>>j0;\par
   85             if(((i0&i)|i1)==0) return x; /* x is integral */\par
   86             if(huge+x>0.0) \{        /* raise inexact flag */\par
   87                 if(i0>0) i0 += (0x00100000)>>j0;\par
   88                 i0 &= (~i);\par
   89                 i1=0;\par
   90             \}\par
   91         \}\par
   92     \} else if (j0>51) \{\par
   93         if(j0==0x400) return x+x;   /* inf or NaN */\par
   94         else return x;          /* x is integral */\par
   95     \} else \{\par
   96         i = ((uword)(0xffffffff))>>(j0-20);\par
   97         if((i1&i)==0) return x;     /* x is integral */\par
   98         if(huge+x>0.0) \{        /* raise inexact flag */\par
   99             if(i0>0) \{\par
  100                 if(j0==20) i0+=1;\par
  101                 else \{\par
  102                     j = i1 + (1<<(52-j0));\par
  103                     // NOTICE: Is this a correct cast?\par
  104                     if((sword)j<(sword)i1) i0+=1;   /* got a carry */\par
  105                     i1 = j;\par
  106                 \}\par
  107             \}\par
  108             i1 &= (~i);\par
  109         \}\par
  110     \}\par
  111     INSERT_WORDS(x,i0,i1);\par
  112     return x;\par
  113 \}\par
}
}
{\xe \v copysign\:math.h}
{\xe \v math.h\:copysign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double copysign (double  {\i x}, double  {\i y})}}
\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a value with the magnitude of x and with the sign bit of y. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18 \par
}}{
Definition at line 52 of file copysign.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    53 \{\par
   54     uword hx, hy;\par
   55     GET_HIGH_WORD(hx, x);\par
   56     GET_HIGH_WORD(hy, y);\par
   57     SET_HIGH_WORD(x, (hx&0x7fffffff)|(hy&0x80000000));\par
   58     return x;\par
   59 \}\par
}
}
{\xe \v cos\:math.h}
{\xe \v math.h\:cos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double cos (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric cosine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Return cosine function of x.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid kernel function:
 __kernel_sin       ... sine function on [-pi/4,pi/4]
 __kernel_cos       ... cosine function on [-pi/4,pi/4]
 rem_pio2       ... argument reduction routine\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Method.
     Let S,C and T denote the sin, cos and tan respectively on
 [-PI/4, +PI/4]. Reduce the argument x to y1+y2 = x-k*pi/2
 in [-pi/4 , +pi/4], and let n = k mod 4.
 We have\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid          n        sin(x)      cos(x)        tan(x)
    ----------------------------------------------------------
     0         S       C         T
     1         C      -S        -1/T
     2        -S      -C         T
     3        -C       S        -1/T
    ----------------------------------------------------------\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
     Let trig be any of sin, cos, or tan.
     trig(+-INF)  is NaN, with signals;
     trig(NaN)    is that NaN;\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Accuracy:
 TRIG(x) returns trig(x) nearly rounded
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 87 of file cos.c.}\par
{
References __kernel_cos(), __kernel_sin(), and rempio2().}\par
{
Referenced by cchc(), ccos(), ccosh(), ccot(), ccoth(), ccsc(), ccsch(), cexp(), RealNumber::Cosine(), cpow(), csec(), csech(), csin(), csinh(), ctan(), ctanh(), and RealNumber::Secant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    88 \{\par
   89     double y[2],z=0.0;\par
   90     sword n, ix;\par
   91 \par
   92     /* High word of x. */\par
   93     GET_HIGH_WORD(ix,x);\par
   94 \par
   95     /* |x| ~< pi/4 */\par
   96     ix &= 0x7fffffff;\par
   97     if(ix <= 0x3fe921fb) return __kernel_cos(x,z);\par
   98 \par
   99     /* cos(Inf or NaN) is NaN */\par
  100     else if (ix>=0x7ff00000) return x-x;\par
  101 \par
  102     /* argument reduction needed */\par
  103     else \{\par
  104         n = rempio2(x,y);\par
  105         switch(n&3) \{\par
  106         case 0:\par
  107             return  __kernel_cos(y[0],y[1]);\par
  108         case 1:\par
  109             return -__kernel_sin(y[0],y[1],1);\par
  110         case 2:\par
  111             return -__kernel_cos(y[0],y[1]);\par
  112         default:\par
  113             return  __kernel_sin(y[0],y[1],1);\par
  114         \}\par
  115     \}\par
  116 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a5e7b53a694b3cf0f2d7debd444140fbd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a5e7b53a694b3cf0f2d7debd444140fbd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cosh\:math.h}
{\xe \v math.h\:cosh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double cosh (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cosine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
mathematically cosh(x) if defined to be (exp(x)+exp(-x))/2
 1. Replace x by |x| (cosh(x) = cosh(-x)).
 2.
                                            [ exp(x) - 1 ]^2
     0        <= x <= ln2/2  :  cosh(x) := 1 + -------------------
                                   2*exp(x)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                                       exp(x) +  1/exp(x)
     ln2/2    <= x <= 22     :  cosh(x) := -------------------
                                  2
     22       <= x <= lnovft :  cosh(x) := exp(x)/2
     lnovft   <= x <= ln2ovft:  cosh(x) := exp(x/2)/2 * exp(x/2)
     ln2ovft  <  x      :  cosh(x) := huge*huge (overflow)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 cosh(x) is |x| if x is +INF, -INF, or NaN.
 only cosh(0)=1 is exact for finite x.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 84 of file cosh.c.}\par
{
References exp(), expm1(), half, huge, and one.}\par
{
Referenced by cchc(), cchsh(), ccot(), ccoth(), ccsc(), ccsch(), csec(), csech(), ctan(), ctanh(), RealNumber::HypCosine(), and RealNumber::HypSecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    85 \{\par
   86     double t,w;\par
   87     sword ix;\par
   88     uword lx;\par
   89 \par
   90     /* High word of |x|. */\par
   91     GET_HIGH_WORD(ix,x);\par
   92     ix &= 0x7fffffff;\par
   93 \par
   94     /* x is INF or NaN */\par
   95     if(ix>=0x7ff00000) return x*x;\par
   96 \par
   97     /* |x| in [0,0.5*ln2], return 1+expm1(|x|)^2/(2*exp(|x|)) */\par
   98     if(ix<0x3fd62e43) \{\par
   99         t = expm1(fabs(x));\par
  100         w = one+t;\par
  101         if (ix<0x3c800000) return w;    /* cosh(tiny) = 1 */\par
  102         return one+(t*t)/(w+w);\par
  103     \}\par
  104 \par
  105     /* |x| in [0.5*ln2,22], return (exp(|x|)+1/exp(|x|)/2; */\par
  106     if (ix < 0x40360000) \{\par
  107         t = exp(fabs(x));\par
  108         return half*t+half/t;\par
  109     \}\par
  110 \par
  111     /* |x| in [22, log(maxdouble)] return half*exp(|x|) */\par
  112     if (ix < 0x40862E42)  return half*exp(fabs(x));\par
  113 \par
  114     /* |x| in [log(maxdouble), overflowthresold] */\par
  115     lx = *( (((*(unsigned*)&one)>>29)) + (unsigned*)&x);\par
  116     if (ix<0x408633CE ||\par
  117             ((ix==0x408633ce)&&(lx<=(unsigned)0x8fb9f87d))) \{\par
  118         w = exp(half*fabs(x));\par
  119         t = half*w;\par
  120         return t*w;\par
  121     \}\par
  122 \par
  123     /* |x| > overflowthresold, cosh(x) overflow */\par
  124     return huge*huge;\par
  125 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a3795d3c1f1d30819be56da4e4d67f64b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a3795d3c1f1d30819be56da4e4d67f64b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v exp\:math.h}
{\xe \v math.h\:exp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double exp (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the exponential of x. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.6 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 04/04/22\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method
  1. Argument reduction:
     Reduce x to an r so that |r| <= 0.5*ln2 ~ 0.34658.
 Given x, find r and integer k such that\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid               x = k*ln2 + r,  |r| <= 0.5*ln2.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid      Here r will be represented as r = hi-lo for better
 accuracy.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   2. Approximation of exp(r) by a special rational function on
 the interval [0,0.34658]:
 Write
     R(r**2) = r*(exp(r)+1)/(exp(r)-1) = 2 + r*r/6 - r**4/360 + ...
     We use a special Remes algorithm on [0,0.34658] to generate
    a polynomial of degree 5 to approximate R. The maximum error
 of this polynomial approximation is bounded by 2**-59. In
 other words,
     R(z) ~ 2.0 + P1*z + P2*z**2 + P3*z**3 + P4*z**4 + P5*z**5
    (where z=r*r, and the values of P1 to P5 are listed below)
 and
     |                  5          |     -59
     | 2.0+P1*z+...+P5*z   -  R(z) | <= 2
     |                             |
 The computation of exp(r) thus becomes
                            2*r
    exp(r) = 1 + -------
                  R - r
                                r*R1(r)
           = 1 + r + ----------- (for better accuracy)
                      2 - R1(r)
 where
                 2       4             10
    R1(r) = r - (P1*r  + P2*r  + ... + P5*r   ).\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   3. Scale back to obtain exp(x):
 From step 1, we have
    exp(x) = 2^k * exp(r)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 exp(INF) is INF, exp(NaN) is NaN;
 exp(-INF) is 0, and
 for finite argument, only exp(0)=1 is exact.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Accuracy:
 according to an error analysis, the error is always less than
 1 ulp (unit in the last place).\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Misc. info.
 For IEEE double
     if x >  7.09782712893383973096e+02 then exp(x) overflow
     if x < -7.45133219101941108420e+02 then exp(x) underflow\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constants:
The hexadecimal values are the intended ones for the following
constants. The decimal values may be used, provided that the
compiler will convert from decimal to binary accurately enough
to produce the hexadecimal values shown.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 134 of file exp.c.}\par
{
References halF, huge, invln2, ln2HI, ln2LO, o_threshold, one, P1, P2, P3, P4, P5, twom1000, and u_threshold.}\par
{
Referenced by cchsh(), cexp(), cosh(), cpow(), and sinh().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   135 \{\par
  136     double y,hi,lo,c,t;\par
  137     sword k,xsb;\par
  138     uword hx;\par
  139 \par
  140     lo = 0.0;\par
  141     hi = 0.0;\par
  142 \par
  143     GET_HIGH_WORD(hx,x);    /* high word of x */\par
  144     xsb = (hx>>31)&1;       /* sign bit of x */\par
  145     hx &= 0x7fffffff;       /* high word of |x| */\par
  146 \par
  147     /* filter out non-finite argument */\par
  148     if(hx >= 0x40862E42) \{          /* if |x|>=709.78... */\par
  149         if(hx>=0x7ff00000) \{\par
  150             uword lx;\par
  151             GET_LOW_WORD(lx,x);\par
  152             if(((hx&0xfffff)|lx)!=0)\par
  153                 return x+x;             /* NaN */\par
  154             else return (xsb==0)? x:0.0;    /* exp(+-inf)=\{inf,0\} */\par
  155         \}\par
  156         if(x > o_threshold) return huge*huge; /* overflow */\par
  157         if(x < u_threshold) return twom1000*twom1000; /* underflow */\par
  158     \}\par
  159 \par
  160     /* argument reduction */\par
  161     if(hx > 0x3fd62e42) \{       /* if  |x| > 0.5 ln2 */\par
  162         if(hx < 0x3FF0A2B2) \{       /* and |x| < 1.5 ln2 */\par
  163             hi = x-ln2HI[xsb];\par
  164             lo=ln2LO[xsb];\par
  165             k = 1-xsb-xsb;\par
  166         \} else \{\par
  167             k  = (sword)(invln2*x+halF[xsb]);\par
  168             t  = k;\par
  169             hi = x - t*ln2HI[0];    /* t*ln2HI is exact here */\par
  170             lo = t*ln2LO[0];\par
  171         \}\par
  172         x  = hi - lo;\par
  173     \}\par
  174     else if(hx < 0x3e300000)  \{     /* when |x|<2**-28 */\par
  175         if(huge+x>one) \{\par
  176             return one+x;   /* trigger inexact */\par
  177         \} else \{\par
  178             k = 0;\par
  179         \}\par
  180     \}\par
  181     else k = 0;\par
  182 \par
  183     /* x is now in primary range */\par
  184     t  = x*x;\par
  185     c  = x - t*(P1+t*(P2+t*(P3+t*(P4+t*P5))));\par
  186     if(k==0)    return one-((x*c)/(c-2.0)-x);\par
  187     else        y = one-((lo-(x*c)/(2.0-c))-hi);\par
  188     if(k >= -1021) \{\par
  189         uword hy;\par
  190         GET_HIGH_WORD(hy, y);\par
  191         SET_HIGH_WORD(y, hy + (k<<20)); /* add k to y's exponent */\par
  192         return y;\par
  193     \} else \{\par
  194         uword hy;\par
  195         GET_HIGH_WORD(hy, y);\par
  196         SET_HIGH_WORD(y, hy + ((k+1000)<<20));/* add k to y's exponent */\par
  197         return y*twom1000;\par
  198     \}\par
  199 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_ae09128febbbe6372cde4fa0c65608a42_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v expm1\:math.h}
{\xe \v math.h\:expm1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double expm1 (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 156 of file expm1.c.}\par
{
References huge, invln2, ln2_hi, ln2_lo, o_threshold, one, Q1, Q2, Q3, Q4, Q5, and tiny.}\par
{
Referenced by cosh(), sinh(), and tanh().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   157 \{\par
  158     double y,hi,lo,c,t,e,hxs,hfx,r1;\par
  159     sword k,xsb;\par
  160     uword hx;\par
  161 \par
  162     c = 0.0;\par
  163 \par
  164     GET_HIGH_WORD(hx,x); /* high word of x */\par
  165     xsb = hx&0x80000000;        /* sign bit of x */\par
  166     if(xsb==0) y=x;\par
  167     else y= -x; /* y = |x| */\par
  168     hx &= 0x7fffffff;       /* high word of |x| */\par
  169 \par
  170     /* filter out huge and non-finite argument */\par
  171     if(hx >= 0x4043687A) \{          /* if |x|>=56*ln2 */\par
  172         if(hx >= 0x40862E42) \{      /* if |x|>=709.78... */\par
  173             if(hx>=0x7ff00000) \{\par
  174                 uword low;\par
  175                 GET_LOW_WORD(low,x);\par
  176                 if(((hx&0xfffff)|low)!=0)\par
  177                     return x+x;      /* NaN */\par
  178                 else return (xsb==0)? x:-1.0;/* exp(+-inf)=\{inf,-1\} */\par
  179             \}\par
  180             if(x > o_threshold) return huge*huge; /* overflow */\par
  181         \}\par
  182         if(xsb!=0) \{ /* x < -56*ln2, return -1.0 with inexact */\par
  183             if(x+tiny<0.0)      /* raise inexact */\par
  184                 return tiny-one;    /* return -1 */\par
  185         \}\par
  186     \}\par
  187 \par
  188     /* argument reduction */\par
  189     if(hx > 0x3fd62e42) \{       /* if  |x| > 0.5 ln2 */\par
  190         if(hx < 0x3FF0A2B2) \{   /* and |x| < 1.5 ln2 */\par
  191             if(xsb==0)\par
  192             \{\par
  193                 hi = x - ln2_hi;\par
  194                 lo =  ln2_lo;\par
  195                 k =  1;\par
  196             \}\par
  197             else\par
  198             \{\par
  199                 hi = x + ln2_hi;\par
  200                 lo = -ln2_lo;\par
  201                 k = -1;\par
  202             \}\par
  203         \} else \{\par
  204             k  = (sword)(invln2*x+((xsb==0)?0.5:-0.5));\par
  205             t  = k;\par
  206             hi = x - t*ln2_hi;  /* t*ln2_hi is exact here */\par
  207             lo = t*ln2_lo;\par
  208         \}\par
  209         x  = hi - lo;\par
  210         c  = (hi-x)-lo;\par
  211     \}\par
  212     else if(hx < 0x3c900000) \{      /* when |x|<2**-54, return x */\par
  213         t = huge+x; /* return x with inexact flags when x!=0 */\par
  214         return x - (t-(huge+x));\par
  215     \}\par
  216     else k = 0;\par
  217 \par
  218     /* x is now in primary range */\par
  219     hfx = 0.5*x;\par
  220     hxs = x*hfx;\par
  221     r1 = one+hxs*(Q1+hxs*(Q2+hxs*(Q3+hxs*(Q4+hxs*Q5))));\par
  222     t  = 3.0-r1*hfx;\par
  223     e  = hxs*((r1-t)/(6.0 - x*t));\par
  224     if(k==0) return x - (x*e-hxs);      /* c is 0 */\par
  225     else \{\par
  226         e  = (x*(e-c)-c);\par
  227         e -= hxs;\par
  228         if(k== -1) return 0.5*(x-e)-0.5;\par
  229         if(k==1) \{\par
  230             if(x < -0.25) return -2.0*(e-(x+0.5));\par
  231             else          return  one+2.0*(x-e);\par
  232         \}\par
  233         if (k <= -2 || k>56) \{   /* suffice to return exp(x)-1 */\par
  234             uword hy;\par
  235 \par
  236             y = one-(e-x);\par
  237             GET_HIGH_WORD(hy,y);\par
  238             SET_HIGH_WORD(y, hy + (k<<20)); /* add k to y's exponent */\par
  239             return y-one;\par
  240         \}\par
  241         t = one;\par
  242         if(k<20) \{\par
  243             uword hy;\par
  244 \par
  245             SET_HIGH_WORD(t, 0x3ff00000 - (0x200000>>k));  /* t=1-2^-k */\par
  246             y = t-(e-x);\par
  247             GET_HIGH_WORD(hy, y);\par
  248             SET_HIGH_WORD(y, hy + (k<<20)); /* add k to y's exponent */\par
  249         \} else \{\par
  250             uword hy;\par
  251 \par
  252             SET_HIGH_WORD(t, (0x3ff-k)<<20);    /* 2^-k */\par
  253             y = x-(e+t);\par
  254             y += one;\par
  255             GET_HIGH_WORD(hy, y);\par
  256             SET_HIGH_WORD(y, hy + (k<<20)); /* add k to y's exponent */\par
  257         \}\par
  258     \}\par
  259     return y;\par
  260 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_ae4963ac40f96d4b1fe8af1b1e90a20bb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v fabs\:math.h}
{\xe \v math.h\:fabs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fabs (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the absolute value of x. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18 \par
}}{
Definition at line 51 of file fabs.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    52 \{\par
   53     uword hx;\par
   54     GET_HIGH_WORD(hx,x);\par
   55     SET_HIGH_WORD(x, hx & 0x7fffffff);\par
   56     return x;\par
   57 \}\par
}
}
{\xe \v finite\:math.h}
{\xe \v math.h\:finite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int finite (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finite or infinite number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}finite(x) returns 1 is x is finite, else 0. NOTICE: No branching! \par
}{
Definition at line 53 of file finite.c.}\par
{
Referenced by PositionalNumeralSystem::GetText(), and RealNumber::IsFinite().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    54 \{\par
   55     uword hx;\par
   56     GET_HIGH_WORD(hx,x);\par
   57     return (unsigned)((hx&0x7fffffff)-0x7ff00000)>>31;\par
   58 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a08e754462e6ec13bc05fd41cff9cdd4a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v floor\:math.h}
{\xe \v math.h\:floor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double floor (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical floor function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Return x rounded toward -inf to integral value
Method:
 Bit twiddling.
Exception:
 Inexact flag raised if x not equal to floor(x).
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 66 of file floor.c.}\par
{
References huge.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    67 \{\par
   68     sword i0,i1,j0;\par
   69     uword i,j;\par
   70     EXTRACT_WORDS(i0,i1,x);\par
   71     j0 = ((i0>>20)&0x7ff)-0x3ff;\par
   72     if(j0<20) \{\par
   73         if(j0<0) \{  /* raise inexact if x != 0 */\par
   74             if(huge+x>0.0) \{/* return 0*sign(x) if |x|<1 */\par
   75                 if(i0>=0) \{\par
   76                     i0=i1=0;\par
   77                 \}\par
   78                 else if(((i0&0x7fffffff)|i1)!=0)\par
   79                 \{\par
   80                     i0=0xbff00000;\par
   81                     i1=0;\par
   82                 \}\par
   83             \}\par
   84         \} else \{\par
   85             i = (0x000fffff)>>j0;\par
   86             if(((i0&i)|i1)==0) return x; /* x is integral */\par
   87             if(huge+x>0.0) \{    /* raise inexact flag */\par
   88                 if(i0<0) i0 += (0x00100000)>>j0;\par
   89                 i0 &= (~i);\par
   90                 i1=0;\par
   91             \}\par
   92         \}\par
   93     \} else if (j0>51) \{\par
   94         if(j0==0x400) return x+x;   /* inf or NaN */\par
   95         else return x;      /* x is integral */\par
   96     \} else \{\par
   97         i = ((uword)(0xffffffff))>>(j0-20);\par
   98         if((i1&i)==0) return x; /* x is integral */\par
   99         if(huge+x>0.0) \{        /* raise inexact flag */\par
  100             if(i0<0) \{\par
  101                 if(j0==20) i0+=1;\par
  102                 else \{\par
  103                     j = i1+(1<<(52-j0));\par
  104                     if(j<(uword)i1) i0 +=1 ;    /* got a carry */\par
  105                     i1=j;\par
  106                 \}\par
  107             \}\par
  108             i1 &= (~i);\par
  109         \}\par
  110     \}\par
  111     INSERT_WORDS(x,i0,i1);\par
  112     return x;\par
  113 \}\par
}
}
{\xe \v fmod\:math.h}
{\xe \v math.h\:fmod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fmod (double  {\i x}, double  {\i y})}}
\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return x mod y in exact arithmetic. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}Method: shift and subtract \par
}{
Definition at line 58 of file fmod.c.}\par
{
References one, and Zero.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    59 \{\par
   60     sword n,hx,hy,hz,ix,iy,sx,i;\par
   61     uword lx,ly,lz;\par
   62 \par
   63     EXTRACT_WORDS(hx,lx,x);\par
   64     EXTRACT_WORDS(hy,ly,y);\par
   65     sx = hx&0x80000000;     /* sign of x */\par
   66     hx ^=sx;        /* |x| */\par
   67     hy &= 0x7fffffff;   /* |y| */\par
   68 \par
   69     /* purge off exception values */\par
   70     if((hy|ly)==0||(hx>=0x7ff00000)||   /* y=0,or x not finite */\par
   71             ((hy|((ly|-ly)>>31))>0x7ff00000))   /* or y is NaN */\par
   72         return (x*y)/(x*y);\par
   73     if(hx<=hy) \{\par
   74         if((hx<hy)||(lx<ly)) return x;  /* |x|<|y| return x */\par
   75         if(lx==ly)\par
   76             return Zero[(uword)sx>>31]; /* |x|=|y| return x*0*/\par
   77     \}\par
   78 \par
   79     /* determine ix = ilogb(x) */\par
   80     if(hx<0x00100000) \{ /* subnormal x */\par
   81         if(hx==0) \{\par
   82             for (ix = -1043, i=lx; i>0; i<<=1) ix -=1;\par
   83         \} else \{\par
   84             for (ix = -1022,i=(hx<<11); i>0; i<<=1) ix -=1;\par
   85         \}\par
   86     \} else ix = (hx>>20)-1023;\par
   87 \par
   88     /* determine iy = ilogb(y) */\par
   89     if(hy<0x00100000) \{ /* subnormal y */\par
   90         if(hy==0) \{\par
   91             for (iy = -1043, i=ly; i>0; i<<=1) iy -=1;\par
   92         \} else \{\par
   93             for (iy = -1022,i=(hy<<11); i>0; i<<=1) iy -=1;\par
   94         \}\par
   95     \} else iy = (hy>>20)-1023;\par
   96 \par
   97     /* set up \{hx,lx\}, \{hy,ly\} and align y to x */\par
   98     if(ix >= -1022)\par
   99         hx = 0x00100000|(0x000fffff&hx);\par
  100     else \{      /* subnormal x, shift x to normal */\par
  101         n = -1022-ix;\par
  102         if(n<=31) \{\par
  103             hx = (hx<<n)|(lx>>(32-n));\par
  104             lx <<= n;\par
  105         \} else \{\par
  106             hx = lx<<(n-32);\par
  107             lx = 0;\par
  108         \}\par
  109     \}\par
  110     if(iy >= -1022)\par
  111         hy = 0x00100000|(0x000fffff&hy);\par
  112     else \{      /* subnormal y, shift y to normal */\par
  113         n = -1022-iy;\par
  114         if(n<=31) \{\par
  115             hy = (hy<<n)|(ly>>(32-n));\par
  116             ly <<= n;\par
  117         \} else \{\par
  118             hy = ly<<(n-32);\par
  119             ly = 0;\par
  120         \}\par
  121     \}\par
  122 \par
  123     /* fix point fmod */\par
  124     n = ix - iy;\par
  125     while(n--) \{\par
  126         hz=hx-hy;\par
  127         lz=lx-ly;\par
  128         if(lx<ly) hz -= 1;\par
  129         if(hz<0) \{\par
  130             hx = hx+hx+(lx>>31);\par
  131             lx = lx+lx;\par
  132         \}\par
  133         else \{\par
  134             if((hz|lz)==0)      /* return sign(x)*0 */\par
  135                 return Zero[(uword)sx>>31];\par
  136             hx = hz+hz+(lz>>31);\par
  137             lx = lz+lz;\par
  138         \}\par
  139     \}\par
  140     hz=hx-hy;\par
  141     lz=lx-ly;\par
  142     if(lx<ly) hz -= 1;\par
  143     if(hz>=0) \{\par
  144         hx=hz;\par
  145         lx=lz;\par
  146     \}\par
  147 \par
  148     /* convert back to floating value and restore the sign */\par
  149     if((hx|lx)==0)          /* return sign(x)*0 */\par
  150         return Zero[(unsigned)sx>>31];\par
  151     while(hx<0x00100000) \{      /* normalize x */\par
  152         hx = hx+hx+(lx>>31);\par
  153         lx = lx+lx;\par
  154         iy -= 1;\par
  155     \}\par
  156     if(iy>= -1022) \{    /* normalize output */\par
  157         hx = ((hx-0x00100000)|((iy+1023)<<20));\par
  158         INSERT_WORDS(x,hx|sx,lx);\par
  159     \} else \{        /* subnormal output */\par
  160         n = -1022 - iy;\par
  161         if(n<=20) \{\par
  162             lx = (lx>>n)|((uword)hx<<(32-n));\par
  163             hx >>= n;\par
  164         \} else if (n<=31) \{\par
  165             lx = (hx<<(32-n))|(lx>>n);\par
  166             hx = sx;\par
  167         \} else \{\par
  168             lx = hx>>(n-32);\par
  169             hx = sx;\par
  170         \}\par
  171         INSERT_WORDS(x,hx|sx,lx);\par
  172         x *= one;       /* create necessary signal */\par
  173     \}\par
  174     return x;       /* exact output */\par
  175 \}\par
}
}
{\xe \v hypot\:math.h}
{\xe \v math.h\:hypot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hypot (double  {\i x}, double  {\i y})}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file hypot.c.}\par
{
References sqrt().}\par
{
Referenced by cabs().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    80 \{\par
   81     double a=x,b=y,t1,t2,y1,y2,w;\par
   82     uword j,k,ha,hb,hx,hy;\par
   83 \par
   84     GET_HIGH_WORD(hx,x);\par
   85     GET_HIGH_WORD(hy,y);\par
   86     ha = hx&0x7fffffff; /* high word of  x */\par
   87     hb = hy&0x7fffffff; /* high word of  y */\par
   88     if(hb > ha) \{\par
   89         a=y;\par
   90         b=x;\par
   91         j=ha;\par
   92         ha=hb;\par
   93         hb=j;\par
   94     \}\par
   95     else \{\par
   96         a=x;\par
   97         b=y;\par
   98     \}\par
   99     SET_HIGH_WORD(a,ha); /* a <- |a| */\par
  100     SET_HIGH_WORD(b,hb); /* b <- |b| */\par
  101     if((ha-hb)>0x3c00000) \{\par
  102         return a+b;   /* x/y > 2**60 */\par
  103     \}\par
  104     k=0;\par
  105     if(ha > 0x5f300000) \{   /* a>2**500 */\par
  106         if(ha >= 0x7ff00000) \{  /* Inf or NaN */\par
  107             uword la, lb;\par
  108             w = a+b;            /* for sNaN */\par
  109             GET_LOW_WORD(la,a);\par
  110             GET_LOW_WORD(lb,b);\par
  111             if(((ha&0xfffff)|la)==0) w = a;\par
  112             if(((hb^0x7ff00000)|lb)==0) w = b;\par
  113             return w;\par
  114         \}\par
  115         /* scale a and b by 2**-600 */\par
  116         ha -= 0x25800000;\par
  117         hb -= 0x25800000;\par
  118         k += 600;\par
  119         SET_HIGH_WORD(a,ha);\par
  120         SET_HIGH_WORD(b,hb);\par
  121     \}\par
  122     if(hb < 0x20b00000) \{   /* b < 2**-500 */\par
  123         if(hb <= 0x000fffff) \{  /* subnormal b or 0 */\par
  124             uword lb;\par
  125             GET_LOW_WORD(lb,b);\par
  126             if((hb|lb)==0) return a;\par
  127             t1=0;\par
  128             SET_HIGH_WORD(t1, 0x7fd00000);  /* t1=2^1022 */\par
  129             b *= t1;\par
  130             a *= t1;\par
  131             k -= 1022;\par
  132         \} else \{        /* scale a and b by 2^600 */\par
  133             ha += 0x25800000;   /* a *= 2^600 */\par
  134             hb += 0x25800000;   /* b *= 2^600 */\par
  135             k -= 600;\par
  136 \par
  137             SET_HIGH_WORD(a,ha);\par
  138             SET_HIGH_WORD(b,hb);\par
  139         \}\par
  140     \}\par
  141     /* medium size a and b */\par
  142     w = a-b;\par
  143     if (w>b) \{\par
  144         t1 = 0;\par
  145         SET_HIGH_WORD(t1, ha);\par
  146         t2 = a-t1;\par
  147         w  = sqrt(t1*t1-(b*(-b)-t2*(a+t1)));\par
  148     \} else \{\par
  149         a  = a+a;\par
  150         y1 = 0;\par
  151         SET_HIGH_WORD(y1, hb);\par
  152         y2 = b - y1;\par
  153         t1 = 0;\par
  154         SET_HIGH_WORD(t1, ha+0x00100000);\par
  155         t2 = a - t1;\par
  156         w  = sqrt(t1*y1-(w*(-w)-(t1*y2+t2*b)));\par
  157     \}\par
  158     if(k!=0) \{\par
  159         uword ht1;\par
  160 \par
  161         t1 = 1.0;\par
  162         GET_HIGH_WORD(ht1, t1);\par
  163         SET_HIGH_WORD(t1, ht1 + (k<<20));\par
  164         return t1*w;\par
  165     \} else return w;\par
  166 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a6d6a905f61d535f8454190433b8c0ea5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a6d6a905f61d535f8454190433b8c0ea5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isnan\:math.h}
{\xe \v math.h\:isnan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int isnan (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
isnan(x) returns 1 is x is nan, else 0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}NOTICE: No branching! \par
}{
Definition at line 49 of file isnan.c.}\par
{
Referenced by PositionalNumeralSystem::GetText(), and RealNumber::IsNaN().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{\par
   51     return ((x) != (x));\par
   52 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_afdf433fdb158cbe82ce818a3a2de736b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v log\:math.h}
{\xe \v math.h\:log}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double log (double  {\i x})}}
\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Natural logarithm function (base e). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.4 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 96/03/07\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
  1. Argument Reduction: find k and f such that
        x = 2^k * (1+f),
    where  sqrt(2)/2 < 1+f < sqrt(2) .\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   2. Approximation of log(1+f).
 Let s = f/(2+f) ; based on log(1+f) = log(1+s) - log(1-s)
     = 2s + 2/3 s**3 + 2/5 s**5 + .....,
         = 2s + s*R
     We use a special Remes algorithm on [0,0.1716] to generate
    a polynomial of degree 14 to approximate R The maximum error
 of this polynomial approximation is bounded by 2**-58.45. In
 other words,
            2      4      6      8      10      12      14
     R(z) ~ Lg1*s +Lg2*s +Lg3*s +Lg4*s +Lg5*s  +Lg6*s  +Lg7*s
    (the values of Lg1 to Lg7 are listed in the program)
 and
     |      2          14          |     -58.45
     | Lg1*s +...+Lg7*s    -  R(z) | <= 2
     |                             |
 Note that 2s = f - s*f = f - hfsq + s*hfsq, where hfsq = f*f/2.
 In order to guarantee error in log below 1ulp, we compute log
 by
    log(1+f) = f - s*(f - R)    (if f is not too large)
    log(1+f) = f - (hfsq - s*(hfsq+R)). (better accuracy)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  3. Finally,  log(x) = k*ln2 + log(1+f).
            = k*ln2_hi+(f-(hfsq-(s*(hfsq+R)+k*ln2_lo)))
    Here ln2 is split into two floating point number:
        ln2_hi + ln2_lo,
    where n*ln2_hi is always exact for |n| < 2000.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 log(x) is NaN with signal if x < 0 (including -INF) ;
 log(+INF) is +INF; log(0) is -INF with signal;
 log(NaN) is that NaN with no signal.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Accuracy:
 according to an error analysis, the error is always less than
 1 ulp (unit in the last place).\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constants:
The hexadecimal values are the intended ones for the following
constants. The decimal values may be used, provided that the
compiler will convert from decimal to binary accurately enough
to produce the hexadecimal values shown.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 118 of file log.c.}\par
{
References Lg1, Lg2, Lg3, Lg4, Lg5, Lg6, Lg7, ln2_hi, ln2_lo, two54, and zero.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   119 \{\par
  120     double hfsq,f,s,z,R,w,t1,t2,dk;\par
  121     sword k,hx,i,j;\par
  122     uword lx;\par
  123 \par
  124     EXTRACT_WORDS(hx,lx,x);\par
  125 \par
  126     k=0;\par
  127     if (hx < 0x00100000) \{          /* x < 2**-1022  */\par
  128         if (((hx&0x7fffffff)|lx)==0)\par
  129             return -two54/zero;     /* log(+-0)=-inf */\par
  130         if (hx<0) return (x-x)/zero;    /* log(-#) = NaN */\par
  131         k -= 54;\par
  132         x *= two54; /* subnormal number, scale up x */\par
  133         GET_HIGH_WORD(hx,x);        /* high word of x */\par
  134     \}\par
  135     if (hx >= 0x7ff00000) return x+x;\par
  136     k += (hx>>20)-1023;\par
  137     hx &= 0x000fffff;\par
  138     i = (hx+0x95f64)&0x100000;\par
  139     SET_HIGH_WORD(x,hx|(i^0x3ff00000)); /* normalize x or x/2 */\par
  140     k += (i>>20);\par
  141     f = x-1.0;\par
  142     if((0x000fffff&(2+hx))<3) \{ /* |f| < 2**-20 */\par
  143         if(f==zero) \{\par
  144             if(k==0)\par
  145                 return zero;\par
  146             else \{\par
  147                 dk=(double)k;\par
  148                 return dk*ln2_hi+dk*ln2_lo;\par
  149             \}\par
  150         \}\par
  151         R = f*f*(0.5-0.33333333333333333*f);\par
  152         if(k==0) return f-R;\par
  153         else \{\par
  154             dk=(double)k;\par
  155             return dk*ln2_hi-((R-dk*ln2_lo)-f);\par
  156         \}\par
  157     \}\par
  158     s = f/(2.0+f);\par
  159     dk = (double)k;\par
  160     z = s*s;\par
  161     i = hx-0x6147a;\par
  162     w = z*z;\par
  163     j = 0x6b851-hx;\par
  164     t1= w*(Lg2+w*(Lg4+w*Lg6));\par
  165     t2= z*(Lg1+w*(Lg3+w*(Lg5+w*Lg7)));\par
  166     i |= j;\par
  167     R = t2+t1;\par
  168     if(i>0) \{\par
  169         hfsq=0.5*f*f;\par
  170         if(k==0) return f-(hfsq-s*(hfsq+R));\par
  171         else\par
  172             return dk*ln2_hi-((hfsq-(s*(hfsq+R)+dk*ln2_lo))-f);\par
  173     \} else \{\par
  174         if(k==0) return f-s*(f-R);\par
  175         else\par
  176             return dk*ln2_hi-((s*(f-R)-dk*ln2_lo)-f);\par
  177     \}\par
  178 \}\par
}
}
{\xe \v log10\:math.h}
{\xe \v math.h\:log10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double log10 (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base 10 logarithm function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
 Let log10_2hi = leading 40 bits of log10(2) and
     log10_2lo = log10(2) - log10_2hi,
     ivln10   = 1/log(10) rounded.
 Then
    n = ilogb(x),
    if(n<0)  n = n+1;
    x = scalbn(x,-n);
    log10(x) := n*log10_2hi + (n*log10_2lo + ivln10*log(x))\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Note 1:
 To guarantee log10(10**n)=n, where 10**n is normal, the rounding
 mode must set to Round-to-Nearest.
Note 2:
 [1/log(10)] rounded to 53 bits has error  .198   ulps;
 log10 is monotonic at all binary break points.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 log10(x) is NaN with signal if x < 0;
 log10(+INF) is +INF with no signal; log10(0) is -INF with signal;
 log10(NaN) is that NaN with no signal;
 log10(10**N) = N  for N=0,1,...,22.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constants:
The hexadecimal values are the intended ones for the following constants.
The decimal values may be used, provided that the compiler will convert
from decimal to binary accurately enough to produce the hexadecimal values
shown.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 95 of file log10.c.}\par
{
References ivln10, log10_2hi, log10_2lo, two54, and zero.}\par
{
Referenced by DecimalSystem::GetRealText(), and RealNumber::Log10().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    96 \{\par
   97     double y,z;\par
   98     sword i,k,hx;\par
   99     uword lx;\par
  100 \par
  101     EXTRACT_WORDS(hx,lx,x);\par
  102 \par
  103     k=0;\par
  104     if (hx < 0x00100000) \{                  /* x < 2**-1022  */\par
  105         if (((hx&0x7fffffff)|lx)==0)\par
  106             return -two54/zero;             /* log(+-0)=-inf */\par
  107         if (hx<0) return (x-x)/zero;        /* log(-#) = NaN */\par
  108         k -= 54;\par
  109         x *= two54; /* subnormal number, scale up x */\par
  110         GET_HIGH_WORD(hx, x);              /* high word of x */\par
  111     \}\par
  112     if (hx >= 0x7ff00000) return x+x;\par
  113     k += (hx>>20)-1023;\par
  114     i  = ((uword)k&0x80000000)>>31;\par
  115     hx = (hx&0x000fffff)|((0x3ff-i)<<20);\par
  116     y  = (double)(k+i);\par
  117     SET_HIGH_WORD(x,hx);\par
  118     z  = y*log10_2lo + ivln10*log(x);\par
  119     return  z+y*log10_2hi;\par
  120 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a6572e82a4891917a9ba7fb2a964f8182_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v log1p\:math.h}
{\xe \v math.h\:log1p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double log1p (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file log1p.c.}\par
{
References ln2_hi, ln2_lo, Lp1, Lp2, Lp3, Lp4, Lp5, Lp6, Lp7, two54, and zero.}\par
{
Referenced by acosh(), asinh(), and atanh().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   126 \{\par
  127     double hfsq,f,c,s,z,R,u;\par
  128     sword k,hx,hu,ax;\par
  129 \par
  130     f = 0.0;\par
  131     c = 0.0;\par
  132     hu = 0;\par
  133 \par
  134     GET_HIGH_WORD(hx,x); /* high word of x */\par
  135     ax = hx&0x7fffffff;\par
  136 \par
  137     k = 1;\par
  138     if (hx < 0x3FDA827A) \{          /* x < 0.41422  */\par
  139         if(ax>=0x3ff00000) \{        /* x <= -1.0 */\par
  140             if(x==-1.0) return -two54/zero; /* log1p(-1)=+inf */\par
  141             else return (x-x)/(x-x);    /* log1p(x<-1)=NaN */\par
  142         \}\par
  143         if(ax<0x3e200000) \{         /* |x| < 2**-29 */\par
  144             if(two54+x>zero         /* raise inexact */\par
  145                     &&ax<0x3c900000)        /* |x| < 2**-54 */\par
  146                 return x;\par
  147             else\par
  148                 return x - x*x*0.5;\par
  149         \}\par
  150         if(hx>0||hx<=((int)0xbfd2bec3)) \{\par
  151             k=0;\par
  152             f=x;\par
  153             hu=1;\par
  154         \}   /* -0.2929<x<0.41422 */\par
  155     \}\par
  156     if (hx >= 0x7ff00000) return x+x;\par
  157     if(k!=0) \{\par
  158         if(hx<0x43400000) \{\par
  159             u  = 1.0+x;\par
  160             GET_HIGH_WORD(hu,u); /* high word of u */\par
  161             k  = (hu>>20)-1023;\par
  162             c  = (k>0)? 1.0-(u-x):x-(u-1.0);/* correction term */\par
  163             c /= u;\par
  164         \} else \{\par
  165             u  = x;\par
  166             GET_HIGH_WORD(hu,u); /* high word of u */\par
  167             k  = (hu>>20)-1023;\par
  168             c  = 0;\par
  169         \}\par
  170         hu &= 0x000fffff;\par
  171         if(hu<0x6a09e) \{\par
  172             SET_HIGH_WORD(u, hu|0x3ff00000);    /* normalize u */\par
  173         \} else \{\par
  174             k += 1;\par
  175             SET_HIGH_WORD(u, hu|0x3fe00000);    /* normalize u/2 */\par
  176             hu = (0x00100000-hu)>>2;\par
  177         \}\par
  178         f = u-1.0;\par
  179     \}\par
  180     hfsq=0.5*f*f;\par
  181     if(hu==0) \{ /* |f| < 2**-20 */\par
  182         if(f==zero) \{\par
  183             if(k==0) return zero;\par
  184             else \{\par
  185                 c += k*ln2_lo;\par
  186                 return k*ln2_hi+c;\par
  187             \}\par
  188         \}\par
  189         R = hfsq*(1.0-0.66666666666666666*f);\par
  190         if(k==0) return f-R;\par
  191         else\par
  192             return k*ln2_hi-((R-(k*ln2_lo+c))-f);\par
  193     \}\par
  194     s = f/(2.0+f);\par
  195     z = s*s;\par
  196     R = z*(Lp1+z*(Lp2+z*(Lp3+z*(Lp4+z*(Lp5+z*(Lp6+z*Lp7))))));\par
  197     if(k==0) return f-(hfsq-s*(hfsq+R));\par
  198     else\par
  199         return k*ln2_hi-((hfsq-(s*(hfsq+R)+(k*ln2_lo+c)))-f);\par
  200 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_ac2aac20ab1347498e6e4f209148fea84_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v pow\:math.h}
{\xe \v math.h\:pow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pow (double  {\i x}, double  {\i y})}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expontation function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method:  Let x =  2   * (1+f)
 1. Compute and return log2(x) in two pieces:
    log2(x) = w1 + w2,
    where w1 has 53-24 = 29 bit trailing zeros.
 2. Perform y*log2(x) = n+y' by simulating muti-precision
    arithmetic, where |y'|<=0.5.
 3. Return x**y = 2**n*exp(y'*log2)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 1.  (anything) ** 0  is 1
 2.  (anything) ** 1  is itself
 3.  (anything) ** NAN is NAN
 4.  NAN ** (anything except 0) is NAN
 5.  +-(|x| > 1) **  +INF is +INF
 6.  +-(|x| > 1) **  -INF is +0
 7.  +-(|x| < 1) **  +INF is +0
 8.  +-(|x| < 1) **  -INF is +INF
 9.  +-1         ** +-INF is NAN
 10. +0 ** (+anything except 0, NAN)               is +0
 11. -0 ** (+anything except 0, NAN, odd integer)  is +0
 12. +0 ** (-anything except 0, NAN)               is +INF
 13. -0 ** (-anything except 0, NAN, odd integer)  is +INF
 14. -0 ** (odd integer) = -( +0 ** (odd integer) )
 15. +INF ** (+anything except 0,NAN) is +INF
 16. +INF ** (-anything except 0,NAN) is +0
 17. -INF ** (anything)  = -0 ** (-anything)
 18. (-anything) ** (integer) is (-1)**(integer)*(+anything**integer)
 19. (-anything except 0 and inf) ** (non-integer) is NAN\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Accuracy:
 pow(x,y) returns x**y nearly rounded. In particular
        pow(integer,integer)
 always returns the correct integer provided it is
 representable.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constants :
The hexadecimal values are the intended ones for the following
constants. The decimal values may be used, provided that the
compiler will convert from decimal to binary accurately enough
to produce the hexadecimal values shown.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 139 of file pow.c.}\par
{
References bp, cp, cp_h, cp_l, dp_h, dp_l, huge, ivln2, ivln2_h, ivln2_l, L1, L2, L3, L4, L5, L6, lg2, lg2_h, lg2_l, one, ovt, P1, P2, P3, P4, P5, scalbn(), sqrt(), tiny, two, two53, and zero.}\par
{
Referenced by cpow(), DecimalSystem::GetRealText(), PositionalNumeralSystem::GetText(), PositionalNumeralSystem::Parse(), and RealNumber::Raise().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   140 \{\par
  141     double z,ax,z_h,z_l,p_h,p_l;\par
  142     double y1,t1,t2,r,s,t,u,v,w;\par
  143     sword i0,i1,i,j,k,yisint,n;\par
  144     sword hx,hy,ix,iy;\par
  145     uword lx,ly;\par
  146 \par
  147     i0 = ((*(int*)&one)>>29)^1;\par
  148     i1=1-i0;\par
  149     EXTRACT_WORDS(hx,lx,x);\par
  150     EXTRACT_WORDS(hy,ly,y);\par
  151     ix = hx&0x7fffffff;\par
  152     iy = hy&0x7fffffff;\par
  153 \par
  154     /* y==zero: x**0 = 1 */\par
  155     if((iy|ly)==0) return one;\par
  156 \par
  157     /* +-NaN return x+y */\par
  158     if(ix > 0x7ff00000 || ((ix==0x7ff00000)&&(lx!=0)) ||\par
  159             iy > 0x7ff00000 || ((iy==0x7ff00000)&&(ly!=0)))\par
  160         return x+y;\par
  161 \par
  162     /* determine if y is an odd int when x < 0\par
  163      * yisint = 0   ... y is not an integer\par
  164      * yisint = 1   ... y is an odd int\par
  165      * yisint = 2   ... y is an even int\par
  166      */\par
  167     yisint  = 0;\par
  168     if(hx<0) \{\par
  169         if(iy>=0x43400000) yisint = 2; /* even integer y */\par
  170         else if(iy>=0x3ff00000) \{\par
  171             k = (iy>>20)-0x3ff;    /* exponent */\par
  172             if(k>20) \{\par
  173                 j = ly>>(52-k);\par
  174                 if((uword)(j<<(52-k))==ly) yisint = 2-(j&1);\par
  175             \} else if(ly==0) \{\par
  176                 j = iy>>(20-k);\par
  177                 if((j<<(20-k))==iy) yisint = 2-(j&1);\par
  178             \}\par
  179         \}\par
  180     \}\par
  181 \par
  182     /* special value of y */\par
  183     if(ly==0) \{\par
  184         if (iy==0x7ff00000) \{   /* y is +-inf */\par
  185             if(((ix-0x3ff00000)|lx)==0)\par
  186                 return  y - y;  /* inf**+-1 is NaN */\par
  187             else if (ix >= 0x3ff00000)/* (|x|>1)**+-inf = inf,0 */\par
  188                 return (hy>=0)? y: zero;\par
  189             else            /* (|x|<1)**-,+inf = inf,0 */\par
  190                 return (hy<0)?-y: zero;\par
  191         \}\par
  192         if(iy==0x3ff00000) \{    /* y is  +-1 */\par
  193             if(hy<0) return one/x;\par
  194             else return x;\par
  195         \}\par
  196         if(hy==0x40000000) return x*x; /* y is  2 */\par
  197         if(hy==0x3fe00000) \{    /* y is  0.5 */\par
  198             if(hx>=0)   /* x >= +0 */\par
  199                 return sqrt(x);\par
  200         \}\par
  201     \}\par
  202 \par
  203     ax   = fabs(x);\par
  204     /* special value of x */\par
  205     if(lx==0) \{\par
  206         if(ix==0x7ff00000||ix==0||ix==0x3ff00000) \{\par
  207             z = ax;         /*x is +-0,+-inf,+-1*/\par
  208             if(hy<0) z = one/z; /* z = (1/|x|) */\par
  209             if(hx<0) \{\par
  210                 if(((ix-0x3ff00000)|yisint)==0) \{\par
  211                     z = (z-z)/(z-z); /* (-1)**non-int is NaN */\par
  212                 \} else if(yisint==1)\par
  213                     z = -z;     /* (x<0)**odd = -(|x|**odd) */\par
  214             \}\par
  215             return z;\par
  216         \}\par
  217     \}\par
  218 \par
  219     n = (hx>>31)+1;\par
  220 \par
  221     /* (x<0)**(non-int) is NaN */\par
  222     if((n|yisint)==0) return (x-x)/(x-x);\par
  223 \par
  224     s = one; /* s (sign of result -ve**odd) = -1 else = 1 */\par
  225     if((n|(yisint-1))==0) s = -one;/* (-ve)**(odd int) */\par
  226 \par
  227     /* |y| is huge */\par
  228     if(iy>0x41e00000) \{ /* if |y| > 2**31 */\par
  229         if(iy>0x43f00000) \{ /* if |y| > 2**64, must o/uflow */\par
  230             if(ix<=0x3fefffff) return (hy<0)? huge*huge:tiny*tiny;\par
  231             if(ix>=0x3ff00000) return (hy>0)? huge*huge:tiny*tiny;\par
  232         \}\par
  233         /* over/underflow if x is not close to one */\par
  234         if(ix<0x3fefffff) return (hy<0)? s*huge*huge:s*tiny*tiny;\par
  235         if(ix>0x3ff00000) return (hy>0)? s*huge*huge:s*tiny*tiny;\par
  236         /* now |1-x| is tiny <= 2**-20, suffice to compute\par
  237            log(x) by x-x^2/2+x^3/3-x^4/4 */\par
  238         t = ax-one;     /* t has 20 trailing zeros */\par
  239         w = (t*t)*(0.5-t*(0.3333333333333333333333-t*0.25));\par
  240         u = ivln2_h*t;  /* ivln2_h has 21 sig. bits */\par
  241         v = t*ivln2_l-w*ivln2;\par
  242         t1 = u+v;\par
  243         SET_LOW_WORD(t1,0);\par
  244         t2 = v-(t1-u);\par
  245     \} else \{\par
  246         double ss,s2,s_h,s_l,t_h,t_l;\par
  247         n = 0;\par
  248         /* take care subnormal number */\par
  249         if(ix<0x00100000)\par
  250         \{\par
  251             ax *= two53;\par
  252             n -= 53;\par
  253             GET_HIGH_WORD(ix,ax);\par
  254         \}\par
  255         n  += ((ix)>>20)-0x3ff;\par
  256         j  = ix&0x000fffff;\par
  257         /* determine interval */\par
  258         ix = j|0x3ff00000;      /* normalize ix */\par
  259         if(j<=0x3988E) k=0;     /* |x|<sqrt(3/2) */\par
  260         else if(j<0xBB67A) k=1; /* |x|<sqrt(3)   */\par
  261         else \{\par
  262             k=0;\par
  263             n+=1;\par
  264             ix -= 0x00100000;\par
  265         \}\par
  266         SET_HIGH_WORD(ax,ix);\par
  267 \par
  268         /* compute ss = s_h+s_l = (x-1)/(x+1) or (x-1.5)/(x+1.5) */\par
  269         u = ax-bp[k];       /* bp[0]=1.0, bp[1]=1.5 */\par
  270         v = one/(ax+bp[k]);\par
  271         ss = u*v;\par
  272         s_h = ss;\par
  273         SET_LOW_WORD(s_h,0);\par
  274         /* t_h=ax+bp[k] High */\par
  275         t_h = zero;\par
  276         SET_HIGH_WORD(t_h,((ix>>1)|0x20000000)+0x00080000+(k<<18));\par
  277         t_l = ax - (t_h-bp[k]);\par
  278         s_l = v*((u-s_h*t_h)-s_h*t_l);\par
  279         /* compute log(ax) */\par
  280         s2 = ss*ss;\par
  281         r = s2*s2*(L1+s2*(L2+s2*(L3+s2*(L4+s2*(L5+s2*L6)))));\par
  282         r += s_l*(s_h+ss);\par
  283         s2  = s_h*s_h;\par
  284         t_h = 3.0+s2+r;\par
  285         SET_LOW_WORD(t_h,0);\par
  286         t_l = r-((t_h-3.0)-s2);\par
  287         /* u+v = ss*(1+...) */\par
  288         u = s_h*t_h;\par
  289         v = s_l*t_h+t_l*ss;\par
  290         /* 2/(3log2)*(ss+...) */\par
  291         p_h = u+v;\par
  292         SET_LOW_WORD(p_h,0);\par
  293         p_l = v-(p_h-u);\par
  294         z_h = cp_h*p_h;     /* cp_h+cp_l = 2/(3*log2) */\par
  295         z_l = cp_l*p_h+p_l*cp+dp_l[k];\par
  296         /* log2(ax) = (ss+..)*2/(3*log2) = n + dp_h + z_h + z_l */\par
  297         t = (double)n;\par
  298         t1 = (((z_h+z_l)+dp_h[k])+t);\par
  299         SET_LOW_WORD(t1,0);\par
  300         t2 = z_l-(((t1-t)-dp_h[k])-z_h);\par
  301     \}\par
  302 \par
  303     /* split up y into y1+y2 and compute (y1+y2)*(t1+t2) */\par
  304     y1  = y;\par
  305     SET_LOW_WORD(y1,0);\par
  306     p_l = (y-y1)*t1+y*t2;\par
  307     p_h = y1*t1;\par
  308     z = p_l+p_h;\par
  309     EXTRACT_WORDS(j,i,z);\par
  310     if (j>=0x40900000) \{                /* z >= 1024 */\par
  311         if(((j-0x40900000)|i)!=0)           /* if z > 1024 */\par
  312             return s*huge*huge;         /* overflow */\par
  313         else \{\par
  314             if(p_l+ovt>z-p_h) return s*huge*huge;   /* overflow */\par
  315         \}\par
  316     \} else if((j&0x7fffffff)>=0x4090cc00 ) \{    /* z <= -1075 */\par
  317         if(((j-0xc090cc00)|i)!=0)       /* z < -1075 */\par
  318             return s*tiny*tiny;     /* underflow */\par
  319         else \{\par
  320             if(p_l<=z-p_h) return s*tiny*tiny;  /* underflow */\par
  321         \}\par
  322     \}\par
  323     /*\par
  324      * compute 2**(p_h+p_l)\par
  325      */\par
  326     i = j&0x7fffffff;\par
  327     k = (i>>20)-0x3ff;\par
  328     n = 0;\par
  329     if(i>0x3fe00000) \{      /* if |z| > 0.5, set n = [z+0.5] */\par
  330         n = j+(0x00100000>>(k+1));\par
  331         k = ((n&0x7fffffff)>>20)-0x3ff; /* new k for n */\par
  332         t = zero;\par
  333         SET_HIGH_WORD(t,(n&~(0x000fffff>>k)));\par
  334         n = ((n&0x000fffff)|0x00100000)>>(20-k);\par
  335         if(j<0) n = -n;\par
  336         p_h -= t;\par
  337     \}\par
  338     t = p_l+p_h;\par
  339     SET_LOW_WORD(t,0);\par
  340     u = t*lg2_h;\par
  341     v = (p_l-(t-p_h))*lg2+t*lg2_l;\par
  342     z = u+v;\par
  343     w = v-(z-u);\par
  344     t  = z*z;\par
  345     t1  = z - t*(P1+t*(P2+t*(P3+t*(P4+t*P5))));\par
  346     r  = (z*t1)/(t1-two)-(w+z*w);\par
  347     z  = one-(r-z);\par
  348     GET_HIGH_WORD(j,z);\par
  349     j += (n<<20);\par
  350     if((j>>20)<=0) z = scalbn(z,n); /* subnormal output */\par
  351     else\par
  352     \{\par
  353         uword hz;\par
  354         GET_HIGH_WORD(hz,z);\par
  355         SET_HIGH_WORD(z,hz + (n<<20));\par
  356     \}\par
  357     return s*z;\par
  358 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_aa56c9494c95edf68386375e97d64159b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_aa56c9494c95edf68386375e97d64159b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v rempio2\:math.h}
{\xe \v math.h\:rempio2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int rempio2 (double  {\i x}, double *  {\i y})}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 103 of file remp2.c.}\par
{
References __kernel_rem_pio2(), half, invpio2, npio2_hw, pio2_1, pio2_1t, pio2_2, pio2_2t, pio2_3, pio2_3t, two24, two_over_pi, and zero.}\par
{
Referenced by cos(), sin(), and tan().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   104 \{\par
  105     double z = 0.,w,t,r,fn;\par
  106     double tx[3];\par
  107     sword i,j,n,ix,hx;\par
  108     int e0,nx;\par
  109     uword low;\par
  110 \par
  111     GET_HIGH_WORD(hx,x);        /* high word of x */\par
  112     ix = hx&0x7fffffff;\par
  113     if(ix<=0x3fe921fb)   /* |x| ~<= pi/4 , no need for reduction */\par
  114     \{\par
  115         y[0] = x;\par
  116         y[1] = 0;\par
  117         return 0;\par
  118     \}\par
  119     if(ix<0x4002d97c) \{  /* |x| < 3pi/4, special case with n=+-1 */\par
  120         if(hx>0) \{\par
  121             z = x - pio2_1;\par
  122             if(ix!=0x3ff921fb) \{    /* 33+53 bit pi is good enough */\par
  123                 y[0] = z - pio2_1t;\par
  124                 y[1] = (z-y[0])-pio2_1t;\par
  125             \} else \{        /* near pi/2, use 33+33+53 bit pi */\par
  126                 z -= pio2_2;\par
  127                 y[0] = z - pio2_2t;\par
  128                 y[1] = (z-y[0])-pio2_2t;\par
  129             \}\par
  130             return 1;\par
  131         \} else \{    /* negative x */\par
  132             z = x + pio2_1;\par
  133             if(ix!=0x3ff921fb) \{    /* 33+53 bit pi is good enough */\par
  134                 y[0] = z + pio2_1t;\par
  135                 y[1] = (z-y[0])+pio2_1t;\par
  136             \} else \{        /* near pi/2, use 33+33+53 bit pi */\par
  137                 z += pio2_2;\par
  138                 y[0] = z + pio2_2t;\par
  139                 y[1] = (z-y[0])+pio2_2t;\par
  140             \}\par
  141             return -1;\par
  142         \}\par
  143     \}\par
  144     if(ix<=0x413921fb) \{ /* |x| ~<= 2^19*(pi/2), medium size */\par
  145         t  = fabs(x);\par
  146         n  = (sword) (t*invpio2+half);\par
  147         fn = (double)n;\par
  148         r  = t-fn*pio2_1;\par
  149         w  = fn*pio2_1t;    /* 1st round good to 85 bit */\par
  150         if(n<32&&ix!=npio2_hw[n-1]) \{\par
  151             y[0] = r-w; /* quick check no cancellation */\par
  152         \} else \{\par
  153             uword high;\par
  154 \par
  155             j  = ix>>20;\par
  156             y[0] = r-w;\par
  157             GET_HIGH_WORD(high, y[0]);\par
  158             i = j-((high>>20)&0x7ff);\par
  159             if(i>16) \{  /* 2nd iteration needed, good to 118 */\par
  160                 t  = r;\par
  161                 w  = fn*pio2_2;\par
  162                 r  = t-w;\par
  163                 w  = fn*pio2_2t-((t-r)-w);\par
  164                 y[0] = r-w;\par
  165                 GET_HIGH_WORD(high,y[0]);\par
  166                 i = j-((high>>20)&0x7ff);\par
  167                 if(i>49)  \{ /* 3rd iteration need, 151 bits acc */\par
  168                     t  = r; /* will cover all possible cases */\par
  169                     w  = fn*pio2_3;\par
  170                     r  = t-w;\par
  171                     w  = fn*pio2_3t-((t-r)-w);\par
  172                     y[0] = r-w;\par
  173                 \}\par
  174             \}\par
  175         \}\par
  176         y[1] = (r-y[0])-w;\par
  177         if(hx<0)    \{\par
  178             y[0] = -y[0];\par
  179             y[1] = -y[1];\par
  180             return -n;\par
  181         \}\par
  182         else     return n;\par
  183     \}\par
  184     /*\par
  185      * all other (large) arguments\par
  186      */\par
  187     if(ix>=0x7ff00000) \{        /* x is inf or NaN */\par
  188         y[0]=y[1]=x-x;\par
  189         return 0;\par
  190     \}\par
  191     /* set z = scalbn(|x|,ilogb(x)-23) */\par
  192     GET_LOW_WORD(low,x);\par
  193     SET_LOW_WORD(z,low);\par
  194     e0  = (sword)(ix>>20)-1046; /* e0 = ilogb(z)-23; */\par
  195     SET_HIGH_WORD(z,ix - (e0<<20));\par
  196     for(i=0; i<2; i++) \{\par
  197         tx[i] = (double)((sword)(z));\par
  198         z     = (z-tx[i])*two24;\par
  199     \}\par
  200     tx[2] = z;\par
  201     nx = 3;\par
  202     while(tx[nx-1]==zero) nx--; /* skip zero term */\par
  203     n  =  __kernel_rem_pio2(tx,y,e0,nx,2,two_over_pi);\par
  204     if(hx<0) \{\par
  205         y[0] = -y[0];\par
  206         y[1] = -y[1];\par
  207         return -n;\par
  208     \}\par
  209     return n;\par
  210 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a320ce87737d621d713124124e2c02cdc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a320ce87737d621d713124124e2c02cdc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v round\:math.h}
{\xe \v math.h\:round}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double round (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file round.c.}\par
{
Referenced by cround(), DecimalSystem::GetRealText(), PositionalNumeralSystem::GetText(), and RealNumber::Round().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    31 \{\par
   32     return x > 0.0 ? floor(x + 0.5) : ceil(x - 0.5);\par
   33 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a7df19cf730447c00150569250a4b5e1d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v scalbn\:math.h}
{\xe \v math.h\:scalbn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double scalbn (double  {\i x}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file scalbn.c.}\par
{
References huge, tiny, two54, and twom54.}\par
{
Referenced by __kernel_rem_pio2(), and pow().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    61 \{\par
   62     sword  k,hx,lx;\par
   63     EXTRACT_WORDS(hx,lx,x);\par
   64     k = (hx&0x7ff00000)>>20;        /* extract exponent */\par
   65     if (k==0) \{             /* 0 or subnormal x */\par
   66         if ((lx|(hx&0x7fffffff))==0) return x; /* +-0 */\par
   67         x *= two54;\par
   68         GET_HIGH_WORD(hx,x);\par
   69         k = ((hx&0x7ff00000)>>20) - 54;\par
   70         if (n< -50000) return tiny*x;   /*underflow*/\par
   71     \}\par
   72     if (k==0x7ff) return x+x;       /* NaN or Inf */\par
   73     k = k+n;\par
   74     if (k >  0x7fe) return huge*copysign(huge,x); /* overflow  */\par
   75     if (k > 0)              /* normal result */\par
   76     \{\par
   77         SET_HIGH_WORD(x,(hx&0x800fffff)|(k<<20));\par
   78         return x;\par
   79     \}\par
   80     if (k <= -54) \{\par
   81         if (n > 50000)      /* in case integer overflow in n+k */\par
   82             return huge*copysign(huge,x);   /*overflow*/\par
   83         else return tiny*copysign(tiny,x);  /*underflow*/\par
   84     \}\par
   85     k += 54;                /* subnormal result */\par
   86     SET_HIGH_WORD(x,(hx&0x800fffff)|(k<<20));\par
   87     return x*twom54;\par
   88 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a0353978ec1ae247f2d95f2dc75856ed6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v sin\:math.h}
{\xe \v math.h\:sin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sin (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric sine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Return sine function of x.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid kernel function:
 __kernel_sin       ... sine function on [-pi/4,pi/4]
 __kernel_cos       ... cose function on [-pi/4,pi/4]
 __ieee754_rem_pio2 ... argument reduction routine\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Method.
     Let S,C and T denote the sin, cos and tan respectively on
 [-PI/4, +PI/4]. Reduce the argument x to y1+y2 = x-k*pi/2
 in [-pi/4 , +pi/4], and let n = k mod 4.
 We have\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid          n        sin(x)      cos(x)        tan(x)
    ----------------------------------------------------------
     0         S       C         T
     1         C      -S        -1/T
     2        -S      -C         T
     3        -C       S        -1/T
    ----------------------------------------------------------\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
     Let trig be any of sin, cos, or tan.
     trig(+-INF)  is NaN, with signals;
     trig(NaN)    is that NaN;\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Accuracy:
 TRIG(x) returns trig(x) nearly rounded
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 87 of file sin.c.}\par
{
References __kernel_cos(), __kernel_sin(), and rempio2().}\par
{
Referenced by ccos(), ccosh(), ccot(), ccoth(), ccsc(), ccsch(), cexp(), RealNumber::Cosecant(), cpow(), csec(), csech(), csin(), csinh(), ctan(), ctanh(), and RealNumber::Sine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    88 \{\par
   89     double y[2],z=0.0;\par
   90     sword n, ix;\par
   91 \par
   92     /* High word of x. */\par
   93     GET_HIGH_WORD(ix,x);\par
   94 \par
   95     /* |x| ~< pi/4 */\par
   96     ix &= 0x7fffffff;\par
   97     if(ix <= 0x3fe921fb) return __kernel_sin(x,z,0);\par
   98 \par
   99     /* sin(Inf or NaN) is NaN */\par
  100     else if (ix>=0x7ff00000) return x-x;\par
  101 \par
  102     /* argument reduction needed */\par
  103     else \{\par
  104         n = rempio2(x,y);\par
  105         switch(n&3) \{\par
  106         case 0:\par
  107             return  __kernel_sin(y[0],y[1],1);\par
  108         case 1:\par
  109             return  __kernel_cos(y[0],y[1]);\par
  110         case 2:\par
  111             return -__kernel_sin(y[0],y[1],1);\par
  112         default:\par
  113             return -__kernel_cos(y[0],y[1]);\par
  114         \}\par
  115     \}\par
  116 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_aad4af25633b071b0e2cdb8ebd87eca77_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_aad4af25633b071b0e2cdb8ebd87eca77_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v sinh\:math.h}
{\xe \v math.h\:sinh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sinh (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic sine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
mathematically sinh(x) if defined to be (exp(x)-exp(-x))/2
 1. Replace x by |x| (sinh(-x) = -sinh(x)).
 2.
                                        E + E/(E+1)
     0        <= x <= 22     :  sinh(x) := --------------, E=expm1(x)
                                2\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid      22       <= x <= lnovft :  sinh(x) := exp(x)/2
     lnovft   <= x <= ln2ovft:  sinh(x) := exp(x/2)/2 * exp(x/2)
     ln2ovft  <  x      :  sinh(x) := x*shuge (overflow)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 sinh(x) is |x| if x is +INF, -INF, or NaN.
 only sinh(0)=0 is exact for finite x.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 81 of file sinh.c.}\par
{
References exp(), expm1(), one, and shuge.}\par
{
Referenced by cchsh(), ccot(), ccoth(), ccsc(), ccsch(), csec(), csech(), ctan(), ctanh(), RealNumber::HypCosecant(), and RealNumber::HypSine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    82 \{\par
   83     double t,w,h;\par
   84     sword ix,jx;\par
   85     uword lx;\par
   86 \par
   87     /* High word of |x|. */\par
   88     GET_HIGH_WORD(jx,x);\par
   89     ix = jx&0x7fffffff;\par
   90 \par
   91     /* x is INF or NaN */\par
   92     if(ix>=0x7ff00000) return x+x;\par
   93 \par
   94     h = 0.5;\par
   95     if (jx<0) h = -h;\par
   96     /* |x| in [0,22], return sign(x)*0.5*(E+E/(E+1))) */\par
   97     if (ix < 0x40360000) \{      /* |x|<22 */\par
   98         if (ix<0x3e300000)      /* |x|<2**-28 */\par
   99             if(shuge+x>one) return x;/* sinh(tiny) = tiny with inexact */\par
  100         t = expm1(fabs(x));\par
  101         if(ix<0x3ff00000) return h*(2.0*t-t*t/(t+one));\par
  102         return h*(t+t/(t+one));\par
  103     \}\par
  104 \par
  105     /* |x| in [22, log(maxdouble)] return 0.5*exp(|x|) */\par
  106     if (ix < 0x40862E42)  return h*exp(fabs(x));\par
  107 \par
  108     /* |x| in [log(maxdouble), overflowthresold] */\par
  109     lx = *( (((*(uword*)&one)>>29)) + (uword*)&x);\par
  110     if (ix<0x408633CE || ((ix==0x408633ce)&&(lx<=(uword)0x8fb9f87d))) \{\par
  111         w = exp(0.5*fabs(x));\par
  112         t = h*w;\par
  113         return t*w;\par
  114     \}\par
  115 \par
  116     /* |x| > overflowthresold, sinh(x) overflow */\par
  117     return x*shuge;\par
  118 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a862012e970c977c482507064e2793b45_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a862012e970c977c482507064e2793b45_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v sqrt\:math.h}
{\xe \v math.h\:sqrt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sqrt (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Square root function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Return correctly rounded sqrt.
          ------------------------------------------
      |  Use the hardware sqrt if you have one |
          ------------------------------------------
Method:
  Bit by bit method using integer arithmetic. (Slow, but portable)
  1. Normalization
 Scale x to y in [1,4) with even powers of 2:
 find an integer k such that  1 <= (y=x*2^(2k)) < 4, then
    sqrt(x) = 2^k * sqrt(y)
  2. Bit by bit computation
 Let q  = sqrt(y) truncated to i bit after binary point (q = 1),
      i                          0
                                    i+1         2
     s  = 2*q , and y  =  2   * ( y - q  ).     (1)
      i      i            i                 i\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  To compute q    from q , one checks whether
        i+1       i\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid               -(i+1) 2
        (q + 2      ) <= y.         (2)
                  i
                              -(i+1)
 If (2) is false, then q   = q ; otherwise q   = q  + 2      .
               i+1   i             i+1   i\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  With some algebric manipulation, it is not difficult to see
 that (2) is equivalent to
                            -(i+1)
        s  +  2       <= y          (3)
         i                i\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  The advantage of (3) is that s  and y  can be computed by
                  i      i
 the following recurrence formula:
     if (3) is false\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid      s     =  s  ,  y    = y   ;            (4)
      i+1      i         i+1    i\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid      otherwise,
                        -i                     -(i+1)
     s    =  s  + 2  ,  y    = y  -  s  - 2         (5)
          i+1      i          i+1    i     i\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  One may easily use induction to prove (4) and (5).
 Note. Since the left hand side of (3) contain only i+2 bits,
       it does not necessary to do a full (53-bit) comparison
       in (3).
  3. Final rounding
 After generating the 53 bits result, we compute one more bit.
 Together with the remainder, we can decide whether the
 result is exact, bigger than 1/2ulp, or less than 1/2ulp
 (it will never equal to 1/2ulp).
 The rounding mode can be detected by checking whether
 huge + tiny is equal to huge, and whether huge - tiny is
 equal to huge for some floating point number "huge" and "tiny".\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 sqrt(+-0) = +-0    ... exact
 sqrt(inf) = inf
 sqrt(-ve) = NaN        ... with invalid signal
 sqrt(NaN) = NaN        ... with invalid signal for signaling NaN
\par}
 Other methods : see the squareroot.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 127 of file sqrt.c.}\par
{
References one, and tiny.}\par
{
Referenced by acos(), acosh(), asin(), asinh(), csqrt(), hypot(), pow(), and RealNumber::SquareRoot().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   128 \{\par
  129     double z;\par
  130     sword   sign = (int)0x80000000;\par
  131     uword r,t1,s1,ix1,q1;\par
  132     sword ix0,s0,q,m,t,i;\par
  133 \par
  134     EXTRACT_WORDS(ix0,ix1,x);\par
  135 \par
  136     /* take care of Inf and NaN */\par
  137     if((ix0&0x7ff00000)==0x7ff00000) \{\par
  138         return x*x+x;       /* sqrt(NaN)=NaN, sqrt(+inf)=+inf\par
  139                        sqrt(-inf)=sNaN */\par
  140     \}\par
  141     /* take care of zero */\par
  142     if(ix0<=0) \{\par
  143         if(((ix0&(~sign))|ix1)==0) return x;/* sqrt(+-0) = +-0 */\par
  144         else if(ix0<0)\par
  145             return (x-x)/(x-x);     /* sqrt(-ve) = sNaN */\par
  146     \}\par
  147     /* normalize x */\par
  148     m = (ix0>>20);\par
  149     if(m==0) \{              /* subnormal x */\par
  150         while(ix0==0) \{\par
  151             m -= 21;\par
  152             ix0 |= (ix1>>11);\par
  153             ix1 <<= 21;\par
  154         \}\par
  155         for(i=0; (ix0&0x00100000)==0; i++) ix0<<=1;\par
  156         m -= i-1;\par
  157         ix0 |= (ix1>>(32-i));\par
  158         ix1 <<= i;\par
  159     \}\par
  160     m -= 1023;  /* unbias exponent */\par
  161     ix0 = (ix0&0x000fffff)|0x00100000;\par
  162     if(m&1) \{   /* odd m, double x to make it even */\par
  163         ix0 += ix0 + ((ix1&sign)>>31);\par
  164         ix1 += ix1;\par
  165     \}\par
  166     m >>= 1;    /* m = [m/2] */\par
  167 \par
  168     /* generate sqrt(x) bit by bit */\par
  169     ix0 += ix0 + ((ix1&sign)>>31);\par
  170     ix1 += ix1;\par
  171     q = q1 = s0 = s1 = 0;   /* [q,q1] = sqrt(x) */\par
  172     r = 0x00200000;     /* r = moving bit from right to left */\par
  173 \par
  174     while(r!=0) \{\par
  175         t = s0+r;\par
  176         if(t<=ix0) \{\par
  177             s0   = t+r;\par
  178             ix0 -= t;\par
  179             q   += r;\par
  180         \}\par
  181         ix0 += ix0 + ((ix1&sign)>>31);\par
  182         ix1 += ix1;\par
  183         r>>=1;\par
  184     \}\par
  185 \par
  186     r = sign;\par
  187     while(r!=0) \{\par
  188         t1 = s1+r;\par
  189         t  = s0;\par
  190         if((t<ix0)||((t==ix0)&&(t1<=ix1))) \{\par
  191             s1  = t1+r;\par
  192             if(((t1&sign)==(uword)sign)&&(s1&sign)==0) s0 += 1;\par
  193             ix0 -= t;\par
  194             if (ix1 < t1) ix0 -= 1;\par
  195             ix1 -= t1;\par
  196             q1  += r;\par
  197         \}\par
  198         ix0 += ix0 + ((ix1&sign)>>31);\par
  199         ix1 += ix1;\par
  200         r>>=1;\par
  201     \}\par
  202 \par
  203     /* use floating add to find out rounding direction */\par
  204     if((ix0|ix1)!=0) \{\par
  205         z = one-tiny; /* trigger inexact flag */\par
  206         if (z>=one) \{\par
  207             z = one+tiny;\par
  208             if (q1==(uword)0xffffffff) \{\par
  209                 q1=0;\par
  210                 q += 1;\par
  211             \}\par
  212             else if (z>one) \{\par
  213                 if (q1==(uword)0xfffffffe) q+=1;\par
  214                 q1+=2;\par
  215             \} else\par
  216                 q1 += (q1&1);\par
  217         \}\par
  218     \}\par
  219     ix0 = (q>>1)+0x3fe00000;\par
  220     ix1 =  q1>>1;\par
  221     if ((q&1)==1) ix1 |= sign;\par
  222     ix0 += (m <<20);\par
  223     INSERT_WORDS(z,ix0,ix1);\par
  224     return z;\par
  225 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_ab87521a75ef827a85807f89a6c10629a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v tan\:math.h}
{\xe \v math.h\:tan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double tan (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric tangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Return tangent function of x.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid kernel function:
 __kernel_tan       ... tangent function on [-pi/4,pi/4]
 __rem_pio2     ... argument reduction routine\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Method.
     Let S,C and T denote the sin, cos and tan respectively on
 [-PI/4, +PI/4]. Reduce the argument x to y1+y2 = x-k*pi/2
 in [-pi/4 , +pi/4], and let n = k mod 4.
 We have\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid          n        sin(x)      cos(x)        tan(x)
    ----------------------------------------------------------
     0         S       C         T
     1         C      -S        -1/T
     2        -S      -C         T
     3        -C       S        -1/T
    ----------------------------------------------------------\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
     Let trig be any of sin, cos, or tan.
     trig(+-INF)  is NaN, with signals;
     trig(NaN)    is that NaN;\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Accuracy:
 TRIG(x) returns trig(x) nearly rounded
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 86 of file tan.c.}\par
{
References __kernel_tan(), and rempio2().}\par
{
Referenced by RealNumber::Cotangent(), and RealNumber::Tangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    87 \{\par
   88     double y[2],z=0.0;\par
   89     sword n, ix;\par
   90 \par
   91     /* High word of x. */\par
   92     GET_HIGH_WORD(ix,x);\par
   93 \par
   94     /* |x| ~< pi/4 */\par
   95     ix &= 0x7fffffff;\par
   96     if(ix <= 0x3fe921fb) return __kernel_tan(x,z,1);\par
   97 \par
   98     /* tan(Inf or NaN) is NaN */\par
   99     else if (ix>=0x7ff00000) return x-x;        /* NaN */\par
  100 \par
  101     /* argument reduction needed */\par
  102     else \{\par
  103         n = rempio2(x,y);\par
  104         return __kernel_tan(y[0],y[1],1-((n&1)<<1)); /*  1 -- n even\par
  105                             -1 -- n odd */\par
  106     \}\par
  107 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_aa48fdfd5eea5f4f9c33496402b9e4039_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_aa48fdfd5eea5f4f9c33496402b9e4039_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v tanh\:math.h}
{\xe \v math.h\:tanh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double tanh (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic tangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Return the Hyperbolic Tangent of x\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Method :
                   x    -x
                  e  - e
 0. tanh(x) is defined to be -----------
                   x    -x
                  e  + e
 1. reduce x to non-negative by tanh(-x) = -tanh(x).
 2.  0      <= x <= 2**-55 : tanh(x) := x*(one+x)
                        -t
     2**-55 <  x <=  1     : tanh(x) := -----; t = expm1(-2x)
                       t + 2
                         2
     1      <= x <=  22.0  : tanh(x) := 1-  ----- ; t=expm1(2x)
                       t + 2
     22.0   <  x <= INF    : tanh(x) := 1.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 tanh(NaN) is NaN;
 only tanh(0)=0 is exact for finite argument.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 83 of file tanh.c.}\par
{
References expm1(), one, tiny, and two.}\par
{
Referenced by RealNumber::HypCotangent(), and RealNumber::HypTangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    84 \{\par
   85     double t,z;\par
   86     sword jx,ix;\par
   87 \par
   88     /* High word of |x|. */\par
   89     GET_HIGH_WORD(jx,x);\par
   90     ix = jx&0x7fffffff;\par
   91 \par
   92     /* x is INF or NaN */\par
   93     if(ix>=0x7ff00000) \{\par
   94         if (jx>=0) return one/x+one;    /* tanh(+-inf)=+-1 */\par
   95         else       return one/x-one;    /* tanh(NaN) = NaN */\par
   96     \}\par
   97 \par
   98     /* |x| < 22 */\par
   99     if (ix < 0x40360000) \{      /* |x|<22 */\par
  100         if (ix<0x3c800000)      /* |x|<2**-55 */\par
  101             return x*(one+x);       /* tanh(small) = small */\par
  102         if (ix>=0x3ff00000) \{   /* |x|>=1  */\par
  103             t = expm1(two*fabs(x));\par
  104             z = one - two/(t+two);\par
  105         \} else \{\par
  106             t = expm1(-two*fabs(x));\par
  107             z= -t/(t+two);\par
  108         \}\par
  109         /* |x| > 22, return +-1 */\par
  110     \} else \{\par
  111         z = one - tiny;     /* raised inexact flag */\par
  112     \}\par
  113     return (jx>=0)? z: -z;\par
  114 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_af85bcf153d7ae805733927f12329dac1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_af85bcf153d7ae805733927f12329dac1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v trunc\:math.h}
{\xe \v math.h\:trunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double trunc (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file trunc.c.}\par
{
Referenced by ctrunc(), DecimalSystem::GetRealText(), PositionalNumeralSystem::GetText(), PositionalNumeralSystem::IntegerToBuffer(), and RealNumber::Trunc().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    31 \{\par
   32     return x > 0.0 ? floor(x) : ceil(x);\par
   33 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "math_8h_a82a151adfde56b28fa8a50355c4f2ff6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/mem.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/mem.h}
{\xe \v lib/mem.h}
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stddef.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for mem.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mem_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mem_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b AllocMemSafe} (size_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FreeMemSafe} (void *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FreeAllSafe} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MemUsage} (long *, long *, long *)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AllocMemSafe\:mem.h}
{\xe \v mem.h\:AllocMemSafe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* AllocMemSafe (size_t )}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file mem.c.}\par
{
References MemoryBlock::address, alloc_error(), MemoryList::count, MemoryList::first, MemoryList::last, list, MemoryBlock::next, MemoryList::peak, and MemoryList::size.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    68 \{\par
   69     struct MemoryBlock *newblock;\par
   70     size_t allocsize;\par
   71 \par
   72     if (list == NULL) \{\par
   73         list = (struct MemoryList*)ALLOC_MEM(sizeof(struct MemoryList));\par
   74         if (!list) \{\par
   75             alloc_error("list", sizeof(struct MemoryList));\par
   76             return 0;\par
   77         \}\par
   78 \par
   79         list->first = NULL;\par
   80         list->last = NULL;\par
   81         list->peak = 0;\par
   82         list->size = 0;\par
   83         list->count = 0;\par
   84     \}\par
   85 \par
   86     // Align to bytes of 4\par
   87     allocsize = (size + 3) & ~0x03;\par
   88 \par
   89     newblock = (struct MemoryBlock*)ALLOC_MEM(sizeof(struct MemoryBlock));\par
   90     if (!newblock) \{\par
   91         alloc_error("block", sizeof(struct MemoryBlock));\par
   92         return 0;\par
   93     \}\par
   94 \par
   95     newblock->address = (struct MemoryBlock*)ALLOC_MEM(allocsize);\par
   96     if (!newblock->address) \{\par
   97         FREE_MEM(newblock);\par
   98         alloc_error("memory", allocsize);\par
   99         return 0;\par
  100     \}\par
  101 \par
  102     newblock->size = allocsize;\par
  103     newblock->next = NULL;\par
  104 \par
  105     if(list->first == NULL) \{\par
  106         list->first = newblock;\par
  107         list->last = newblock;\par
  108     \} else \{\par
  109         list->last->next = newblock;\par
  110         list->last = newblock;\par
  111     \}\par
  112 \par
  113     list->size += allocsize;\par
  114     list->count++;\par
  115 \par
  116     if (list->size > list->peak) \{\par
  117         list->peak = list->size;\par
  118     \}\par
  119 \par
  120     // DEBUG code\par
  121     // Debug(NULL, "Mememory allocated at address (%x)\\n", newblock->address);\par
  122 \par
  123     return newblock->address;\par
  124 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mem_8h_ad19db35dcf54d18c2a8958f1cca6b299_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v FreeAllSafe\:mem.h}
{\xe \v mem.h\:FreeAllSafe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FreeAllSafe ()}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 172 of file mem.c.}\par
{
References MemoryBlock::address, MemoryList::first, list, and MemoryBlock::next.}\par
{
Referenced by Cleanup().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   173 \{\par
  174     struct MemoryBlock *current, *next;\par
  175 \par
  176     if (list == NULL) \{\par
  177         return;\par
  178     \}\par
  179 \par
  180     current = list->first;\par
  181     while (current != NULL) \{\par
  182         next = current->next;\par
  183         FREE_MEM(current->address);\par
  184         FREE_MEM(current);\par
  185         current = next;\par
  186     \}\par
  187 \par
  188     FREE_MEM(list);\par
  189     list = NULL;\par
  190 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mem_8h_adcb19646ed930d44f25ddc9f7767a182_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v FreeMemSafe\:mem.h}
{\xe \v mem.h\:FreeMemSafe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FreeMemSafe (void * )}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 126 of file mem.c.}\par
{
References MemoryBlock::address, MemoryList::count, dealloc_error(), MemoryList::first, MemoryList::last, list, and MemoryBlock::next.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   127 \{\par
  128     struct MemoryBlock *current, *last;\par
  129 \par
  130     if (list == NULL || block == NULL) \{\par
  131         dealloc_error("list", 0);\par
  132         return;\par
  133     \}\par
  134 \par
  135     if (block == NULL) \{\par
  136         dealloc_error("memory", 0);\par
  137         return;\par
  138     \}\par
  139 \par
  140     last = NULL;\par
  141     current = list->first;\par
  142     while (current != NULL && current->address != block) \{\par
  143         last = current;\par
  144         current = current->next;\par
  145     \}\par
  146 \par
  147     if (current == NULL) \{\par
  148         dealloc_error("address not found", block);\par
  149         return;\par
  150     \}\par
  151 \par
  152     list->size -= current->size;\par
  153     list->count--;\par
  154 \par
  155     if (list->first == current) \{\par
  156         list->first = NULL;\par
  157         list->last = NULL;\par
  158     \} else if (list->last == current) \{\par
  159         last->next = current->next;\par
  160         list->last = last;\par
  161     \} else \{\par
  162         last->next = current->next;\par
  163     \}\par
  164 \par
  165     FREE_MEM(current->address);\par
  166     FREE_MEM(current);\par
  167 \par
  168     // DEBUG code\par
  169     // Debug(NULL, "Mememory deallocated at address (%x)\\n", block);\par
  170 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mem_8h_a7436fb912bde69ba18adebfb6974c5eb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v MemUsage\:mem.h}
{\xe \v mem.h\:MemUsage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MemUsage (long * , long * , long * )}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 192 of file mem.c.}\par
{
References MemoryList::count, list, MemoryList::peak, and MemoryList::size.}\par
{
Referenced by MemoryStatement::Execute().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   193 \{\par
  194     *blocks = list->count;\par
  195     *size = list->size;\par
  196     *peak = list->peak;;\par
  197 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mem_8h_ab6e9c298bac20e9c2638ecd520e1fb5f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/platform.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/platform.h}
{\xe \v lib/platform.h}
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stddef.h>}\par
{\f2 #include "mem.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for platform.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "platform_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "platform_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMPTYSTRING}\~ ""\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SPACE}\~ " "\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOT}\~ "."\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NEWLINE}\~ "\\n"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NOMEM}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LONG_BIT}\~ 32\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b wsize}\~ sizeof(unsigned int)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b wmask}\~ ({\b wsize} - 1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b true}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b false}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEADLINE}\~ {\b EMPTYSTRING}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 https://sourceforge.net/p/predef/wiki/Compilers/} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SYNTAXHIGHLIGHT}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NORMALTEXT}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BOLD}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ITALICS}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UNDERLINE}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COLOR01}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COLOR02}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COLOR03}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CURSORFORWARD}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CURSORBACKWARD}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERASEINLINE}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INSERT1CHAR}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DELETE1CHAR}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DELETELINE}\~ {\b EMPTYSTRING}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CLEARWINDOW}\~ {\b EMPTYSTRING}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int {\b bool}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v BOLD\:platform.h}
{\xe \v platform.h\:BOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BOLD\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 296 of file platform.h.}\par
}
{\xe \v CLEARWINDOW\:platform.h}
{\xe \v platform.h\:CLEARWINDOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CLEARWINDOW\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 308 of file platform.h.}\par
}
{\xe \v COLOR01\:platform.h}
{\xe \v platform.h\:COLOR01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COLOR01\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 299 of file platform.h.}\par
}
{\xe \v COLOR02\:platform.h}
{\xe \v platform.h\:COLOR02}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COLOR02\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 300 of file platform.h.}\par
}
{\xe \v COLOR03\:platform.h}
{\xe \v platform.h\:COLOR03}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COLOR03\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 301 of file platform.h.}\par
}
{\xe \v CURSORBACKWARD\:platform.h}
{\xe \v platform.h\:CURSORBACKWARD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CURSORBACKWARD\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 303 of file platform.h.}\par
}
{\xe \v CURSORFORWARD\:platform.h}
{\xe \v platform.h\:CURSORFORWARD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CURSORFORWARD\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 302 of file platform.h.}\par
}
{\xe \v DELETE1CHAR\:platform.h}
{\xe \v platform.h\:DELETE1CHAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DELETE1CHAR\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 306 of file platform.h.}\par
}
{\xe \v DELETELINE\:platform.h}
{\xe \v platform.h\:DELETELINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DELETELINE\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 307 of file platform.h.}\par
}
{\xe \v DOT\:platform.h}
{\xe \v platform.h\:DOT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOT\~ "."}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file platform.h.}\par
}
{\xe \v EMPTYSTRING\:platform.h}
{\xe \v platform.h\:EMPTYSTRING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMPTYSTRING\~ ""}}
\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file platform.h.}\par
}
{\xe \v ERASEINLINE\:platform.h}
{\xe \v platform.h\:ERASEINLINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERASEINLINE\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 304 of file platform.h.}\par
}
{\xe \v false\:platform.h}
{\xe \v platform.h\:false}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define false\~ 0}}
\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file platform.h.}\par
}
{\xe \v HEADLINE\:platform.h}
{\xe \v platform.h\:HEADLINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEADLINE\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 https://sourceforge.net/p/predef/wiki/Compilers/} }}\par
{
Definition at line 293 of file platform.h.}\par
}
{\xe \v INSERT1CHAR\:platform.h}
{\xe \v platform.h\:INSERT1CHAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INSERT1CHAR\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 305 of file platform.h.}\par
}
{\xe \v ITALICS\:platform.h}
{\xe \v platform.h\:ITALICS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ITALICS\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 297 of file platform.h.}\par
}
{\xe \v LONG_BIT\:platform.h}
{\xe \v platform.h\:LONG_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LONG_BIT\~ 32}}
\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file platform.h.}\par
}
{\xe \v NEWLINE\:platform.h}
{\xe \v platform.h\:NEWLINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NEWLINE\~ "\\n"}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file platform.h.}\par
}
{\xe \v NOMEM\:platform.h}
{\xe \v platform.h\:NOMEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NOMEM\~ 0}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file platform.h.}\par
}
{\xe \v NORMALTEXT\:platform.h}
{\xe \v platform.h\:NORMALTEXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NORMALTEXT\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 295 of file platform.h.}\par
}
{\xe \v SPACE\:platform.h}
{\xe \v platform.h\:SPACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SPACE\~ " "}}
\par
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file platform.h.}\par
}
{\xe \v SYNTAXHIGHLIGHT\:platform.h}
{\xe \v platform.h\:SYNTAXHIGHLIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SYNTAXHIGHLIGHT\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 294 of file platform.h.}\par
}
{\xe \v true\:platform.h}
{\xe \v platform.h\:true}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define true\~ 1}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file platform.h.}\par
}
{\xe \v UNDERLINE\:platform.h}
{\xe \v platform.h\:UNDERLINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UNDERLINE\~ {\b EMPTYSTRING}}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 298 of file platform.h.}\par
}
{\xe \v wmask\:platform.h}
{\xe \v platform.h\:wmask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define wmask\~ ({\b wsize} - 1)}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file platform.h.}\par
}
{\xe \v wsize\:platform.h}
{\xe \v platform.h\:wsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define wsize\~ sizeof(unsigned int)}}
\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file platform.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v bool\:platform.h}
{\xe \v platform.h\:bool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int {\b bool}}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file platform.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/acos.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/acos.c}
{\xe \v lib/real/acos.c}
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for acos.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "acos_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acos} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric cosine function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.00000000000000000000e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pi} = 3.14159265358979311600e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pio2_hi} = 1.57079632679489655800e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pio2_lo} = 6.12323399573676603587e-17\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pS0} = 1.66666666666666657415e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pS1} = -3.25565818622400915405e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pS2} = 2.01212532134862925881e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pS3} = -4.00555345006794114027e-02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pS4} = 7.91534994289814532176e-04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pS5} = 3.47933107596021167570e-05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b qS1} = -2.40339491173441421878e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b qS2} = 2.02094576023350569471e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b qS3} = -6.88283971605453293030e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b qS4} = 7.70381505559019352791e-02\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v acos\:acos.c}
{\xe \v acos.c\:acos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double acos (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric cosine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
 acos(x)  = pi/2 - asin(x)
 acos(-x) = pi/2 + asin(x)
For |x|<=0.5
 acos(x) = pi/2 - (x + x*x^2*R(x^2))    (see {\b asin.c})
For x>0.5
    acos(x) = pi/2 - (pi/2 - 2asin(sqrt((1-x)/2)))
    = 2asin(sqrt((1-x)/2))
    = 2s + 2s*z*R(z)    ...z=(1-x)/2, s=sqrt(z)
    = 2f + (2c + 2s*z*R(z))
    where f=hi part of s, and c = (z-f*f)/(s+f) is the correction term
    for f so that f+c ~ sqrt(z).
For x<-0.5
 acos(x) = pi - 2asin(sqrt((1-|x|)/2))
    = pi - 0.5*(s+s*z*R(z)), where z=(1-|x|)/2,s=sqrt(z)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 if x is NaN, return x itself;
 if |x|>1, return NaN with invalid signal.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Function needed: sqrt
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 96 of file acos.c.}\par
{
References one, pi, pio2_hi, pio2_lo, pS0, pS1, pS2, pS3, pS4, pS5, qS1, qS2, qS3, qS4, and sqrt().}\par
{
Referenced by RealNumber::ArcCosine(), and RealNumber::ArcSecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    97 \{\par
   98     double z,p,q,r,w,s,c,df;\par
   99     sword hx,ix;\par
  100     GET_HIGH_WORD(hx,x);\par
  101     ix = hx&0x7fffffff;\par
  102     if(ix>=0x3ff00000) \{    /* |x| >= 1 */\par
  103         sword lx;\par
  104         GET_LOW_WORD(lx,x);\par
  105         if(((ix-0x3ff00000)|lx)==0) \{   /* |x|==1 */\par
  106             if(hx>0) return 0.0;        /* acos(1) = 0  */\par
  107             else return pi+2.0*pio2_lo; /* acos(-1)= pi */\par
  108         \}\par
  109         return (x-x)/(x-x);     /* acos(|x|>1) is NaN */\par
  110     \}\par
  111     if(ix<0x3fe00000) \{ /* |x| < 0.5 */\par
  112         if(ix<=0x3c600000) return pio2_hi+pio2_lo;/*if|x|<2**-57*/\par
  113         z = x*x;\par
  114         p = z*(pS0+z*(pS1+z*(pS2+z*(pS3+z*(pS4+z*pS5)))));\par
  115         q = one+z*(qS1+z*(qS2+z*(qS3+z*qS4)));\par
  116         r = p/q;\par
  117         return pio2_hi - (x - (pio2_lo-x*r));\par
  118     \} else  if (hx<0) \{     /* x < -0.5 */\par
  119         z = (one+x)*0.5;\par
  120         p = z*(pS0+z*(pS1+z*(pS2+z*(pS3+z*(pS4+z*pS5)))));\par
  121         q = one+z*(qS1+z*(qS2+z*(qS3+z*qS4)));\par
  122         s = sqrt(z);\par
  123         r = p/q;\par
  124         w = r*s-pio2_lo;\par
  125         return pi - 2.0*(s+w);\par
  126     \} else \{            /* x > 0.5 */\par
  127         z = (one-x)*0.5;\par
  128         s = sqrt(z);\par
  129         df = s;\par
  130         SET_LOW_WORD(df,0);\par
  131         c  = (z-df*df)/(s+df);\par
  132         p = z*(pS0+z*(pS1+z*(pS2+z*(pS3+z*(pS4+z*pS5)))));\par
  133         q = one+z*(qS1+z*(qS2+z*(qS3+z*qS4)));\par
  134         r = p/q;\par
  135         w = r*s+c;\par
  136         return 2.0*(df+w);\par
  137     \}\par
  138 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "acos_8c_ae93afe22ff34c79ee97ea3eaf77557db_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "acos_8c_ae93afe22ff34c79ee97ea3eaf77557db_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v one\:acos.c}
{\xe \v acos.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.00000000000000000000e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file acos.c.}\par
{
Referenced by acos().}\par
}
{\xe \v pi\:acos.c}
{\xe \v acos.c\:pi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pi = 3.14159265358979311600e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file acos.c.}\par
{
Referenced by acos().}\par
}
{\xe \v pio2_hi\:acos.c}
{\xe \v acos.c\:pio2_hi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pio2_hi = 1.57079632679489655800e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file acos.c.}\par
{
Referenced by acos().}\par
}
{\xe \v pio2_lo\:acos.c}
{\xe \v acos.c\:pio2_lo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pio2_lo = 6.12323399573676603587e-17{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file acos.c.}\par
{
Referenced by acos().}\par
}
{\xe \v pS0\:acos.c}
{\xe \v acos.c\:pS0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pS0 = 1.66666666666666657415e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file acos.c.}\par
{
Referenced by acos().}\par
}
{\xe \v pS1\:acos.c}
{\xe \v acos.c\:pS1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pS1 = -3.25565818622400915405e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file acos.c.}\par
{
Referenced by acos().}\par
}
{\xe \v pS2\:acos.c}
{\xe \v acos.c\:pS2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pS2 = 2.01212532134862925881e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file acos.c.}\par
{
Referenced by acos().}\par
}
{\xe \v pS3\:acos.c}
{\xe \v acos.c\:pS3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pS3 = -4.00555345006794114027e-02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file acos.c.}\par
{
Referenced by acos().}\par
}
{\xe \v pS4\:acos.c}
{\xe \v acos.c\:pS4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pS4 = 7.91534994289814532176e-04{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file acos.c.}\par
{
Referenced by acos().}\par
}
{\xe \v pS5\:acos.c}
{\xe \v acos.c\:pS5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pS5 = 3.47933107596021167570e-05{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file acos.c.}\par
{
Referenced by acos().}\par
}
{\xe \v qS1\:acos.c}
{\xe \v acos.c\:qS1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double qS1 = -2.40339491173441421878e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file acos.c.}\par
{
Referenced by acos().}\par
}
{\xe \v qS2\:acos.c}
{\xe \v acos.c\:qS2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double qS2 = 2.02094576023350569471e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file acos.c.}\par
{
Referenced by acos().}\par
}
{\xe \v qS3\:acos.c}
{\xe \v acos.c\:qS3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double qS3 = -6.88283971605453293030e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file acos.c.}\par
{
Referenced by acos().}\par
}
{\xe \v qS4\:acos.c}
{\xe \v acos.c\:qS4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double qS4 = 7.70381505559019352791e-02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file acos.c.}\par
{
Referenced by acos().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/acosh.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/acosh.c}
{\xe \v lib/real/acosh.c}
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for acosh.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "acosh_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acosh} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosine function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ln2} = 6.93147180559945286227e-01\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v acosh\:acosh.c}
{\xe \v acosh.c\:acosh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double acosh (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic cosine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
 Based on
    acosh(x) = log [ x + sqrt(x*x-1) ]
 we have
    acosh(x) := log(x)+ln2, if x is large; else
    acosh(x) := log(2x-1/(sqrt(x*x-1)+x)) if x>2; else
    acosh(x) := log1p(t+sqrt(2.0*t+t*t)); where t=x-1.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 acosh(x) is NaN with signal if x<1.
 acosh(NaN) is NaN without signal.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 75 of file acosh.c.}\par
{
References ln2, log1p(), one, and sqrt().}\par
{
Referenced by RealNumber::HypArcCosine(), and RealNumber::HypArcSecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    76 \{\par
   77     double t;\par
   78     sword hx, lx;\par
   79     GET_HIGH_WORD(hx,x);\par
   80     GET_LOW_WORD(lx,x);\par
   81 \par
   82     if(hx<0x3ff00000) \{     /* x < 1 */\par
   83         return (x-x)/(x-x);\par
   84     \} else if(hx >=0x41b00000) \{    /* x > 2**28 */\par
   85         if(hx >=0x7ff00000) \{   /* x is inf of NaN */\par
   86             return x+x;\par
   87         \} else\par
   88             return log(x)+ln2;  /* acosh(huge)=log(2x) */\par
   89     \} else if(((hx-0x3ff00000)|lx)==0) \{\par
   90         return 0.0;         /* acosh(1) = 0 */\par
   91     \} else if (hx > 0x40000000) \{   /* 2**28 > x > 2 */\par
   92         t=x*x;\par
   93         return log(2.0*x-one/(x+sqrt(t-one)));\par
   94     \} else \{            /* 1<x<2 */\par
   95         t = x-one;\par
   96         return log1p(t+sqrt(2.0*t+t*t));\par
   97     \}\par
   98 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "acosh_8c_ac862445bcb46911b1782c284829d5e46_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "acosh_8c_ac862445bcb46911b1782c284829d5e46_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ln2\:acosh.c}
{\xe \v acosh.c\:ln2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ln2 = 6.93147180559945286227e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file acosh.c.}\par
{
Referenced by acosh().}\par
}
{\xe \v one\:acosh.c}
{\xe \v acosh.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file acosh.c.}\par
{
Referenced by acosh().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/asin.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/asin.c}
{\xe \v lib/real/asin.c}
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for asin.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "asin_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b asin} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric sine function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.00000000000000000000e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b huge} = 1.000e+300\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pio2_hi} = 1.57079632679489655800e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pio2_lo} = 6.12323399573676603587e-17\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pio4_hi} = 7.85398163397448278999e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pS0} = 1.66666666666666657415e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pS1} = -3.25565818622400915405e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pS2} = 2.01212532134862925881e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pS3} = -4.00555345006794114027e-02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pS4} = 7.91534994289814532176e-04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pS5} = 3.47933107596021167570e-05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b qS1} = -2.40339491173441421878e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b qS2} = 2.02094576023350569471e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b qS3} = -6.88283971605453293030e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b qS4} = 7.70381505559019352791e-02\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v asin\:asin.c}
{\xe \v asin.c\:asin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double asin (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric sine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
 Since  asin(x) = x + x^3/6 + x^5*3/40 + x^7*15/336 + ...
 we approximate asin(x) on [0,0.5] by
    asin(x) = x + x*x^2*R(x^2)
 where
    R(x^2) is a rational approximation of (asin(x)-x)/x^3
 and its remez error is bounded by
    |(asin(x)-x)/x^3 - R(x^2)| < 2^(-58.75)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  For x in [0.5,1]
    asin(x) = pi/2-2*asin(sqrt((1-x)/2))
 Let y = (1-x), z = y/2, s := sqrt(z), and pio2_hi+pio2_lo=pi/2;
 then for x>0.98
    asin(x) = pi/2 - 2*(s+s*z*R(z))
        = pio2_hi - (2*(s+s*z*R(z)) - pio2_lo)
 For x<=0.98, let pio4_hi = pio2_hi/2, then
    f = hi part of s;
    c = sqrt(z) - f = (z-f*f)/(s+f)     ...f+c=sqrt(z)
 and
    asin(x) = pi/2 - 2*(s+s*z*R(z))
        = pio4_hi+(pio4-2s)-(2s*z*R(z)-pio2_lo)
        = pio4_hi+(pio4-2f)-(2s*z*R(z)-(pio2_lo+2c))\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 if x is NaN, return x itself;
 if |x|>1, return NaN with invalid signal.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 104 of file asin.c.}\par
{
References huge, one, pio2_hi, pio2_lo, pio4_hi, pS0, pS1, pS2, pS3, pS4, pS5, qS1, qS2, qS3, qS4, and sqrt().}\par
{
Referenced by RealNumber::ArcCosecant(), and RealNumber::ArcSine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   105 \{\par
  106     double t,w,p,q,c,r,s;\par
  107     sword hx,ix;\par
  108     GET_HIGH_WORD(hx,x);\par
  109     ix = hx&0x7fffffff;\par
  110     if(ix>= 0x3ff00000) \{       /* |x|>= 1 */\par
  111         uword lx;\par
  112         GET_LOW_WORD(lx,x);\par
  113         if(((ix-0x3ff00000)|lx)==0)\par
  114             /* asin(1)=+-pi/2 with inexact */\par
  115             return x*pio2_hi+x*pio2_lo;\par
  116         return (x-x)/(x-x);     /* asin(|x|>1) is NaN */\par
  117     \} else if (ix<0x3fe00000) \{ /* |x|<0.5 */\par
  118         if(ix<0x3e400000) \{     /* if |x| < 2**-27 */\par
  119             if(huge+x>one) \{\par
  120                 return x;/* return x with inexact if x!=0*/\par
  121             \} else \{\par
  122                 t = 0;\par
  123             \}\par
  124         \} else \{\par
  125             t = x*x;\par
  126         \}\par
  127 \par
  128         p = t*(pS0+t*(pS1+t*(pS2+t*(pS3+t*(pS4+t*pS5)))));\par
  129         q = one+t*(qS1+t*(qS2+t*(qS3+t*qS4)));\par
  130         w = p/q;\par
  131         return x+x*w;\par
  132     \}\par
  133     /* 1> |x|>= 0.5 */\par
  134     w = one-fabs(x);\par
  135     t = w*0.5;\par
  136     p = t*(pS0+t*(pS1+t*(pS2+t*(pS3+t*(pS4+t*pS5)))));\par
  137     q = one+t*(qS1+t*(qS2+t*(qS3+t*qS4)));\par
  138     s = sqrt(t);\par
  139     if(ix>=0x3FEF3333) \{    /* if |x| > 0.975 */\par
  140         w = p/q;\par
  141         t = pio2_hi-(2.0*(s+s*w)-pio2_lo);\par
  142     \} else \{\par
  143         w  = s;\par
  144         SET_LOW_WORD(w,0);\par
  145         c  = (t-w*w)/(s+w);\par
  146         r  = p/q;\par
  147         p  = 2.0*s*r-(pio2_lo-2.0*c);\par
  148         q  = pio4_hi-2.0*w;\par
  149         t  = pio4_hi-(p-q);\par
  150     \}\par
  151     if(hx>0) return t;\par
  152     else return -t;\par
  153 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "asin_8c_aa9528d92a3ae44ad6484da0774604454_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "asin_8c_aa9528d92a3ae44ad6484da0774604454_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v huge\:asin.c}
{\xe \v asin.c\:huge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double huge = 1.000e+300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file asin.c.}\par
{
Referenced by asin().}\par
}
{\xe \v one\:asin.c}
{\xe \v asin.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.00000000000000000000e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file asin.c.}\par
{
Referenced by asin().}\par
}
{\xe \v pio2_hi\:asin.c}
{\xe \v asin.c\:pio2_hi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pio2_hi = 1.57079632679489655800e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file asin.c.}\par
{
Referenced by asin().}\par
}
{\xe \v pio2_lo\:asin.c}
{\xe \v asin.c\:pio2_lo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pio2_lo = 6.12323399573676603587e-17{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file asin.c.}\par
{
Referenced by asin().}\par
}
{\xe \v pio4_hi\:asin.c}
{\xe \v asin.c\:pio4_hi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pio4_hi = 7.85398163397448278999e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file asin.c.}\par
{
Referenced by asin().}\par
}
{\xe \v pS0\:asin.c}
{\xe \v asin.c\:pS0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pS0 = 1.66666666666666657415e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file asin.c.}\par
{
Referenced by asin().}\par
}
{\xe \v pS1\:asin.c}
{\xe \v asin.c\:pS1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pS1 = -3.25565818622400915405e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file asin.c.}\par
{
Referenced by asin().}\par
}
{\xe \v pS2\:asin.c}
{\xe \v asin.c\:pS2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pS2 = 2.01212532134862925881e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file asin.c.}\par
{
Referenced by asin().}\par
}
{\xe \v pS3\:asin.c}
{\xe \v asin.c\:pS3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pS3 = -4.00555345006794114027e-02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file asin.c.}\par
{
Referenced by asin().}\par
}
{\xe \v pS4\:asin.c}
{\xe \v asin.c\:pS4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pS4 = 7.91534994289814532176e-04{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file asin.c.}\par
{
Referenced by asin().}\par
}
{\xe \v pS5\:asin.c}
{\xe \v asin.c\:pS5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pS5 = 3.47933107596021167570e-05{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file asin.c.}\par
{
Referenced by asin().}\par
}
{\xe \v qS1\:asin.c}
{\xe \v asin.c\:qS1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double qS1 = -2.40339491173441421878e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file asin.c.}\par
{
Referenced by asin().}\par
}
{\xe \v qS2\:asin.c}
{\xe \v asin.c\:qS2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double qS2 = 2.02094576023350569471e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file asin.c.}\par
{
Referenced by asin().}\par
}
{\xe \v qS3\:asin.c}
{\xe \v asin.c\:qS3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double qS3 = -6.88283971605453293030e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file asin.c.}\par
{
Referenced by asin().}\par
}
{\xe \v qS4\:asin.c}
{\xe \v asin.c\:qS4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double qS4 = 7.70381505559019352791e-02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file asin.c.}\par
{
Referenced by asin().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/asinh.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/asinh.c}
{\xe \v lib/real/asinh.c}
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for asinh.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "asinh_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b asinh} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic sine function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.00000000000000000000e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ln2} = 6.93147180559945286227e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b huge} = 1.00000000000000000000e+300\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v asinh\:asinh.c}
{\xe \v asinh.c\:asinh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double asinh (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic sine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
 Based on
    asinh(x) = sign(x) * log [ |x| + sqrt(x*x+1) ]
 we have
 asinh(x) := x  if  1+x*x=1,
     := sign(x)*(log(x)+ln2)) for large |x|, else
     := sign(x)*log(2|x|+1/(|x|+sqrt(x*x+1))) if|x|>2, else
     := sign(x)*log1p(|x| + x^2/(1 + sqrt(1+x^2)))
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 73 of file asinh.c.}\par
{
References huge, ln2, log1p(), one, and sqrt().}\par
{
Referenced by RealNumber::HypArcCosecant(), and RealNumber::HypArcSine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    74 \{\par
   75     double t,w;\par
   76     sword hx,ix;\par
   77     GET_HIGH_WORD(hx,x);\par
   78     ix = hx&0x7fffffff;\par
   79     if(ix>=0x7ff00000) return x+x;  /* x is inf or NaN */\par
   80     if(ix< 0x3e300000) \{    /* |x|<2**-28 */\par
   81         if(huge+x>one) return x;    /* return x inexact except 0 */\par
   82     \}\par
   83     if(ix>0x41b00000) \{ /* |x| > 2**28 */\par
   84         w = log(fabs(x))+ln2;\par
   85     \} else if (ix>0x40000000) \{ /* 2**28 > |x| > 2.0 */\par
   86         t = fabs(x);\par
   87         w = log(2.0*t+one/(sqrt(x*x+one)+t));\par
   88     \} else \{        /* 2.0 > |x| > 2**-28 */\par
   89         t = x*x;\par
   90         w =log1p(fabs(x)+t/(one+sqrt(one+t)));\par
   91     \}\par
   92     if(hx>0) return w;\par
   93     else return -w;\par
   94 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "asinh_8c_a907297107e93ea9c8a0c8409a8e65079_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "asinh_8c_a907297107e93ea9c8a0c8409a8e65079_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v huge\:asinh.c}
{\xe \v asinh.c\:huge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double huge = 1.00000000000000000000e+300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file asinh.c.}\par
{
Referenced by asinh().}\par
}
{\xe \v ln2\:asinh.c}
{\xe \v asinh.c\:ln2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ln2 = 6.93147180559945286227e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file asinh.c.}\par
{
Referenced by asinh().}\par
}
{\xe \v one\:asinh.c}
{\xe \v asinh.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.00000000000000000000e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file asinh.c.}\par
{
Referenced by asinh().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/atan.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/atan.c}
{\xe \v lib/real/atan.c}
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for atan.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "atan_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b atan} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric tangent function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b atanhi} []\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b atanlo} []\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b aT} []\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b huge} = 1.0e300\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v atan\:atan.c}
{\xe \v atan.c\:atan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double atan (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse trigonometric tangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method
  1. Reduce x to positive by atan(x) = -atan(-x).
  2. According to the integer k=4t+0.25 chopped, t=x, the argument
     is further reduced to one of the following intervals and the
     arctangent of t is evaluated by the corresponding formula:\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid      [0,7/16]      atan(x) = t-t^3*(a1+t^2*(a2+...(a10+t^2*a11)...)
     [7/16,11/16]  atan(x) = atan(1/2) + atan( (t-0.5)/(1+t/2) )
     [11/16.19/16] atan(x) = atan( 1 ) + atan( (t-1)/(1+t) )
     [19/16,39/16] atan(x) = atan(3/2) + atan( (t-1.5)/(1+1.5t) )
     [39/16,INF]   atan(x) = atan(INF) + atan( -1/t )\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constants:
The hexadecimal values are the intended ones for the following
constants. The decimal values may be used, provided that the
compiler will convert from decimal to binary accurately enough
to produce the hexadecimal values shown.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 109 of file atan.c.}\par
{
References aT, atanhi, atanlo, huge, and one.}\par
{
Referenced by RealNumber::ArcCotangent(), RealNumber::ArcTangent(), and atan2().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   110 \{\par
  111     double w,s1,s2,z;\par
  112     sword ix,hx,id;\par
  113 \par
  114     GET_HIGH_WORD(hx,x);\par
  115     ix = hx&0x7fffffff;\par
  116     if(ix>=0x44100000) \{    /* if |x| >= 2^66 */\par
  117         uword low;\par
  118 \par
  119         GET_LOW_WORD(low,x);\par
  120         if(ix>0x7ff00000||\par
  121                 (ix==0x7ff00000&&(low!=0)))\par
  122             return x+x;     /* NaN */\par
  123         if(hx>0) return  atanhi[3]+atanlo[3];\par
  124         else     return -atanhi[3]-atanlo[3];\par
  125     \}\par
  126     if (ix < 0x3fdc0000) \{  /* |x| < 0.4375 */\par
  127         if (ix < 0x3e200000) \{  /* |x| < 2^-29 */\par
  128             if(huge+x>one) return x;    /* raise inexact */\par
  129         \}\par
  130         id = -1;\par
  131     \} else \{\par
  132         x = fabs(x);\par
  133         if (ix < 0x3ff30000) \{      /* |x| < 1.1875 */\par
  134             if (ix < 0x3fe60000) \{  /* 7/16 <=|x|<11/16 */\par
  135                 id = 0;\par
  136                 x = (2.0*x-one)/(2.0+x);\par
  137             \} else \{            /* 11/16<=|x|< 19/16 */\par
  138                 id = 1;\par
  139                 x  = (x-one)/(x+one);\par
  140             \}\par
  141         \} else \{\par
  142             if (ix < 0x40038000) \{  /* |x| < 2.4375 */\par
  143                 id = 2;\par
  144                 x  = (x-1.5)/(one+1.5*x);\par
  145             \} else \{            /* 2.4375 <= |x| < 2^66 */\par
  146                 id = 3;\par
  147                 x  = -1.0/x;\par
  148             \}\par
  149         \}\par
  150     \}\par
  151     /* end of argument reduction */\par
  152     z = x*x;\par
  153     w = z*z;\par
  154     /* break sum from i=0 to 10 aT[i]z**(i+1) into odd and even poly */\par
  155     s1 = z*(aT[0]+w*(aT[2]+w*(aT[4]+w*(aT[6]+w*(aT[8]+w*aT[10])))));\par
  156     s2 = w*(aT[1]+w*(aT[3]+w*(aT[5]+w*(aT[7]+w*aT[9]))));\par
  157     if (id<0) return x - x*(s1+s2);\par
  158     else \{\par
  159         z = atanhi[id] - ((x*(s1+s2) - atanlo[id]) - x);\par
  160         return (hx<0)? -z:z;\par
  161     \}\par
  162 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "atan_8c_a1e2f8f6d64eaa95131bc63fee34970ea_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v aT\:atan.c}
{\xe \v atan.c\:aT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double aT[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    3.33333333333329318027e-01, \par
    -1.99999999998764832476e-01, \par
    1.42857142725034663711e-01, \par
    -1.11111104054623557880e-01, \par
    9.09088713343650656196e-02, \par
    -7.69187620504482999495e-02, \par
    6.66107313738753120669e-02, \par
    -5.83357013379057348645e-02, \par
    4.97687799461593236017e-02, \par
    -3.65315727442169155270e-02, \par
    1.62858201153657823623e-02, \par
\}\par
}
{
Definition at line 61 of file atan.c.}\par
{
Referenced by atan().}\par
}
{\xe \v atanhi\:atan.c}
{\xe \v atan.c\:atanhi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double atanhi[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    4.63647609000806093515e-01, \par
    7.85398163397448278999e-01, \par
    9.82793723247329054082e-01, \par
    1.57079632679489655800e+00, \par
\}\par
}
{
Definition at line 47 of file atan.c.}\par
{
Referenced by atan().}\par
}
{\xe \v atanlo\:atan.c}
{\xe \v atan.c\:atanlo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double atanlo[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    2.26987774529616870924e-17, \par
    3.06161699786838301793e-17, \par
    1.39033110312309984516e-17, \par
    6.12323399573676603587e-17, \par
\}\par
}
{
Definition at line 54 of file atan.c.}\par
{
Referenced by atan().}\par
}
{\xe \v huge\:atan.c}
{\xe \v atan.c\:huge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double huge = 1.0e300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file atan.c.}\par
{
Referenced by atan().}\par
}
{\xe \v one\:atan.c}
{\xe \v atan.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file atan.c.}\par
{
Referenced by atan().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/atan2.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/atan2.c}
{\xe \v lib/real/atan2.c}
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for atan2.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "atan2_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b atan2} (double y, double x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b tiny} = 1.0e-300\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b zero} = 0.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pi_o_4} = 7.8539816339744827900E-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pi_o_2} = 1.5707963267948965580E+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pi} = 3.1415926535897931160E+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pi_lo} = 1.2246467991473531772E-16\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v atan2\:atan2.c}
{\xe \v atan2.c\:atan2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double atan2 (double  {\i y}, double  {\i x})}}
\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file atan2.c.}\par
{
References atan(), pi, pi_lo, pi_o_2, pi_o_4, tiny, and zero.}\par
{
Referenced by clog(), and cpow().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    87 \{\par
   88     double z;\par
   89     sword k,m,hx,hy,ix,iy;\par
   90     uword lx,ly;\par
   91 \par
   92     EXTRACT_WORDS(hx,lx,x);\par
   93     ix = hx&0x7fffffff;\par
   94     EXTRACT_WORDS(hy,ly,y);\par
   95     iy = hy&0x7fffffff;\par
   96     if(((ix|((lx|-lx)>>31))>0x7ff00000)||\par
   97             ((iy|((ly|-ly)>>31))>0x7ff00000))   /* x or y is NaN */\par
   98         return x+y;\par
   99     if(((hx-0x3ff00000)|lx)==0) return atan(y);   /* x=1.0 */\par
  100     m = ((hy>>31)&1)|((hx>>30)&2);  /* 2*sign(x)+sign(y) */\par
  101 \par
  102     /* when y = 0 */\par
  103     if((iy|ly)==0) \{\par
  104         switch(m) \{\par
  105         case 0:\par
  106         case 1:\par
  107             return y;   /* atan(+-0,+anything)=+-0 */\par
  108         case 2:\par
  109             return  pi+tiny;/* atan(+0,-anything) = pi */\par
  110         case 3:\par
  111             return -pi-tiny;/* atan(-0,-anything) =-pi */\par
  112         \}\par
  113     \}\par
  114     /* when x = 0 */\par
  115     if((ix|lx)==0) return (hy<0)?  -pi_o_2-tiny: pi_o_2+tiny;\par
  116 \par
  117     /* when x is INF */\par
  118     if(ix==0x7ff00000) \{\par
  119         if(iy==0x7ff00000) \{\par
  120             switch(m) \{\par
  121             case 0:\par
  122                 return  pi_o_4+tiny;/* atan(+INF,+INF) */\par
  123             case 1:\par
  124                 return -pi_o_4-tiny;/* atan(-INF,+INF) */\par
  125             case 2:\par
  126                 return  3.0*pi_o_4+tiny;/*atan(+INF,-INF)*/\par
  127             case 3:\par
  128                 return -3.0*pi_o_4-tiny;/*atan(-INF,-INF)*/\par
  129             \}\par
  130         \} else \{\par
  131             switch(m) \{\par
  132             case 0:\par
  133                 return  zero  ; /* atan(+...,+INF) */\par
  134             case 1:\par
  135                 return -zero  ; /* atan(-...,+INF) */\par
  136             case 2:\par
  137                 return  pi+tiny  ;  /* atan(+...,-INF) */\par
  138             case 3:\par
  139                 return -pi-tiny  ;  /* atan(-...,-INF) */\par
  140             \}\par
  141         \}\par
  142     \}\par
  143     /* when y is INF */\par
  144     if(iy==0x7ff00000) return (hy<0)? -pi_o_2-tiny: pi_o_2+tiny;\par
  145 \par
  146     /* compute y/x */\par
  147     k = (iy-ix)>>20;\par
  148     if(k > 60) z=pi_o_2+0.5*pi_lo;  /* |y/x| >  2**60 */\par
  149     else if(hx<0&&k<-60) z=0.0;     /* |y|/x < -2**60 */\par
  150     else z=atan(fabs(y/x));     /* safe to do y/x */\par
  151     switch (m) \{\par
  152     case 0:\par
  153         return       z  ;   /* atan(+,+) */\par
  154     case 1: \{\par
  155         uword zh;\par
  156         GET_HIGH_WORD(zh,z);\par
  157         SET_HIGH_WORD(z, zh ^ 0x80000000);\par
  158     \}\par
  159     return       z  ;   /* atan(-,+) */\par
  160     case 2:\par
  161         return  pi-(z-pi_lo);/* atan(+,-) */\par
  162     default: /* case 3 */\par
  163         return  (z-pi_lo)-pi;/* atan(-,-) */\par
  164     \}\par
  165 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "atan2_8c_a349377202ca14f79eb335b1a421fe4d8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "atan2_8c_a349377202ca14f79eb335b1a421fe4d8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v pi\:atan2.c}
{\xe \v atan2.c\:pi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pi = 3.1415926535897931160E+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file atan2.c.}\par
{
Referenced by atan2().}\par
}
{\xe \v pi_lo\:atan2.c}
{\xe \v atan2.c\:pi_lo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pi_lo = 1.2246467991473531772E-16{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 84 of file atan2.c.}\par
{
Referenced by atan2().}\par
}
{\xe \v pi_o_2\:atan2.c}
{\xe \v atan2.c\:pi_o_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pi_o_2 = 1.5707963267948965580E+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file atan2.c.}\par
{
Referenced by atan2().}\par
}
{\xe \v pi_o_4\:atan2.c}
{\xe \v atan2.c\:pi_o_4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pi_o_4 = 7.8539816339744827900E-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file atan2.c.}\par
{
Referenced by atan2().}\par
}
{\xe \v tiny\:atan2.c}
{\xe \v atan2.c\:tiny}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double tiny = 1.0e-300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file atan2.c.}\par
{
Referenced by atan2().}\par
}
{\xe \v zero\:atan2.c}
{\xe \v atan2.c\:zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double zero = 0.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 80 of file atan2.c.}\par
{
Referenced by atan2().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/atanh.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/atanh.c}
{\xe \v lib/real/atanh.c}
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for atanh.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "atanh_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b atanh} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic tangent function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b huge} = 1e300\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b zero} = 0.0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v atanh\:atanh.c}
{\xe \v atanh.c\:atanh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double atanh (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inverse hyperbolic tangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
   1.Reduced x to positive by atanh(-x) = -atanh(x)
   2.For x>=0.5
                 1              2x                          x
 atanh(x) = --- * log(1 + -------) = 0.5 * log1p(2 * --------)
                 2             1 - x                      1 - x\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     For x<0.5
 atanh(x) = 0.5*log1p(2x+2x*x/(1-x))\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 atanh(x) is NaN if |x| > 1 with signal;
 atanh(NaN) is that NaN with no signal;
 atanh(+-1) is +-INF with signal.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 81 of file atanh.c.}\par
{
References huge, log1p(), one, and zero.}\par
{
Referenced by RealNumber::HypArcCotangent(), and RealNumber::HypArcTangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    82 \{\par
   83     double t;\par
   84     sword hx,ix;\par
   85     uword lx;\par
   86     GET_HIGH_WORD(hx,x);\par
   87     GET_LOW_WORD(lx,x);\par
   88     ix = hx&0x7fffffff;\par
   89     if ((ix|((lx|(-lx))>>31))>0x3ff00000) /* |x|>1 */\par
   90         return (x-x)/(x-x);\par
   91     if(ix==0x3ff00000)\par
   92         return x/zero;\par
   93     if(ix<0x3e300000&&(huge+x)>zero) return x;  /* x<2**-28 */\par
   94     SET_HIGH_WORD(x, ix);       /* x <- |x| */\par
   95     if(ix<0x3fe00000) \{     /* x < 0.5 */\par
   96         t = x+x;\par
   97         t = 0.5*log1p(t+t*x/(one-x));\par
   98     \} else\par
   99         t = 0.5*log1p((x+x)/(one-x));\par
  100     if(hx>=0) return t;\par
  101     else return -t;\par
  102 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "atanh_8c_ac07fd7b77fa341563abccf9efcc1a711_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "atanh_8c_ac07fd7b77fa341563abccf9efcc1a711_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v huge\:atanh.c}
{\xe \v atanh.c\:huge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double huge = 1e300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file atanh.c.}\par
{
Referenced by atanh().}\par
}
{\xe \v one\:atanh.c}
{\xe \v atanh.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file atanh.c.}\par
{
Referenced by atanh().}\par
}
{\xe \v zero\:atanh.c}
{\xe \v atanh.c\:zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double zero = 0.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file atanh.c.}\par
{
Referenced by atanh().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/cbrt.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/cbrt.c}
{\xe \v lib/real/cbrt.c}
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cbrt.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cbrt_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cbrt} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cube root function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const unsigned {\b B1} = 715094163\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const unsigned {\b B2} = 696219795\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b C} = 5.42857142857142815906e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b D} = -7.05306122448979611050e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b E} = 1.41428571428571436819e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b F} = 1.60714285714285720630e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b G} = 3.57142857142857150787e-01\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cbrt\:cbrt.c}
{\xe \v cbrt.c\:cbrt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double cbrt (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cube root function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 67 of file cbrt.c.}\par
{
References B1, B2, C, D, E, F, and G.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    68 \{\par
   69     sword   hx, lx, ht;\par
   70     double r,s,t=0.0,w;\par
   71     uword sign;\par
   72 \par
   73     GET_HIGH_WORD(hx,x); /* high word of x */\par
   74     sign=hx&0x80000000;         /* sign= sign(x) */\par
   75     hx  ^=sign;\par
   76     if(hx>=0x7ff00000) return(x+x); /* cbrt(NaN,INF) is itself */\par
   77     GET_LOW_WORD(lx, x);\par
   78     if((hx|lx)==0)\par
   79         return(x);      /* cbrt(0) is itself */\par
   80 \par
   81     SET_HIGH_WORD(x,hx); /* x <- |x| */\par
   82     /* rough cbrt to 5 bits */\par
   83     if(hx<0x00100000)       /* subnormal number */\par
   84     \{\par
   85         SET_HIGH_WORD(t,0x43500000);        /* set t= 2**54 */\par
   86         t*=x;\par
   87         GET_HIGH_WORD(ht,t);\par
   88         SET_HIGH_WORD(t,ht/3+B2);\par
   89     \}\par
   90     else\par
   91         SET_HIGH_WORD(t,hx/3+B1);\par
   92 \par
   93     /* new cbrt to 23 bits, may be implemented in single precision */\par
   94     r=t*t/x;\par
   95     s=C+r*t;\par
   96     t*=G+F/(s+E+D/s);\par
   97 \par
   98     /* chopped to 20 bits and make it larger than cbrt(x) */\par
   99     SET_LOW_WORD(t,0);\par
  100     GET_HIGH_WORD(ht,t);\par
  101     SET_HIGH_WORD(t,ht + 0x00000001);\par
  102 \par
  103     /* one step newton iteration to 53 bits with error less than 0.667 ulps */\par
  104     s=t*t;      /* t*t is exact */\par
  105     r=x/s;\par
  106     w=t+t;\par
  107     r=(r-t)/(w+r);  /* r-s is exact */\par
  108     t=t+t*r;\par
  109 \par
  110     /* retore the sign bit */\par
  111     GET_HIGH_WORD(ht,t);\par
  112     SET_HIGH_WORD(t,ht|sign);\par
  113 \par
  114     return(t);\par
  115 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v B1\:cbrt.c}
{\xe \v cbrt.c\:B1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned B1 = 715094163{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file cbrt.c.}\par
{
Referenced by cbrt().}\par
}
{\xe \v B2\:cbrt.c}
{\xe \v cbrt.c\:B2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned B2 = 696219795{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file cbrt.c.}\par
{
Referenced by cbrt().}\par
}
{\xe \v C\:cbrt.c}
{\xe \v cbrt.c\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double C = 5.42857142857142815906e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file cbrt.c.}\par
{
Referenced by cbrt().}\par
}
{\xe \v D\:cbrt.c}
{\xe \v cbrt.c\:D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double D = -7.05306122448979611050e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file cbrt.c.}\par
{
Referenced by cbrt().}\par
}
{\xe \v E\:cbrt.c}
{\xe \v cbrt.c\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double E = 1.41428571428571436819e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file cbrt.c.}\par
{
Referenced by cbrt().}\par
}
{\xe \v F\:cbrt.c}
{\xe \v cbrt.c\:F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double F = 1.60714285714285720630e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file cbrt.c.}\par
{
Referenced by cbrt().}\par
}
{\xe \v G\:cbrt.c}
{\xe \v cbrt.c\:G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double G = 3.57142857142857150787e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file cbrt.c.}\par
{
Referenced by cbrt().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/ceil.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/ceil.c}
{\xe \v lib/real/ceil.c}
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ceil.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ceil_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ceil} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical ceiling function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b huge} = 1.0e300\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ceil\:ceil.c}
{\xe \v ceil.c\:ceil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ceil (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical ceiling function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Return x rounded toward -inf to integral value
Method:
 Bit twiddling.
Exception:
 Inexact flag raised if x not equal to ceil(x).
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 65 of file ceil.c.}\par
{
References huge.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    66 \{\par
   67     sword i0,i1,j0;\par
   68     uword i,j;\par
   69     EXTRACT_WORDS(i0,i1,x);\par
   70     j0 = ((i0>>20)&0x7ff)-0x3ff;\par
   71     if(j0<20) \{\par
   72         if(j0<0) \{          /* raise inexact if x != 0 */\par
   73             if(huge+x>0.0) \{        /* return 0*sign(x) if |x|<1 */\par
   74                 if(i0<0) \{\par
   75                     i0=0x80000000;\par
   76                     i1=0;\par
   77                 \}\par
   78                 else if((i0|i1)!=0) \{\par
   79                     i0=0x3ff00000;\par
   80                     i1=0;\par
   81                 \}\par
   82             \}\par
   83         \} else \{\par
   84             i = (0x000fffff)>>j0;\par
   85             if(((i0&i)|i1)==0) return x; /* x is integral */\par
   86             if(huge+x>0.0) \{        /* raise inexact flag */\par
   87                 if(i0>0) i0 += (0x00100000)>>j0;\par
   88                 i0 &= (~i);\par
   89                 i1=0;\par
   90             \}\par
   91         \}\par
   92     \} else if (j0>51) \{\par
   93         if(j0==0x400) return x+x;   /* inf or NaN */\par
   94         else return x;          /* x is integral */\par
   95     \} else \{\par
   96         i = ((uword)(0xffffffff))>>(j0-20);\par
   97         if((i1&i)==0) return x;     /* x is integral */\par
   98         if(huge+x>0.0) \{        /* raise inexact flag */\par
   99             if(i0>0) \{\par
  100                 if(j0==20) i0+=1;\par
  101                 else \{\par
  102                     j = i1 + (1<<(52-j0));\par
  103                     // NOTICE: Is this a correct cast?\par
  104                     if((sword)j<(sword)i1) i0+=1;   /* got a carry */\par
  105                     i1 = j;\par
  106                 \}\par
  107             \}\par
  108             i1 &= (~i);\par
  109         \}\par
  110     \}\par
  111     INSERT_WORDS(x,i0,i1);\par
  112     return x;\par
  113 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v huge\:ceil.c}
{\xe \v ceil.c\:huge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double huge = 1.0e300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file ceil.c.}\par
{
Referenced by ceil().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/copysign.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/copysign.c}
{\xe \v lib/real/copysign.c}
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for copysign.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "copysign_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b copysign} (double x, double y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a value with the magnitude of x and with the sign bit of y. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v copysign\:copysign.c}
{\xe \v copysign.c\:copysign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double copysign (double  {\i x}, double  {\i y})}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a value with the magnitude of x and with the sign bit of y. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18 \par
}}{
Definition at line 52 of file copysign.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    53 \{\par
   54     uword hx, hy;\par
   55     GET_HIGH_WORD(hx, x);\par
   56     GET_HIGH_WORD(hy, y);\par
   57     SET_HIGH_WORD(x, (hx&0x7fffffff)|(hy&0x80000000));\par
   58     return x;\par
   59 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/cos.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/cos.c}
{\xe \v lib/real/cos.c}
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cos.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cos_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cos} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric cosine function. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cos\:cos.c}
{\xe \v cos.c\:cos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double cos (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric cosine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Return cosine function of x.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid kernel function:
 __kernel_sin       ... sine function on [-pi/4,pi/4]
 __kernel_cos       ... cosine function on [-pi/4,pi/4]
 rem_pio2       ... argument reduction routine\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Method.
     Let S,C and T denote the sin, cos and tan respectively on
 [-PI/4, +PI/4]. Reduce the argument x to y1+y2 = x-k*pi/2
 in [-pi/4 , +pi/4], and let n = k mod 4.
 We have\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid          n        sin(x)      cos(x)        tan(x)
    ----------------------------------------------------------
     0         S       C         T
     1         C      -S        -1/T
     2        -S      -C         T
     3        -C       S        -1/T
    ----------------------------------------------------------\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
     Let trig be any of sin, cos, or tan.
     trig(+-INF)  is NaN, with signals;
     trig(NaN)    is that NaN;\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Accuracy:
 TRIG(x) returns trig(x) nearly rounded
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 87 of file cos.c.}\par
{
References __kernel_cos(), __kernel_sin(), and rempio2().}\par
{
Referenced by cchc(), ccos(), ccosh(), ccot(), ccoth(), ccsc(), ccsch(), cexp(), RealNumber::Cosine(), cpow(), csec(), csech(), csin(), csinh(), ctan(), ctanh(), and RealNumber::Secant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    88 \{\par
   89     double y[2],z=0.0;\par
   90     sword n, ix;\par
   91 \par
   92     /* High word of x. */\par
   93     GET_HIGH_WORD(ix,x);\par
   94 \par
   95     /* |x| ~< pi/4 */\par
   96     ix &= 0x7fffffff;\par
   97     if(ix <= 0x3fe921fb) return __kernel_cos(x,z);\par
   98 \par
   99     /* cos(Inf or NaN) is NaN */\par
  100     else if (ix>=0x7ff00000) return x-x;\par
  101 \par
  102     /* argument reduction needed */\par
  103     else \{\par
  104         n = rempio2(x,y);\par
  105         switch(n&3) \{\par
  106         case 0:\par
  107             return  __kernel_cos(y[0],y[1]);\par
  108         case 1:\par
  109             return -__kernel_sin(y[0],y[1],1);\par
  110         case 2:\par
  111             return -__kernel_cos(y[0],y[1]);\par
  112         default:\par
  113             return  __kernel_sin(y[0],y[1],1);\par
  114         \}\par
  115     \}\par
  116 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cos_8c_a5e7b53a694b3cf0f2d7debd444140fbd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cos_8c_a5e7b53a694b3cf0f2d7debd444140fbd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/cosh.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/cosh.c}
{\xe \v lib/real/cosh.c}
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cosh.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cosh_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cosh} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cosine function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b half} =0.5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b huge} = 1.0e300\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cosh\:cosh.c}
{\xe \v cosh.c\:cosh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double cosh (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic cosine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
mathematically cosh(x) if defined to be (exp(x)+exp(-x))/2
 1. Replace x by |x| (cosh(x) = cosh(-x)).
 2.
                                            [ exp(x) - 1 ]^2
     0        <= x <= ln2/2  :  cosh(x) := 1 + -------------------
                                   2*exp(x)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                                       exp(x) +  1/exp(x)
     ln2/2    <= x <= 22     :  cosh(x) := -------------------
                                  2
     22       <= x <= lnovft :  cosh(x) := exp(x)/2
     lnovft   <= x <= ln2ovft:  cosh(x) := exp(x/2)/2 * exp(x/2)
     ln2ovft  <  x      :  cosh(x) := huge*huge (overflow)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 cosh(x) is |x| if x is +INF, -INF, or NaN.
 only cosh(0)=1 is exact for finite x.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 84 of file cosh.c.}\par
{
References exp(), expm1(), half, huge, and one.}\par
{
Referenced by cchc(), cchsh(), ccot(), ccoth(), ccsc(), ccsch(), csec(), csech(), ctan(), ctanh(), RealNumber::HypCosine(), and RealNumber::HypSecant().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    85 \{\par
   86     double t,w;\par
   87     sword ix;\par
   88     uword lx;\par
   89 \par
   90     /* High word of |x|. */\par
   91     GET_HIGH_WORD(ix,x);\par
   92     ix &= 0x7fffffff;\par
   93 \par
   94     /* x is INF or NaN */\par
   95     if(ix>=0x7ff00000) return x*x;\par
   96 \par
   97     /* |x| in [0,0.5*ln2], return 1+expm1(|x|)^2/(2*exp(|x|)) */\par
   98     if(ix<0x3fd62e43) \{\par
   99         t = expm1(fabs(x));\par
  100         w = one+t;\par
  101         if (ix<0x3c800000) return w;    /* cosh(tiny) = 1 */\par
  102         return one+(t*t)/(w+w);\par
  103     \}\par
  104 \par
  105     /* |x| in [0.5*ln2,22], return (exp(|x|)+1/exp(|x|)/2; */\par
  106     if (ix < 0x40360000) \{\par
  107         t = exp(fabs(x));\par
  108         return half*t+half/t;\par
  109     \}\par
  110 \par
  111     /* |x| in [22, log(maxdouble)] return half*exp(|x|) */\par
  112     if (ix < 0x40862E42)  return half*exp(fabs(x));\par
  113 \par
  114     /* |x| in [log(maxdouble), overflowthresold] */\par
  115     lx = *( (((*(unsigned*)&one)>>29)) + (unsigned*)&x);\par
  116     if (ix<0x408633CE ||\par
  117             ((ix==0x408633ce)&&(lx<=(unsigned)0x8fb9f87d))) \{\par
  118         w = exp(half*fabs(x));\par
  119         t = half*w;\par
  120         return t*w;\par
  121     \}\par
  122 \par
  123     /* |x| > overflowthresold, cosh(x) overflow */\par
  124     return huge*huge;\par
  125 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cosh_8c_a3795d3c1f1d30819be56da4e4d67f64b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cosh_8c_a3795d3c1f1d30819be56da4e4d67f64b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v half\:cosh.c}
{\xe \v cosh.c\:half}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double half =0.5{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file cosh.c.}\par
{
Referenced by cosh().}\par
}
{\xe \v huge\:cosh.c}
{\xe \v cosh.c\:huge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double huge = 1.0e300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file cosh.c.}\par
{
Referenced by cosh().}\par
}
{\xe \v one\:cosh.c}
{\xe \v cosh.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file cosh.c.}\par
{
Referenced by cosh().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/erf.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/erf.c}
{\xe \v lib/real/erf.c}
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "fdlibm.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for erf.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "erf_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b erf} (double x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b erfc} (double x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b tiny} = 1e-300\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b half} = 5.00000000000000000000e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b one} = 1.00000000000000000000e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b two} = 2.00000000000000000000e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b erx} = 8.45062911510467529297e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b efx} = 1.28379167095512586316e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b efx8} = 1.02703333676410069053e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b pp0} = 1.28379167095512558561e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b pp1} = -3.25042107247001499370e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b pp2} = -2.84817495755985104766e-02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b pp3} = -5.77027029648944159157e-03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b pp4} = -2.37630166566501626084e-05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b qq1} = 3.97917223959155352819e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b qq2} = 6.50222499887672944485e-02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b qq3} = 5.08130628187576562776e-03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b qq4} = 1.32494738004321644526e-04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b qq5} = -3.96022827877536812320e-06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b pa0} = -2.36211856075265944077e-03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b pa1} = 4.14856118683748331666e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b pa2} = -3.72207876035701323847e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b pa3} = 3.18346619901161753674e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b pa4} = -1.10894694282396677476e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b pa5} = 3.54783043256182359371e-02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b pa6} = -2.16637559486879084300e-03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b qa1} = 1.06420880400844228286e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b qa2} = 5.40397917702171048937e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b qa3} = 7.18286544141962662868e-02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b qa4} = 1.26171219808761642112e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b qa5} = 1.36370839120290507362e-02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b qa6} = 1.19844998467991074170e-02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b ra0} = -9.86494403484714822705e-03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b ra1} = -6.93858572707181764372e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b ra2} = -1.05586262253232909814e+01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b ra3} = -6.23753324503260060396e+01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b ra4} = -1.62396669462573470355e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b ra5} = -1.84605092906711035994e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b ra6} = -8.12874355063065934246e+01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b ra7} = -9.81432934416914548592e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sa1} = 1.96512716674392571292e+01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sa2} = 1.37657754143519042600e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sa3} = 4.34565877475229228821e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sa4} = 6.45387271733267880336e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sa5} = 4.29008140027567833386e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sa6} = 1.08635005541779435134e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sa7} = 6.57024977031928170135e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sa8} = -6.04244152148580987438e-02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b rb0} = -9.86494292470009928597e-03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b rb1} = -7.99283237680523006574e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b rb2} = -1.77579549177547519889e+01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b rb3} = -1.60636384855821916062e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b rb4} = -6.37566443368389627722e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b rb5} = -1.02509513161107724954e+03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b rb6} = -4.83519191608651397019e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sb1} = 3.03380607434824582924e+01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sb2} = 3.25792512996573918826e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sb3} = 1.53672958608443695994e+03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sb4} = 3.19985821950859553908e+03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sb5} = 2.55305040643316442583e+03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sb6} = 4.74528541206955367215e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b sb7} = -2.24409524465858183362e+01\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v erf\:erf.c}
{\xe \v erf.c\:erf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double erf (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 224 of file erf.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   227 \{\par
  228     int hx,ix,i;\par
  229     double R,S,P,Q,s,y,z,r;\par
  230     hx = __HI(x);\par
  231     ix = hx&0x7fffffff;\par
  232     if(ix>=0x7ff00000) \{        /* erf(nan)=nan */\par
  233         i = ((unsigned)hx>>31)<<1;\par
  234         return (double)(1-i)+one/x; /* erf(+-inf)=+-1 */\par
  235     \}\par
  236 \par
  237     if(ix < 0x3feb0000) \{       /* |x|<0.84375 */\par
  238         if(ix < 0x3e300000) \{   /* |x|<2**-28 */\par
  239             if (ix < 0x00800000)\par
  240                 return 0.125*(8.0*x+efx8*x);  /*avoid underflow */\par
  241             return x + efx*x;\par
  242         \}\par
  243         z = x*x;\par
  244         r = pp0+z*(pp1+z*(pp2+z*(pp3+z*pp4)));\par
  245         s = one+z*(qq1+z*(qq2+z*(qq3+z*(qq4+z*qq5))));\par
  246         y = r/s;\par
  247         return x + x*y;\par
  248     \}\par
  249     if(ix < 0x3ff40000) \{       /* 0.84375 <= |x| < 1.25 */\par
  250         s = fabs(x)-one;\par
  251         P = pa0+s*(pa1+s*(pa2+s*(pa3+s*(pa4+s*(pa5+s*pa6)))));\par
  252         Q = one+s*(qa1+s*(qa2+s*(qa3+s*(qa4+s*(qa5+s*qa6)))));\par
  253         if(hx>=0) return erx + P/Q;\par
  254         else return -erx - P/Q;\par
  255     \}\par
  256     if (ix >= 0x40180000) \{     /* inf>|x|>=6 */\par
  257         if(hx>=0) return one-tiny;\par
  258         else return tiny-one;\par
  259     \}\par
  260     x = fabs(x);\par
  261     s = one/(x*x);\par
  262     if(ix< 0x4006DB6E) \{    /* |x| < 1/0.35 */\par
  263         R=ra0+s*(ra1+s*(ra2+s*(ra3+s*(ra4+s*(\par
  264                                           ra5+s*(ra6+s*ra7))))));\par
  265         S=one+s*(sa1+s*(sa2+s*(sa3+s*(sa4+s*(\par
  266                                           sa5+s*(sa6+s*(sa7+s*sa8)))))));\par
  267     \} else \{    /* |x| >= 1/0.35 */\par
  268         R=rb0+s*(rb1+s*(rb2+s*(rb3+s*(rb4+s*(\par
  269                                           rb5+s*rb6)))));\par
  270         S=one+s*(sb1+s*(sb2+s*(sb3+s*(sb4+s*(\par
  271                                           sb5+s*(sb6+s*sb7))))));\par
  272     \}\par
  273     z  = x;\par
  274     __LO(z) = 0;\par
  275     r  =  __ieee754_exp(-z*z-0.5625)*__ieee754_exp((z-x)*(z+x)+R/S);\par
  276     if(hx>=0) return one-r/x;\par
  277     else return  r/x-one;\par
  278 \}\par
}
}
{\xe \v erfc\:erf.c}
{\xe \v erf.c\:erfc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double erfc (double  {\i x})}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 283 of file erf.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   286 \{\par
  287     int hx,ix;\par
  288     double R,S,P,Q,s,y,z,r;\par
  289     hx = __HI(x);\par
  290     ix = hx&0x7fffffff;\par
  291     if(ix>=0x7ff00000) \{            /* erfc(nan)=nan */\par
  292         /* erfc(+-inf)=0,2 */\par
  293         return (double)(((unsigned)hx>>31)<<1)+one/x;\par
  294     \}\par
  295 \par
  296     if(ix < 0x3feb0000) \{       /* |x|<0.84375 */\par
  297         if(ix < 0x3c700000)     /* |x|<2**-56 */\par
  298             return one-x;\par
  299         z = x*x;\par
  300         r = pp0+z*(pp1+z*(pp2+z*(pp3+z*pp4)));\par
  301         s = one+z*(qq1+z*(qq2+z*(qq3+z*(qq4+z*qq5))));\par
  302         y = r/s;\par
  303         if(hx < 0x3fd00000) \{   /* x<1/4 */\par
  304             return one-(x+x*y);\par
  305         \} else \{\par
  306             r = x*y;\par
  307             r += (x-half);\par
  308             return half - r ;\par
  309         \}\par
  310     \}\par
  311     if(ix < 0x3ff40000) \{       /* 0.84375 <= |x| < 1.25 */\par
  312         s = fabs(x)-one;\par
  313         P = pa0+s*(pa1+s*(pa2+s*(pa3+s*(pa4+s*(pa5+s*pa6)))));\par
  314         Q = one+s*(qa1+s*(qa2+s*(qa3+s*(qa4+s*(qa5+s*qa6)))));\par
  315         if(hx>=0) \{\par
  316             z  = one-erx;\par
  317             return z - P/Q;\par
  318         \} else \{\par
  319             z = erx+P/Q;\par
  320             return one+z;\par
  321         \}\par
  322     \}\par
  323     if (ix < 0x403c0000) \{      /* |x|<28 */\par
  324         x = fabs(x);\par
  325         s = one/(x*x);\par
  326         if(ix< 0x4006DB6D) \{    /* |x| < 1/.35 ~ 2.857143*/\par
  327             R=ra0+s*(ra1+s*(ra2+s*(ra3+s*(ra4+s*(\par
  328                                               ra5+s*(ra6+s*ra7))))));\par
  329             S=one+s*(sa1+s*(sa2+s*(sa3+s*(sa4+s*(\par
  330                                               sa5+s*(sa6+s*(sa7+s*sa8)))))));\par
  331         \} else \{            /* |x| >= 1/.35 ~ 2.857143 */\par
  332             if(hx<0&&ix>=0x40180000) return two-tiny;/* x < -6 */\par
  333             R=rb0+s*(rb1+s*(rb2+s*(rb3+s*(rb4+s*(\par
  334                                               rb5+s*rb6)))));\par
  335             S=one+s*(sb1+s*(sb2+s*(sb3+s*(sb4+s*(\par
  336                                               sb5+s*(sb6+s*sb7))))));\par
  337         \}\par
  338         z  = x;\par
  339         __LO(z)  = 0;\par
  340         r  =  __ieee754_exp(-z*z-0.5625)*\par
  341               __ieee754_exp((z-x)*(z+x)+R/S);\par
  342         if(hx>0) return r/x;\par
  343         else return two-r/x;\par
  344     \} else \{\par
  345         if(hx>0) return tiny*tiny;\par
  346         else return two-tiny;\par
  347     \}\par
  348 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v efx\:erf.c}
{\xe \v erf.c\:efx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double efx = 1.28379167095512586316e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 156 of file erf.c.}\par
}
{\xe \v efx8\:erf.c}
{\xe \v erf.c\:efx8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double efx8 = 1.02703333676410069053e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 157 of file erf.c.}\par
}
{\xe \v erx\:erf.c}
{\xe \v erf.c\:erx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double erx = 8.45062911510467529297e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 152 of file erf.c.}\par
}
{\xe \v half\:erf.c}
{\xe \v erf.c\:half}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double half = 5.00000000000000000000e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file erf.c.}\par
}
{\xe \v one\:erf.c}
{\xe \v erf.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double one = 1.00000000000000000000e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 149 of file erf.c.}\par
}
{\xe \v pa0\:erf.c}
{\xe \v erf.c\:pa0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pa0 = -2.36211856075265944077e-03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 171 of file erf.c.}\par
}
{\xe \v pa1\:erf.c}
{\xe \v erf.c\:pa1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pa1 = 4.14856118683748331666e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 172 of file erf.c.}\par
}
{\xe \v pa2\:erf.c}
{\xe \v erf.c\:pa2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pa2 = -3.72207876035701323847e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 173 of file erf.c.}\par
}
{\xe \v pa3\:erf.c}
{\xe \v erf.c\:pa3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pa3 = 3.18346619901161753674e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 174 of file erf.c.}\par
}
{\xe \v pa4\:erf.c}
{\xe \v erf.c\:pa4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pa4 = -1.10894694282396677476e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 175 of file erf.c.}\par
}
{\xe \v pa5\:erf.c}
{\xe \v erf.c\:pa5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pa5 = 3.54783043256182359371e-02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 176 of file erf.c.}\par
}
{\xe \v pa6\:erf.c}
{\xe \v erf.c\:pa6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pa6 = -2.16637559486879084300e-03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 177 of file erf.c.}\par
}
{\xe \v pp0\:erf.c}
{\xe \v erf.c\:pp0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pp0 = 1.28379167095512558561e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 158 of file erf.c.}\par
}
{\xe \v pp1\:erf.c}
{\xe \v erf.c\:pp1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pp1 = -3.25042107247001499370e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 159 of file erf.c.}\par
}
{\xe \v pp2\:erf.c}
{\xe \v erf.c\:pp2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pp2 = -2.84817495755985104766e-02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 160 of file erf.c.}\par
}
{\xe \v pp3\:erf.c}
{\xe \v erf.c\:pp3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pp3 = -5.77027029648944159157e-03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 161 of file erf.c.}\par
}
{\xe \v pp4\:erf.c}
{\xe \v erf.c\:pp4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pp4 = -2.37630166566501626084e-05{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 162 of file erf.c.}\par
}
{\xe \v qa1\:erf.c}
{\xe \v erf.c\:qa1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double qa1 = 1.06420880400844228286e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 178 of file erf.c.}\par
}
{\xe \v qa2\:erf.c}
{\xe \v erf.c\:qa2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double qa2 = 5.40397917702171048937e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 179 of file erf.c.}\par
}
{\xe \v qa3\:erf.c}
{\xe \v erf.c\:qa3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double qa3 = 7.18286544141962662868e-02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 180 of file erf.c.}\par
}
{\xe \v qa4\:erf.c}
{\xe \v erf.c\:qa4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double qa4 = 1.26171219808761642112e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 181 of file erf.c.}\par
}
{\xe \v qa5\:erf.c}
{\xe \v erf.c\:qa5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double qa5 = 1.36370839120290507362e-02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 182 of file erf.c.}\par
}
{\xe \v qa6\:erf.c}
{\xe \v erf.c\:qa6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double qa6 = 1.19844998467991074170e-02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 183 of file erf.c.}\par
}
{\xe \v qq1\:erf.c}
{\xe \v erf.c\:qq1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double qq1 = 3.97917223959155352819e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 163 of file erf.c.}\par
}
{\xe \v qq2\:erf.c}
{\xe \v erf.c\:qq2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double qq2 = 6.50222499887672944485e-02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 164 of file erf.c.}\par
}
{\xe \v qq3\:erf.c}
{\xe \v erf.c\:qq3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double qq3 = 5.08130628187576562776e-03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 165 of file erf.c.}\par
}
{\xe \v qq4\:erf.c}
{\xe \v erf.c\:qq4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double qq4 = 1.32494738004321644526e-04{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 166 of file erf.c.}\par
}
{\xe \v qq5\:erf.c}
{\xe \v erf.c\:qq5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double qq5 = -3.96022827877536812320e-06{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 167 of file erf.c.}\par
}
{\xe \v ra0\:erf.c}
{\xe \v erf.c\:ra0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ra0 = -9.86494403484714822705e-03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 187 of file erf.c.}\par
}
{\xe \v ra1\:erf.c}
{\xe \v erf.c\:ra1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ra1 = -6.93858572707181764372e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 188 of file erf.c.}\par
}
{\xe \v ra2\:erf.c}
{\xe \v erf.c\:ra2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ra2 = -1.05586262253232909814e+01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 189 of file erf.c.}\par
}
{\xe \v ra3\:erf.c}
{\xe \v erf.c\:ra3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ra3 = -6.23753324503260060396e+01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 190 of file erf.c.}\par
}
{\xe \v ra4\:erf.c}
{\xe \v erf.c\:ra4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ra4 = -1.62396669462573470355e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 191 of file erf.c.}\par
}
{\xe \v ra5\:erf.c}
{\xe \v erf.c\:ra5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ra5 = -1.84605092906711035994e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 192 of file erf.c.}\par
}
{\xe \v ra6\:erf.c}
{\xe \v erf.c\:ra6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ra6 = -8.12874355063065934246e+01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 193 of file erf.c.}\par
}
{\xe \v ra7\:erf.c}
{\xe \v erf.c\:ra7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ra7 = -9.81432934416914548592e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 194 of file erf.c.}\par
}
{\xe \v rb0\:erf.c}
{\xe \v erf.c\:rb0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rb0 = -9.86494292470009928597e-03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 206 of file erf.c.}\par
}
{\xe \v rb1\:erf.c}
{\xe \v erf.c\:rb1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rb1 = -7.99283237680523006574e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 207 of file erf.c.}\par
}
{\xe \v rb2\:erf.c}
{\xe \v erf.c\:rb2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rb2 = -1.77579549177547519889e+01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 208 of file erf.c.}\par
}
{\xe \v rb3\:erf.c}
{\xe \v erf.c\:rb3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rb3 = -1.60636384855821916062e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 209 of file erf.c.}\par
}
{\xe \v rb4\:erf.c}
{\xe \v erf.c\:rb4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rb4 = -6.37566443368389627722e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 210 of file erf.c.}\par
}
{\xe \v rb5\:erf.c}
{\xe \v erf.c\:rb5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rb5 = -1.02509513161107724954e+03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 211 of file erf.c.}\par
}
{\xe \v rb6\:erf.c}
{\xe \v erf.c\:rb6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rb6 = -4.83519191608651397019e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 212 of file erf.c.}\par
}
{\xe \v sa1\:erf.c}
{\xe \v erf.c\:sa1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sa1 = 1.96512716674392571292e+01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 195 of file erf.c.}\par
}
{\xe \v sa2\:erf.c}
{\xe \v erf.c\:sa2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sa2 = 1.37657754143519042600e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 196 of file erf.c.}\par
}
{\xe \v sa3\:erf.c}
{\xe \v erf.c\:sa3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sa3 = 4.34565877475229228821e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 197 of file erf.c.}\par
}
{\xe \v sa4\:erf.c}
{\xe \v erf.c\:sa4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sa4 = 6.45387271733267880336e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 198 of file erf.c.}\par
}
{\xe \v sa5\:erf.c}
{\xe \v erf.c\:sa5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sa5 = 4.29008140027567833386e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 199 of file erf.c.}\par
}
{\xe \v sa6\:erf.c}
{\xe \v erf.c\:sa6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sa6 = 1.08635005541779435134e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 200 of file erf.c.}\par
}
{\xe \v sa7\:erf.c}
{\xe \v erf.c\:sa7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sa7 = 6.57024977031928170135e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 201 of file erf.c.}\par
}
{\xe \v sa8\:erf.c}
{\xe \v erf.c\:sa8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sa8 = -6.04244152148580987438e-02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 202 of file erf.c.}\par
}
{\xe \v sb1\:erf.c}
{\xe \v erf.c\:sb1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sb1 = 3.03380607434824582924e+01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 213 of file erf.c.}\par
}
{\xe \v sb2\:erf.c}
{\xe \v erf.c\:sb2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sb2 = 3.25792512996573918826e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 214 of file erf.c.}\par
}
{\xe \v sb3\:erf.c}
{\xe \v erf.c\:sb3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sb3 = 1.53672958608443695994e+03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 215 of file erf.c.}\par
}
{\xe \v sb4\:erf.c}
{\xe \v erf.c\:sb4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sb4 = 3.19985821950859553908e+03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 216 of file erf.c.}\par
}
{\xe \v sb5\:erf.c}
{\xe \v erf.c\:sb5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sb5 = 2.55305040643316442583e+03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 217 of file erf.c.}\par
}
{\xe \v sb6\:erf.c}
{\xe \v erf.c\:sb6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sb6 = 4.74528541206955367215e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 218 of file erf.c.}\par
}
{\xe \v sb7\:erf.c}
{\xe \v erf.c\:sb7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sb7 = -2.24409524465858183362e+01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 219 of file erf.c.}\par
}
{\xe \v tiny\:erf.c}
{\xe \v erf.c\:tiny}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double tiny = 1e-300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 147 of file erf.c.}\par
}
{\xe \v two\:erf.c}
{\xe \v erf.c\:two}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double two = 2.00000000000000000000e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 150 of file erf.c.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/exp.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/exp.c}
{\xe \v lib/real/exp.c}
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for exp.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "exp_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b exp} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the exponential of x. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b halF} [2] = \{0.5,-0.5,\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b huge} = 1.0e+300\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b twom1000} = 9.33263618503218878990e-302\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b o_threshold} = 7.09782712893383973096e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b u_threshold} = -7.45133219101941108420e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ln2HI} [2]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ln2LO} [2]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b invln2} = 1.44269504088896338700e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b P1} = 1.66666666666666019037e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b P2} = -2.77777777770155933842e-03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b P3} = 6.61375632143793436117e-05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b P4} = -1.65339022054652515390e-06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b P5} = 4.13813679705723846039e-08\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v exp\:exp.c}
{\xe \v exp.c\:exp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double exp (double  {\i x})}}
\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the exponential of x. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.6 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 04/04/22\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method
  1. Argument reduction:
     Reduce x to an r so that |r| <= 0.5*ln2 ~ 0.34658.
 Given x, find r and integer k such that\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid               x = k*ln2 + r,  |r| <= 0.5*ln2.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid      Here r will be represented as r = hi-lo for better
 accuracy.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   2. Approximation of exp(r) by a special rational function on
 the interval [0,0.34658]:
 Write
     R(r**2) = r*(exp(r)+1)/(exp(r)-1) = 2 + r*r/6 - r**4/360 + ...
     We use a special Remes algorithm on [0,0.34658] to generate
    a polynomial of degree 5 to approximate R. The maximum error
 of this polynomial approximation is bounded by 2**-59. In
 other words,
     R(z) ~ 2.0 + P1*z + P2*z**2 + P3*z**3 + P4*z**4 + P5*z**5
    (where z=r*r, and the values of P1 to P5 are listed below)
 and
     |                  5          |     -59
     | 2.0+P1*z+...+P5*z   -  R(z) | <= 2
     |                             |
 The computation of exp(r) thus becomes
                            2*r
    exp(r) = 1 + -------
                  R - r
                                r*R1(r)
           = 1 + r + ----------- (for better accuracy)
                      2 - R1(r)
 where
                 2       4             10
    R1(r) = r - (P1*r  + P2*r  + ... + P5*r   ).\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   3. Scale back to obtain exp(x):
 From step 1, we have
    exp(x) = 2^k * exp(r)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 exp(INF) is INF, exp(NaN) is NaN;
 exp(-INF) is 0, and
 for finite argument, only exp(0)=1 is exact.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Accuracy:
 according to an error analysis, the error is always less than
 1 ulp (unit in the last place).\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Misc. info.
 For IEEE double
     if x >  7.09782712893383973096e+02 then exp(x) overflow
     if x < -7.45133219101941108420e+02 then exp(x) underflow\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constants:
The hexadecimal values are the intended ones for the following
constants. The decimal values may be used, provided that the
compiler will convert from decimal to binary accurately enough
to produce the hexadecimal values shown.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 134 of file exp.c.}\par
{
References halF, huge, invln2, ln2HI, ln2LO, o_threshold, one, P1, P2, P3, P4, P5, twom1000, and u_threshold.}\par
{
Referenced by cchsh(), cexp(), cosh(), cpow(), and sinh().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   135 \{\par
  136     double y,hi,lo,c,t;\par
  137     sword k,xsb;\par
  138     uword hx;\par
  139 \par
  140     lo = 0.0;\par
  141     hi = 0.0;\par
  142 \par
  143     GET_HIGH_WORD(hx,x);    /* high word of x */\par
  144     xsb = (hx>>31)&1;       /* sign bit of x */\par
  145     hx &= 0x7fffffff;       /* high word of |x| */\par
  146 \par
  147     /* filter out non-finite argument */\par
  148     if(hx >= 0x40862E42) \{          /* if |x|>=709.78... */\par
  149         if(hx>=0x7ff00000) \{\par
  150             uword lx;\par
  151             GET_LOW_WORD(lx,x);\par
  152             if(((hx&0xfffff)|lx)!=0)\par
  153                 return x+x;             /* NaN */\par
  154             else return (xsb==0)? x:0.0;    /* exp(+-inf)=\{inf,0\} */\par
  155         \}\par
  156         if(x > o_threshold) return huge*huge; /* overflow */\par
  157         if(x < u_threshold) return twom1000*twom1000; /* underflow */\par
  158     \}\par
  159 \par
  160     /* argument reduction */\par
  161     if(hx > 0x3fd62e42) \{       /* if  |x| > 0.5 ln2 */\par
  162         if(hx < 0x3FF0A2B2) \{       /* and |x| < 1.5 ln2 */\par
  163             hi = x-ln2HI[xsb];\par
  164             lo=ln2LO[xsb];\par
  165             k = 1-xsb-xsb;\par
  166         \} else \{\par
  167             k  = (sword)(invln2*x+halF[xsb]);\par
  168             t  = k;\par
  169             hi = x - t*ln2HI[0];    /* t*ln2HI is exact here */\par
  170             lo = t*ln2LO[0];\par
  171         \}\par
  172         x  = hi - lo;\par
  173     \}\par
  174     else if(hx < 0x3e300000)  \{     /* when |x|<2**-28 */\par
  175         if(huge+x>one) \{\par
  176             return one+x;   /* trigger inexact */\par
  177         \} else \{\par
  178             k = 0;\par
  179         \}\par
  180     \}\par
  181     else k = 0;\par
  182 \par
  183     /* x is now in primary range */\par
  184     t  = x*x;\par
  185     c  = x - t*(P1+t*(P2+t*(P3+t*(P4+t*P5))));\par
  186     if(k==0)    return one-((x*c)/(c-2.0)-x);\par
  187     else        y = one-((lo-(x*c)/(2.0-c))-hi);\par
  188     if(k >= -1021) \{\par
  189         uword hy;\par
  190         GET_HIGH_WORD(hy, y);\par
  191         SET_HIGH_WORD(y, hy + (k<<20)); /* add k to y's exponent */\par
  192         return y;\par
  193     \} else \{\par
  194         uword hy;\par
  195         GET_HIGH_WORD(hy, y);\par
  196         SET_HIGH_WORD(y, hy + ((k+1000)<<20));/* add k to y's exponent */\par
  197         return y*twom1000;\par
  198     \}\par
  199 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "exp_8c_ae09128febbbe6372cde4fa0c65608a42_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v halF\:exp.c}
{\xe \v exp.c\:halF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double halF[2] = \{0.5,-0.5,\}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file exp.c.}\par
{
Referenced by exp().}\par
}
{\xe \v huge\:exp.c}
{\xe \v exp.c\:huge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double huge = 1.0e+300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file exp.c.}\par
{
Referenced by exp().}\par
}
{\xe \v invln2\:exp.c}
{\xe \v exp.c\:invln2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double invln2 = 1.44269504088896338700e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file exp.c.}\par
{
Referenced by exp().}\par
}
{\xe \v ln2HI\:exp.c}
{\xe \v exp.c\:ln2HI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ln2HI[2]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\{ 6.93147180369123816490e-01,  \par
         -6.93147180369123816490e-01,\}\par
}
{
Definition at line 52 of file exp.c.}\par
{
Referenced by exp().}\par
}
{\xe \v ln2LO\:exp.c}
{\xe \v exp.c\:ln2LO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ln2LO[2]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\{ 1.90821492927058770002e-10,  \par
         -1.90821492927058770002e-10,\}\par
}
{
Definition at line 54 of file exp.c.}\par
{
Referenced by exp().}\par
}
{\xe \v o_threshold\:exp.c}
{\xe \v exp.c\:o_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double o_threshold = 7.09782712893383973096e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file exp.c.}\par
{
Referenced by exp().}\par
}
{\xe \v one\:exp.c}
{\xe \v exp.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file exp.c.}\par
{
Referenced by exp().}\par
}
{\xe \v P1\:exp.c}
{\xe \v exp.c\:P1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double P1 = 1.66666666666666019037e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file exp.c.}\par
{
Referenced by exp().}\par
}
{\xe \v P2\:exp.c}
{\xe \v exp.c\:P2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double P2 = -2.77777777770155933842e-03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file exp.c.}\par
{
Referenced by exp().}\par
}
{\xe \v P3\:exp.c}
{\xe \v exp.c\:P3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double P3 = 6.61375632143793436117e-05{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file exp.c.}\par
{
Referenced by exp().}\par
}
{\xe \v P4\:exp.c}
{\xe \v exp.c\:P4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double P4 = -1.65339022054652515390e-06{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file exp.c.}\par
{
Referenced by exp().}\par
}
{\xe \v P5\:exp.c}
{\xe \v exp.c\:P5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double P5 = 4.13813679705723846039e-08{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file exp.c.}\par
{
Referenced by exp().}\par
}
{\xe \v twom1000\:exp.c}
{\xe \v exp.c\:twom1000}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double twom1000 = 9.33263618503218878990e-302{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file exp.c.}\par
{
Referenced by exp().}\par
}
{\xe \v u_threshold\:exp.c}
{\xe \v exp.c\:u_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double u_threshold = -7.45133219101941108420e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file exp.c.}\par
{
Referenced by exp().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/expm1.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/expm1.c}
{\xe \v lib/real/expm1.c}
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for expm1.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "expm1_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b expm1} (double x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b huge} = 1.0e+300\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b tiny} = 1.0e-300\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b o_threshold} = 7.09782712893383973096e+02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ln2_hi} = 6.93147180369123816490e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ln2_lo} = 1.90821492927058770002e-10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b invln2} = 1.44269504088896338700e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Q1} = -3.33333333333331316428e-02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Q2} = 1.58730158725481460165e-03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Q3} = -7.93650757867487942473e-05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Q4} = 4.00821782732936239552e-06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Q5} = -2.01099218183624371326e-07\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v expm1\:expm1.c}
{\xe \v expm1.c\:expm1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double expm1 (double  {\i x})}}
\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 156 of file expm1.c.}\par
{
References huge, invln2, ln2_hi, ln2_lo, o_threshold, one, Q1, Q2, Q3, Q4, Q5, and tiny.}\par
{
Referenced by cosh(), sinh(), and tanh().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   157 \{\par
  158     double y,hi,lo,c,t,e,hxs,hfx,r1;\par
  159     sword k,xsb;\par
  160     uword hx;\par
  161 \par
  162     c = 0.0;\par
  163 \par
  164     GET_HIGH_WORD(hx,x); /* high word of x */\par
  165     xsb = hx&0x80000000;        /* sign bit of x */\par
  166     if(xsb==0) y=x;\par
  167     else y= -x; /* y = |x| */\par
  168     hx &= 0x7fffffff;       /* high word of |x| */\par
  169 \par
  170     /* filter out huge and non-finite argument */\par
  171     if(hx >= 0x4043687A) \{          /* if |x|>=56*ln2 */\par
  172         if(hx >= 0x40862E42) \{      /* if |x|>=709.78... */\par
  173             if(hx>=0x7ff00000) \{\par
  174                 uword low;\par
  175                 GET_LOW_WORD(low,x);\par
  176                 if(((hx&0xfffff)|low)!=0)\par
  177                     return x+x;      /* NaN */\par
  178                 else return (xsb==0)? x:-1.0;/* exp(+-inf)=\{inf,-1\} */\par
  179             \}\par
  180             if(x > o_threshold) return huge*huge; /* overflow */\par
  181         \}\par
  182         if(xsb!=0) \{ /* x < -56*ln2, return -1.0 with inexact */\par
  183             if(x+tiny<0.0)      /* raise inexact */\par
  184                 return tiny-one;    /* return -1 */\par
  185         \}\par
  186     \}\par
  187 \par
  188     /* argument reduction */\par
  189     if(hx > 0x3fd62e42) \{       /* if  |x| > 0.5 ln2 */\par
  190         if(hx < 0x3FF0A2B2) \{   /* and |x| < 1.5 ln2 */\par
  191             if(xsb==0)\par
  192             \{\par
  193                 hi = x - ln2_hi;\par
  194                 lo =  ln2_lo;\par
  195                 k =  1;\par
  196             \}\par
  197             else\par
  198             \{\par
  199                 hi = x + ln2_hi;\par
  200                 lo = -ln2_lo;\par
  201                 k = -1;\par
  202             \}\par
  203         \} else \{\par
  204             k  = (sword)(invln2*x+((xsb==0)?0.5:-0.5));\par
  205             t  = k;\par
  206             hi = x - t*ln2_hi;  /* t*ln2_hi is exact here */\par
  207             lo = t*ln2_lo;\par
  208         \}\par
  209         x  = hi - lo;\par
  210         c  = (hi-x)-lo;\par
  211     \}\par
  212     else if(hx < 0x3c900000) \{      /* when |x|<2**-54, return x */\par
  213         t = huge+x; /* return x with inexact flags when x!=0 */\par
  214         return x - (t-(huge+x));\par
  215     \}\par
  216     else k = 0;\par
  217 \par
  218     /* x is now in primary range */\par
  219     hfx = 0.5*x;\par
  220     hxs = x*hfx;\par
  221     r1 = one+hxs*(Q1+hxs*(Q2+hxs*(Q3+hxs*(Q4+hxs*Q5))));\par
  222     t  = 3.0-r1*hfx;\par
  223     e  = hxs*((r1-t)/(6.0 - x*t));\par
  224     if(k==0) return x - (x*e-hxs);      /* c is 0 */\par
  225     else \{\par
  226         e  = (x*(e-c)-c);\par
  227         e -= hxs;\par
  228         if(k== -1) return 0.5*(x-e)-0.5;\par
  229         if(k==1) \{\par
  230             if(x < -0.25) return -2.0*(e-(x+0.5));\par
  231             else          return  one+2.0*(x-e);\par
  232         \}\par
  233         if (k <= -2 || k>56) \{   /* suffice to return exp(x)-1 */\par
  234             uword hy;\par
  235 \par
  236             y = one-(e-x);\par
  237             GET_HIGH_WORD(hy,y);\par
  238             SET_HIGH_WORD(y, hy + (k<<20)); /* add k to y's exponent */\par
  239             return y-one;\par
  240         \}\par
  241         t = one;\par
  242         if(k<20) \{\par
  243             uword hy;\par
  244 \par
  245             SET_HIGH_WORD(t, 0x3ff00000 - (0x200000>>k));  /* t=1-2^-k */\par
  246             y = t-(e-x);\par
  247             GET_HIGH_WORD(hy, y);\par
  248             SET_HIGH_WORD(y, hy + (k<<20)); /* add k to y's exponent */\par
  249         \} else \{\par
  250             uword hy;\par
  251 \par
  252             SET_HIGH_WORD(t, (0x3ff-k)<<20);    /* 2^-k */\par
  253             y = x-(e+t);\par
  254             y += one;\par
  255             GET_HIGH_WORD(hy, y);\par
  256             SET_HIGH_WORD(y, hy + (k<<20)); /* add k to y's exponent */\par
  257         \}\par
  258     \}\par
  259     return y;\par
  260 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "expm1_8c_ae4963ac40f96d4b1fe8af1b1e90a20bb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v huge\:expm1.c}
{\xe \v expm1.c\:huge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double huge = 1.0e+300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 143 of file expm1.c.}\par
{
Referenced by expm1().}\par
}
{\xe \v invln2\:expm1.c}
{\xe \v expm1.c\:invln2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double invln2 = 1.44269504088896338700e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file expm1.c.}\par
{
Referenced by expm1().}\par
}
{\xe \v ln2_hi\:expm1.c}
{\xe \v expm1.c\:ln2_hi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ln2_hi = 6.93147180369123816490e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 146 of file expm1.c.}\par
{
Referenced by expm1().}\par
}
{\xe \v ln2_lo\:expm1.c}
{\xe \v expm1.c\:ln2_lo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ln2_lo = 1.90821492927058770002e-10{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 147 of file expm1.c.}\par
{
Referenced by expm1().}\par
}
{\xe \v o_threshold\:expm1.c}
{\xe \v expm1.c\:o_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double o_threshold = 7.09782712893383973096e+02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 145 of file expm1.c.}\par
{
Referenced by expm1().}\par
}
{\xe \v one\:expm1.c}
{\xe \v expm1.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 142 of file expm1.c.}\par
{
Referenced by expm1().}\par
}
{\xe \v Q1\:expm1.c}
{\xe \v expm1.c\:Q1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Q1 = -3.33333333333331316428e-02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 150 of file expm1.c.}\par
{
Referenced by expm1().}\par
}
{\xe \v Q2\:expm1.c}
{\xe \v expm1.c\:Q2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Q2 = 1.58730158725481460165e-03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 151 of file expm1.c.}\par
{
Referenced by expm1().}\par
}
{\xe \v Q3\:expm1.c}
{\xe \v expm1.c\:Q3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Q3 = -7.93650757867487942473e-05{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 152 of file expm1.c.}\par
{
Referenced by expm1().}\par
}
{\xe \v Q4\:expm1.c}
{\xe \v expm1.c\:Q4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Q4 = 4.00821782732936239552e-06{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 153 of file expm1.c.}\par
{
Referenced by expm1().}\par
}
{\xe \v Q5\:expm1.c}
{\xe \v expm1.c\:Q5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Q5 = -2.01099218183624371326e-07{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 154 of file expm1.c.}\par
{
Referenced by expm1().}\par
}
{\xe \v tiny\:expm1.c}
{\xe \v expm1.c\:tiny}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double tiny = 1.0e-300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 144 of file expm1.c.}\par
{
Referenced by expm1().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/fabs.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/fabs.c}
{\xe \v lib/real/fabs.c}
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for fabs.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "fabs_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fabs} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the absolute value of x. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fabs\:fabs.c}
{\xe \v fabs.c\:fabs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fabs (double  {\i x})}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the absolute value of x. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18 \par
}}{
Definition at line 51 of file fabs.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    52 \{\par
   53     uword hx;\par
   54     GET_HIGH_WORD(hx,x);\par
   55     SET_HIGH_WORD(x, hx & 0x7fffffff);\par
   56     return x;\par
   57 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/finite.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/finite.c}
{\xe \v lib/real/finite.c}
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for finite.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "finite_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b finite} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finite or infinite number. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v finite\:finite.c}
{\xe \v finite.c\:finite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int finite (double  {\i x})}}
\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finite or infinite number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}finite(x) returns 1 is x is finite, else 0. NOTICE: No branching! \par
}{
Definition at line 53 of file finite.c.}\par
{
Referenced by PositionalNumeralSystem::GetText(), and RealNumber::IsFinite().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    54 \{\par
   55     uword hx;\par
   56     GET_HIGH_WORD(hx,x);\par
   57     return (unsigned)((hx&0x7fffffff)-0x7ff00000)>>31;\par
   58 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "finite_8c_a08e754462e6ec13bc05fd41cff9cdd4a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/floor.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/floor.c}
{\xe \v lib/real/floor.c}
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for floor.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "floor_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b floor} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical floor function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b huge} = 1.0e300\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v floor\:floor.c}
{\xe \v floor.c\:floor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double floor (double  {\i x})}}
\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mathematical floor function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Return x rounded toward -inf to integral value
Method:
 Bit twiddling.
Exception:
 Inexact flag raised if x not equal to floor(x).
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 66 of file floor.c.}\par
{
References huge.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    67 \{\par
   68     sword i0,i1,j0;\par
   69     uword i,j;\par
   70     EXTRACT_WORDS(i0,i1,x);\par
   71     j0 = ((i0>>20)&0x7ff)-0x3ff;\par
   72     if(j0<20) \{\par
   73         if(j0<0) \{  /* raise inexact if x != 0 */\par
   74             if(huge+x>0.0) \{/* return 0*sign(x) if |x|<1 */\par
   75                 if(i0>=0) \{\par
   76                     i0=i1=0;\par
   77                 \}\par
   78                 else if(((i0&0x7fffffff)|i1)!=0)\par
   79                 \{\par
   80                     i0=0xbff00000;\par
   81                     i1=0;\par
   82                 \}\par
   83             \}\par
   84         \} else \{\par
   85             i = (0x000fffff)>>j0;\par
   86             if(((i0&i)|i1)==0) return x; /* x is integral */\par
   87             if(huge+x>0.0) \{    /* raise inexact flag */\par
   88                 if(i0<0) i0 += (0x00100000)>>j0;\par
   89                 i0 &= (~i);\par
   90                 i1=0;\par
   91             \}\par
   92         \}\par
   93     \} else if (j0>51) \{\par
   94         if(j0==0x400) return x+x;   /* inf or NaN */\par
   95         else return x;      /* x is integral */\par
   96     \} else \{\par
   97         i = ((uword)(0xffffffff))>>(j0-20);\par
   98         if((i1&i)==0) return x; /* x is integral */\par
   99         if(huge+x>0.0) \{        /* raise inexact flag */\par
  100             if(i0<0) \{\par
  101                 if(j0==20) i0+=1;\par
  102                 else \{\par
  103                     j = i1+(1<<(52-j0));\par
  104                     if(j<(uword)i1) i0 +=1 ;    /* got a carry */\par
  105                     i1=j;\par
  106                 \}\par
  107             \}\par
  108             i1 &= (~i);\par
  109         \}\par
  110     \}\par
  111     INSERT_WORDS(x,i0,i1);\par
  112     return x;\par
  113 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v huge\:floor.c}
{\xe \v floor.c\:huge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double huge = 1.0e300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file floor.c.}\par
{
Referenced by floor().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/fmod.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/fmod.c}
{\xe \v lib/real/fmod.c}
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for fmod.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "fmod_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fmod} (double x, double y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return x mod y in exact arithmetic. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Zero} [] = \{0.0, -0.0,\}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fmod\:fmod.c}
{\xe \v fmod.c\:fmod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fmod (double  {\i x}, double  {\i y})}}
\par
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return x mod y in exact arithmetic. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}Method: shift and subtract \par
}{
Definition at line 58 of file fmod.c.}\par
{
References one, and Zero.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    59 \{\par
   60     sword n,hx,hy,hz,ix,iy,sx,i;\par
   61     uword lx,ly,lz;\par
   62 \par
   63     EXTRACT_WORDS(hx,lx,x);\par
   64     EXTRACT_WORDS(hy,ly,y);\par
   65     sx = hx&0x80000000;     /* sign of x */\par
   66     hx ^=sx;        /* |x| */\par
   67     hy &= 0x7fffffff;   /* |y| */\par
   68 \par
   69     /* purge off exception values */\par
   70     if((hy|ly)==0||(hx>=0x7ff00000)||   /* y=0,or x not finite */\par
   71             ((hy|((ly|-ly)>>31))>0x7ff00000))   /* or y is NaN */\par
   72         return (x*y)/(x*y);\par
   73     if(hx<=hy) \{\par
   74         if((hx<hy)||(lx<ly)) return x;  /* |x|<|y| return x */\par
   75         if(lx==ly)\par
   76             return Zero[(uword)sx>>31]; /* |x|=|y| return x*0*/\par
   77     \}\par
   78 \par
   79     /* determine ix = ilogb(x) */\par
   80     if(hx<0x00100000) \{ /* subnormal x */\par
   81         if(hx==0) \{\par
   82             for (ix = -1043, i=lx; i>0; i<<=1) ix -=1;\par
   83         \} else \{\par
   84             for (ix = -1022,i=(hx<<11); i>0; i<<=1) ix -=1;\par
   85         \}\par
   86     \} else ix = (hx>>20)-1023;\par
   87 \par
   88     /* determine iy = ilogb(y) */\par
   89     if(hy<0x00100000) \{ /* subnormal y */\par
   90         if(hy==0) \{\par
   91             for (iy = -1043, i=ly; i>0; i<<=1) iy -=1;\par
   92         \} else \{\par
   93             for (iy = -1022,i=(hy<<11); i>0; i<<=1) iy -=1;\par
   94         \}\par
   95     \} else iy = (hy>>20)-1023;\par
   96 \par
   97     /* set up \{hx,lx\}, \{hy,ly\} and align y to x */\par
   98     if(ix >= -1022)\par
   99         hx = 0x00100000|(0x000fffff&hx);\par
  100     else \{      /* subnormal x, shift x to normal */\par
  101         n = -1022-ix;\par
  102         if(n<=31) \{\par
  103             hx = (hx<<n)|(lx>>(32-n));\par
  104             lx <<= n;\par
  105         \} else \{\par
  106             hx = lx<<(n-32);\par
  107             lx = 0;\par
  108         \}\par
  109     \}\par
  110     if(iy >= -1022)\par
  111         hy = 0x00100000|(0x000fffff&hy);\par
  112     else \{      /* subnormal y, shift y to normal */\par
  113         n = -1022-iy;\par
  114         if(n<=31) \{\par
  115             hy = (hy<<n)|(ly>>(32-n));\par
  116             ly <<= n;\par
  117         \} else \{\par
  118             hy = ly<<(n-32);\par
  119             ly = 0;\par
  120         \}\par
  121     \}\par
  122 \par
  123     /* fix point fmod */\par
  124     n = ix - iy;\par
  125     while(n--) \{\par
  126         hz=hx-hy;\par
  127         lz=lx-ly;\par
  128         if(lx<ly) hz -= 1;\par
  129         if(hz<0) \{\par
  130             hx = hx+hx+(lx>>31);\par
  131             lx = lx+lx;\par
  132         \}\par
  133         else \{\par
  134             if((hz|lz)==0)      /* return sign(x)*0 */\par
  135                 return Zero[(uword)sx>>31];\par
  136             hx = hz+hz+(lz>>31);\par
  137             lx = lz+lz;\par
  138         \}\par
  139     \}\par
  140     hz=hx-hy;\par
  141     lz=lx-ly;\par
  142     if(lx<ly) hz -= 1;\par
  143     if(hz>=0) \{\par
  144         hx=hz;\par
  145         lx=lz;\par
  146     \}\par
  147 \par
  148     /* convert back to floating value and restore the sign */\par
  149     if((hx|lx)==0)          /* return sign(x)*0 */\par
  150         return Zero[(unsigned)sx>>31];\par
  151     while(hx<0x00100000) \{      /* normalize x */\par
  152         hx = hx+hx+(lx>>31);\par
  153         lx = lx+lx;\par
  154         iy -= 1;\par
  155     \}\par
  156     if(iy>= -1022) \{    /* normalize output */\par
  157         hx = ((hx-0x00100000)|((iy+1023)<<20));\par
  158         INSERT_WORDS(x,hx|sx,lx);\par
  159     \} else \{        /* subnormal output */\par
  160         n = -1022 - iy;\par
  161         if(n<=20) \{\par
  162             lx = (lx>>n)|((uword)hx<<(32-n));\par
  163             hx >>= n;\par
  164         \} else if (n<=31) \{\par
  165             lx = (hx<<(32-n))|(lx>>n);\par
  166             hx = sx;\par
  167         \} else \{\par
  168             lx = hx>>(n-32);\par
  169             hx = sx;\par
  170         \}\par
  171         INSERT_WORDS(x,hx|sx,lx);\par
  172         x *= one;       /* create necessary signal */\par
  173     \}\par
  174     return x;       /* exact output */\par
  175 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v one\:fmod.c}
{\xe \v fmod.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file fmod.c.}\par
{
Referenced by fmod().}\par
}
{\xe \v Zero\:fmod.c}
{\xe \v fmod.c\:Zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Zero[] = \{0.0, -0.0,\}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file fmod.c.}\par
{
Referenced by fmod().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/frexp.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/frexp.c}
{\xe \v lib/real/frexp.c}
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "fdlibm.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for frexp.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "frexp_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b frexp} (double x, int *eptr)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b two54} = 1.80143985094819840000e+16\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v frexp\:frexp.c}
{\xe \v frexp.c\:frexp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double frexp (double  {\i x}, int *  {\i eptr})}}
\par
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file frexp.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    70 \{\par
   71     int  hx, ix, lx;\par
   72     hx = __HI(x);\par
   73     ix = 0x7fffffff&hx;\par
   74     lx = __LO(x);\par
   75     *eptr = 0;\par
   76     if(ix>=0x7ff00000||((ix|lx)==0)) return x;  /* 0,inf,nan */\par
   77     if (ix<0x00100000) \{        /* subnormal */\par
   78         x *= two54;\par
   79         hx = __HI(x);\par
   80         ix = hx&0x7fffffff;\par
   81         *eptr = -54;\par
   82     \}\par
   83     *eptr += (ix>>20)-1022;\par
   84     hx = (hx&0x800fffff)|0x3fe00000;\par
   85     __HI(x) = hx;\par
   86     return x;\par
   87 \}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v two54\:frexp.c}
{\xe \v frexp.c\:two54}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double two54 = 1.80143985094819840000e+16{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file frexp.c.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/hypot.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/hypot.c}
{\xe \v lib/real/hypot.c}
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for hypot.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "hypot_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hypot} (double x, double y)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v hypot\:hypot.c}
{\xe \v hypot.c\:hypot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hypot (double  {\i x}, double  {\i y})}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file hypot.c.}\par
{
References sqrt().}\par
{
Referenced by cabs().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    80 \{\par
   81     double a=x,b=y,t1,t2,y1,y2,w;\par
   82     uword j,k,ha,hb,hx,hy;\par
   83 \par
   84     GET_HIGH_WORD(hx,x);\par
   85     GET_HIGH_WORD(hy,y);\par
   86     ha = hx&0x7fffffff; /* high word of  x */\par
   87     hb = hy&0x7fffffff; /* high word of  y */\par
   88     if(hb > ha) \{\par
   89         a=y;\par
   90         b=x;\par
   91         j=ha;\par
   92         ha=hb;\par
   93         hb=j;\par
   94     \}\par
   95     else \{\par
   96         a=x;\par
   97         b=y;\par
   98     \}\par
   99     SET_HIGH_WORD(a,ha); /* a <- |a| */\par
  100     SET_HIGH_WORD(b,hb); /* b <- |b| */\par
  101     if((ha-hb)>0x3c00000) \{\par
  102         return a+b;   /* x/y > 2**60 */\par
  103     \}\par
  104     k=0;\par
  105     if(ha > 0x5f300000) \{   /* a>2**500 */\par
  106         if(ha >= 0x7ff00000) \{  /* Inf or NaN */\par
  107             uword la, lb;\par
  108             w = a+b;            /* for sNaN */\par
  109             GET_LOW_WORD(la,a);\par
  110             GET_LOW_WORD(lb,b);\par
  111             if(((ha&0xfffff)|la)==0) w = a;\par
  112             if(((hb^0x7ff00000)|lb)==0) w = b;\par
  113             return w;\par
  114         \}\par
  115         /* scale a and b by 2**-600 */\par
  116         ha -= 0x25800000;\par
  117         hb -= 0x25800000;\par
  118         k += 600;\par
  119         SET_HIGH_WORD(a,ha);\par
  120         SET_HIGH_WORD(b,hb);\par
  121     \}\par
  122     if(hb < 0x20b00000) \{   /* b < 2**-500 */\par
  123         if(hb <= 0x000fffff) \{  /* subnormal b or 0 */\par
  124             uword lb;\par
  125             GET_LOW_WORD(lb,b);\par
  126             if((hb|lb)==0) return a;\par
  127             t1=0;\par
  128             SET_HIGH_WORD(t1, 0x7fd00000);  /* t1=2^1022 */\par
  129             b *= t1;\par
  130             a *= t1;\par
  131             k -= 1022;\par
  132         \} else \{        /* scale a and b by 2^600 */\par
  133             ha += 0x25800000;   /* a *= 2^600 */\par
  134             hb += 0x25800000;   /* b *= 2^600 */\par
  135             k -= 600;\par
  136 \par
  137             SET_HIGH_WORD(a,ha);\par
  138             SET_HIGH_WORD(b,hb);\par
  139         \}\par
  140     \}\par
  141     /* medium size a and b */\par
  142     w = a-b;\par
  143     if (w>b) \{\par
  144         t1 = 0;\par
  145         SET_HIGH_WORD(t1, ha);\par
  146         t2 = a-t1;\par
  147         w  = sqrt(t1*t1-(b*(-b)-t2*(a+t1)));\par
  148     \} else \{\par
  149         a  = a+a;\par
  150         y1 = 0;\par
  151         SET_HIGH_WORD(y1, hb);\par
  152         y2 = b - y1;\par
  153         t1 = 0;\par
  154         SET_HIGH_WORD(t1, ha+0x00100000);\par
  155         t2 = a - t1;\par
  156         w  = sqrt(t1*y1-(w*(-w)-(t1*y2+t2*b)));\par
  157     \}\par
  158     if(k!=0) \{\par
  159         uword ht1;\par
  160 \par
  161         t1 = 1.0;\par
  162         GET_HIGH_WORD(ht1, t1);\par
  163         SET_HIGH_WORD(t1, ht1 + (k<<20));\par
  164         return t1*w;\par
  165     \} else return w;\par
  166 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "hypot_8c_a6d6a905f61d535f8454190433b8c0ea5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "hypot_8c_a6d6a905f61d535f8454190433b8c0ea5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/isnan.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/isnan.c}
{\xe \v lib/real/isnan.c}
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b isnan} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
isnan(x) returns 1 is x is nan, else 0. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v isnan\:isnan.c}
{\xe \v isnan.c\:isnan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int isnan (double  {\i x})}}
\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
isnan(x) returns 1 is x is nan, else 0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}NOTICE: No branching! \par
}{
Definition at line 49 of file isnan.c.}\par
{
Referenced by PositionalNumeralSystem::GetText(), and RealNumber::IsNaN().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{\par
   51     return ((x) != (x));\par
   52 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "isnan_8c_afdf433fdb158cbe82ce818a3a2de736b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/kcos.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/kcos.c}
{\xe \v lib/real/kcos.c}
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for kcos.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "kcos_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b __kernel_cos} (double x, double y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel cos function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.00000000000000000000e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b C1} = 4.16666666666666019037e-02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b C2} = -1.38888888888741095749e-03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b C3} = 2.48015872894767294178e-05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b C4} = -2.75573143513906633035e-07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b C5} = 2.08757232129817482790e-09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b C6} = -1.13596475577881948265e-11\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v __kernel_cos\:kcos.c}
{\xe \v kcos.c\:__kernel_cos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double __kernel_cos (double  {\i x}, double  {\i y})}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel cos function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.4 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 96/03/07\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Kernel cos function on [-pi/4, pi/4], pi/4 ~ 0.785398164
Input x is assumed to be bounded by ~pi/4 in magnitude.
Input y is the tail of x.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Algorithm
 1. Since cos(-x) = cos(x), we need only to consider positive x.
 2. if x < 2^-27 (hx<0x3e400000 0), return 1 with inexact if x!=0.
 3. cos(x) is approximated by a polynomial of degree 14 on
    [0,pi/4]
                         4            14
        cos(x) ~ 1 - x*x/2 + C1*x + ... + C6*x
    where the Remes error is\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     |              2     4     6     8     10    12     14 |     -58
    |cos(x)-(1-.5*x +C1*x +C2*x +C3*x +C4*x +C5*x  +C6*x  )| <= 2
    |                                      |\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                    4     6     8     10    12     14
 4. let r = C1*x +C2*x +C3*x +C4*x +C5*x  +C6*x  , then
        cos(x) = 1 - x*x/2 + r
    since cos(x+y) ~ cos(x) - sin(x)*y
          ~ cos(x) - x*y,
    a correction term is necessary in cos(x) and hence
    cos(x+y) = 1 - (x*x/2 - (r - x*y))
    For better accuracy when x > 0.3, let qx = |x|/4 with
    the last 32 bits mask off, and if x > 0.78125, let qx = 0.28125.
    Then
    cos(x+y) = (1-qx) - ((x*x/2-qx) - (r-x*y)).
    Note that 1-qx and (x*x/2-qx) is EXACT here, and the
    magnitude of the latter is at least a quarter of x*x/2,
    thus, reducing the rounding error in the subtraction.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 100 of file kcos.c.}\par
{
References C1, C2, C3, C4, C5, C6, and one.}\par
{
Referenced by cos(), and sin().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   101 \{\par
  102     double a,hz,z,r,qx;\par
  103     sword ix;\par
  104     GET_HIGH_WORD(ix, x);\par
  105     ix &= 0x7fffffff;   /* ix = |x|'s high word*/\par
  106     if(ix<0x3e400000) \{         /* if x < 2**27 */\par
  107         if(((int)x)==0) return one;     /* generate inexact */\par
  108     \}\par
  109     z  = x*x;\par
  110     r  = z*(C1+z*(C2+z*(C3+z*(C4+z*(C5+z*C6)))));\par
  111     if(ix < 0x3FD33333)             /* if |x| < 0.3 */\par
  112         return one - (0.5*z - (z*r - x*y));\par
  113     else \{\par
  114         if(ix > 0x3fe90000) \{       /* x > 0.78125 */\par
  115             qx = 0.28125;\par
  116         \} else \{\par
  117             INSERT_WORDS(qx,ix-0x00200000,0);\par
  118         \}\par
  119         hz = 0.5*z-qx;\par
  120         a  = one-qx;\par
  121         return a - (hz - (z*r-x*y));\par
  122     \}\par
  123 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "kcos_8c_a5468a5a3c3d5d5e34e73fac9d6bc0122_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v C1\:kcos.c}
{\xe \v kcos.c\:C1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double C1 = 4.16666666666666019037e-02{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file kcos.c.}\par
{
Referenced by __kernel_cos().}\par
}
{\xe \v C2\:kcos.c}
{\xe \v kcos.c\:C2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double C2 = -1.38888888888741095749e-03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file kcos.c.}\par
{
Referenced by __kernel_cos().}\par
}
{\xe \v C3\:kcos.c}
{\xe \v kcos.c\:C3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double C3 = 2.48015872894767294178e-05{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file kcos.c.}\par
{
Referenced by __kernel_cos().}\par
}
{\xe \v C4\:kcos.c}
{\xe \v kcos.c\:C4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double C4 = -2.75573143513906633035e-07{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file kcos.c.}\par
{
Referenced by __kernel_cos().}\par
}
{\xe \v C5\:kcos.c}
{\xe \v kcos.c\:C5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double C5 = 2.08757232129817482790e-09{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file kcos.c.}\par
{
Referenced by __kernel_cos().}\par
}
{\xe \v C6\:kcos.c}
{\xe \v kcos.c\:C6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double C6 = -1.13596475577881948265e-11{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file kcos.c.}\par
{
Referenced by __kernel_cos().}\par
}
{\xe \v one\:kcos.c}
{\xe \v kcos.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.00000000000000000000e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file kcos.c.}\par
{
Referenced by __kernel_cos().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/kremp2.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/kremp2.c}
{\xe \v lib/real/kremp2.c}
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for kremp2.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "kremp2_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b __kernel_rem_pio2} (double *x, double *y, int e0, int nx, int prec, const int *ipio2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel reduction function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b init_jk} [] = \{2,3,4,6\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b PIo2} []\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b zero} = 0.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b two24} = 1.67772160000000000000e+07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b twon24} = 5.96046447753906250000e-08\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v __kernel_rem_pio2\:kremp2.c}
{\xe \v kremp2.c\:__kernel_rem_pio2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int __kernel_rem_pio2 (double *  {\i x}, double *  {\i y}, int  {\i e0}, int  {\i nx}, int  {\i prec}, const int *  {\i ipio2})}}
\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel reduction function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.4 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 96/03/07\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
__kernel_rem_pio2(x,y,e0,nx,prec,ipio2)
double x[],y[]; int e0,nx,prec; int ipio2[];\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid __kernel_rem_pio2 return the last three digits of N with
    y = x - N*pi/2
so that |y| < pi/2.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The method is to compute the integer (mod 8) and fraction parts of
(2/pi)*x without doing the full multiplication. In general we
skip the part of the product that are known to be a huge integer (
more accurately, = 0 mod 8 ). Thus the number of operations are
independent of the exponent of the input.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid (2/pi) is represented by an array of 24-bit integers in ipio2[].\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Input parameters:
    x[] The input value (must be positive) is broken into nx
    pieces of 24-bit integers in double precision format.
    x[i] will be the i-th 24 bit of x. The scaled exponent
    of x[0] is given in input parameter e0 (i.e., x[0]*2^e0
    match x's up to 24 bits.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     Example of breaking a double positive z into x[0]+x[1]+x[2]:
        e0 = ilogb(z)-23
        z  = scalbn(z,-e0)
    for i = 0,1,2
        x[i] = floor(z)
        z    = (z-x[i])*2**24\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  y[]    ouput result in an array of double precision numbers.
    The dimension of y[] is:
        24-bit  precision   1
        53-bit  precision   2
        64-bit  precision   2
        113-bit precision   3
    The actual value is the sum of them. Thus for 113-bit
    precison, one may have to do something like:\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     long double t,w,r_head, r_tail;
    t = (long double)y[2] + (long double)y[1];
    w = (long double)y[0];
    r_head = t+w;
    r_tail = w - (r_head - t);\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  e0 The exponent of x[0]\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  nx dimension of x[]\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     prec    an integer indicating the precision:
        0   24  bits (single)
        1   53  bits (double)
        2   64  bits (extended)
        3   113 bits (quad)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  ipio2[]
    integer array, contains the (24*i)-th to (24*i+23)-th
    bit of 2/pi after binary point. The corresponding
    floating value is\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         ipio2[i] * 2^(-24(i+1)).\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid External function:
 double {\b scalbn()}, {\b floor()};\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Here is the description of some local variables:\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     jk  jk+1 is the initial number of terms of ipio2[] needed
    in the computation. The recommended value is 2,3,4,
    6 for single, double, extended,and quad.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     jz  local integer variable indicating the number of
    terms of ipio2[] used.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  jx nx - 1\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  jv index for pointing to the suitable ipio2[] for the
    computation. In general, we want
        ( 2^e0*x[0] * ipio2[jv-1]*2^(-24jv) )/8
    is an integer. Thus
        e0-3-24*jv >= 0 or (e0-3)/24 >= jv
    Hence jv = max(0,(e0-3)/24).\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  jp jp+1 is the number of terms in PIo2[] needed, jp = jk.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     q[] double array with integral value, representing the
    24-bits chunk of the product of x and 2/pi.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  q0 the corresponding exponent of q[0]. Note that the
    exponent for q[i] would be q0-24*i.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  PIo2[] double precision array, obtained by cutting pi/2
    into 24 bits chunks.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  f[]    ipio2[] in floating point\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  iq[]   integer array by breaking up q[] in 24-bits chunk.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  fq[]   final product of x*(2/pi) in fq[0],..,fq[jk]\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  ih integer. If >0 it indicates q[] is >= 0.5, hence
    it also indicates the *sign* of the result.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 190 of file kremp2.c.}\par
{
References init_jk, one, PIo2, scalbn(), two24, twon24, and zero.}\par
{
Referenced by rempio2().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   191 \{\par
  192     int jz,jx,jv,jp,jk,carry,n,iq[20],i,j,k,m,q0,ih;\par
  193     double z,fw,f[20],fq[20],q[20];\par
  194 \par
  195     /* initialize jk*/\par
  196     jk = init_jk[prec];\par
  197     jp = jk;\par
  198 \par
  199     /* determine jx,jv,q0, note that 3>q0 */\par
  200     jx =  nx-1;\par
  201     jv = (e0-3)/24;\par
  202     if(jv<0) jv=0;\par
  203     q0 =  e0-24*(jv+1);\par
  204 \par
  205     /* set up f[0] to f[jx+jk] where f[jx+jk] = ipio2[jv+jk] */\par
  206     j = jv-jx;\par
  207     m = jx+jk;\par
  208     for(i=0; i<=m; i++,j++) f[i] = (j<0)? zero : (double) ipio2[j];\par
  209 \par
  210     /* compute q[0],q[1],...q[jk] */\par
  211     for (i=0; i<=jk; i++) \{\par
  212         for(j=0,fw=0.0; j<=jx; j++) fw += x[j]*f[jx+i-j];\par
  213         q[i] = fw;\par
  214     \}\par
  215 \par
  216     jz = jk;\par
  217 recompute:\par
  218     /* distill q[] into iq[] reversingly */\par
  219     for(i=0,j=jz,z=q[jz]; j>0; i++,j--) \{\par
  220         fw    =  (double)((int)(twon24* z));\par
  221         iq[i] =  (int)(z-two24*fw);\par
  222         z     =  q[j-1]+fw;\par
  223     \}\par
  224 \par
  225     /* compute n */\par
  226     z  = scalbn(z,q0);      /* actual value of z */\par
  227     z -= 8.0*floor(z*0.125);        /* trim off integer >= 8 */\par
  228     n  = (int) z;\par
  229     z -= (double)n;\par
  230     ih = 0;\par
  231     if(q0>0) \{  /* need iq[jz-1] to determine n */\par
  232         i  = (iq[jz-1]>>(24-q0));\par
  233         n += i;\par
  234         iq[jz-1] -= i<<(24-q0);\par
  235         ih = iq[jz-1]>>(23-q0);\par
  236     \}\par
  237     else if(q0==0) ih = iq[jz-1]>>23;\par
  238     else if(z>=0.5) ih=2;\par
  239 \par
  240     if(ih>0) \{  /* q > 0.5 */\par
  241         n += 1;\par
  242         carry = 0;\par
  243         for(i=0; i<jz ; i++) \{  /* compute 1-q */\par
  244             j = iq[i];\par
  245             if(carry==0) \{\par
  246                 if(j!=0) \{\par
  247                     carry = 1;\par
  248                     iq[i] = 0x1000000- j;\par
  249                 \}\par
  250             \} else  iq[i] = 0xffffff - j;\par
  251         \}\par
  252         if(q0>0) \{      /* rare case: chance is 1 in 12 */\par
  253             switch(q0) \{\par
  254             case 1:\par
  255                 iq[jz-1] &= 0x7fffff;\par
  256                 break;\par
  257             case 2:\par
  258                 iq[jz-1] &= 0x3fffff;\par
  259                 break;\par
  260             \}\par
  261         \}\par
  262         if(ih==2) \{\par
  263             z = one - z;\par
  264             if(carry!=0) z -= scalbn(one,q0);\par
  265         \}\par
  266     \}\par
  267 \par
  268     /* check if recomputation is needed */\par
  269     if(z==zero) \{\par
  270         j = 0;\par
  271         for (i=jz-1; i>=jk; i--) j |= iq[i];\par
  272         if(j==0) \{ /* need recomputation */\par
  273             for(k=1; iq[jk-k]==0; k++); /* k = no. of terms needed */\par
  274 \par
  275             for(i=jz+1; i<=jz+k; i++) \{ /* add q[jz+1] to q[jz+k] */\par
  276                 f[jx+i] = (double) ipio2[jv+i];\par
  277                 for(j=0,fw=0.0; j<=jx; j++) fw += x[j]*f[jx+i-j];\par
  278                 q[i] = fw;\par
  279             \}\par
  280             jz += k;\par
  281             goto recompute;\par
  282         \}\par
  283     \}\par
  284 \par
  285     /* chop off zero terms */\par
  286     if(z==0.0) \{\par
  287         jz -= 1;\par
  288         q0 -= 24;\par
  289         while(iq[jz]==0) \{\par
  290             jz--;\par
  291             q0-=24;\par
  292         \}\par
  293     \} else \{ /* break z into 24-bit if necessary */\par
  294         z = scalbn(z,-q0);\par
  295         if(z>=two24) \{\par
  296             fw = (double)((int)(twon24*z));\par
  297             iq[jz] = (int)(z-two24*fw);\par
  298             jz += 1;\par
  299             q0 += 24;\par
  300             iq[jz] = (int) fw;\par
  301         \} else iq[jz] = (int) z ;\par
  302     \}\par
  303 \par
  304     /* convert integer "bit" chunk to floating-point value */\par
  305     fw = scalbn(one,q0);\par
  306     for(i=jz; i>=0; i--) \{\par
  307         q[i] = fw*(double)iq[i];\par
  308         fw*=twon24;\par
  309     \}\par
  310 \par
  311     /* compute PIo2[0,...,jp]*q[jz,...,0] */\par
  312     for(i=jz; i>=0; i--) \{\par
  313         for(fw=0.0,k=0; k<=jp&&k<=jz-i; k++) fw += PIo2[k]*q[i+k];\par
  314         fq[jz-i] = fw;\par
  315     \}\par
  316 \par
  317     /* compress fq[] into y[] */\par
  318     switch(prec) \{\par
  319     case 0:\par
  320         fw = 0.0;\par
  321         for (i=jz; i>=0; i--) fw += fq[i];\par
  322         y[0] = (ih==0)? fw: -fw;\par
  323         break;\par
  324     case 1:\par
  325     case 2:\par
  326         fw = 0.0;\par
  327         for (i=jz; i>=0; i--) fw += fq[i];\par
  328         y[0] = (ih==0)? fw: -fw;\par
  329         fw = fq[0]-fw;\par
  330         for (i=1; i<=jz; i++) fw += fq[i];\par
  331         y[1] = (ih==0)? fw: -fw;\par
  332         break;\par
  333     case 3: /* painful */\par
  334         for (i=jz; i>0; i--) \{\par
  335             fw      = fq[i-1]+fq[i];\par
  336             fq[i]  += fq[i-1]-fw;\par
  337             fq[i-1] = fw;\par
  338         \}\par
  339         for (i=jz; i>1; i--) \{\par
  340             fw      = fq[i-1]+fq[i];\par
  341             fq[i]  += fq[i-1]-fw;\par
  342             fq[i-1] = fw;\par
  343         \}\par
  344         for (fw=0.0,i=jz; i>=2; i--) fw += fq[i];\par
  345         if(ih==0) \{\par
  346             y[0] =  fq[0];\par
  347             y[1] =  fq[1];\par
  348             y[2] =  fw;\par
  349         \} else \{\par
  350             y[0] = -fq[0];\par
  351             y[1] = -fq[1];\par
  352             y[2] = -fw;\par
  353         \}\par
  354     \}\par
  355     return n&7;\par
  356 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "kremp2_8c_a8a5e87d33974881295c4ed0d09732f71_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "kremp2_8c_a8a5e87d33974881295c4ed0d09732f71_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v init_jk\:kremp2.c}
{\xe \v kremp2.c\:init_jk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int init_jk[] = \{2,3,4,6\}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file kremp2.c.}\par
{
Referenced by __kernel_rem_pio2().}\par
}
{\xe \v one\:kremp2.c}
{\xe \v kremp2.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file kremp2.c.}\par
{
Referenced by __kernel_rem_pio2().}\par
}
{\xe \v PIo2\:kremp2.c}
{\xe \v kremp2.c\:PIo2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double PIo2[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    1.57079625129699707031e+00, \par
    7.54978941586159635335e-08, \par
    5.39030252995776476554e-15, \par
    3.28200341580791294123e-22, \par
    1.27065575308067607349e-29, \par
    1.22933308981111328932e-36, \par
    2.73370053816464559624e-44, \par
    2.16741683877804819444e-51, \par
\}\par
}
{
Definition at line 56 of file kremp2.c.}\par
{
Referenced by __kernel_rem_pio2().}\par
}
{\xe \v two24\:kremp2.c}
{\xe \v kremp2.c\:two24}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double two24 = 1.67772160000000000000e+07{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file kremp2.c.}\par
{
Referenced by __kernel_rem_pio2().}\par
}
{\xe \v twon24\:kremp2.c}
{\xe \v kremp2.c\:twon24}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double twon24 = 5.96046447753906250000e-08{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file kremp2.c.}\par
{
Referenced by __kernel_rem_pio2().}\par
}
{\xe \v zero\:kremp2.c}
{\xe \v kremp2.c\:zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double zero = 0.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file kremp2.c.}\par
{
Referenced by __kernel_rem_pio2().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/ksin.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/ksin.c}
{\xe \v lib/real/ksin.c}
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ksin.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ksin_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b __kernel_sin} (double x, double y, int iy)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel sin function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b half} = 5.00000000000000000000e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b S1} = -1.66666666666666324348e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b S2} = 8.33333333332248946124e-03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b S3} = -1.98412698298579493134e-04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b S4} = 2.75573137070700676789e-06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b S5} = -2.50507602534068634195e-08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b S6} = 1.58969099521155010221e-10\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v __kernel_sin\:ksin.c}
{\xe \v ksin.c\:__kernel_sin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double __kernel_sin (double  {\i x}, double  {\i y}, int  {\i iy})}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel sin function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}Kernel sin function on [-pi/4, pi/4], pi/4 ~ 0.7854 Input x is assumed to be bounded by ~pi/4 in magnitude. Input y is the tail of x. Input iy indicates whether y is 0. (if iy=0, y assume to be 0).\par
Algorithm{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Since sin(-x) = -sin(x), we need only to consider positive x.\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab if x < 2^-27 (hx<0x3e400000 0), return x with inexact if x!=0.\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab sin(x) is approximated by a polynomial of degree 13 on [0,pi/4] 3 13 sin(x) ~ x + S1*x + ... + S6*x where\par
|sin(x) 2 4 6 8 10 12 | -58 |----- - (1+S1*x +S2*x +S3*x +S4*x +S5*x +S6*x )| <= 2 | x |\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab sin(x+y) = sin(x) + sin'(x')*y ~ sin(x) + (1-x*x/2)*y For better accuracy, let 3 2 2 2 2 r = x *(S2+x *(S3+x *(S4+x *(S5+x *S6)))) then 3 2 sin(x) = x + (S1*x + (x *(r-y/2)+y))  \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}\par}
}{
Definition at line 92 of file ksin.c.}\par
{
References half, S1, S2, S3, S4, S5, and S6.}\par
{
Referenced by cos(), and sin().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    93 \{\par
   94     double z,r,v;\par
   95     sword ix;\par
   96     GET_HIGH_WORD(ix,x);\par
   97     ix &=0x7fffffff;    /* high word of x */\par
   98     if(ix<0x3e400000)           /* |x| < 2**-27 */\par
   99     \{\par
  100         if((int)x==0) return x;   /* generate inexact */\par
  101     \}\par
  102     z   =  x*x;\par
  103     v   =  z*x;\par
  104     r   =  S2+z*(S3+z*(S4+z*(S5+z*S6)));\par
  105     if(iy==0) return x+v*(S1+z*r);\par
  106     else      return x-((z*(half*y-v*r)-y)-v*S1);\par
  107 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ksin_8c_adcc3cb89edf47f34f1e8058e198be293_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v half\:ksin.c}
{\xe \v ksin.c\:half}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double half = 5.00000000000000000000e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file ksin.c.}\par
{
Referenced by __kernel_sin().}\par
}
{\xe \v S1\:ksin.c}
{\xe \v ksin.c\:S1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double S1 = -1.66666666666666324348e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file ksin.c.}\par
{
Referenced by __kernel_sin().}\par
}
{\xe \v S2\:ksin.c}
{\xe \v ksin.c\:S2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double S2 = 8.33333333332248946124e-03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file ksin.c.}\par
{
Referenced by __kernel_sin().}\par
}
{\xe \v S3\:ksin.c}
{\xe \v ksin.c\:S3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double S3 = -1.98412698298579493134e-04{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file ksin.c.}\par
{
Referenced by __kernel_sin().}\par
}
{\xe \v S4\:ksin.c}
{\xe \v ksin.c\:S4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double S4 = 2.75573137070700676789e-06{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file ksin.c.}\par
{
Referenced by __kernel_sin().}\par
}
{\xe \v S5\:ksin.c}
{\xe \v ksin.c\:S5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double S5 = -2.50507602534068634195e-08{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file ksin.c.}\par
{
Referenced by __kernel_sin().}\par
}
{\xe \v S6\:ksin.c}
{\xe \v ksin.c\:S6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double S6 = 1.58969099521155010221e-10{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file ksin.c.}\par
{
Referenced by __kernel_sin().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/kstandard.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/kstandard.c}
{\xe \v lib/real/kstandard.c}
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "fdlibm.h"}\par
{\f2 #include <errno.h>}\par
{\f2 #include <stdio.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for kstandard.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "kstandard_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WRITE2}(u,  v)\~ fputs(u, stderr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HUGE_VAL}\~ inf\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b __kernel_standard} (double x, double y, int type)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b zero} = 0.0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v HUGE_VAL\:kstandard.c}
{\xe \v kstandard.c\:HUGE_VAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HUGE_VAL\~ inf}}
\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WRITE2\:kstandard.c}
{\xe \v kstandard.c\:WRITE2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WRITE2( u,  v)\~ fputs(u, stderr)}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file kstandard.c.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v __kernel_standard\:kstandard.c}
{\xe \v kstandard.c\:__kernel_standard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double __kernel_standard (double  {\i x}, double  {\i y}, int  {\i type})}}
\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 111 of file kstandard.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   115 \{\par
  116     struct exception exc;\par
  117 #ifndef HUGE_VAL    /* this is the only routine that uses HUGE_VAL */\par
  118 #define HUGE_VAL inf\par
  119     double inf = 0.0;\par
  120 \par
  121     __HI(inf) = 0x7ff00000; /* set inf to infinite */\par
  122 #endif\par
  123 \par
  124 #ifdef _USE_WRITE\par
  125     (void) fflush(stdout);\par
  126 #endif\par
  127     exc.arg1 = x;\par
  128     exc.arg2 = y;\par
  129     switch(type) \{\par
  130     case 1:\par
  131         /* acos(|x|>1) */\par
  132         exc.type = DOMAIN;\par
  133         exc.name = "acos";\par
  134         exc.retval = zero;\par
  135         if (_LIB_VERSION == _POSIX_)\par
  136             errno = EDOM;\par
  137         else if (!matherr(&exc)) \{\par
  138             if(_LIB_VERSION == _SVID_) \{\par
  139                 (void) WRITE2("acos: DOMAIN error\\n", 19);\par
  140             \}\par
  141             errno = EDOM;\par
  142         \}\par
  143         break;\par
  144     case 2:\par
  145         /* asin(|x|>1) */\par
  146         exc.type = DOMAIN;\par
  147         exc.name = "asin";\par
  148         exc.retval = zero;\par
  149         if(_LIB_VERSION == _POSIX_)\par
  150             errno = EDOM;\par
  151         else if (!matherr(&exc)) \{\par
  152             if(_LIB_VERSION == _SVID_) \{\par
  153                 (void) WRITE2("asin: DOMAIN error\\n", 19);\par
  154             \}\par
  155             errno = EDOM;\par
  156         \}\par
  157         break;\par
  158     case 3:\par
  159         /* atan2(+-0,+-0) */\par
  160         exc.arg1 = y;\par
  161         exc.arg2 = x;\par
  162         exc.type = DOMAIN;\par
  163         exc.name = "atan2";\par
  164         exc.retval = zero;\par
  165         if(_LIB_VERSION == _POSIX_)\par
  166             errno = EDOM;\par
  167         else if (!matherr(&exc)) \{\par
  168             if(_LIB_VERSION == _SVID_) \{\par
  169                 (void) WRITE2("atan2: DOMAIN error\\n", 20);\par
  170             \}\par
  171             errno = EDOM;\par
  172         \}\par
  173         break;\par
  174     case 4:\par
  175         /* hypot(finite,finite) overflow */\par
  176         exc.type = OVERFLOW;\par
  177         exc.name = "hypot";\par
  178         if (_LIB_VERSION == _SVID_)\par
  179             exc.retval = HUGE;\par
  180         else\par
  181             exc.retval = HUGE_VAL;\par
  182         if (_LIB_VERSION == _POSIX_)\par
  183             errno = ERANGE;\par
  184         else if (!matherr(&exc)) \{\par
  185             errno = ERANGE;\par
  186         \}\par
  187         break;\par
  188     case 5:\par
  189         /* cosh(finite) overflow */\par
  190         exc.type = OVERFLOW;\par
  191         exc.name = "cosh";\par
  192         if (_LIB_VERSION == _SVID_)\par
  193             exc.retval = HUGE;\par
  194         else\par
  195             exc.retval = HUGE_VAL;\par
  196         if (_LIB_VERSION == _POSIX_)\par
  197             errno = ERANGE;\par
  198         else if (!matherr(&exc)) \{\par
  199             errno = ERANGE;\par
  200         \}\par
  201         break;\par
  202     case 6:\par
  203         /* exp(finite) overflow */\par
  204         exc.type = OVERFLOW;\par
  205         exc.name = "exp";\par
  206         if (_LIB_VERSION == _SVID_)\par
  207             exc.retval = HUGE;\par
  208         else\par
  209             exc.retval = HUGE_VAL;\par
  210         if (_LIB_VERSION == _POSIX_)\par
  211             errno = ERANGE;\par
  212         else if (!matherr(&exc)) \{\par
  213             errno = ERANGE;\par
  214         \}\par
  215         break;\par
  216     case 7:\par
  217         /* exp(finite) underflow */\par
  218         exc.type = UNDERFLOW;\par
  219         exc.name = "exp";\par
  220         exc.retval = zero;\par
  221         if (_LIB_VERSION == _POSIX_)\par
  222             errno = ERANGE;\par
  223         else if (!matherr(&exc)) \{\par
  224             errno = ERANGE;\par
  225         \}\par
  226         break;\par
  227     case 8:\par
  228         /* y0(0) = -inf */\par
  229         exc.type = DOMAIN;  /* should be SING for IEEE */\par
  230         exc.name = "y0";\par
  231         if (_LIB_VERSION == _SVID_)\par
  232             exc.retval = -HUGE;\par
  233         else\par
  234             exc.retval = -HUGE_VAL;\par
  235         if (_LIB_VERSION == _POSIX_)\par
  236             errno = EDOM;\par
  237         else if (!matherr(&exc)) \{\par
  238             if (_LIB_VERSION == _SVID_) \{\par
  239                 (void) WRITE2("y0: DOMAIN error\\n", 17);\par
  240             \}\par
  241             errno = EDOM;\par
  242         \}\par
  243         break;\par
  244     case 9:\par
  245         /* y0(x<0) = NaN */\par
  246         exc.type = DOMAIN;\par
  247         exc.name = "y0";\par
  248         if (_LIB_VERSION == _SVID_)\par
  249             exc.retval = -HUGE;\par
  250         else\par
  251             exc.retval = -HUGE_VAL;\par
  252         if (_LIB_VERSION == _POSIX_)\par
  253             errno = EDOM;\par
  254         else if (!matherr(&exc)) \{\par
  255             if (_LIB_VERSION == _SVID_) \{\par
  256                 (void) WRITE2("y0: DOMAIN error\\n", 17);\par
  257             \}\par
  258             errno = EDOM;\par
  259         \}\par
  260         break;\par
  261     case 10:\par
  262         /* y1(0) = -inf */\par
  263         exc.type = DOMAIN;  /* should be SING for IEEE */\par
  264         exc.name = "y1";\par
  265         if (_LIB_VERSION == _SVID_)\par
  266             exc.retval = -HUGE;\par
  267         else\par
  268             exc.retval = -HUGE_VAL;\par
  269         if (_LIB_VERSION == _POSIX_)\par
  270             errno = EDOM;\par
  271         else if (!matherr(&exc)) \{\par
  272             if (_LIB_VERSION == _SVID_) \{\par
  273                 (void) WRITE2("y1: DOMAIN error\\n", 17);\par
  274             \}\par
  275             errno = EDOM;\par
  276         \}\par
  277         break;\par
  278     case 11:\par
  279         /* y1(x<0) = NaN */\par
  280         exc.type = DOMAIN;\par
  281         exc.name = "y1";\par
  282         if (_LIB_VERSION == _SVID_)\par
  283             exc.retval = -HUGE;\par
  284         else\par
  285             exc.retval = -HUGE_VAL;\par
  286         if (_LIB_VERSION == _POSIX_)\par
  287             errno = EDOM;\par
  288         else if (!matherr(&exc)) \{\par
  289             if (_LIB_VERSION == _SVID_) \{\par
  290                 (void) WRITE2("y1: DOMAIN error\\n", 17);\par
  291             \}\par
  292             errno = EDOM;\par
  293         \}\par
  294         break;\par
  295     case 12:\par
  296         /* yn(n,0) = -inf */\par
  297         exc.type = DOMAIN;  /* should be SING for IEEE */\par
  298         exc.name = "yn";\par
  299         if (_LIB_VERSION == _SVID_)\par
  300             exc.retval = -HUGE;\par
  301         else\par
  302             exc.retval = -HUGE_VAL;\par
  303         if (_LIB_VERSION == _POSIX_)\par
  304             errno = EDOM;\par
  305         else if (!matherr(&exc)) \{\par
  306             if (_LIB_VERSION == _SVID_) \{\par
  307                 (void) WRITE2("yn: DOMAIN error\\n", 17);\par
  308             \}\par
  309             errno = EDOM;\par
  310         \}\par
  311         break;\par
  312     case 13:\par
  313         /* yn(x<0) = NaN */\par
  314         exc.type = DOMAIN;\par
  315         exc.name = "yn";\par
  316         if (_LIB_VERSION == _SVID_)\par
  317             exc.retval = -HUGE;\par
  318         else\par
  319             exc.retval = -HUGE_VAL;\par
  320         if (_LIB_VERSION == _POSIX_)\par
  321             errno = EDOM;\par
  322         else if (!matherr(&exc)) \{\par
  323             if (_LIB_VERSION == _SVID_) \{\par
  324                 (void) WRITE2("yn: DOMAIN error\\n", 17);\par
  325             \}\par
  326             errno = EDOM;\par
  327         \}\par
  328         break;\par
  329     case 14:\par
  330         /* lgamma(finite) overflow */\par
  331         exc.type = OVERFLOW;\par
  332         exc.name = "lgamma";\par
  333         if (_LIB_VERSION == _SVID_)\par
  334             exc.retval = HUGE;\par
  335         else\par
  336             exc.retval = HUGE_VAL;\par
  337         if (_LIB_VERSION == _POSIX_)\par
  338             errno = ERANGE;\par
  339         else if (!matherr(&exc)) \{\par
  340             errno = ERANGE;\par
  341         \}\par
  342         break;\par
  343     case 15:\par
  344         /* lgamma(-integer) or lgamma(0) */\par
  345         exc.type = SING;\par
  346         exc.name = "lgamma";\par
  347         if (_LIB_VERSION == _SVID_)\par
  348             exc.retval = HUGE;\par
  349         else\par
  350             exc.retval = HUGE_VAL;\par
  351         if (_LIB_VERSION == _POSIX_)\par
  352             errno = EDOM;\par
  353         else if (!matherr(&exc)) \{\par
  354             if (_LIB_VERSION == _SVID_) \{\par
  355                 (void) WRITE2("lgamma: SING error\\n", 19);\par
  356             \}\par
  357             errno = EDOM;\par
  358         \}\par
  359         break;\par
  360     case 16:\par
  361         /* log(0) */\par
  362         exc.type = SING;\par
  363         exc.name = "log";\par
  364         if (_LIB_VERSION == _SVID_)\par
  365             exc.retval = -HUGE;\par
  366         else\par
  367             exc.retval = -HUGE_VAL;\par
  368         if (_LIB_VERSION == _POSIX_)\par
  369             errno = ERANGE;\par
  370         else if (!matherr(&exc)) \{\par
  371             if (_LIB_VERSION == _SVID_) \{\par
  372                 (void) WRITE2("log: SING error\\n", 16);\par
  373             \}\par
  374             errno = EDOM;\par
  375         \}\par
  376         break;\par
  377     case 17:\par
  378         /* log(x<0) */\par
  379         exc.type = DOMAIN;\par
  380         exc.name = "log";\par
  381         if (_LIB_VERSION == _SVID_)\par
  382             exc.retval = -HUGE;\par
  383         else\par
  384             exc.retval = -HUGE_VAL;\par
  385         if (_LIB_VERSION == _POSIX_)\par
  386             errno = EDOM;\par
  387         else if (!matherr(&exc)) \{\par
  388             if (_LIB_VERSION == _SVID_) \{\par
  389                 (void) WRITE2("log: DOMAIN error\\n", 18);\par
  390             \}\par
  391             errno = EDOM;\par
  392         \}\par
  393         break;\par
  394     case 18:\par
  395         /* log10(0) */\par
  396         exc.type = SING;\par
  397         exc.name = "log10";\par
  398         if (_LIB_VERSION == _SVID_)\par
  399             exc.retval = -HUGE;\par
  400         else\par
  401             exc.retval = -HUGE_VAL;\par
  402         if (_LIB_VERSION == _POSIX_)\par
  403             errno = ERANGE;\par
  404         else if (!matherr(&exc)) \{\par
  405             if (_LIB_VERSION == _SVID_) \{\par
  406                 (void) WRITE2("log10: SING error\\n", 18);\par
  407             \}\par
  408             errno = EDOM;\par
  409         \}\par
  410         break;\par
  411     case 19:\par
  412         /* log10(x<0) */\par
  413         exc.type = DOMAIN;\par
  414         exc.name = "log10";\par
  415         if (_LIB_VERSION == _SVID_)\par
  416             exc.retval = -HUGE;\par
  417         else\par
  418             exc.retval = -HUGE_VAL;\par
  419         if (_LIB_VERSION == _POSIX_)\par
  420             errno = EDOM;\par
  421         else if (!matherr(&exc)) \{\par
  422             if (_LIB_VERSION == _SVID_) \{\par
  423                 (void) WRITE2("log10: DOMAIN error\\n", 20);\par
  424             \}\par
  425             errno = EDOM;\par
  426         \}\par
  427         break;\par
  428     case 20:\par
  429         /* pow(0.0,0.0) */\par
  430         /* error only if _LIB_VERSION == _SVID_ */\par
  431         exc.type = DOMAIN;\par
  432         exc.name = "pow";\par
  433         exc.retval = zero;\par
  434         if (_LIB_VERSION != _SVID_) exc.retval = 1.0;\par
  435         else if (!matherr(&exc)) \{\par
  436             (void) WRITE2("pow(0,0): DOMAIN error\\n", 23);\par
  437             errno = EDOM;\par
  438         \}\par
  439         break;\par
  440     case 21:\par
  441         /* pow(x,y) overflow */\par
  442         exc.type = OVERFLOW;\par
  443         exc.name = "pow";\par
  444         if (_LIB_VERSION == _SVID_) \{\par
  445             exc.retval = HUGE;\par
  446             y *= 0.5;\par
  447             if(x<zero&&rint(y)!=y) exc.retval = -HUGE;\par
  448         \} else \{\par
  449             exc.retval = HUGE_VAL;\par
  450             y *= 0.5;\par
  451             if(x<zero&&rint(y)!=y) exc.retval = -HUGE_VAL;\par
  452         \}\par
  453         if (_LIB_VERSION == _POSIX_)\par
  454             errno = ERANGE;\par
  455         else if (!matherr(&exc)) \{\par
  456             errno = ERANGE;\par
  457         \}\par
  458         break;\par
  459     case 22:\par
  460         /* pow(x,y) underflow */\par
  461         exc.type = UNDERFLOW;\par
  462         exc.name = "pow";\par
  463         exc.retval =  zero;\par
  464         if (_LIB_VERSION == _POSIX_)\par
  465             errno = ERANGE;\par
  466         else if (!matherr(&exc)) \{\par
  467             errno = ERANGE;\par
  468         \}\par
  469         break;\par
  470     case 23:\par
  471         /* 0**neg */\par
  472         exc.type = DOMAIN;\par
  473         exc.name = "pow";\par
  474         if (_LIB_VERSION == _SVID_)\par
  475             exc.retval = zero;\par
  476         else\par
  477             exc.retval = -HUGE_VAL;\par
  478         if (_LIB_VERSION == _POSIX_)\par
  479             errno = EDOM;\par
  480         else if (!matherr(&exc)) \{\par
  481             if (_LIB_VERSION == _SVID_) \{\par
  482                 (void) WRITE2("pow(0,neg): DOMAIN error\\n", 25);\par
  483             \}\par
  484             errno = EDOM;\par
  485         \}\par
  486         break;\par
  487     case 24:\par
  488         /* neg**non-integral */\par
  489         exc.type = DOMAIN;\par
  490         exc.name = "pow";\par
  491         if (_LIB_VERSION == _SVID_)\par
  492             exc.retval = zero;\par
  493         else\par
  494             exc.retval = zero/zero; /* X/Open allow NaN */\par
  495         if (_LIB_VERSION == _POSIX_)\par
  496             errno = EDOM;\par
  497         else if (!matherr(&exc)) \{\par
  498             if (_LIB_VERSION == _SVID_) \{\par
  499                 (void) WRITE2("neg**non-integral: DOMAIN error\\n", 32);\par
  500             \}\par
  501             errno = EDOM;\par
  502         \}\par
  503         break;\par
  504     case 25:\par
  505         /* sinh(finite) overflow */\par
  506         exc.type = OVERFLOW;\par
  507         exc.name = "sinh";\par
  508         if (_LIB_VERSION == _SVID_)\par
  509             exc.retval = ( (x>zero) ? HUGE : -HUGE);\par
  510         else\par
  511             exc.retval = ( (x>zero) ? HUGE_VAL : -HUGE_VAL);\par
  512         if (_LIB_VERSION == _POSIX_)\par
  513             errno = ERANGE;\par
  514         else if (!matherr(&exc)) \{\par
  515             errno = ERANGE;\par
  516         \}\par
  517         break;\par
  518     case 26:\par
  519         /* sqrt(x<0) */\par
  520         exc.type = DOMAIN;\par
  521         exc.name = "sqrt";\par
  522         if (_LIB_VERSION == _SVID_)\par
  523             exc.retval = zero;\par
  524         else\par
  525             exc.retval = zero/zero;\par
  526         if (_LIB_VERSION == _POSIX_)\par
  527             errno = EDOM;\par
  528         else if (!matherr(&exc)) \{\par
  529             if (_LIB_VERSION == _SVID_) \{\par
  530                 (void) WRITE2("sqrt: DOMAIN error\\n", 19);\par
  531             \}\par
  532             errno = EDOM;\par
  533         \}\par
  534         break;\par
  535     case 27:\par
  536         /* fmod(x,0) */\par
  537         exc.type = DOMAIN;\par
  538         exc.name = "fmod";\par
  539         if (_LIB_VERSION == _SVID_)\par
  540             exc.retval = x;\par
  541         else\par
  542             exc.retval = zero/zero;\par
  543         if (_LIB_VERSION == _POSIX_)\par
  544             errno = EDOM;\par
  545         else if (!matherr(&exc)) \{\par
  546             if (_LIB_VERSION == _SVID_) \{\par
  547                 (void) WRITE2("fmod:  DOMAIN error\\n", 20);\par
  548             \}\par
  549             errno = EDOM;\par
  550         \}\par
  551         break;\par
  552     case 28:\par
  553         /* remainder(x,0) */\par
  554         exc.type = DOMAIN;\par
  555         exc.name = "remainder";\par
  556         exc.retval = zero/zero;\par
  557         if (_LIB_VERSION == _POSIX_)\par
  558             errno = EDOM;\par
  559         else if (!matherr(&exc)) \{\par
  560             if (_LIB_VERSION == _SVID_) \{\par
  561                 (void) WRITE2("remainder: DOMAIN error\\n", 24);\par
  562             \}\par
  563             errno = EDOM;\par
  564         \}\par
  565         break;\par
  566     case 29:\par
  567         /* acosh(x<1) */\par
  568         exc.type = DOMAIN;\par
  569         exc.name = "acosh";\par
  570         exc.retval = zero/zero;\par
  571         if (_LIB_VERSION == _POSIX_)\par
  572             errno = EDOM;\par
  573         else if (!matherr(&exc)) \{\par
  574             if (_LIB_VERSION == _SVID_) \{\par
  575                 (void) WRITE2("acosh: DOMAIN error\\n", 20);\par
  576             \}\par
  577             errno = EDOM;\par
  578         \}\par
  579         break;\par
  580     case 30:\par
  581         /* atanh(|x|>1) */\par
  582         exc.type = DOMAIN;\par
  583         exc.name = "atanh";\par
  584         exc.retval = zero/zero;\par
  585         if (_LIB_VERSION == _POSIX_)\par
  586             errno = EDOM;\par
  587         else if (!matherr(&exc)) \{\par
  588             if (_LIB_VERSION == _SVID_) \{\par
  589                 (void) WRITE2("atanh: DOMAIN error\\n", 20);\par
  590             \}\par
  591             errno = EDOM;\par
  592         \}\par
  593         break;\par
  594     case 31:\par
  595         /* atanh(|x|=1) */\par
  596         exc.type = SING;\par
  597         exc.name = "atanh";\par
  598         exc.retval = x/zero;    /* sign(x)*inf */\par
  599         if (_LIB_VERSION == _POSIX_)\par
  600             errno = EDOM;\par
  601         else if (!matherr(&exc)) \{\par
  602             if (_LIB_VERSION == _SVID_) \{\par
  603                 (void) WRITE2("atanh: SING error\\n", 18);\par
  604             \}\par
  605             errno = EDOM;\par
  606         \}\par
  607         break;\par
  608     case 32:\par
  609         /* scalb overflow; SVID also returns +-HUGE_VAL */\par
  610         exc.type = OVERFLOW;\par
  611         exc.name = "scalb";\par
  612         exc.retval = x > zero ? HUGE_VAL : -HUGE_VAL;\par
  613         if (_LIB_VERSION == _POSIX_)\par
  614             errno = ERANGE;\par
  615         else if (!matherr(&exc)) \{\par
  616             errno = ERANGE;\par
  617         \}\par
  618         break;\par
  619     case 33:\par
  620         /* scalb underflow */\par
  621         exc.type = UNDERFLOW;\par
  622         exc.name = "scalb";\par
  623         exc.retval = copysign(zero,x);\par
  624         if (_LIB_VERSION == _POSIX_)\par
  625             errno = ERANGE;\par
  626         else if (!matherr(&exc)) \{\par
  627             errno = ERANGE;\par
  628         \}\par
  629         break;\par
  630     case 34:\par
  631         /* j0(|x|>X_TLOSS) */\par
  632         exc.type = TLOSS;\par
  633         exc.name = "j0";\par
  634         exc.retval = zero;\par
  635         if (_LIB_VERSION == _POSIX_)\par
  636             errno = ERANGE;\par
  637         else if (!matherr(&exc)) \{\par
  638             if (_LIB_VERSION == _SVID_) \{\par
  639                 (void) WRITE2(exc.name, 2);\par
  640                 (void) WRITE2(": TLOSS error\\n", 14);\par
  641             \}\par
  642             errno = ERANGE;\par
  643         \}\par
  644         break;\par
  645     case 35:\par
  646         /* y0(x>X_TLOSS) */\par
  647         exc.type = TLOSS;\par
  648         exc.name = "y0";\par
  649         exc.retval = zero;\par
  650         if (_LIB_VERSION == _POSIX_)\par
  651             errno = ERANGE;\par
  652         else if (!matherr(&exc)) \{\par
  653             if (_LIB_VERSION == _SVID_) \{\par
  654                 (void) WRITE2(exc.name, 2);\par
  655                 (void) WRITE2(": TLOSS error\\n", 14);\par
  656             \}\par
  657             errno = ERANGE;\par
  658         \}\par
  659         break;\par
  660     case 36:\par
  661         /* j1(|x|>X_TLOSS) */\par
  662         exc.type = TLOSS;\par
  663         exc.name = "j1";\par
  664         exc.retval = zero;\par
  665         if (_LIB_VERSION == _POSIX_)\par
  666             errno = ERANGE;\par
  667         else if (!matherr(&exc)) \{\par
  668             if (_LIB_VERSION == _SVID_) \{\par
  669                 (void) WRITE2(exc.name, 2);\par
  670                 (void) WRITE2(": TLOSS error\\n", 14);\par
  671             \}\par
  672             errno = ERANGE;\par
  673         \}\par
  674         break;\par
  675     case 37:\par
  676         /* y1(x>X_TLOSS) */\par
  677         exc.type = TLOSS;\par
  678         exc.name = "y1";\par
  679         exc.retval = zero;\par
  680         if (_LIB_VERSION == _POSIX_)\par
  681             errno = ERANGE;\par
  682         else if (!matherr(&exc)) \{\par
  683             if (_LIB_VERSION == _SVID_) \{\par
  684                 (void) WRITE2(exc.name, 2);\par
  685                 (void) WRITE2(": TLOSS error\\n", 14);\par
  686             \}\par
  687             errno = ERANGE;\par
  688         \}\par
  689         break;\par
  690     case 38:\par
  691         /* jn(|x|>X_TLOSS) */\par
  692         exc.type = TLOSS;\par
  693         exc.name = "jn";\par
  694         exc.retval = zero;\par
  695         if (_LIB_VERSION == _POSIX_)\par
  696             errno = ERANGE;\par
  697         else if (!matherr(&exc)) \{\par
  698             if (_LIB_VERSION == _SVID_) \{\par
  699                 (void) WRITE2(exc.name, 2);\par
  700                 (void) WRITE2(": TLOSS error\\n", 14);\par
  701             \}\par
  702             errno = ERANGE;\par
  703         \}\par
  704         break;\par
  705     case 39:\par
  706         /* yn(x>X_TLOSS) */\par
  707         exc.type = TLOSS;\par
  708         exc.name = "yn";\par
  709         exc.retval = zero;\par
  710         if (_LIB_VERSION == _POSIX_)\par
  711             errno = ERANGE;\par
  712         else if (!matherr(&exc)) \{\par
  713             if (_LIB_VERSION == _SVID_) \{\par
  714                 (void) WRITE2(exc.name, 2);\par
  715                 (void) WRITE2(": TLOSS error\\n", 14);\par
  716             \}\par
  717             errno = ERANGE;\par
  718         \}\par
  719         break;\par
  720     case 40:\par
  721         /* gamma(finite) overflow */\par
  722         exc.type = OVERFLOW;\par
  723         exc.name = "gamma";\par
  724         if (_LIB_VERSION == _SVID_)\par
  725             exc.retval = HUGE;\par
  726         else\par
  727             exc.retval = HUGE_VAL;\par
  728         if (_LIB_VERSION == _POSIX_)\par
  729             errno = ERANGE;\par
  730         else if (!matherr(&exc)) \{\par
  731             errno = ERANGE;\par
  732         \}\par
  733         break;\par
  734     case 41:\par
  735         /* gamma(-integer) or gamma(0) */\par
  736         exc.type = SING;\par
  737         exc.name = "gamma";\par
  738         if (_LIB_VERSION == _SVID_)\par
  739             exc.retval = HUGE;\par
  740         else\par
  741             exc.retval = HUGE_VAL;\par
  742         if (_LIB_VERSION == _POSIX_)\par
  743             errno = EDOM;\par
  744         else if (!matherr(&exc)) \{\par
  745             if (_LIB_VERSION == _SVID_) \{\par
  746                 (void) WRITE2("gamma: SING error\\n", 18);\par
  747             \}\par
  748             errno = EDOM;\par
  749         \}\par
  750         break;\par
  751     case 42:\par
  752         /* pow(NaN,0.0) */\par
  753         /* error only if _LIB_VERSION == _SVID_ & _XOPEN_ */\par
  754         exc.type = DOMAIN;\par
  755         exc.name = "pow";\par
  756         exc.retval = x;\par
  757         if (_LIB_VERSION == _IEEE_ ||\par
  758                 _LIB_VERSION == _POSIX_) exc.retval = 1.0;\par
  759         else if (!matherr(&exc)) \{\par
  760             errno = EDOM;\par
  761         \}\par
  762         break;\par
  763     \}\par
  764     return exc.retval;\par
  765 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v zero\:kstandard.c}
{\xe \v kstandard.c\:zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double zero = 0.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file kstandard.c.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/ktan.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/ktan.c}
{\xe \v lib/real/ktan.c}
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ktan.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ktan_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b one}\~ {\b xxx}[13]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pio4}\~ {\b xxx}[14]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pio4lo}\~ {\b xxx}[15]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b T}\~ {\b xxx}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b __kernel_tan} (double x, double y, int iy)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel tan function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b xxx} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v one\:ktan.c}
{\xe \v ktan.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define one\~ {\b xxx}[13]}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file ktan.c.}\par
}
{\xe \v pio4\:ktan.c}
{\xe \v ktan.c\:pio4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pio4\~ {\b xxx}[14]}}
\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file ktan.c.}\par
}
{\xe \v pio4lo\:ktan.c}
{\xe \v ktan.c\:pio4lo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pio4lo\~ {\b xxx}[15]}}
\par
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file ktan.c.}\par
}
{\xe \v T\:ktan.c}
{\xe \v ktan.c\:T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define T\~ {\b xxx}}}
\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file ktan.c.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v __kernel_tan\:ktan.c}
{\xe \v ktan.c\:__kernel_tan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double __kernel_tan (double  {\i x}, double  {\i y}, int  {\i iy})}}
\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel tan function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.5 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 04/04/22\par
}Kernel tan function on [-pi/4, pi/4], pi/4 ~ 0.7854 Input x is assumed to be bounded by ~pi/4 in magnitude. Input y is the tail of x. Input k indicates whether tan (if k = 1) or -1/tan (if k = -1) is returned.\par
Algorithm{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Since tan(-x) = -tan(x), we need only to consider positive x.\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab if x < 2^-28 (hx<0x3e300000 0), return x with inexact if x!=0.\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab tan(x) is approximated by a odd polynomial of degree 27 on [0,0.67434] 3 27 tan(x) ~ x + T1*x + ... + T13*x where {
\par
\pard\plain \s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     |tan(x)         2     4            26   |     -59.2\par
    |----- - (1+T1*x +T2*x +.... +T13*x    )| <= 2\par
    |  x                    |\par
}
\par
Note: tan(x+y) = tan(x) + tan'(x)*y ~ tan(x) + (1+x*x)*y Therefore, for better accuracy in computing tan(x+y), let 3 2 2 2 2 r = x *(T2+x *(T3+x *(...+x *(T12+x *T13)))) then 3 2 tan(x+y) = x + (T1*x + (x *(r+y)+y)){
\par
\pard\plain \s92\fi-360\li1080\widctlpar\fs20\cgrid 
1.\tab For x in [0.67434,pi/4], let y = pi/4 - x, then tan(x) = tan(pi/4-y) = (1-tan(y))/(1+tan(y)) = 1 - 2*(tan(y) - (tan(y)^2)/(1+tan(y)))  \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s64\li1440\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}\par}
\par}
}{
Definition at line 112 of file ktan.c.}\par
{
Referenced by tan().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   112                                                 \{\par
  113     double z, r, v, w, s;\par
  114     sword ix, hx;\par
  115 \par
  116     GET_HIGH_WORD(hx,x); /* high word of x */\par
  117     ix = hx & 0x7fffffff;           /* high word of |x| */\par
  118     if (ix < 0x3e300000) \{          /* x < 2**-28 */\par
  119         if ((int) x == 0) \{     /* generate inexact */\par
  120             uword low;\par
  121             GET_LOW_WORD(low,x);\par
  122             if (((ix | low) | (iy + 1)) == 0)\par
  123                 return one / fabs(x);\par
  124             else \{\par
  125                 if (iy == 1)\par
  126                     return x;\par
  127                 else \{  /* compute -1 / (x+y) carefully */\par
  128                     double a, t;\par
  129 \par
  130                     z = w = x + y;\par
  131                     SET_LOW_WORD(z,0);\par
  132                     v = y - (z - x);\par
  133                     t = a = -one / w;\par
  134                     SET_LOW_WORD(t,0);\par
  135                     s = one + t * z;\par
  136                     return t + a * (s + t * v);\par
  137                 \}\par
  138             \}\par
  139         \}\par
  140     \}\par
  141     if (ix >= 0x3FE59428) \{ /* |x| >= 0.6744 */\par
  142         if (hx < 0) \{\par
  143             x = -x;\par
  144             y = -y;\par
  145         \}\par
  146         z = pio4 - x;\par
  147         w = pio4lo - y;\par
  148         x = z + w;\par
  149         y = 0.0;\par
  150     \}\par
  151     z = x * x;\par
  152     w = z * z;\par
  153     /*\par
  154      * Break x^5*(T[1]+x^2*T[2]+...) into\par
  155      * x^5(T[1]+x^4*T[3]+...+x^20*T[11]) +\par
  156      * x^5(x^2*(T[2]+x^4*T[4]+...+x^22*[T12]))\par
  157      */\par
  158     r = T[1] + w * (T[3] + w * (T[5] + w * (T[7] + w * (T[9] +\par
  159                                             w * T[11]))));\par
  160     v = z * (T[2] + w * (T[4] + w * (T[6] + w * (T[8] + w * (T[10] +\par
  161                                      w * T[12])))));\par
  162     s = z * x;\par
  163     r = y + z * (s * (r + v) + y);\par
  164     r += T[0] * s;\par
  165     w = x + r;\par
  166     if (ix >= 0x3FE59428) \{\par
  167         v = (double) iy;\par
  168         return (double) (1 - ((hx >> 30) & 2)) *\par
  169                (v - 2.0 * (x - (w * w / (w + v) - r)));\par
  170     \}\par
  171     if (iy == 1)\par
  172         return w;\par
  173     else \{\par
  174         /*\par
  175          * if allow error up to 2 ulp, simply return\par
  176          * -1.0 / (x+r) here\par
  177          */\par
  178         /* compute -1.0 / (x+r) accurately */\par
  179         double a, t;\par
  180         z = w;\par
  181         SET_LOW_WORD(z,0);\par
  182         v = r - (z - x);    /* z+v = r+x */\par
  183         t = a = -1.0 / w;   /* a = -1.0/w */\par
  184         SET_LOW_WORD(t,0);\par
  185         s = 1.0 + t * z;\par
  186         return t + a * (s + t * v);\par
  187     \}\par
  188 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ktan_8c_a5f1c9e105e0dbca8a88407dd899043c6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v xxx\:ktan.c}
{\xe \v ktan.c\:xxx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double xxx[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    3.33333333333334091986e-01, \par
    1.33333333333201242699e-01, \par
    5.39682539762260521377e-02, \par
    2.18694882948595424599e-02, \par
    8.86323982359930005737e-03, \par
    3.59207910759131235356e-03, \par
    1.45620945432529025516e-03, \par
    5.88041240820264096874e-04, \par
    2.46463134818469906812e-04, \par
    7.81794442939557092300e-05, \par
    7.14072491382608190305e-05, \par
    -1.85586374855275456654e-05,    \par
    2.59073051863633712884e-05, \par
         1.00000000000000000000e+00,    \par
         7.85398163397448278999e-01,    \par
         3.06161699786838301793e-17 \par
\}\par
}
{
Definition at line 45 of file ktan.c.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/log.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/log.c}
{\xe \v lib/real/log.c}
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for log.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "log_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b log} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Natural logarithm function (base e). }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ln2_hi} = 6.93147180369123816490e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ln2_lo} = 1.90821492927058770002e-10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b two54} = 1.80143985094819840000e+16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Lg1} = 6.666666666666735130e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Lg2} = 3.999999999940941908e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Lg3} = 2.857142874366239149e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Lg4} = 2.222219843214978396e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Lg5} = 1.818357216161805012e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Lg6} = 1.531383769920937332e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Lg7} = 1.479819860511658591e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b zero} = 0.0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v log\:log.c}
{\xe \v log.c\:log}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double log (double  {\i x})}}
\par
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Natural logarithm function (base e). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.4 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 96/03/07\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
  1. Argument Reduction: find k and f such that
        x = 2^k * (1+f),
    where  sqrt(2)/2 < 1+f < sqrt(2) .\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   2. Approximation of log(1+f).
 Let s = f/(2+f) ; based on log(1+f) = log(1+s) - log(1-s)
     = 2s + 2/3 s**3 + 2/5 s**5 + .....,
         = 2s + s*R
     We use a special Remes algorithm on [0,0.1716] to generate
    a polynomial of degree 14 to approximate R The maximum error
 of this polynomial approximation is bounded by 2**-58.45. In
 other words,
            2      4      6      8      10      12      14
     R(z) ~ Lg1*s +Lg2*s +Lg3*s +Lg4*s +Lg5*s  +Lg6*s  +Lg7*s
    (the values of Lg1 to Lg7 are listed in the program)
 and
     |      2          14          |     -58.45
     | Lg1*s +...+Lg7*s    -  R(z) | <= 2
     |                             |
 Note that 2s = f - s*f = f - hfsq + s*hfsq, where hfsq = f*f/2.
 In order to guarantee error in log below 1ulp, we compute log
 by
    log(1+f) = f - s*(f - R)    (if f is not too large)
    log(1+f) = f - (hfsq - s*(hfsq+R)). (better accuracy)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  3. Finally,  log(x) = k*ln2 + log(1+f).
            = k*ln2_hi+(f-(hfsq-(s*(hfsq+R)+k*ln2_lo)))
    Here ln2 is split into two floating point number:
        ln2_hi + ln2_lo,
    where n*ln2_hi is always exact for |n| < 2000.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 log(x) is NaN with signal if x < 0 (including -INF) ;
 log(+INF) is +INF; log(0) is -INF with signal;
 log(NaN) is that NaN with no signal.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Accuracy:
 according to an error analysis, the error is always less than
 1 ulp (unit in the last place).\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constants:
The hexadecimal values are the intended ones for the following
constants. The decimal values may be used, provided that the
compiler will convert from decimal to binary accurately enough
to produce the hexadecimal values shown.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 118 of file log.c.}\par
{
References Lg1, Lg2, Lg3, Lg4, Lg5, Lg6, Lg7, ln2_hi, ln2_lo, two54, and zero.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   119 \{\par
  120     double hfsq,f,s,z,R,w,t1,t2,dk;\par
  121     sword k,hx,i,j;\par
  122     uword lx;\par
  123 \par
  124     EXTRACT_WORDS(hx,lx,x);\par
  125 \par
  126     k=0;\par
  127     if (hx < 0x00100000) \{          /* x < 2**-1022  */\par
  128         if (((hx&0x7fffffff)|lx)==0)\par
  129             return -two54/zero;     /* log(+-0)=-inf */\par
  130         if (hx<0) return (x-x)/zero;    /* log(-#) = NaN */\par
  131         k -= 54;\par
  132         x *= two54; /* subnormal number, scale up x */\par
  133         GET_HIGH_WORD(hx,x);        /* high word of x */\par
  134     \}\par
  135     if (hx >= 0x7ff00000) return x+x;\par
  136     k += (hx>>20)-1023;\par
  137     hx &= 0x000fffff;\par
  138     i = (hx+0x95f64)&0x100000;\par
  139     SET_HIGH_WORD(x,hx|(i^0x3ff00000)); /* normalize x or x/2 */\par
  140     k += (i>>20);\par
  141     f = x-1.0;\par
  142     if((0x000fffff&(2+hx))<3) \{ /* |f| < 2**-20 */\par
  143         if(f==zero) \{\par
  144             if(k==0)\par
  145                 return zero;\par
  146             else \{\par
  147                 dk=(double)k;\par
  148                 return dk*ln2_hi+dk*ln2_lo;\par
  149             \}\par
  150         \}\par
  151         R = f*f*(0.5-0.33333333333333333*f);\par
  152         if(k==0) return f-R;\par
  153         else \{\par
  154             dk=(double)k;\par
  155             return dk*ln2_hi-((R-dk*ln2_lo)-f);\par
  156         \}\par
  157     \}\par
  158     s = f/(2.0+f);\par
  159     dk = (double)k;\par
  160     z = s*s;\par
  161     i = hx-0x6147a;\par
  162     w = z*z;\par
  163     j = 0x6b851-hx;\par
  164     t1= w*(Lg2+w*(Lg4+w*Lg6));\par
  165     t2= z*(Lg1+w*(Lg3+w*(Lg5+w*Lg7)));\par
  166     i |= j;\par
  167     R = t2+t1;\par
  168     if(i>0) \{\par
  169         hfsq=0.5*f*f;\par
  170         if(k==0) return f-(hfsq-s*(hfsq+R));\par
  171         else\par
  172             return dk*ln2_hi-((hfsq-(s*(hfsq+R)+dk*ln2_lo))-f);\par
  173     \} else \{\par
  174         if(k==0) return f-s*(f-R);\par
  175         else\par
  176             return dk*ln2_hi-((s*(f-R)-dk*ln2_lo)-f);\par
  177     \}\par
  178 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v Lg1\:log.c}
{\xe \v log.c\:Lg1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Lg1 = 6.666666666666735130e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file log.c.}\par
{
Referenced by log().}\par
}
{\xe \v Lg2\:log.c}
{\xe \v log.c\:Lg2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Lg2 = 3.999999999940941908e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file log.c.}\par
{
Referenced by log().}\par
}
{\xe \v Lg3\:log.c}
{\xe \v log.c\:Lg3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Lg3 = 2.857142874366239149e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file log.c.}\par
{
Referenced by log().}\par
}
{\xe \v Lg4\:log.c}
{\xe \v log.c\:Lg4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Lg4 = 2.222219843214978396e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file log.c.}\par
{
Referenced by log().}\par
}
{\xe \v Lg5\:log.c}
{\xe \v log.c\:Lg5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Lg5 = 1.818357216161805012e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file log.c.}\par
{
Referenced by log().}\par
}
{\xe \v Lg6\:log.c}
{\xe \v log.c\:Lg6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Lg6 = 1.531383769920937332e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file log.c.}\par
{
Referenced by log().}\par
}
{\xe \v Lg7\:log.c}
{\xe \v log.c\:Lg7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Lg7 = 1.479819860511658591e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file log.c.}\par
{
Referenced by log().}\par
}
{\xe \v ln2_hi\:log.c}
{\xe \v log.c\:ln2_hi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ln2_hi = 6.93147180369123816490e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file log.c.}\par
{
Referenced by log().}\par
}
{\xe \v ln2_lo\:log.c}
{\xe \v log.c\:ln2_lo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ln2_lo = 1.90821492927058770002e-10{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file log.c.}\par
{
Referenced by log().}\par
}
{\xe \v two54\:log.c}
{\xe \v log.c\:two54}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double two54 = 1.80143985094819840000e+16{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file log.c.}\par
{
Referenced by log().}\par
}
{\xe \v zero\:log.c}
{\xe \v log.c\:zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double zero = 0.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file log.c.}\par
{
Referenced by log().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/log10.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/log10.c}
{\xe \v lib/real/log10.c}
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for log10.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "log10_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b log10} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base 10 logarithm function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b two54} = 1.80143985094819840000e+16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ivln10} = 4.34294481903251816668e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b log10_2hi} = 3.01029995663611771306e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b log10_2lo} = 3.69423907715893078616e-13\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b zero} = 0.0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v log10\:log10.c}
{\xe \v log10.c\:log10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double log10 (double  {\i x})}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base 10 logarithm function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
 Let log10_2hi = leading 40 bits of log10(2) and
     log10_2lo = log10(2) - log10_2hi,
     ivln10   = 1/log(10) rounded.
 Then
    n = ilogb(x),
    if(n<0)  n = n+1;
    x = scalbn(x,-n);
    log10(x) := n*log10_2hi + (n*log10_2lo + ivln10*log(x))\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Note 1:
 To guarantee log10(10**n)=n, where 10**n is normal, the rounding
 mode must set to Round-to-Nearest.
Note 2:
 [1/log(10)] rounded to 53 bits has error  .198   ulps;
 log10 is monotonic at all binary break points.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 log10(x) is NaN with signal if x < 0;
 log10(+INF) is +INF with no signal; log10(0) is -INF with signal;
 log10(NaN) is that NaN with no signal;
 log10(10**N) = N  for N=0,1,...,22.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constants:
The hexadecimal values are the intended ones for the following constants.
The decimal values may be used, provided that the compiler will convert
from decimal to binary accurately enough to produce the hexadecimal values
shown.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 95 of file log10.c.}\par
{
References ivln10, log10_2hi, log10_2lo, two54, and zero.}\par
{
Referenced by DecimalSystem::GetRealText(), and RealNumber::Log10().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    96 \{\par
   97     double y,z;\par
   98     sword i,k,hx;\par
   99     uword lx;\par
  100 \par
  101     EXTRACT_WORDS(hx,lx,x);\par
  102 \par
  103     k=0;\par
  104     if (hx < 0x00100000) \{                  /* x < 2**-1022  */\par
  105         if (((hx&0x7fffffff)|lx)==0)\par
  106             return -two54/zero;             /* log(+-0)=-inf */\par
  107         if (hx<0) return (x-x)/zero;        /* log(-#) = NaN */\par
  108         k -= 54;\par
  109         x *= two54; /* subnormal number, scale up x */\par
  110         GET_HIGH_WORD(hx, x);              /* high word of x */\par
  111     \}\par
  112     if (hx >= 0x7ff00000) return x+x;\par
  113     k += (hx>>20)-1023;\par
  114     i  = ((uword)k&0x80000000)>>31;\par
  115     hx = (hx&0x000fffff)|((0x3ff-i)<<20);\par
  116     y  = (double)(k+i);\par
  117     SET_HIGH_WORD(x,hx);\par
  118     z  = y*log10_2lo + ivln10*log(x);\par
  119     return  z+y*log10_2hi;\par
  120 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "log10_8c_a6572e82a4891917a9ba7fb2a964f8182_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ivln10\:log10.c}
{\xe \v log10.c\:ivln10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ivln10 = 4.34294481903251816668e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file log10.c.}\par
{
Referenced by log10().}\par
}
{\xe \v log10_2hi\:log10.c}
{\xe \v log10.c\:log10_2hi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double log10_2hi = 3.01029995663611771306e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file log10.c.}\par
{
Referenced by log10().}\par
}
{\xe \v log10_2lo\:log10.c}
{\xe \v log10.c\:log10_2lo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double log10_2lo = 3.69423907715893078616e-13{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file log10.c.}\par
{
Referenced by log10().}\par
}
{\xe \v two54\:log10.c}
{\xe \v log10.c\:two54}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double two54 = 1.80143985094819840000e+16{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file log10.c.}\par
{
Referenced by log10().}\par
}
{\xe \v zero\:log10.c}
{\xe \v log10.c\:zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double zero = 0.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file log10.c.}\par
{
Referenced by log10().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/log1p.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/log1p.c}
{\xe \v lib/real/log1p.c}
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for log1p.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "log1p_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b log1p} (double x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ln2_hi} = 6.93147180369123816490e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ln2_lo} = 1.90821492927058770002e-10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b two54} = 1.80143985094819840000e+16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Lp1} = 6.666666666666735130e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Lp2} = 3.999999999940941908e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Lp3} = 2.857142874366239149e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Lp4} = 2.222219843214978396e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Lp5} = 1.818357216161805012e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Lp6} = 1.531383769920937332e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b Lp7} = 1.479819860511658591e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b zero} = 0.0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v log1p\:log1p.c}
{\xe \v log1p.c\:log1p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double log1p (double  {\i x})}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file log1p.c.}\par
{
References ln2_hi, ln2_lo, Lp1, Lp2, Lp3, Lp4, Lp5, Lp6, Lp7, two54, and zero.}\par
{
Referenced by acosh(), asinh(), and atanh().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   126 \{\par
  127     double hfsq,f,c,s,z,R,u;\par
  128     sword k,hx,hu,ax;\par
  129 \par
  130     f = 0.0;\par
  131     c = 0.0;\par
  132     hu = 0;\par
  133 \par
  134     GET_HIGH_WORD(hx,x); /* high word of x */\par
  135     ax = hx&0x7fffffff;\par
  136 \par
  137     k = 1;\par
  138     if (hx < 0x3FDA827A) \{          /* x < 0.41422  */\par
  139         if(ax>=0x3ff00000) \{        /* x <= -1.0 */\par
  140             if(x==-1.0) return -two54/zero; /* log1p(-1)=+inf */\par
  141             else return (x-x)/(x-x);    /* log1p(x<-1)=NaN */\par
  142         \}\par
  143         if(ax<0x3e200000) \{         /* |x| < 2**-29 */\par
  144             if(two54+x>zero         /* raise inexact */\par
  145                     &&ax<0x3c900000)        /* |x| < 2**-54 */\par
  146                 return x;\par
  147             else\par
  148                 return x - x*x*0.5;\par
  149         \}\par
  150         if(hx>0||hx<=((int)0xbfd2bec3)) \{\par
  151             k=0;\par
  152             f=x;\par
  153             hu=1;\par
  154         \}   /* -0.2929<x<0.41422 */\par
  155     \}\par
  156     if (hx >= 0x7ff00000) return x+x;\par
  157     if(k!=0) \{\par
  158         if(hx<0x43400000) \{\par
  159             u  = 1.0+x;\par
  160             GET_HIGH_WORD(hu,u); /* high word of u */\par
  161             k  = (hu>>20)-1023;\par
  162             c  = (k>0)? 1.0-(u-x):x-(u-1.0);/* correction term */\par
  163             c /= u;\par
  164         \} else \{\par
  165             u  = x;\par
  166             GET_HIGH_WORD(hu,u); /* high word of u */\par
  167             k  = (hu>>20)-1023;\par
  168             c  = 0;\par
  169         \}\par
  170         hu &= 0x000fffff;\par
  171         if(hu<0x6a09e) \{\par
  172             SET_HIGH_WORD(u, hu|0x3ff00000);    /* normalize u */\par
  173         \} else \{\par
  174             k += 1;\par
  175             SET_HIGH_WORD(u, hu|0x3fe00000);    /* normalize u/2 */\par
  176             hu = (0x00100000-hu)>>2;\par
  177         \}\par
  178         f = u-1.0;\par
  179     \}\par
  180     hfsq=0.5*f*f;\par
  181     if(hu==0) \{ /* |f| < 2**-20 */\par
  182         if(f==zero) \{\par
  183             if(k==0) return zero;\par
  184             else \{\par
  185                 c += k*ln2_lo;\par
  186                 return k*ln2_hi+c;\par
  187             \}\par
  188         \}\par
  189         R = hfsq*(1.0-0.66666666666666666*f);\par
  190         if(k==0) return f-R;\par
  191         else\par
  192             return k*ln2_hi-((R-(k*ln2_lo+c))-f);\par
  193     \}\par
  194     s = f/(2.0+f);\par
  195     z = s*s;\par
  196     R = z*(Lp1+z*(Lp2+z*(Lp3+z*(Lp4+z*(Lp5+z*(Lp6+z*Lp7))))));\par
  197     if(k==0) return f-(hfsq-s*(hfsq+R));\par
  198     else\par
  199         return k*ln2_hi-((hfsq-(s*(hfsq+R)+(k*ln2_lo+c)))-f);\par
  200 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "log1p_8c_ac2aac20ab1347498e6e4f209148fea84_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ln2_hi\:log1p.c}
{\xe \v log1p.c\:ln2_hi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ln2_hi = 6.93147180369123816490e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 112 of file log1p.c.}\par
{
Referenced by log1p().}\par
}
{\xe \v ln2_lo\:log1p.c}
{\xe \v log1p.c\:ln2_lo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ln2_lo = 1.90821492927058770002e-10{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 113 of file log1p.c.}\par
{
Referenced by log1p().}\par
}
{\xe \v Lp1\:log1p.c}
{\xe \v log1p.c\:Lp1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Lp1 = 6.666666666666735130e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 115 of file log1p.c.}\par
{
Referenced by log1p().}\par
}
{\xe \v Lp2\:log1p.c}
{\xe \v log1p.c\:Lp2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Lp2 = 3.999999999940941908e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 116 of file log1p.c.}\par
{
Referenced by log1p().}\par
}
{\xe \v Lp3\:log1p.c}
{\xe \v log1p.c\:Lp3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Lp3 = 2.857142874366239149e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 117 of file log1p.c.}\par
{
Referenced by log1p().}\par
}
{\xe \v Lp4\:log1p.c}
{\xe \v log1p.c\:Lp4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Lp4 = 2.222219843214978396e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 118 of file log1p.c.}\par
{
Referenced by log1p().}\par
}
{\xe \v Lp5\:log1p.c}
{\xe \v log1p.c\:Lp5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Lp5 = 1.818357216161805012e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 119 of file log1p.c.}\par
{
Referenced by log1p().}\par
}
{\xe \v Lp6\:log1p.c}
{\xe \v log1p.c\:Lp6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Lp6 = 1.531383769920937332e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 120 of file log1p.c.}\par
{
Referenced by log1p().}\par
}
{\xe \v Lp7\:log1p.c}
{\xe \v log1p.c\:Lp7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double Lp7 = 1.479819860511658591e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 121 of file log1p.c.}\par
{
Referenced by log1p().}\par
}
{\xe \v two54\:log1p.c}
{\xe \v log1p.c\:two54}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double two54 = 1.80143985094819840000e+16{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 114 of file log1p.c.}\par
{
Referenced by log1p().}\par
}
{\xe \v zero\:log1p.c}
{\xe \v log1p.c\:zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double zero = 0.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 123 of file log1p.c.}\par
{
Referenced by log1p().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/matherr.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/matherr.c}
{\xe \v lib/real/matherr.c}
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "fdlibm.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for matherr.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "matherr_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b matherr} (struct exception *x)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v matherr\:matherr.c}
{\xe \v matherr.c\:matherr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int matherr (struct exception *  {\i x})}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file matherr.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    53 \{\par
   54     int n=0;\par
   55     if(x->arg1!=x->arg1) return 0;\par
   56     return n;\par
   57 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/modf.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/modf.c}
{\xe \v lib/real/modf.c}
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "fdlibm.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for modf.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "modf_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b modf} (double x, double *iptr)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b one} = 1.0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v modf\:modf.c}
{\xe \v modf.c\:modf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double modf (double  {\i x}, double*  {\i iptr})}}
\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file modf.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    69 \{\par
   70     int i0,i1,j0;\par
   71     unsigned i;\par
   72     i0 =  __HI(x);      /* high x */\par
   73     i1 =  __LO(x);      /* low  x */\par
   74     j0 = ((i0>>20)&0x7ff)-0x3ff;    /* exponent of x */\par
   75     if(j0<20) \{         /* integer part in high x */\par
   76         if(j0<0) \{          /* |x|<1 */\par
   77             __HIp(iptr) = i0&0x80000000;\par
   78             __LOp(iptr) = 0;        /* *iptr = +-0 */\par
   79             return x;\par
   80         \} else \{\par
   81             i = (0x000fffff)>>j0;\par
   82             if(((i0&i)|i1)==0) \{        /* x is integral */\par
   83                 *iptr = x;\par
   84                 __HI(x) &= 0x80000000;\par
   85                 __LO(x)  = 0;   /* return +-0 */\par
   86                 return x;\par
   87             \} else \{\par
   88                 __HIp(iptr) = i0&(~i);\par
   89                 __LOp(iptr) = 0;\par
   90                 return x - *iptr;\par
   91             \}\par
   92         \}\par
   93     \} else if (j0>51) \{     /* no fraction part */\par
   94         *iptr = x*one;\par
   95         __HI(x) &= 0x80000000;\par
   96         __LO(x)  = 0;   /* return +-0 */\par
   97         return x;\par
   98     \} else \{            /* fraction part in low x */\par
   99         i = ((unsigned)(0xffffffff))>>(j0-20);\par
  100         if((i1&i)==0) \{         /* x is integral */\par
  101             *iptr = x;\par
  102             __HI(x) &= 0x80000000;\par
  103             __LO(x)  = 0;   /* return +-0 */\par
  104             return x;\par
  105         \} else \{\par
  106             __HIp(iptr) = i0;\par
  107             __LOp(iptr) = i1&(~i);\par
  108             return x - *iptr;\par
  109         \}\par
  110     \}\par
  111 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v one\:modf.c}
{\xe \v modf.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double one = 1.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file modf.c.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/nextafter.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/nextafter.c}
{\xe \v lib/real/nextafter.c}
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "fdlibm.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for nextafter.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "nextafter_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b nextafter} (double x, double y)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v nextafter\:nextafter.c}
{\xe \v nextafter.c\:nextafter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double nextafter (double  {\i x}, double  {\i y})}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file nextafter.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    60 \{\par
   61     int hx,hy,ix,iy;\par
   62     unsigned lx,ly;\par
   63 \par
   64     hx = __HI(x);       /* high word of x */\par
   65     lx = __LO(x);       /* low  word of x */\par
   66     hy = __HI(y);       /* high word of y */\par
   67     ly = __LO(y);       /* low  word of y */\par
   68     ix = hx&0x7fffffff;     /* |x| */\par
   69     iy = hy&0x7fffffff;     /* |y| */\par
   70 \par
   71     if(((ix>=0x7ff00000)&&((ix-0x7ff00000)|lx)!=0) ||   /* x is nan */\par
   72             ((iy>=0x7ff00000)&&((iy-0x7ff00000)|ly)!=0))     /* y is nan */\par
   73         return x+y;\par
   74     if(x==y) return x;      /* x=y, return x */\par
   75     if((ix|lx)==0) \{            /* x == 0 */\par
   76         __HI(x) = hy&0x80000000;    /* return +-minsubnormal */\par
   77         __LO(x) = 1;\par
   78         y = x*x;\par
   79         if(y==x) return y;\par
   80         else return x;  /* raise underflow flag */\par
   81     \}\par
   82     if(hx>=0) \{             /* x > 0 */\par
   83         if(hx>hy||((hx==hy)&&(lx>ly))) \{    /* x > y, x -= ulp */\par
   84             if(lx==0) hx -= 1;\par
   85             lx -= 1;\par
   86         \} else \{                /* x < y, x += ulp */\par
   87             lx += 1;\par
   88             if(lx==0) hx += 1;\par
   89         \}\par
   90     \} else \{                /* x < 0 */\par
   91         if(hy>=0||hx>hy||((hx==hy)&&(lx>ly))) \{ /* x < y, x -= ulp */\par
   92             if(lx==0) hx -= 1;\par
   93             lx -= 1;\par
   94         \} else \{                /* x > y, x += ulp */\par
   95             lx += 1;\par
   96             if(lx==0) hx += 1;\par
   97         \}\par
   98     \}\par
   99     hy = hx&0x7ff00000;\par
  100     if(hy>=0x7ff00000) return x+x;  /* overflow  */\par
  101     if(hy<0x00100000) \{     /* underflow */\par
  102         y = x*x;\par
  103         if(y!=x) \{      /* raise underflow flag */\par
  104             __HI(y) = hx;\par
  105             __LO(y) = lx;\par
  106             return y;\par
  107         \}\par
  108     \}\par
  109     __HI(x) = hx;\par
  110     __LO(x) = lx;\par
  111     return x;\par
  112 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/pow.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/pow.c}
{\xe \v lib/real/pow.c}
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for pow.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pow_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pow} (double x, double y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expontation function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b bp} [] = \{1.0, 1.5,\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b dp_h} [] = \{ 0.0, 5.84962487220764160156e-01,\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b dp_l} [] = \{ 0.0, 1.35003920212974897128e-08,\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b zero} = 0.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b two} = 2.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b two53} = 9007199254740992.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b huge} = 1.0e300\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b tiny} = 1.0e-300\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b L1} = 5.99999999999994648725e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b L2} = 4.28571428578550184252e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b L3} = 3.33333329818377432918e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b L4} = 2.72728123808534006489e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b L5} = 2.30660745775561754067e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b L6} = 2.06975017800338417784e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b P1} = 1.66666666666666019037e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b P2} = -2.77777777770155933842e-03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b P3} = 6.61375632143793436117e-05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b P4} = -1.65339022054652515390e-06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b P5} = 4.13813679705723846039e-08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b lg2} = 6.93147180559945286227e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b lg2_h} = 6.93147182464599609375e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b lg2_l} = -1.90465429995776804525e-09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ovt} = 8.0085662595372944372e-0017\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b cp} = 9.61796693925975554329e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b cp_h} = 9.61796700954437255859e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b cp_l} = -7.02846165095275826516e-09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ivln2} = 1.44269504088896338700e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ivln2_h} = 1.44269502162933349609e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b ivln2_l} = 1.92596299112661746887e-08\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v pow\:pow.c}
{\xe \v pow.c\:pow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pow (double  {\i x}, double  {\i y})}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expontation function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method:  Let x =  2   * (1+f)
 1. Compute and return log2(x) in two pieces:
    log2(x) = w1 + w2,
    where w1 has 53-24 = 29 bit trailing zeros.
 2. Perform y*log2(x) = n+y' by simulating muti-precision
    arithmetic, where |y'|<=0.5.
 3. Return x**y = 2**n*exp(y'*log2)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 1.  (anything) ** 0  is 1
 2.  (anything) ** 1  is itself
 3.  (anything) ** NAN is NAN
 4.  NAN ** (anything except 0) is NAN
 5.  +-(|x| > 1) **  +INF is +INF
 6.  +-(|x| > 1) **  -INF is +0
 7.  +-(|x| < 1) **  +INF is +0
 8.  +-(|x| < 1) **  -INF is +INF
 9.  +-1         ** +-INF is NAN
 10. +0 ** (+anything except 0, NAN)               is +0
 11. -0 ** (+anything except 0, NAN, odd integer)  is +0
 12. +0 ** (-anything except 0, NAN)               is +INF
 13. -0 ** (-anything except 0, NAN, odd integer)  is +INF
 14. -0 ** (odd integer) = -( +0 ** (odd integer) )
 15. +INF ** (+anything except 0,NAN) is +INF
 16. +INF ** (-anything except 0,NAN) is +0
 17. -INF ** (anything)  = -0 ** (-anything)
 18. (-anything) ** (integer) is (-1)**(integer)*(+anything**integer)
 19. (-anything except 0 and inf) ** (non-integer) is NAN\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Accuracy:
 pow(x,y) returns x**y nearly rounded. In particular
        pow(integer,integer)
 always returns the correct integer provided it is
 representable.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constants :
The hexadecimal values are the intended ones for the following
constants. The decimal values may be used, provided that the
compiler will convert from decimal to binary accurately enough
to produce the hexadecimal values shown.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 139 of file pow.c.}\par
{
References bp, cp, cp_h, cp_l, dp_h, dp_l, huge, ivln2, ivln2_h, ivln2_l, L1, L2, L3, L4, L5, L6, lg2, lg2_h, lg2_l, one, ovt, P1, P2, P3, P4, P5, scalbn(), sqrt(), tiny, two, two53, and zero.}\par
{
Referenced by cpow(), DecimalSystem::GetRealText(), PositionalNumeralSystem::GetText(), PositionalNumeralSystem::Parse(), and RealNumber::Raise().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   140 \{\par
  141     double z,ax,z_h,z_l,p_h,p_l;\par
  142     double y1,t1,t2,r,s,t,u,v,w;\par
  143     sword i0,i1,i,j,k,yisint,n;\par
  144     sword hx,hy,ix,iy;\par
  145     uword lx,ly;\par
  146 \par
  147     i0 = ((*(int*)&one)>>29)^1;\par
  148     i1=1-i0;\par
  149     EXTRACT_WORDS(hx,lx,x);\par
  150     EXTRACT_WORDS(hy,ly,y);\par
  151     ix = hx&0x7fffffff;\par
  152     iy = hy&0x7fffffff;\par
  153 \par
  154     /* y==zero: x**0 = 1 */\par
  155     if((iy|ly)==0) return one;\par
  156 \par
  157     /* +-NaN return x+y */\par
  158     if(ix > 0x7ff00000 || ((ix==0x7ff00000)&&(lx!=0)) ||\par
  159             iy > 0x7ff00000 || ((iy==0x7ff00000)&&(ly!=0)))\par
  160         return x+y;\par
  161 \par
  162     /* determine if y is an odd int when x < 0\par
  163      * yisint = 0   ... y is not an integer\par
  164      * yisint = 1   ... y is an odd int\par
  165      * yisint = 2   ... y is an even int\par
  166      */\par
  167     yisint  = 0;\par
  168     if(hx<0) \{\par
  169         if(iy>=0x43400000) yisint = 2; /* even integer y */\par
  170         else if(iy>=0x3ff00000) \{\par
  171             k = (iy>>20)-0x3ff;    /* exponent */\par
  172             if(k>20) \{\par
  173                 j = ly>>(52-k);\par
  174                 if((uword)(j<<(52-k))==ly) yisint = 2-(j&1);\par
  175             \} else if(ly==0) \{\par
  176                 j = iy>>(20-k);\par
  177                 if((j<<(20-k))==iy) yisint = 2-(j&1);\par
  178             \}\par
  179         \}\par
  180     \}\par
  181 \par
  182     /* special value of y */\par
  183     if(ly==0) \{\par
  184         if (iy==0x7ff00000) \{   /* y is +-inf */\par
  185             if(((ix-0x3ff00000)|lx)==0)\par
  186                 return  y - y;  /* inf**+-1 is NaN */\par
  187             else if (ix >= 0x3ff00000)/* (|x|>1)**+-inf = inf,0 */\par
  188                 return (hy>=0)? y: zero;\par
  189             else            /* (|x|<1)**-,+inf = inf,0 */\par
  190                 return (hy<0)?-y: zero;\par
  191         \}\par
  192         if(iy==0x3ff00000) \{    /* y is  +-1 */\par
  193             if(hy<0) return one/x;\par
  194             else return x;\par
  195         \}\par
  196         if(hy==0x40000000) return x*x; /* y is  2 */\par
  197         if(hy==0x3fe00000) \{    /* y is  0.5 */\par
  198             if(hx>=0)   /* x >= +0 */\par
  199                 return sqrt(x);\par
  200         \}\par
  201     \}\par
  202 \par
  203     ax   = fabs(x);\par
  204     /* special value of x */\par
  205     if(lx==0) \{\par
  206         if(ix==0x7ff00000||ix==0||ix==0x3ff00000) \{\par
  207             z = ax;         /*x is +-0,+-inf,+-1*/\par
  208             if(hy<0) z = one/z; /* z = (1/|x|) */\par
  209             if(hx<0) \{\par
  210                 if(((ix-0x3ff00000)|yisint)==0) \{\par
  211                     z = (z-z)/(z-z); /* (-1)**non-int is NaN */\par
  212                 \} else if(yisint==1)\par
  213                     z = -z;     /* (x<0)**odd = -(|x|**odd) */\par
  214             \}\par
  215             return z;\par
  216         \}\par
  217     \}\par
  218 \par
  219     n = (hx>>31)+1;\par
  220 \par
  221     /* (x<0)**(non-int) is NaN */\par
  222     if((n|yisint)==0) return (x-x)/(x-x);\par
  223 \par
  224     s = one; /* s (sign of result -ve**odd) = -1 else = 1 */\par
  225     if((n|(yisint-1))==0) s = -one;/* (-ve)**(odd int) */\par
  226 \par
  227     /* |y| is huge */\par
  228     if(iy>0x41e00000) \{ /* if |y| > 2**31 */\par
  229         if(iy>0x43f00000) \{ /* if |y| > 2**64, must o/uflow */\par
  230             if(ix<=0x3fefffff) return (hy<0)? huge*huge:tiny*tiny;\par
  231             if(ix>=0x3ff00000) return (hy>0)? huge*huge:tiny*tiny;\par
  232         \}\par
  233         /* over/underflow if x is not close to one */\par
  234         if(ix<0x3fefffff) return (hy<0)? s*huge*huge:s*tiny*tiny;\par
  235         if(ix>0x3ff00000) return (hy>0)? s*huge*huge:s*tiny*tiny;\par
  236         /* now |1-x| is tiny <= 2**-20, suffice to compute\par
  237            log(x) by x-x^2/2+x^3/3-x^4/4 */\par
  238         t = ax-one;     /* t has 20 trailing zeros */\par
  239         w = (t*t)*(0.5-t*(0.3333333333333333333333-t*0.25));\par
  240         u = ivln2_h*t;  /* ivln2_h has 21 sig. bits */\par
  241         v = t*ivln2_l-w*ivln2;\par
  242         t1 = u+v;\par
  243         SET_LOW_WORD(t1,0);\par
  244         t2 = v-(t1-u);\par
  245     \} else \{\par
  246         double ss,s2,s_h,s_l,t_h,t_l;\par
  247         n = 0;\par
  248         /* take care subnormal number */\par
  249         if(ix<0x00100000)\par
  250         \{\par
  251             ax *= two53;\par
  252             n -= 53;\par
  253             GET_HIGH_WORD(ix,ax);\par
  254         \}\par
  255         n  += ((ix)>>20)-0x3ff;\par
  256         j  = ix&0x000fffff;\par
  257         /* determine interval */\par
  258         ix = j|0x3ff00000;      /* normalize ix */\par
  259         if(j<=0x3988E) k=0;     /* |x|<sqrt(3/2) */\par
  260         else if(j<0xBB67A) k=1; /* |x|<sqrt(3)   */\par
  261         else \{\par
  262             k=0;\par
  263             n+=1;\par
  264             ix -= 0x00100000;\par
  265         \}\par
  266         SET_HIGH_WORD(ax,ix);\par
  267 \par
  268         /* compute ss = s_h+s_l = (x-1)/(x+1) or (x-1.5)/(x+1.5) */\par
  269         u = ax-bp[k];       /* bp[0]=1.0, bp[1]=1.5 */\par
  270         v = one/(ax+bp[k]);\par
  271         ss = u*v;\par
  272         s_h = ss;\par
  273         SET_LOW_WORD(s_h,0);\par
  274         /* t_h=ax+bp[k] High */\par
  275         t_h = zero;\par
  276         SET_HIGH_WORD(t_h,((ix>>1)|0x20000000)+0x00080000+(k<<18));\par
  277         t_l = ax - (t_h-bp[k]);\par
  278         s_l = v*((u-s_h*t_h)-s_h*t_l);\par
  279         /* compute log(ax) */\par
  280         s2 = ss*ss;\par
  281         r = s2*s2*(L1+s2*(L2+s2*(L3+s2*(L4+s2*(L5+s2*L6)))));\par
  282         r += s_l*(s_h+ss);\par
  283         s2  = s_h*s_h;\par
  284         t_h = 3.0+s2+r;\par
  285         SET_LOW_WORD(t_h,0);\par
  286         t_l = r-((t_h-3.0)-s2);\par
  287         /* u+v = ss*(1+...) */\par
  288         u = s_h*t_h;\par
  289         v = s_l*t_h+t_l*ss;\par
  290         /* 2/(3log2)*(ss+...) */\par
  291         p_h = u+v;\par
  292         SET_LOW_WORD(p_h,0);\par
  293         p_l = v-(p_h-u);\par
  294         z_h = cp_h*p_h;     /* cp_h+cp_l = 2/(3*log2) */\par
  295         z_l = cp_l*p_h+p_l*cp+dp_l[k];\par
  296         /* log2(ax) = (ss+..)*2/(3*log2) = n + dp_h + z_h + z_l */\par
  297         t = (double)n;\par
  298         t1 = (((z_h+z_l)+dp_h[k])+t);\par
  299         SET_LOW_WORD(t1,0);\par
  300         t2 = z_l-(((t1-t)-dp_h[k])-z_h);\par
  301     \}\par
  302 \par
  303     /* split up y into y1+y2 and compute (y1+y2)*(t1+t2) */\par
  304     y1  = y;\par
  305     SET_LOW_WORD(y1,0);\par
  306     p_l = (y-y1)*t1+y*t2;\par
  307     p_h = y1*t1;\par
  308     z = p_l+p_h;\par
  309     EXTRACT_WORDS(j,i,z);\par
  310     if (j>=0x40900000) \{                /* z >= 1024 */\par
  311         if(((j-0x40900000)|i)!=0)           /* if z > 1024 */\par
  312             return s*huge*huge;         /* overflow */\par
  313         else \{\par
  314             if(p_l+ovt>z-p_h) return s*huge*huge;   /* overflow */\par
  315         \}\par
  316     \} else if((j&0x7fffffff)>=0x4090cc00 ) \{    /* z <= -1075 */\par
  317         if(((j-0xc090cc00)|i)!=0)       /* z < -1075 */\par
  318             return s*tiny*tiny;     /* underflow */\par
  319         else \{\par
  320             if(p_l<=z-p_h) return s*tiny*tiny;  /* underflow */\par
  321         \}\par
  322     \}\par
  323     /*\par
  324      * compute 2**(p_h+p_l)\par
  325      */\par
  326     i = j&0x7fffffff;\par
  327     k = (i>>20)-0x3ff;\par
  328     n = 0;\par
  329     if(i>0x3fe00000) \{      /* if |z| > 0.5, set n = [z+0.5] */\par
  330         n = j+(0x00100000>>(k+1));\par
  331         k = ((n&0x7fffffff)>>20)-0x3ff; /* new k for n */\par
  332         t = zero;\par
  333         SET_HIGH_WORD(t,(n&~(0x000fffff>>k)));\par
  334         n = ((n&0x000fffff)|0x00100000)>>(20-k);\par
  335         if(j<0) n = -n;\par
  336         p_h -= t;\par
  337     \}\par
  338     t = p_l+p_h;\par
  339     SET_LOW_WORD(t,0);\par
  340     u = t*lg2_h;\par
  341     v = (p_l-(t-p_h))*lg2+t*lg2_l;\par
  342     z = u+v;\par
  343     w = v-(z-u);\par
  344     t  = z*z;\par
  345     t1  = z - t*(P1+t*(P2+t*(P3+t*(P4+t*P5))));\par
  346     r  = (z*t1)/(t1-two)-(w+z*w);\par
  347     z  = one-(r-z);\par
  348     GET_HIGH_WORD(j,z);\par
  349     j += (n<<20);\par
  350     if((j>>20)<=0) z = scalbn(z,n); /* subnormal output */\par
  351     else\par
  352     \{\par
  353         uword hz;\par
  354         GET_HIGH_WORD(hz,z);\par
  355         SET_HIGH_WORD(z,hz + (n<<20));\par
  356     \}\par
  357     return s*z;\par
  358 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pow_8c_aa56c9494c95edf68386375e97d64159b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pow_8c_aa56c9494c95edf68386375e97d64159b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v bp\:pow.c}
{\xe \v pow.c\:bp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double bp[] = \{1.0, 1.5,\}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v cp\:pow.c}
{\xe \v pow.c\:cp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double cp = 9.61796693925975554329e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v cp_h\:pow.c}
{\xe \v pow.c\:cp_h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double cp_h = 9.61796700954437255859e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 80 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v cp_l\:pow.c}
{\xe \v pow.c\:cp_l}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double cp_l = -7.02846165095275826516e-09{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v dp_h\:pow.c}
{\xe \v pow.c\:dp_h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double dp_h[] = \{ 0.0, 5.84962487220764160156e-01,\}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v dp_l\:pow.c}
{\xe \v pow.c\:dp_l}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double dp_l[] = \{ 0.0, 1.35003920212974897128e-08,\}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v huge\:pow.c}
{\xe \v pow.c\:huge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double huge = 1.0e300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v ivln2\:pow.c}
{\xe \v pow.c\:ivln2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ivln2 = 1.44269504088896338700e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v ivln2_h\:pow.c}
{\xe \v pow.c\:ivln2_h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ivln2_h = 1.44269502162933349609e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v ivln2_l\:pow.c}
{\xe \v pow.c\:ivln2_l}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ivln2_l = 1.92596299112661746887e-08{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 84 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v L1\:pow.c}
{\xe \v pow.c\:L1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double L1 = 5.99999999999994648725e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v L2\:pow.c}
{\xe \v pow.c\:L2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double L2 = 4.28571428578550184252e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v L3\:pow.c}
{\xe \v pow.c\:L3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double L3 = 3.33333329818377432918e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v L4\:pow.c}
{\xe \v pow.c\:L4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double L4 = 2.72728123808534006489e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v L5\:pow.c}
{\xe \v pow.c\:L5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double L5 = 2.30660745775561754067e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v L6\:pow.c}
{\xe \v pow.c\:L6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double L6 = 2.06975017800338417784e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v lg2\:pow.c}
{\xe \v pow.c\:lg2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double lg2 = 6.93147180559945286227e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v lg2_h\:pow.c}
{\xe \v pow.c\:lg2_h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double lg2_h = 6.93147182464599609375e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v lg2_l\:pow.c}
{\xe \v pow.c\:lg2_l}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double lg2_l = -1.90465429995776804525e-09{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v one\:pow.c}
{\xe \v pow.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v ovt\:pow.c}
{\xe \v pow.c\:ovt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ovt = 8.0085662595372944372e-0017{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v P1\:pow.c}
{\xe \v pow.c\:P1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double P1 = 1.66666666666666019037e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v P2\:pow.c}
{\xe \v pow.c\:P2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double P2 = -2.77777777770155933842e-03{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v P3\:pow.c}
{\xe \v pow.c\:P3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double P3 = 6.61375632143793436117e-05{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v P4\:pow.c}
{\xe \v pow.c\:P4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double P4 = -1.65339022054652515390e-06{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v P5\:pow.c}
{\xe \v pow.c\:P5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double P5 = 4.13813679705723846039e-08{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v tiny\:pow.c}
{\xe \v pow.c\:tiny}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double tiny = 1.0e-300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v two\:pow.c}
{\xe \v pow.c\:two}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double two = 2.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v two53\:pow.c}
{\xe \v pow.c\:two53}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double two53 = 9007199254740992.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file pow.c.}\par
{
Referenced by pow().}\par
}
{\xe \v zero\:pow.c}
{\xe \v pow.c\:zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double zero = 0.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file pow.c.}\par
{
Referenced by pow().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/remp2.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/remp2.c}
{\xe \v lib/real/remp2.c}
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for remp2.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "remp2_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rempio2} (double x, double *y)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b two_over_pi} []\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b npio2_hw} []\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b zero} = 0.00000000000000000000e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b half} = 5.00000000000000000000e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b two24} = 1.67772160000000000000e+07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b invpio2} = 6.36619772367581382433e-01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pio2_1} = 1.57079632673412561417e+00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pio2_1t} = 6.07710050650619224932e-11\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pio2_2} = 6.07710050630396597660e-11\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pio2_2t} = 2.02226624879595063154e-21\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pio2_3} = 2.02226624871116645580e-21\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b pio2_3t} = 8.47842766036889956997e-32\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rempio2\:remp2.c}
{\xe \v remp2.c\:rempio2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int rempio2 (double  {\i x}, double *  {\i y})}}
\par
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 103 of file remp2.c.}\par
{
References __kernel_rem_pio2(), half, invpio2, npio2_hw, pio2_1, pio2_1t, pio2_2, pio2_2t, pio2_3, pio2_3t, two24, two_over_pi, and zero.}\par
{
Referenced by cos(), sin(), and tan().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   104 \{\par
  105     double z = 0.,w,t,r,fn;\par
  106     double tx[3];\par
  107     sword i,j,n,ix,hx;\par
  108     int e0,nx;\par
  109     uword low;\par
  110 \par
  111     GET_HIGH_WORD(hx,x);        /* high word of x */\par
  112     ix = hx&0x7fffffff;\par
  113     if(ix<=0x3fe921fb)   /* |x| ~<= pi/4 , no need for reduction */\par
  114     \{\par
  115         y[0] = x;\par
  116         y[1] = 0;\par
  117         return 0;\par
  118     \}\par
  119     if(ix<0x4002d97c) \{  /* |x| < 3pi/4, special case with n=+-1 */\par
  120         if(hx>0) \{\par
  121             z = x - pio2_1;\par
  122             if(ix!=0x3ff921fb) \{    /* 33+53 bit pi is good enough */\par
  123                 y[0] = z - pio2_1t;\par
  124                 y[1] = (z-y[0])-pio2_1t;\par
  125             \} else \{        /* near pi/2, use 33+33+53 bit pi */\par
  126                 z -= pio2_2;\par
  127                 y[0] = z - pio2_2t;\par
  128                 y[1] = (z-y[0])-pio2_2t;\par
  129             \}\par
  130             return 1;\par
  131         \} else \{    /* negative x */\par
  132             z = x + pio2_1;\par
  133             if(ix!=0x3ff921fb) \{    /* 33+53 bit pi is good enough */\par
  134                 y[0] = z + pio2_1t;\par
  135                 y[1] = (z-y[0])+pio2_1t;\par
  136             \} else \{        /* near pi/2, use 33+33+53 bit pi */\par
  137                 z += pio2_2;\par
  138                 y[0] = z + pio2_2t;\par
  139                 y[1] = (z-y[0])+pio2_2t;\par
  140             \}\par
  141             return -1;\par
  142         \}\par
  143     \}\par
  144     if(ix<=0x413921fb) \{ /* |x| ~<= 2^19*(pi/2), medium size */\par
  145         t  = fabs(x);\par
  146         n  = (sword) (t*invpio2+half);\par
  147         fn = (double)n;\par
  148         r  = t-fn*pio2_1;\par
  149         w  = fn*pio2_1t;    /* 1st round good to 85 bit */\par
  150         if(n<32&&ix!=npio2_hw[n-1]) \{\par
  151             y[0] = r-w; /* quick check no cancellation */\par
  152         \} else \{\par
  153             uword high;\par
  154 \par
  155             j  = ix>>20;\par
  156             y[0] = r-w;\par
  157             GET_HIGH_WORD(high, y[0]);\par
  158             i = j-((high>>20)&0x7ff);\par
  159             if(i>16) \{  /* 2nd iteration needed, good to 118 */\par
  160                 t  = r;\par
  161                 w  = fn*pio2_2;\par
  162                 r  = t-w;\par
  163                 w  = fn*pio2_2t-((t-r)-w);\par
  164                 y[0] = r-w;\par
  165                 GET_HIGH_WORD(high,y[0]);\par
  166                 i = j-((high>>20)&0x7ff);\par
  167                 if(i>49)  \{ /* 3rd iteration need, 151 bits acc */\par
  168                     t  = r; /* will cover all possible cases */\par
  169                     w  = fn*pio2_3;\par
  170                     r  = t-w;\par
  171                     w  = fn*pio2_3t-((t-r)-w);\par
  172                     y[0] = r-w;\par
  173                 \}\par
  174             \}\par
  175         \}\par
  176         y[1] = (r-y[0])-w;\par
  177         if(hx<0)    \{\par
  178             y[0] = -y[0];\par
  179             y[1] = -y[1];\par
  180             return -n;\par
  181         \}\par
  182         else     return n;\par
  183     \}\par
  184     /*\par
  185      * all other (large) arguments\par
  186      */\par
  187     if(ix>=0x7ff00000) \{        /* x is inf or NaN */\par
  188         y[0]=y[1]=x-x;\par
  189         return 0;\par
  190     \}\par
  191     /* set z = scalbn(|x|,ilogb(x)-23) */\par
  192     GET_LOW_WORD(low,x);\par
  193     SET_LOW_WORD(z,low);\par
  194     e0  = (sword)(ix>>20)-1046; /* e0 = ilogb(z)-23; */\par
  195     SET_HIGH_WORD(z,ix - (e0<<20));\par
  196     for(i=0; i<2; i++) \{\par
  197         tx[i] = (double)((sword)(z));\par
  198         z     = (z-tx[i])*two24;\par
  199     \}\par
  200     tx[2] = z;\par
  201     nx = 3;\par
  202     while(tx[nx-1]==zero) nx--; /* skip zero term */\par
  203     n  =  __kernel_rem_pio2(tx,y,e0,nx,2,two_over_pi);\par
  204     if(hx<0) \{\par
  205         y[0] = -y[0];\par
  206         y[1] = -y[1];\par
  207         return -n;\par
  208     \}\par
  209     return n;\par
  210 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "remp2_8c_a320ce87737d621d713124124e2c02cdc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "remp2_8c_a320ce87737d621d713124124e2c02cdc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v half\:remp2.c}
{\xe \v remp2.c\:half}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double half = 5.00000000000000000000e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file remp2.c.}\par
{
Referenced by rempio2().}\par
}
{\xe \v invpio2\:remp2.c}
{\xe \v remp2.c\:invpio2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double invpio2 = 6.36619772367581382433e-01{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file remp2.c.}\par
{
Referenced by rempio2().}\par
}
{\xe \v npio2_hw\:remp2.c}
{\xe \v remp2.c\:npio2_hw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int npio2_hw[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    0x3FF921FB, 0x400921FB, 0x4012D97C, 0x401921FB, 0x401F6A7A, 0x4022D97C,\par
    0x4025FDBB, 0x402921FB, 0x402C463A, 0x402F6A7A, 0x4031475C, 0x4032D97C,\par
    0x40346B9C, 0x4035FDBB, 0x40378FDB, 0x403921FB, 0x403AB41B, 0x403C463A,\par
    0x403DD85A, 0x403F6A7A, 0x40407E4C, 0x4041475C, 0x4042106C, 0x4042D97C,\par
    0x4043A28C, 0x40446B9C, 0x404534AC, 0x4045FDBB, 0x4046C6CB, 0x40478FDB,\par
    0x404858EB, 0x404921FB,\par
\}\par
}
{
Definition at line 72 of file remp2.c.}\par
{
Referenced by rempio2().}\par
}
{\xe \v pio2_1\:remp2.c}
{\xe \v remp2.c\:pio2_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pio2_1 = 1.57079632673412561417e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file remp2.c.}\par
{
Referenced by rempio2().}\par
}
{\xe \v pio2_1t\:remp2.c}
{\xe \v remp2.c\:pio2_1t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pio2_1t = 6.07710050650619224932e-11{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file remp2.c.}\par
{
Referenced by rempio2().}\par
}
{\xe \v pio2_2\:remp2.c}
{\xe \v remp2.c\:pio2_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pio2_2 = 6.07710050630396597660e-11{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 98 of file remp2.c.}\par
{
Referenced by rempio2().}\par
}
{\xe \v pio2_2t\:remp2.c}
{\xe \v remp2.c\:pio2_2t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pio2_2t = 2.02226624879595063154e-21{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file remp2.c.}\par
{
Referenced by rempio2().}\par
}
{\xe \v pio2_3\:remp2.c}
{\xe \v remp2.c\:pio2_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pio2_3 = 2.02226624871116645580e-21{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 100 of file remp2.c.}\par
{
Referenced by rempio2().}\par
}
{\xe \v pio2_3t\:remp2.c}
{\xe \v remp2.c\:pio2_3t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double pio2_3t = 8.47842766036889956997e-32{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file remp2.c.}\par
{
Referenced by rempio2().}\par
}
{\xe \v two24\:remp2.c}
{\xe \v remp2.c\:two24}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double two24 = 1.67772160000000000000e+07{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 94 of file remp2.c.}\par
{
Referenced by rempio2().}\par
}
{\xe \v two_over_pi\:remp2.c}
{\xe \v remp2.c\:two_over_pi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int two_over_pi[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    0xA2F983, 0x6E4E44, 0x1529FC, 0x2757D1, 0xF534DD, 0xC0DB62,\par
    0x95993C, 0x439041, 0xFE5163, 0xABDEBB, 0xC561B7, 0x246E3A,\par
    0x424DD2, 0xE00649, 0x2EEA09, 0xD1921C, 0xFE1DEB, 0x1CB129,\par
    0xA73EE8, 0x8235F5, 0x2EBB44, 0x84E99C, 0x7026B4, 0x5F7E41,\par
    0x3991D6, 0x398353, 0x39F49C, 0x845F8B, 0xBDF928, 0x3B1FF8,\par
    0x97FFDE, 0x05980F, 0xEF2F11, 0x8B5A0A, 0x6D1F6D, 0x367ECF,\par
    0x27CB09, 0xB74F46, 0x3F669E, 0x5FEA2D, 0x7527BA, 0xC7EBE5,\par
    0xF17B3D, 0x0739F7, 0x8A5292, 0xEA6BFB, 0x5FB11F, 0x8D5D08,\par
    0x560330, 0x46FC7B, 0x6BABF0, 0xCFBC20, 0x9AF436, 0x1DA9E3,\par
    0x91615E, 0xE61B08, 0x659985, 0x5F14A0, 0x68408D, 0xFFD880,\par
    0x4D7327, 0x310606, 0x1556CA, 0x73A8C9, 0x60E27B, 0xC08C6B,\par
\}\par
}
{
Definition at line 58 of file remp2.c.}\par
{
Referenced by rempio2().}\par
}
{\xe \v zero\:remp2.c}
{\xe \v remp2.c\:zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double zero = 0.00000000000000000000e+00{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file remp2.c.}\par
{
Referenced by rempio2().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/rint.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/rint.c}
{\xe \v lib/real/rint.c}
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "fdlibm.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for rint.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "rint_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rint} (double x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b TWO52} [2]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rint\:rint.c}
{\xe \v rint.c\:rint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rint (double  {\i x})}}
\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file rint.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    71 \{\par
   72     int i0,j0,sx;\par
   73     unsigned i,i1;\par
   74     double w,t;\par
   75     i0 =  __HI(x);\par
   76     sx = (i0>>31)&1;\par
   77     i1 =  __LO(x);\par
   78     j0 = ((i0>>20)&0x7ff)-0x3ff;\par
   79     if(j0<20) \{\par
   80         if(j0<0) \{\par
   81             if(((i0&0x7fffffff)|i1)==0) return x;\par
   82             i1 |= (i0&0x0fffff);\par
   83             i0 &= 0xfffe0000;\par
   84             i0 |= ((i1|-i1)>>12)&0x80000;\par
   85             __HI(x)=i0;\par
   86             w = TWO52[sx]+x;\par
   87             t =  w-TWO52[sx];\par
   88             i0 = __HI(t);\par
   89             __HI(t) = (i0&0x7fffffff)|(sx<<31);\par
   90             return t;\par
   91         \} else \{\par
   92             i = (0x000fffff)>>j0;\par
   93             if(((i0&i)|i1)==0) return x; /* x is integral */\par
   94             i>>=1;\par
   95             if(((i0&i)|i1)!=0) \{\par
   96                 if(j0==19) i1 = 0x40000000;\par
   97                 else\par
   98                     i0 = (i0&(~i))|((0x20000)>>j0);\par
   99             \}\par
  100         \}\par
  101     \} else if (j0>51) \{\par
  102         if(j0==0x400) return x+x;   /* inf or NaN */\par
  103         else return x;      /* x is integral */\par
  104     \} else \{\par
  105         i = ((unsigned)(0xffffffff))>>(j0-20);\par
  106         if((i1&i)==0) return x; /* x is integral */\par
  107         i>>=1;\par
  108         if((i1&i)!=0) i1 = (i1&(~i))|((0x40000000)>>(j0-20));\par
  109     \}\par
  110     __HI(x) = i0;\par
  111     __LO(x) = i1;\par
  112     w = TWO52[sx]+x;\par
  113     return w-TWO52[sx];\par
  114 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v TWO52\:rint.c}
{\xe \v rint.c\:TWO52}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TWO52[2]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    4.50359962737049600000e+15, \par
    -4.50359962737049600000e+15, \par
\}\par
}
{
Definition at line 60 of file rint.c.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/round.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/round.c}
{\xe \v lib/real/round.c}
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for round.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "round_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b round} (double x)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v round\:round.c}
{\xe \v round.c\:round}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double round (double  {\i x})}}
\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file round.c.}\par
{
Referenced by cround(), DecimalSystem::GetRealText(), PositionalNumeralSystem::GetText(), and RealNumber::Round().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    31 \{\par
   32     return x > 0.0 ? floor(x + 0.5) : ceil(x - 0.5);\par
   33 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "round_8c_a7df19cf730447c00150569250a4b5e1d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/scalbn.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/scalbn.c}
{\xe \v lib/real/scalbn.c}
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for scalbn.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "scalbn_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scalbn} (double x, int n)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b two54} = 1.80143985094819840000e+16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b twom54} = 5.55111512312578270212e-17\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b huge} = 1.0e+300\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b tiny} = 1.0e-300\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v scalbn\:scalbn.c}
{\xe \v scalbn.c\:scalbn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double scalbn (double  {\i x}, int  {\i n})}}
\par
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file scalbn.c.}\par
{
References huge, tiny, two54, and twom54.}\par
{
Referenced by __kernel_rem_pio2(), and pow().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    61 \{\par
   62     sword  k,hx,lx;\par
   63     EXTRACT_WORDS(hx,lx,x);\par
   64     k = (hx&0x7ff00000)>>20;        /* extract exponent */\par
   65     if (k==0) \{             /* 0 or subnormal x */\par
   66         if ((lx|(hx&0x7fffffff))==0) return x; /* +-0 */\par
   67         x *= two54;\par
   68         GET_HIGH_WORD(hx,x);\par
   69         k = ((hx&0x7ff00000)>>20) - 54;\par
   70         if (n< -50000) return tiny*x;   /*underflow*/\par
   71     \}\par
   72     if (k==0x7ff) return x+x;       /* NaN or Inf */\par
   73     k = k+n;\par
   74     if (k >  0x7fe) return huge*copysign(huge,x); /* overflow  */\par
   75     if (k > 0)              /* normal result */\par
   76     \{\par
   77         SET_HIGH_WORD(x,(hx&0x800fffff)|(k<<20));\par
   78         return x;\par
   79     \}\par
   80     if (k <= -54) \{\par
   81         if (n > 50000)      /* in case integer overflow in n+k */\par
   82             return huge*copysign(huge,x);   /*overflow*/\par
   83         else return tiny*copysign(tiny,x);  /*underflow*/\par
   84     \}\par
   85     k += 54;                /* subnormal result */\par
   86     SET_HIGH_WORD(x,(hx&0x800fffff)|(k<<20));\par
   87     return x*twom54;\par
   88 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "scalbn_8c_a0353978ec1ae247f2d95f2dc75856ed6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v huge\:scalbn.c}
{\xe \v scalbn.c\:huge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double huge = 1.0e+300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file scalbn.c.}\par
{
Referenced by scalbn().}\par
}
{\xe \v tiny\:scalbn.c}
{\xe \v scalbn.c\:tiny}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double tiny = 1.0e-300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file scalbn.c.}\par
{
Referenced by scalbn().}\par
}
{\xe \v two54\:scalbn.c}
{\xe \v scalbn.c\:two54}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double two54 = 1.80143985094819840000e+16{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file scalbn.c.}\par
{
Referenced by scalbn().}\par
}
{\xe \v twom54\:scalbn.c}
{\xe \v scalbn.c\:twom54}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double twom54 = 5.55111512312578270212e-17{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file scalbn.c.}\par
{
Referenced by scalbn().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/sin.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/sin.c}
{\xe \v lib/real/sin.c}
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for sin.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sin_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sin} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric sine function. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v sin\:sin.c}
{\xe \v sin.c\:sin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sin (double  {\i x})}}
\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric sine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Return sine function of x.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid kernel function:
 __kernel_sin       ... sine function on [-pi/4,pi/4]
 __kernel_cos       ... cose function on [-pi/4,pi/4]
 __ieee754_rem_pio2 ... argument reduction routine\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Method.
     Let S,C and T denote the sin, cos and tan respectively on
 [-PI/4, +PI/4]. Reduce the argument x to y1+y2 = x-k*pi/2
 in [-pi/4 , +pi/4], and let n = k mod 4.
 We have\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid          n        sin(x)      cos(x)        tan(x)
    ----------------------------------------------------------
     0         S       C         T
     1         C      -S        -1/T
     2        -S      -C         T
     3        -C       S        -1/T
    ----------------------------------------------------------\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
     Let trig be any of sin, cos, or tan.
     trig(+-INF)  is NaN, with signals;
     trig(NaN)    is that NaN;\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Accuracy:
 TRIG(x) returns trig(x) nearly rounded
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 87 of file sin.c.}\par
{
References __kernel_cos(), __kernel_sin(), and rempio2().}\par
{
Referenced by ccos(), ccosh(), ccot(), ccoth(), ccsc(), ccsch(), cexp(), RealNumber::Cosecant(), cpow(), csec(), csech(), csin(), csinh(), ctan(), ctanh(), and RealNumber::Sine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    88 \{\par
   89     double y[2],z=0.0;\par
   90     sword n, ix;\par
   91 \par
   92     /* High word of x. */\par
   93     GET_HIGH_WORD(ix,x);\par
   94 \par
   95     /* |x| ~< pi/4 */\par
   96     ix &= 0x7fffffff;\par
   97     if(ix <= 0x3fe921fb) return __kernel_sin(x,z,0);\par
   98 \par
   99     /* sin(Inf or NaN) is NaN */\par
  100     else if (ix>=0x7ff00000) return x-x;\par
  101 \par
  102     /* argument reduction needed */\par
  103     else \{\par
  104         n = rempio2(x,y);\par
  105         switch(n&3) \{\par
  106         case 0:\par
  107             return  __kernel_sin(y[0],y[1],1);\par
  108         case 1:\par
  109             return  __kernel_cos(y[0],y[1]);\par
  110         case 2:\par
  111             return -__kernel_sin(y[0],y[1],1);\par
  112         default:\par
  113             return -__kernel_cos(y[0],y[1]);\par
  114         \}\par
  115     \}\par
  116 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sin_8c_aad4af25633b071b0e2cdb8ebd87eca77_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sin_8c_aad4af25633b071b0e2cdb8ebd87eca77_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/sinh.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/sinh.c}
{\xe \v lib/real/sinh.c}
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for sinh.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sinh_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sinh} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic sine function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b shuge} = 1.0e307\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v sinh\:sinh.c}
{\xe \v sinh.c\:sinh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sinh (double  {\i x})}}
\par
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic sine function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Method :
mathematically sinh(x) if defined to be (exp(x)-exp(-x))/2
 1. Replace x by |x| (sinh(-x) = -sinh(x)).
 2.
                                        E + E/(E+1)
     0        <= x <= 22     :  sinh(x) := --------------, E=expm1(x)
                                2\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid      22       <= x <= lnovft :  sinh(x) := exp(x)/2
     lnovft   <= x <= ln2ovft:  sinh(x) := exp(x/2)/2 * exp(x/2)
     ln2ovft  <  x      :  sinh(x) := x*shuge (overflow)\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 sinh(x) is |x| if x is +INF, -INF, or NaN.
 only sinh(0)=0 is exact for finite x.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 81 of file sinh.c.}\par
{
References exp(), expm1(), one, and shuge.}\par
{
Referenced by cchsh(), ccot(), ccoth(), ccsc(), ccsch(), csec(), csech(), ctan(), ctanh(), RealNumber::HypCosecant(), and RealNumber::HypSine().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    82 \{\par
   83     double t,w,h;\par
   84     sword ix,jx;\par
   85     uword lx;\par
   86 \par
   87     /* High word of |x|. */\par
   88     GET_HIGH_WORD(jx,x);\par
   89     ix = jx&0x7fffffff;\par
   90 \par
   91     /* x is INF or NaN */\par
   92     if(ix>=0x7ff00000) return x+x;\par
   93 \par
   94     h = 0.5;\par
   95     if (jx<0) h = -h;\par
   96     /* |x| in [0,22], return sign(x)*0.5*(E+E/(E+1))) */\par
   97     if (ix < 0x40360000) \{      /* |x|<22 */\par
   98         if (ix<0x3e300000)      /* |x|<2**-28 */\par
   99             if(shuge+x>one) return x;/* sinh(tiny) = tiny with inexact */\par
  100         t = expm1(fabs(x));\par
  101         if(ix<0x3ff00000) return h*(2.0*t-t*t/(t+one));\par
  102         return h*(t+t/(t+one));\par
  103     \}\par
  104 \par
  105     /* |x| in [22, log(maxdouble)] return 0.5*exp(|x|) */\par
  106     if (ix < 0x40862E42)  return h*exp(fabs(x));\par
  107 \par
  108     /* |x| in [log(maxdouble), overflowthresold] */\par
  109     lx = *( (((*(uword*)&one)>>29)) + (uword*)&x);\par
  110     if (ix<0x408633CE || ((ix==0x408633ce)&&(lx<=(uword)0x8fb9f87d))) \{\par
  111         w = exp(0.5*fabs(x));\par
  112         t = h*w;\par
  113         return t*w;\par
  114     \}\par
  115 \par
  116     /* |x| > overflowthresold, sinh(x) overflow */\par
  117     return x*shuge;\par
  118 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sinh_8c_a862012e970c977c482507064e2793b45_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sinh_8c_a862012e970c977c482507064e2793b45_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v one\:sinh.c}
{\xe \v sinh.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file sinh.c.}\par
{
Referenced by sinh().}\par
}
{\xe \v shuge\:sinh.c}
{\xe \v sinh.c\:shuge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double shuge = 1.0e307{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file sinh.c.}\par
{
Referenced by sinh().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/sqrt.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/sqrt.c}
{\xe \v lib/real/sqrt.c}
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for sqrt.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sqrt_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sqrt} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Square root function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} = 1.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b tiny} = 1.0e-300\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v sqrt\:sqrt.c}
{\xe \v sqrt.c\:sqrt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sqrt (double  {\i x})}}
\par
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Square root function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Return correctly rounded sqrt.
          ------------------------------------------
      |  Use the hardware sqrt if you have one |
          ------------------------------------------
Method:
  Bit by bit method using integer arithmetic. (Slow, but portable)
  1. Normalization
 Scale x to y in [1,4) with even powers of 2:
 find an integer k such that  1 <= (y=x*2^(2k)) < 4, then
    sqrt(x) = 2^k * sqrt(y)
  2. Bit by bit computation
 Let q  = sqrt(y) truncated to i bit after binary point (q = 1),
      i                          0
                                    i+1         2
     s  = 2*q , and y  =  2   * ( y - q  ).     (1)
      i      i            i                 i\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  To compute q    from q , one checks whether
        i+1       i\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid               -(i+1) 2
        (q + 2      ) <= y.         (2)
                  i
                              -(i+1)
 If (2) is false, then q   = q ; otherwise q   = q  + 2      .
               i+1   i             i+1   i\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  With some algebric manipulation, it is not difficult to see
 that (2) is equivalent to
                            -(i+1)
        s  +  2       <= y          (3)
         i                i\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  The advantage of (3) is that s  and y  can be computed by
                  i      i
 the following recurrence formula:
     if (3) is false\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid      s     =  s  ,  y    = y   ;            (4)
      i+1      i         i+1    i\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid      otherwise,
                        -i                     -(i+1)
     s    =  s  + 2  ,  y    = y  -  s  - 2         (5)
          i+1      i          i+1    i     i\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  One may easily use induction to prove (4) and (5).
 Note. Since the left hand side of (3) contain only i+2 bits,
       it does not necessary to do a full (53-bit) comparison
       in (3).
  3. Final rounding
 After generating the 53 bits result, we compute one more bit.
 Together with the remainder, we can decide whether the
 result is exact, bigger than 1/2ulp, or less than 1/2ulp
 (it will never equal to 1/2ulp).
 The rounding mode can be detected by checking whether
 huge + tiny is equal to huge, and whether huge - tiny is
 equal to huge for some floating point number "huge" and "tiny".\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 sqrt(+-0) = +-0    ... exact
 sqrt(inf) = inf
 sqrt(-ve) = NaN        ... with invalid signal
 sqrt(NaN) = NaN        ... with invalid signal for signaling NaN
\par}
 Other methods : see the squareroot.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 127 of file sqrt.c.}\par
{
References one, and tiny.}\par
{
Referenced by acos(), acosh(), asin(), asinh(), csqrt(), hypot(), pow(), and RealNumber::SquareRoot().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   128 \{\par
  129     double z;\par
  130     sword   sign = (int)0x80000000;\par
  131     uword r,t1,s1,ix1,q1;\par
  132     sword ix0,s0,q,m,t,i;\par
  133 \par
  134     EXTRACT_WORDS(ix0,ix1,x);\par
  135 \par
  136     /* take care of Inf and NaN */\par
  137     if((ix0&0x7ff00000)==0x7ff00000) \{\par
  138         return x*x+x;       /* sqrt(NaN)=NaN, sqrt(+inf)=+inf\par
  139                        sqrt(-inf)=sNaN */\par
  140     \}\par
  141     /* take care of zero */\par
  142     if(ix0<=0) \{\par
  143         if(((ix0&(~sign))|ix1)==0) return x;/* sqrt(+-0) = +-0 */\par
  144         else if(ix0<0)\par
  145             return (x-x)/(x-x);     /* sqrt(-ve) = sNaN */\par
  146     \}\par
  147     /* normalize x */\par
  148     m = (ix0>>20);\par
  149     if(m==0) \{              /* subnormal x */\par
  150         while(ix0==0) \{\par
  151             m -= 21;\par
  152             ix0 |= (ix1>>11);\par
  153             ix1 <<= 21;\par
  154         \}\par
  155         for(i=0; (ix0&0x00100000)==0; i++) ix0<<=1;\par
  156         m -= i-1;\par
  157         ix0 |= (ix1>>(32-i));\par
  158         ix1 <<= i;\par
  159     \}\par
  160     m -= 1023;  /* unbias exponent */\par
  161     ix0 = (ix0&0x000fffff)|0x00100000;\par
  162     if(m&1) \{   /* odd m, double x to make it even */\par
  163         ix0 += ix0 + ((ix1&sign)>>31);\par
  164         ix1 += ix1;\par
  165     \}\par
  166     m >>= 1;    /* m = [m/2] */\par
  167 \par
  168     /* generate sqrt(x) bit by bit */\par
  169     ix0 += ix0 + ((ix1&sign)>>31);\par
  170     ix1 += ix1;\par
  171     q = q1 = s0 = s1 = 0;   /* [q,q1] = sqrt(x) */\par
  172     r = 0x00200000;     /* r = moving bit from right to left */\par
  173 \par
  174     while(r!=0) \{\par
  175         t = s0+r;\par
  176         if(t<=ix0) \{\par
  177             s0   = t+r;\par
  178             ix0 -= t;\par
  179             q   += r;\par
  180         \}\par
  181         ix0 += ix0 + ((ix1&sign)>>31);\par
  182         ix1 += ix1;\par
  183         r>>=1;\par
  184     \}\par
  185 \par
  186     r = sign;\par
  187     while(r!=0) \{\par
  188         t1 = s1+r;\par
  189         t  = s0;\par
  190         if((t<ix0)||((t==ix0)&&(t1<=ix1))) \{\par
  191             s1  = t1+r;\par
  192             if(((t1&sign)==(uword)sign)&&(s1&sign)==0) s0 += 1;\par
  193             ix0 -= t;\par
  194             if (ix1 < t1) ix0 -= 1;\par
  195             ix1 -= t1;\par
  196             q1  += r;\par
  197         \}\par
  198         ix0 += ix0 + ((ix1&sign)>>31);\par
  199         ix1 += ix1;\par
  200         r>>=1;\par
  201     \}\par
  202 \par
  203     /* use floating add to find out rounding direction */\par
  204     if((ix0|ix1)!=0) \{\par
  205         z = one-tiny; /* trigger inexact flag */\par
  206         if (z>=one) \{\par
  207             z = one+tiny;\par
  208             if (q1==(uword)0xffffffff) \{\par
  209                 q1=0;\par
  210                 q += 1;\par
  211             \}\par
  212             else if (z>one) \{\par
  213                 if (q1==(uword)0xfffffffe) q+=1;\par
  214                 q1+=2;\par
  215             \} else\par
  216                 q1 += (q1&1);\par
  217         \}\par
  218     \}\par
  219     ix0 = (q>>1)+0x3fe00000;\par
  220     ix1 =  q1>>1;\par
  221     if ((q&1)==1) ix1 |= sign;\par
  222     ix0 += (m <<20);\par
  223     INSERT_WORDS(z,ix0,ix1);\par
  224     return z;\par
  225 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sqrt_8c_ab87521a75ef827a85807f89a6c10629a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v one\:sqrt.c}
{\xe \v sqrt.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one = 1.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file sqrt.c.}\par
{
Referenced by sqrt().}\par
}
{\xe \v tiny\:sqrt.c}
{\xe \v sqrt.c\:tiny}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double tiny = 1.0e-300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file sqrt.c.}\par
{
Referenced by sqrt().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/tan.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/tan.c}
{\xe \v lib/real/tan.c}
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for tan.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tan_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tan} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric tangent function. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v tan\:tan.c}
{\xe \v tan.c\:tan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double tan (double  {\i x})}}
\par
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigonometric tangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Return tangent function of x.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid kernel function:
 __kernel_tan       ... tangent function on [-pi/4,pi/4]
 __rem_pio2     ... argument reduction routine\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Method.
     Let S,C and T denote the sin, cos and tan respectively on
 [-PI/4, +PI/4]. Reduce the argument x to y1+y2 = x-k*pi/2
 in [-pi/4 , +pi/4], and let n = k mod 4.
 We have\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid          n        sin(x)      cos(x)        tan(x)
    ----------------------------------------------------------
     0         S       C         T
     1         C      -S        -1/T
     2        -S      -C         T
     3        -C       S        -1/T
    ----------------------------------------------------------\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
     Let trig be any of sin, cos, or tan.
     trig(+-INF)  is NaN, with signals;
     trig(NaN)    is that NaN;\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Accuracy:
 TRIG(x) returns trig(x) nearly rounded
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 86 of file tan.c.}\par
{
References __kernel_tan(), and rempio2().}\par
{
Referenced by RealNumber::Cotangent(), and RealNumber::Tangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    87 \{\par
   88     double y[2],z=0.0;\par
   89     sword n, ix;\par
   90 \par
   91     /* High word of x. */\par
   92     GET_HIGH_WORD(ix,x);\par
   93 \par
   94     /* |x| ~< pi/4 */\par
   95     ix &= 0x7fffffff;\par
   96     if(ix <= 0x3fe921fb) return __kernel_tan(x,z,1);\par
   97 \par
   98     /* tan(Inf or NaN) is NaN */\par
   99     else if (ix>=0x7ff00000) return x-x;        /* NaN */\par
  100 \par
  101     /* argument reduction needed */\par
  102     else \{\par
  103         n = rempio2(x,y);\par
  104         return __kernel_tan(y[0],y[1],1-((n&1)<<1)); /*  1 -- n even\par
  105                             -1 -- n odd */\par
  106     \}\par
  107 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tan_8c_aa48fdfd5eea5f4f9c33496402b9e4039_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tan_8c_aa48fdfd5eea5f4f9c33496402b9e4039_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/tanh.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/tanh.c}
{\xe \v lib/real/tanh.c}
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for tanh.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tanh_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tanh} (double x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic tangent function. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b one} =1.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b two} =2.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b tiny} = 1.0e-300\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v tanh\:tanh.c}
{\xe \v tanh.c\:tanh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double tanh (double  {\i x})}}
\par
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hyperbolic tangent function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1.3 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 95/01/18\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
Return the Hyperbolic Tangent of x\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Method :
                   x    -x
                  e  - e
 0. tanh(x) is defined to be -----------
                   x    -x
                  e  + e
 1. reduce x to non-negative by tanh(-x) = -tanh(x).
 2.  0      <= x <= 2**-55 : tanh(x) := x*(one+x)
                        -t
     2**-55 <  x <=  1     : tanh(x) := -----; t = expm1(-2x)
                       t + 2
                         2
     1      <= x <=  22.0  : tanh(x) := 1-  ----- ; t=expm1(2x)
                       t + 2
     22.0   <  x <= INF    : tanh(x) := 1.\par}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Special cases:
 tanh(NaN) is NaN;
 only tanh(0)=0 is exact for finite argument.
\par}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.  Developed at SunSoft, a Sun Microsystems, Inc. business. Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved. \par
}}{
Definition at line 83 of file tanh.c.}\par
{
References expm1(), one, tiny, and two.}\par
{
Referenced by RealNumber::HypCotangent(), and RealNumber::HypTangent().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    84 \{\par
   85     double t,z;\par
   86     sword jx,ix;\par
   87 \par
   88     /* High word of |x|. */\par
   89     GET_HIGH_WORD(jx,x);\par
   90     ix = jx&0x7fffffff;\par
   91 \par
   92     /* x is INF or NaN */\par
   93     if(ix>=0x7ff00000) \{\par
   94         if (jx>=0) return one/x+one;    /* tanh(+-inf)=+-1 */\par
   95         else       return one/x-one;    /* tanh(NaN) = NaN */\par
   96     \}\par
   97 \par
   98     /* |x| < 22 */\par
   99     if (ix < 0x40360000) \{      /* |x|<22 */\par
  100         if (ix<0x3c800000)      /* |x|<2**-55 */\par
  101             return x*(one+x);       /* tanh(small) = small */\par
  102         if (ix>=0x3ff00000) \{   /* |x|>=1  */\par
  103             t = expm1(two*fabs(x));\par
  104             z = one - two/(t+two);\par
  105         \} else \{\par
  106             t = expm1(-two*fabs(x));\par
  107             z= -t/(t+two);\par
  108         \}\par
  109         /* |x| > 22, return +-1 */\par
  110     \} else \{\par
  111         z = one - tiny;     /* raised inexact flag */\par
  112     \}\par
  113     return (jx>=0)? z: -z;\par
  114 \}\par
}
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tanh_8c_af85bcf153d7ae805733927f12329dac1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tanh_8c_af85bcf153d7ae805733927f12329dac1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v one\:tanh.c}
{\xe \v tanh.c\:one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double one =1.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file tanh.c.}\par
{
Referenced by tanh().}\par
}
{\xe \v tiny\:tanh.c}
{\xe \v tanh.c\:tiny}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double tiny = 1.0e-300{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file tanh.c.}\par
{
Referenced by tanh().}\par
}
{\xe \v two\:tanh.c}
{\xe \v tanh.c\:two}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double two =2.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file tanh.c.}\par
{
Referenced by tanh().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/real/trunc.c File Reference\par \pard\plain 
{\tc\tcl2 \v lib/real/trunc.c}
{\xe \v lib/real/trunc.c}
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "prim.h"}\par
{\f2 #include "math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for trunc.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trunc_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b trunc} (double x)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v trunc\:trunc.c}
{\xe \v trunc.c\:trunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double trunc (double  {\i x})}}
\par
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file trunc.c.}\par
{
Referenced by ctrunc(), DecimalSystem::GetRealText(), PositionalNumeralSystem::GetText(), PositionalNumeralSystem::IntegerToBuffer(), and RealNumber::Trunc().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    31 \{\par
   32     return x > 0.0 ? floor(x) : ceil(x);\par
   33 \}\par
}
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trunc_8c_a82a151adfde56b28fa8a50355c4f2ff6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}